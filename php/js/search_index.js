var search_data = {"index":{"searchIndex":["!()","!=()","!~~()","=~()","=~()","=~()","=~()","=~()","=~()",">()",">()",">()",">()",">()",">=()",">=()",">=()",">=()",">=()",">>()",">>()",">>()",">>()","argf","abstractcontroller","actionnotfound","assetpaths","base","callbacks","classmethods","collector","doublerendererror","error","helpers","classmethods","layouts","classmethods","layoutconditions","logger","railties","routeshelpers","rendering","classmethods","translation","urlfor","classmethods","viewpaths","classmethods","actioncontroller","base","caching","actions","actioncachepath","classmethods","configmethods","fragments","pages","classmethods","sweeping","compatibility","conditionalget","cookies","datastreaming","flash","forcessl","classmethods","head","helpers","classmethods","hideactions","classmethods","httpauthentication","basic","controllermethods","classmethods","digest","controllermethods","token","controllermethods","implicitrender","instrumentation","classmethods","logsubscriber","metal","middleware","actionmiddleware","mimeresponds","classmethods","paramswrapper","classmethods","rackdelegation","railtie","railties","paths","recordidentifier","redirecting","renderers","all","classmethods","rendering","requestforgeryprotection","classmethods","rescue","responder","sessionmanagement","classmethods","streaming","templateassertions","testcase","behavior","classmethods","raiseactionexceptions","testresponse","testing","classmethods","urlfor","actiondispatch","assertions","domassertions","responseassertions","routingassertions","selectorassertions","tagassertions","beststandardssupport","bodyproxy","callbacks","cookies","cookieoverflow","debugexceptions","exceptionwrapper","filehandler","flash","flashhash","head","http","cache","request","response","filterparameters","headers","mimenegotiation","parameterfilter","parameters","url","upload","uploadedfile","integration","requesthelpers","runner","session","integrationtest","middlewarestack","middleware","paramsparser","performancetest","publicexceptions","railsentitystore","railsmetastore","railtie","reloader","remoteip","getip","ipspoofattackerror","request","requestid","rescue","response","routing","mapper","base","httphelpers","resources","scoping","polymorphicroutes","redirection","routeset","mountedhelpers","urlfor","session","abstractstore","cachestore","compatibility","cookiestore","destroyablesession","memcachestore","stalesessioncheck","showexceptions","static","testprocess","testrequest","testresponse","actionmailer","base","collector","deliverymethods","classmethods","logsubscriber","mailhelper","noninferrablemailererror","railtie","testcase","behavior","classmethods","testhelper","actionpack","actionview","base","context","filesystemresolver","fixtureresolver","helpers","activemodelhelper","activemodelinstancetag","assetpaths","assettaghelper","assetincludetag","javascriptincludetag","javascripttaghelpers","classmethods","stylesheetincludetag","stylesheettaghelpers","classmethods","atomfeedhelper","atombuilder","atomfeedbuilder","cachehelper","capturehelper","csrfhelper","datehelper","datehelperinstancetag","debughelper","formbuilder","formhelper","formoptionshelper","formtaghelper","instancetag","javascripthelper","numberhelper","invalidnumbererror","outputsafetyhelper","recordtaghelper","renderinghelper","sanitizehelper","taghelper","texthelper","translationhelper","urlhelper","logsubscriber","lookupcontext","detailscache","viewpaths","nullresolver","partialrenderer","railtie","renderer","resolver","path","template","handlers","builder","erb","erubis","testcase","behavior","classmethods","locals","testcontroller","activemodel","attributemethods","classmethods","attributemethodmatcher","blockvalidator","callbacks","conversion","dirty","eachvalidator","errors","lint","tests","massassignmentsecurity","blacklist","classmethods","error","loggersanitizer","permissionset","sanitizer","strictsanitizer","whitelist","missingattributeerror","name","naming","observer","observerarray","observing","classmethods","securepassword","classmethods","instancemethodsonactivation","serialization","serializers","json","xml","strictvalidationfailed","translation","validations","acceptancevalidator","callbacks","classmethods","classmethods","confirmationvalidator","exclusionvalidator","formatvalidator","helpermethods","inclusionvalidator","lengthvalidator","numericalityvalidator","presencevalidator","withvalidator","validator","activerecord","activerecorderror","adapternotfound","adapternotspecified","aggregations","classmethods","associationtypemismatch","associations","classmethods","attributeassignment","classmethods","attributeassignmenterror","attributemethods","beforetypecast","classmethods","deprecatedunderscoreread","classmethods","dirty","primarykey","classmethods","query","read","classmethods","serialization","attribute","classmethods","timezoneconversion","classmethods","write","classmethods","autosaveassociation","classmethods","base","batches","calculations","callbacks","coders","yamlcolumn","configurationerror","connectionadapters","abstractadapter","abstractmysqladapter","column","format","connectionhandler","connectionmanagement","connectionpool","databaselimits","databasestatements","mysql2adapter","mysqladapter","statementpool","postgresqladapter","statementpool","tabledefinition","utils","postgresqlcolumn","querycache","quoting","sqliteadapter","explainprettyprinter","statementpool","version","schemacache","schemastatements","statementpool","table","tabledefinition","connectionnotestablished","connectiontimeouterror","countercache","dangerousattributeerror","delegation","dynamicfindermatch","dynamicmatchers","dynamicscopematch","explain","findermethods","fixtures","file","generators","migration","migrationgenerator","modelgenerator","observergenerator","sessionmigrationgenerator","identitymap","middleware","inheritance","classmethods","integration","invalidforeignkey","irreversiblemigration","locking","optimistic","classmethods","pessimistic","logsubscriber","migration","commandrecorder","migrationproxy","modelschema","classmethods","multiparameterassignmenterrors","nestedattributes","classmethods","toomanyrecords","observer","persistence","classmethods","preparedstatementinvalid","querycache","classmethods","querymethods","querying","railtie","railties","controllerruntime","classmethods","readonlyrecord","readonlyattributes","classmethods","recordinvalid","recordnotfound","recordnotsaved","recordnotunique","reflection","classmethods","macroreflection","relation","result","rollback","sanitization","classmethods","schema","scoping","classmethods","default","classmethods","named","classmethods","serialization","serializationtypemismatch","sessionstore","session","sqlbypass","spawnmethods","staleobjecterror","statementinvalid","store","classmethods","testfixtures","classmethods","throwresult","timestamp","transactions","classmethods","translation","unknownattributeerror","unknownprimarykey","validations","associatedvalidator","classmethods","uniquenessvalidator","wrappeddatabaseexception","activeresource","base","connection","custommethods","classmethods","errors","formats","jsonformat","xmlformat","httpmock","invalidrequesterror","logsubscriber","observing","railtie","request","response","sslerror","timeouterror","validations","activesupport","autoload","backtracecleaner","base64","basicobject","benchmarkable","bufferedlogger","severity","cache","entry","filestore","memcachestore","memorystore","nullstore","store","strategy","localcache","localstore","callbacks","classmethods","concern","configurable","classmethods","configuration","dependencies","classcache","watchstack","deprecation","descendantstracker","duration","fileupdatechecker","filewatcher","backend","gzip","stream","hashwithindifferentaccess","inflector","inflections","inheritableoptions","json","encoding","circularreferenceerror","encoder","variable","logsubscriber","testhelper","mocklogger","memoizable","instancemethods","messageencryptor","invalidmessage","messageverifier","invalidsignature","multibyte","chars","encodingerror","unicode","codepoint","databasegenerator","unicodedatabase","notifications","event","fanout","instrumenter","orderedhash","orderedoptions","railtie","rescuable","classmethods","safebuffer","safeconcaterror","stringinquirer","taggedlogging","testcase","testing","assertions","declarative","isolation","forking","minitest","subprocess","testunit","pending","performance","benchmarker","forclassictestunit","forminitest","metrics","amount","base","cputime","digitalinformationunit","gcruns","gctime","memory","objects","processtime","time","usertime","walltime","performer","profiler","proxytestresult","remoteerror","setupandteardown","classmethods","forclassictestunit","forminitest","timewithzone","timezone","xmlmini","xmlmini_libxmlsax","hashbuilder","xmlmini_nokogirisax","hashbuilder","applicationcontroller","applicationhelper","arjdbcmysql","error","argumenterror","array","array()","array","base64","basicobject","benchmark","bigdecimal","bignum","binding","class","class","comparable","complex","complex()","continuation","css","generators","assetsgenerator","scaffoldgenerator","debug()","debug=()","data","date","datetime","dir","env","eoferror","erb","util","encoding","compatibilityerror","converter","converternotfounderror","invalidbytesequenceerror","undefinedconversionerror","encodingerror","enumerable","enumerable","enumerator","generator","yielder","erb","generators","controllergenerator","mailergenerator","scaffoldgenerator","errno","exception","falseclass","falseclass","fiber","fibererror","file","file","constants","stat","filetest","fixnum","float","float()","float","floatdomainerror","gc","profiler","get()","gemfile","gemfile","gemfile","html","fullsanitizer","linksanitizer","sanitizer","selector","tag","whitelistsanitizer","hash","hash","i18n","exceptionhandler","railtie","io","io","waitreadable","waitwritable","ioerror","indexerror","integer","integer()","integer","interrupt","js","generators","assetsgenerator","kernel","kernel","keyerror","loaderror","loaderror","localjumperror","logger","simpleformatter","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","mit-license","marshal","matchdata","math","domainerror","method","mime","mimes","type","module","module","mutex","mysql","result","stmt","time","nameerror","nameerror","nilclass","nilclass","nomemoryerror","nomethoderror","notimplementederror","numeric","numeric","object","object","hashwithindifferentaccess","missingsourcefile","objectspace","post()","plugin","proc","process","process","gid","status","sys","uid","qualifiedconstutils","rails_version","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme","readme_for_app","releasing_rails","running_unit_tests","running_unit_tests","rack","rails","actionmethods","appbuilder","application","bootstrap","configuration","finisher","railties","routesreloader","backtracecleaner","commands","info","install","plugin","remove","configuration","console","consolemethods","dbconsole","engine","configuration","railties","generators","actions","activemodel","appbase","appgenerator","assetsgenerator","base","controllergenerator","error","generatedattribute","generatorgenerator","helpergenerator","mailergenerator","migration","classmethods","migrationgenerator","modelgenerator","namedbase","observergenerator","pluginnewgenerator","resourcegenerator","resourcehelpers","resourceroutegenerator","scaffoldcontrollergenerator","scaffoldgenerator","sessionmigrationgenerator","taskgenerator","testcase","info","infocontroller","initializable","classmethods","collection","initializer","paths","path","root","plugin","pluginbuilder","rack","debugger","logtailer","logger","railtie","configurable","classmethods","configuration","scriptrailsloader","server","options","subtesttask","testunitrailtie","railsenvironment","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","rakefile","random","range","range","rangeerror","rational","rational()","recursivehttpfetcher","regexp","regexp","regexperror","rubyvm","env","instructionsequence","runtimeerror","scripterror","securityerror","signal","signalexception","sourceannotationextractor","annotation","sprockets","bootstrap","compressors","helpers","isolatedhelper","railshelper","assetpaths","assetnotprecompilederror","railtie","staticcompiler","standarderror","stopiteration","string","string()","string","struct","symbol","symbol","syntaxerror","systemcallerror","systemexit","systemstackerror","test","unit","collector","objectspace","testunit","generators","controllergenerator","helpergenerator","integrationgenerator","mailergenerator","modelgenerator","observergenerator","performancegenerator","plugingenerator","scaffoldgenerator","thread","threaderror","threadgroup","time","time","trueclass","trueclass","typeerror","uri","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","usage","unboundmethod","zerodivisionerror","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","[]=()","^()","^()","^()","^()","^()","__callback_runner_name()","__callee__()","__id__()","__method__()","__replay__()","__reset_runner()","__send__()","_all_autoload_once_paths()","_all_autoload_paths()","_all_load_paths()","_attribute()","_dasherize()","_dump()","_dump()","_dump_without_utc_flag()","_dump_without_zone()","_get()","_handle_method_missing()","_handle_render_options()","_id2ref()","_implied_layout_name()","_insert_callbacks()","_layout_for()","_layout_for()","_load()","_load()","_load_without_utc_flag()","_load_without_zone()","_normalize_callback_options()","_normalize_options()","_normalize_options()","_original_to_s()","_parse_file()","_prefixes()","_prepare_context()","_routes()","_routes()","_routes_context()","_routes_context()","_run_class_setup()","_save_fragment()","_set_detail()","_set_wrapper_defaults()","_to_partial_path()","_validates_default_keys()","_with_routes()","_write_layout_method()","`()","abort()","abort()","abort_on_exception()","abort_on_exception()","abort_on_exception=()","abort_on_exception=()","abs()","abs()","abs()","abs()","abs()","abs2()","abs2()","absolute_path()","abstract!()","abstract_class?()","abstract_railtie?()","accept=()","accepts()","accepts_nested_attributes_for()","accessible_attributes()","accessible_attributes()","acos()","acosh()","acronym()","action()","action=()","action_has_layout?()","action_methods()","action_methods()","action_methods()","action_methods()","active?()","active?()","active?()","active?()","active_authorizer()","active_authorizers()","active_connection?()","active_connections?()","acts_like?()","acts_like_date?()","acts_like_date?()","acts_like_string?()","acts_like_string?()","acts_like_time?()","acts_like_time?()","acts_like_time?()","adapter_name()","adapter_name()","add()","add()","add()","add()","add()","add()","add()","add_column()","add_column()","add_column()","add_column_position!()","add_column_sql()","add_delivery_method()","add_error()","add_expr_escaped()","add_expr_literal()","add_filter()","add_index()","add_index_length()","add_index_options()","add_index_sort_order()","add_index_sql()","add_observer()","add_observer!()","add_on_blank()","add_on_empty()","add_postamble()","add_preamble()","add_renderer()","add_resource_route()","add_routes()","add_shared_options_for()","add_shebang_option!()","add_silencer()","add_source()","add_text()","add_timestamps()","add_timestamps_sql()","add_to_transaction()","add_trace_func()","add_transaction_record()","add_whiner()","added?()","advance()","advance()","advance()","advance()","advise()","after()","after()","after_commit()","after_filter()","after_initialize()","after_rollback()","after_validation()","ago()","ago()","ago()","ago()","ago()","ago()","alert()","alert=()","alias_attribute()","alias_attribute()","alias_method_chain()","aliased_path_for()","aliases()","alive?()","alive?()","all()","all()","all()","all()","all()","all()","all()","all()","all?()","all_day()","all_helpers_from_path()","all_month()","all_paths()","all_quarter()","all_symbols()","all_week()","all_year()","allocate()","ancestors()","angle()","angle()","angle()","announce()","anonymous?()","any()","any?()","any?()","api_behavior()","api_location()","app()","app()","app()","app()","app()","app()","app()","app()","app=()","app_const()","app_const_base()","app_generators()","app_middleware()","app_name()","app_secret()","app_templates_dir()","append_after_filter()","append_around_filter()","append_before_filter()","append_features()","append_view_path()","append_view_path()","application()","application()","application=()","application_definition()","application_name()","application_trace()","apply_finder_options()","apply_join_dependency()","apply_rails_template()","arel()","arel_engine()","arel_table()","arg()","arg()","arg()","args()","arguments()","argv()","arity()","arity()","arity()","around_filter()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","as_json()","ascii_compatible?()","ascii_only?()","asciicompat_encoding()","asctime()","asin()","asinh()","assert_blank()","assert_class_method()","assert_difference()","assert_directory()","assert_dom_equal()","assert_dom_not_equal()","assert_emails()","assert_field_default_value()","assert_field_type()","assert_file()","assert_generates()","assert_index()","assert_instance_method()","assert_method()","assert_migration()","assert_no_difference()","assert_no_directory()","assert_no_emails()","assert_no_file()","assert_no_migration()","assert_no_tag()","assert_present()","assert_recognizes()","assert_redirected_to()","assert_response()","assert_routing()","assert_select()","assert_select_email()","assert_select_encoded()","assert_tag()","assert_template()","assert_valid_keys()","asset_name()","asset_name()","asset_name()","asset_name()","asset_path()","asset_paths()","asset_tag()","asset_tag()","asset_tag()","assets_gemfile_entry()","assign_attributes()","assign_shortcuts()","assigns()","assoc()","assoc()","assoc()","assume_migrated_upto_version()","at()","at()","at()","at()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_day()","at_beginning_of_hour()","at_beginning_of_hour()","at_beginning_of_month()","at_beginning_of_month()","at_beginning_of_quarter()","at_beginning_of_quarter()","at_beginning_of_week()","at_beginning_of_week()","at_beginning_of_year()","at_beginning_of_year()","at_end_of_month()","at_end_of_month()","at_end_of_quarter()","at_end_of_quarter()","at_end_of_week()","at_end_of_week()","at_end_of_year()","at_end_of_year()","at_exit()","at_midnight()","at_midnight()","at_midnight()","atan()","atan2()","atanh()","atime()","atime()","atime()","atom_feed()","atomic_write()","attach_to()","attachments()","attachments()","attr_accessible()","attr_internal()","attr_internal_accessor()","attr_internal_reader()","attr_internal_writer()","attr_protected()","attr_readonly()","attribute_cast_code()","attribute_match()","attribute_method?()","attribute_method?()","attribute_method?()","attribute_method_affix()","attribute_method_prefix()","attribute_method_suffix()","attribute_methods_generated?()","attribute_missing()","attribute_names()","attributes=()","attributes_before_type_cast()","attributes_protected_by_default()","attributes_protected_by_default()","attributes_with_index()","audio_path()","audio_tag()","auth_type()","auth_type=()","auth_type=()","authenticate()","authenticate()","authenticate()","authenticate()","authenticate_or_request_with_http_basic()","authenticate_or_request_with_http_digest()","authenticate_or_request_with_http_token()","authenticate_with_http_basic()","authenticate_with_http_digest()","authenticate_with_http_token()","authentication_header()","authentication_request()","authentication_request()","authentication_request()","authorization()","auto_discovery_link_tag()","auto_flushing=()","autoclose=()","autoclose?()","autoload()","autoload()","autoload()","autoload?()","autoload?()","autoload_at()","autoload_once()","autoload_once_paths()","autoload_paths()","autoload_paths()","autoload_under()","autoloads()","available_action?()","available_views()","average()","backend()","backend=()","backend=()","backtrace()","backtrace()","backtrace_cleaner()","bang?()","banner()","banner()","banner()","base_class()","base_name()","base_root()","basename()","basename()","becomes()","before()","before()","before_configuration()","before_eager_load()","before_filter()","before_filters()","before_initialize()","before_validation()","begin()","begin()","begin_db_transaction()","begin_db_transaction()","begin_db_transaction()","beginning_of_day()","beginning_of_day()","beginning_of_day()","beginning_of_hour()","beginning_of_hour()","beginning_of_month()","beginning_of_month()","beginning_of_quarter()","beginning_of_quarter()","beginning_of_week()","beginning_of_week()","beginning_of_year()","beginning_of_year()","behavior()","behavior=()","belongs_to()","belongs_to()","belongs_to()","belongs_to?()","benchmark()","benchmark()","best_install_method()","between?()","between?()","bind()","bind()","bind()","binding()","binding()","binmode()","binmode()","binmode?()","binmode?()","binread()","binwrite()","blank?()","blank?()","blank?()","blank?()","blank?()","blank?()","blksize()","block_format()","block_given?()","blockdev?()","blockdev?()","blockdev?()","blocks()","body()","body()","body=()","body_parts()","breakpoint()","build()","build()","build()","build()","build()","build()","build()","build()","build_arel()","build_mem_cache()","build_original_fullpath()","builder()","bundle_command()","button()","button_tag()","button_to()","button_to_function()","byte()","bytes()","bytes()","bytes()","bytes()","bytes()","bytesize()","byteslice()","cache()","cache()","cache()","cache()","cache()","cache_attribute?()","cache_attributes()","cache_fixtures()","cache_for_connection()","cache_key()","cache_page()","cache_page()","cache_store()","cache_store=()","cache_template_loading()","cache_template_loading=()","cached_attributes()","cached_fixtures()","caches_action()","caches_page()","caching_allowed?()","calculate()","calculate_ip()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call()","call_app()","callcc()","caller()","camelcase()","camelize()","camelize()","camelized()","camelized()","capify!()","capitalize()","capitalize()","capitalize()","capitalize!()","capture()","capture()","captures()","case_insensitive_comparison()","case_insensitive_comparison()","case_sensitive_equality_operator()","case_sensitive_modifier()","case_sensitive_modifier()","casecmp()","casecmp()","casefold?()","catch()","cattr_accessor()","cattr_reader()","cattr_writer()","cbrt()","cdata_block()","cdata_section()","ceil()","ceil()","ceil()","ceil()","center()","center()","change()","change()","change()","change()","change_column()","change_column()","change_column_default()","change_column_default()","change_column_default()","change_column_null()","change_column_null()","change_column_null()","change_column_sql()","change_default()","change_privilege()","change_privilege()","change_table()","changed()","changed?()","changed_attributes()","changed_for_autosave?()","changes()","characters()","chardev?()","chardev?()","chardev?()","chars()","chars()","chars()","charset()","chdir()","check_box()","check_box()","check_box_checked?()","check_box_tag()","check_class_collision()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","check_validity!()","checkin()","checkout()","children()","chmod()","chmod()","chomp()","chomp()","chomp!()","chop()","chop()","chop!()","chown()","chown()","chr()","chr()","chroot()","chunk()","civil_from_format()","class()","class_attribute()","class_eval()","class_eval()","class_exec()","class_name()","class_name()","class_of_active_record_descendant()","class_path()","class_variable_defined?()","class_variable_get()","class_variable_set()","class_variables()","classify()","classify()","clean()","cleanup()","cleanup()","cleanup()","cleanup()","cleanup!()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear()","clear!()","clear!()","clear_action_methods!()","clear_active_connections!()","clear_active_connections!()","clear_all_connections!()","clear_cache()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_cache!()","clear_helpers()","clear_query_cache()","clear_reloadable_connections!()","clear_reloadable_connections!()","clear_respond_to()","clear_stale_cached_connections!()","clear_table_cache!()","clear_tags!()","client_encoding()","client_min_messages()","client_min_messages=()","clone()","clone()","clone()","clone()","clone_empty()","close()","close()","close()","close()","close()","close()","close()","close()","close_on_exec=()","close_on_exec?()","close_read()","close_write()","closed?()","closed?()","closed?()","code()","codepoints()","codepoints()","codepoints()","coerce()","coerce()","coerce()","collation()","collect()","collect()","collect!()","collect_concat()","collection()","collection_name()","collection_path()","collection_path()","collection_select()","collection_select()","color()","colorize_logging()","colorize_logging=()","column()","column()","column_defaults()","column_exists?()","column_exists?()","column_name_length()","column_names()","columns()","columns()","columns()","columns()","columns_for_remove()","columns_hash()","columns_hash()","columns_per_multicolumn_index()","columns_per_table()","combination()","comment_if()","commit_db_transaction()","commit_db_transaction()","commit_transaction_records()","compact()","compact!()","comparable_time()","compare_by_identity()","compare_by_identity?()","compare_with_coercion()","compare_without_coercion()","compatible?()","compile()","compile()","compile()","compile_file()","compile_methods!()","compile_methods!()","compile_option()","compile_option=()","compiled_asset_path()","compose()","compose_codepoints()","composed_of()","compress()","compressed?()","compute_tags()","compute_type()","concat()","concat()","concat()","concat()","conditional_layout?()","conditional_layout?()","config()","config()","config()","config()","config()","config()","config()","config()","config()","config_accessor()","configru()","configuration()","configurations()","configure()","configure()","conj()","conj()","conjugate()","conjugate()","connected?()","connected?()","connected?()","connection()","connection()","connection()","connection()","connection()","connection()","connection()","connection_config()","connection_handler()","connection_id()","connection_id=()","connection_pool()","connection_pool()","consider_all_requests_local?()","console()","const_defined?()","const_get()","const_missing()","const_set()","constantize()","constantize()","constants()","constants()","constraints()","construct_join_dependency_for_association_find()","construct_limited_ids_condition()","construct_relation_for_association_calculations()","construct_relation_for_association_find()","consumes?()","contains_bad_protocols?()","content_columns()","content_for()","content_for?()","content_length()","content_mime_type()","content_tag()","content_tag_for()","content_type()","content_type()","content_type=()","controller()","controller()","controller()","controller_class()","controller_class=()","controller_class_name()","controller_class_path()","controller_file_name()","controller_file_path()","controller_i18n_scope()","controller_name()","controller_name()","controller_path()","controller_path()","controller_path()","controller_path=()","convert()","convert_database_option_for_jruby()","convert_key()","convert_key()","convert_to_model()","convert_value()","convert_value()","convpath()","cookie_jar()","cookies()","cookies()","cookies()","cookies()","copy()","copy_javascript()","copy_stream()","copy_stylesheet()","copy_stylesheet()","copy_view_files()","copy_view_files()","coredump?()","cos()","cosh()","count()","count()","count()","count()","count()","count()","count_by_sql()","count_objects()","count_observers()","cover?()","create()","create()","create()","create()","create()","create()","create()","create!()","create!()","create_active_record_files()","create_app_files()","create_app_files()","create_boot_file()","create_composition_map()","create_config_files()","create_config_files()","create_controller_files()","create_controller_files()","create_database()","create_database()","create_db_files()","create_doc_files()","create_dummy_app()","create_fixture_file()","create_fixtures()","create_fixtures()","create_generated_attribute()","create_generator_files()","create_helper_files()","create_helper_files()","create_images_directory()","create_javascript_files()","create_lib_files()","create_lib_files()","create_log_files()","create_mailer_file()","create_migration_file()","create_migration_file()","create_migration_file()","create_model_file()","create_module_file()","create_observer_file()","create_path_and_open_file()","create_public_files()","create_public_stylesheets_files()","create_reflection()","create_root()","create_root_files()","create_root_files()","create_root_folder()","create_savepoint()","create_savepoint()","create_savepoint()","create_savepoint()","create_script_files()","create_script_files()","create_table()","create_task_files()","create_test_dummy_files()","create_test_file()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_test_files()","create_tmp_files()","create_vendor_files()","create_with()","creator?()","crypt()","csrf_meta_tag()","csrf_meta_tags()","css_select()","ctime()","ctime()","ctime()","ctime()","current()","current()","current()","current()","current()","current_cycle()","current_database()","current_database()","current_hash()","current_hash()","current_page?()","current_savepoint_name()","current_schema()","curry()","custom()","custom_dir()","custom_dir()","custom_dir()","custom_method_collection_url()","cycle()","cycle()","cycle()","daemon()","daemon()","dangerous_attribute_method?()","dangerous_attribute_method?()","dasherize()","dasherize()","data()","data()","data_column()","data_column_name()","data_column_name()","data_column_size_limit()","database_configuration()","database_gemfile_entry()","database_yml()","date_select()","date_select()","datetime_select()","datetime_select()","day()","day()","days()","days_in_month()","days_to_week_start()","days_to_week_start()","db()","debug()","debug_protected_attribute_removal()","debugger()","decode()","decode()","decode()","decode64()","decode64()","decode_credentials()","decode_credentials()","decode_credentials_header()","decompose()","decompose_codepoints()","decompress()","deconstantize()","deconstantize()","decrement()","decrement()","decrement()","decrement()","decrement()","decrement!()","decrement_counter()","decrement_open_transactions()","decrypt()","decrypt_and_verify()","deep_dup()","deep_merge()","deep_merge!()","deep_munge()","default()","default()","default()","default()","default()","default()","default=()","default=()","default_action()","default_aliases_for_option()","default_charset=()","default_external()","default_external=()","default_for_option()","default_generator_root()","default_inspect()","default_inspect()","default_internal()","default_internal=()","default_middleware_stack()","default_middleware_stack()","default_options()","default_primary_key_type()","default_proc()","default_proc=()","default_render()","default_render()","default_scope()","default_sequence_name()","default_source_root()","default_timezone()","default_url_options()","default_url_options()","default_url_options=()","default_url_options=()","default_value_for_option()","defaults()","define()","define_attribute_method()","define_attribute_methods()","define_attribute_methods()","define_callbacks()","define_callbacks()","define_finalizer()","define_method__attribute()","define_method_attribute()","define_method_attribute()","define_method_attribute=()","define_method_attribute=()","define_model_callbacks()","define_singleton_method()","defined_app_const_base()","defined_app_const_base?()","defined_app_name()","delegate()","delegate_to_scoped_klass()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete()","delete!()","delete?()","delete_all()","delete_at()","delete_cookie()","delete_entry()","delete_entry()","delete_if()","delete_if()","delete_if()","delete_if()","delete_matched()","delete_matched()","delete_matched()","delete_matched()","delete_responses_to_replace()","delete_sql()","delete_via_redirect()","deliver()","demodulize()","demodulize()","denominator()","denominator()","denominator()","denominator()","denominator()","deny?()","deny?()","deny?()","deprecate()","deprecate_methods()","deprecated_method_warning()","desc()","desc()","descendants()","descendants()","descends_from_active_record?()","describe()","destination()","destination_encoding()","destination_encoding()","destination_encoding()","destination_encoding_name()","destination_encoding_name()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy_all()","destroy_session()","destroyed?()","detach()","detail_args_for()","details_for_lookup()","detect()","determine_default_controller_class()","determine_default_helper_class()","determine_default_mailer()","determine_install_method()","dev()","dev_major()","dev_minor()","diff()","direct_descendants()","direct_descendants()","directory?()","directory?()","directory?()","dirname()","dirname()","dirties_query_cache()","disable()","disable()","disable()","disable_cache()","disable_query_cache!()","disable_referential_integrity()","disabled_for?()","disabled_for?()","disabled_observer_stack()","disabled_observers()","disasm()","disasm()","disassemble()","disassemble()","discard()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","disconnect!()","dispatch()","display()","display()","display()","display_errors()","distance_of_time_in_words()","distance_of_time_in_words_to_now()","distinct()","div()","div()","div()","div_for()","divmod()","divmod()","divmod()","divmod()","doc()","dom_class()","dom_id()","domain()","down()","downcase()","downcase()","downcase()","downcase!()","download()","downto()","drop()","drop()","drop_table()","drop_while()","drop_while()","dst?()","dst?()","dummy?()","dummy_path()","dump()","dump()","dump_to()","dup()","dup()","dup()","dup()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","duplicable?()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each()","each_byte()","each_byte()","each_byte()","each_char()","each_char()","each_char()","each_codepoint()","each_codepoint()","each_codepoint()","each_cons()","each_entry()","each_index()","each_key()","each_key()","each_key()","each_line()","each_line()","each_line()","each_object()","each_pair()","each_pair()","each_pair()","each_pair()","each_slice()","each_subclass_array()","each_value()","each_value()","each_value()","each_with_index()","each_with_index()","each_with_object()","each_with_object()","each_with_object()","eager_autoload()","eager_autoload!()","eager_load()","eager_load()","eager_load!()","eager_load!()","eager_load_paths()","eager_loading?()","egid()","egid=()","eid()","eid()","element_name()","element_path()","element_path()","email_field()","email_field_tag()","emitted_hidden_id?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty?()","empty_directory_with_gitkeep()","empty_insert_statement_value()","empty_insert_statement_value()","emulate_booleans()","enable()","enable()","enable()","enable_query_cache!()","enable_warnings()","enabled()","enabled=()","enabled?()","enabled?()","enclose()","enclosed?()","encode()","encode()","encode()","encode()","encode()","encode()","encode!()","encode!()","encode64()","encode64()","encode64s()","encode_credentials()","encode_credentials()","encode_credentials()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_json()","encode_with()","encode_with()","encode_with()","encode_with()","encode_with()","encoding()","encoding()","encoding()","encoding()","encoding=()","encoding_aware?()","encrypt()","encrypt_and_sign()","end()","end()","end_document()","end_element()","end_of_day()","end_of_day()","end_of_day()","end_of_hour()","end_of_hour()","end_of_month()","end_of_month()","end_of_quarter()","end_of_quarter()","end_of_week()","end_of_week()","end_of_year()","end_of_year()","end_transaction()","end_with?()","endpoint()","endpoint()","engine()","engine=()","engines()","enlist_fixture_connections()","entries()","entries()","entry()","enum_for()","enumerate()","env()","env()","env=()","env_config()","env_config()","env_filter()","environment()","environment()","environment=()","eof()","eof()","eof?()","eof?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql?()","eql_with_coercion()","eql_without_coercion()","equal?()","erf()","erfc()","errno()","error()","error_bytes()","error_char()","error_message()","error_number()","error_wrapping()","errors()","errors()","errors()","escape()","escape()","escape_bytea()","escape_glob_chars()","escape_javascript()","escape_once()","establish_connection()","establish_connection()","etag=()","etag_matches?()","euid()","euid=()","eval()","eval()","eval()","evaluate_default_scope()","even?()","even?()","even?()","exabyte()","exabytes()","except()","except()","except!()","exception()","exception()","excerpt()","exclude?()","exclude?()","exclude_end?()","exclusive()","exec()","exec()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_delete()","exec_insert()","exec_insert()","exec_query()","exec_query()","exec_query()","exec_query()","exec_query()","exec_script_rails!()","exec_update()","exec_update()","exec_update()","exec_update()","exec_update()","exec_without_stmt()","executable?()","executable?()","executable?()","executable_real?()","executable_real?()","executable_real?()","execute()","execute()","execute()","execute()","execute()","execute_and_free()","execute_hook()","execute_if_updated()","exist?()","exist?()","exist?()","exist?()","exist?()","existent()","existent_directories()","exists?()","exists?()","exists?()","exists?()","exists?()","exists?()","exists?()","exit()","exit()","exit()","exit()","exit!()","exit!()","exit_on_failure?()","exit_value()","exited?()","exitstatus()","exp()","expand_cache_key()","expand_hash_conditions_for_aggregates()","expand_path()","expanded()","expected_response()","expire()","expire_action()","expire_fragment()","expire_page()","expire_page()","expired?()","expires_at()","expires_at=()","expires_in()","expires_now()","explain()","explain()","explain()","explain()","ext()","extend()","extended()","extended()","extended()","extended()","extended()","extending()","extension()","extension()","extension()","extension()","extension()","external_encoding()","external_encoding()","externals()","externals=()","extify()","extname()","extract!()","extract_annotations_from()","extract_domain()","extract_options!()","extract_schema_and_table()","extract_session_id()","extract_subdomain()","extract_subdomains()","extractable_options?()","extractable_options?()","extractable_options?()","extractable_options?()","fail()","fallbacks()","fatal","favicon_link_tag()","fcntl()","fdatasync()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","fdiv()","feed()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch()","fetch_dir()","field_set_tag()","field_type()","fields_for()","fields_for()","fifth()","file()","file()","file?()","file?()","file?()","file_field()","file_field()","file_field_tag()","file_path()","filename()","filename()","fileno()","fileno()","fill()","filter()","filter_by()","filtered_env()","filtered_options()","filtered_parameters()","filtered_path()","filtered_query_string()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find()","find_all()","find_all()","find_all()","find_all_tag()","find_by_attributes()","find_by_session_id()","find_by_session_id()","find_by_sql()","find_cmd()","find_each()","find_first()","find_in()","find_in_batches()","find_index()","find_index()","find_last()","find_one()","find_or_instantiator_by_attributes()","find_root_with_flag()","find_some()","find_tag()","find_template()","find_tzinfo()","find_with_associations()","find_with_ids()","find_zone()","find_zone!()","finder?()","finish()","finish_template()","finish_template()","finite?()","first()","first()","first()","first()","first()","first()","first()","first!()","first_or_create()","first_or_create!()","first_or_initialize()","fixed_encoding?()","fixture_file_upload()","fixture_is_cached?()","fixtures()","flash()","flash()","flat_map()","flatten()","flatten()","flatten!()","flock()","floor()","floor()","floor()","floor()","flush()","flush()","flush()","flush()","flush_all!()","flush_cache()","flushable_loggers()","fnmatch()","fnmatch?()","follow_redirect!()","font_path()","font_path()","for_class()","for_fd()","for_id()","for_tag()","force_encoding()","force_ssl()","foreach()","foreach()","foreign_key()","foreign_key()","fork()","fork()","fork()","forking_env?()","form_authenticity_param()","form_authenticity_token()","form_data?()","form_for()","form_tag()","format()","format()","format()","format()","format()","format()","format()","format=()","format=()","format_paragraph()","formats()","formatted_offset()","formatted_offset()","formatted_offset()","formatted_offset()","fortnight()","fortnights()","forty_two()","fourth()","fragment_cache_key()","fragment_exist?()","framework_trace()","framework_version()","frameworks()","freeze()","freeze()","freeze()","freeze()","freeze_with_memoizable()","fresh?()","fresh_when()","frexp()","friday?()","from()","from()","from()","from_array()","from_json()","from_json()","from_now()","from_now()","from_rails_root()","from_response()","from_trusted_xml()","from_xml()","from_xml()","from_xml()","frozen?()","frozen?()","frozen?()","fsync()","ftype()","ftype()","full?()","full_message()","full_messages()","full_profile_options()","full_test_name()","full_trace()","fullpath()","future?()","future?()","future?()","future?()","g_length()","g_pack()","g_unpack()","gamma()","garbage_collect()","garbage_collect()","gcd()","gcdlcm()","gem()","gem_for_database()","gem_group()","gemfile()","gemfile()","gemspec()","generate()","generate()","generate_message()","generate_method_for_mime()","generate_railtie_name()","generate_sid()","generate_test_dummy()","generated_external_attribute_methods()","generated_feature_methods()","generator()","generator_dir()","generator_name()","generators()","get()","get()","get()","get()","get()","get()","get()","get()","get()","get?()","get_builder_class()","get_builder_class()","get_session()","get_via_redirect()","getbyte()","getbyte()","getbyte()","getc()","getc()","getegid()","geteuid()","getgid()","getgm()","getgm()","getlocal()","getlocal()","getpgid()","getpgrp()","getpriority()","getrlimit()","gets()","gets()","gets()","getuid()","getutc()","getutc()","getutc()","getwd()","gid()","gid()","gid=()","gigabyte()","gigabytes()","git()","git_keep()","git_url?()","gitignore","gitignore","gitignore()","gitignore()","glob()","global_plugins()","global_variables()","gm()","gmt?()","gmt?()","gmt_offset()","gmt_offset()","gmtime()","gmtime()","gmtoff()","gmtoff()","grant_privilege()","grant_privilege()","grep()","group()","group()","group_by()","group_by()","grouped_collection_select()","grouped_collection_select()","grouped_options_for_select()","groups()","groups()","groups=()","grpowned?()","grpowned?()","grpowned?()","gsub()","gsub()","gsub!()","h()","ha1()","halted_callback()","handle_unverified_request()","handler_for_rescue()","handles_encoding?()","has_and_belongs_to_many()","has_errors?()","has_index?()","has_key?()","has_key?()","has_key?()","has_key?()","has_key?()","has_many()","has_migrations?()","has_one()","has_secure_password()","has_uniq_index?()","has_value?()","has_value?()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","hash()","having()","head()","head()","head()","head()","head?()","headers()","headers()","headers()","headers=()","help()","helper()","helper()","helper_attr()","helper_class()","helper_method()","helper_method()","helpers()","helpers()","helpers_paths()","hex()","hidden_actions()","hidden_field()","hidden_field()","hidden_field_tag()","hidden_namespaces()","hide_action()","hide_namespace()","hide_namespaces()","highlight()","home()","hook_for()","host()","host()","host=()","host_with_port()","hour()","hour()","hours()","html?()","html_document()","html_escape()","html_safe()","html_safe?()","html_safe?()","html_safe?()","http_basic_authenticate_with()","httpdate()","https!()","https?()","human()","human()","human_attribute_name()","human_name()","human_name()","humanize()","humanize()","hypot()","i()","i18n_scope()","i18n_scope()","id()","id()","id()","id2name()","id=()","id=()","id?()","id_from_response()","identical?()","identical?()","identify()","identity()","if_modified_since()","if_modified_since=()","if_none_match()","if_none_match=()","imag()","imag()","image_alt()","image_path()","image_path()","image_submit_tag()","image_tag()","imaginary()","imaginary()","in()","in()","in()","in?()","in_char_class?()","in_clause_length()","in_groups()","in_groups_of()","in_rails_application?()","in_rails_application_subdirectory?()","in_time_zone()","in_time_zone()","in_time_zone()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include?()","include_all_railties?()","include_fallbacks_module()","include_tag()","include_with_range?()","included()","included()","included()","included()","included()","included()","included_modules()","includes()","incomplete_input?()","increment()","increment()","increment()","increment()","increment()","increment!()","increment_counter()","increment_open_transactions()","indent()","index()","index()","index()","index()","index()","index()","index_by()","index_exists?()","index_exists?()","index_helper()","index_name()","index_name_exists?()","index_name_for_remove()","index_name_length()","index_name_length()","indexes()","indexes_per_table()","infinite?()","inflections()","info()","inheritable_copy()","inheritance_column()","inheritance_column=()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","inherited()","init_fallbacks()","init_with()","initgroups()","initialize!()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_copy()","initialize_dup()","initialize_dup()","initialize_dup()","initialize_generators()","initialize_i18n()","initialize_schema_migrations_table()","initialize_sid()","initialize_template_class()","initialize_test_deliveries()","initialized=()","initialized?()","initializer()","initializer()","initializers()","initializers()","initializers()","initializers_chain()","initializers_for()","inject()","inject_index_options()","inject_options()","ino()","inplace_mode()","inplace_mode=()","inquiry()","insensitive_attributes()","insert()","insert()","insert()","insert()","insert()","insert()","insert_after()","insert_before()","insert_fixture()","insert_output()","insert_sql()","insert_sql()","insert_sql()","inside_template()","inside_template?()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","inspect()","install()","install()","installed?()","instance()","instance()","instance_eval()","instance_exec()","instance_method()","instance_method_already_implemented?()","instance_method_already_implemented?()","instance_method_names()","instance_methods()","instance_of?()","instance_variable_defined?()","instance_variable_get()","instance_variable_names()","instance_variable_set()","instance_variables()","instantiate()","instantiate_all_loaded_fixtures()","instantiate_fixtures()","instantiate_observers()","instantiator?()","instrument()","instrument()","instrument()","instrument=()","instrument_fragment_cache()","instrumenter()","integer?()","integer?()","intern()","intern()","internal_encoding()","internal_encoding()","internal_methods()","invalid?()","inverse()","invert()","invert()","invert()","invoke()","ioctl()","ip()","ips_from()","irregular()","is_a?()","is_a?()","is_missing?()","is_missing?()","is_utf8?()","isatty()","isdst()","isdst()","iso8601()","iso8601()","isolate_namespace()","issetugid()","iterator?()","j()","j()","javascript_gemfile_entry()","javascript_include_tag()","javascript_include_tag()","javascript_path()","javascript_path()","javascript_runtime_gemfile_entry()","javascript_tag()","javascripts()","join()","join()","join()","joined_includes_values()","joins()","joins_per_query()","json_escape()","json_resource_errors()","keep()","keep_if()","keep_if()","keep_if()","key()","key()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key?()","key_matcher()","key_value()","key_value()","keys()","keys()","keys()","keys()","keys()","keys()","kill()","kill()","kill()","kilobyte()","kilobytes()","kind()","kind()","kind_of?()","kind_of?()","klass()","klass()","known_attributes()","known_attributes()","l()","l()","label()","label()","label_tag()","lambda()","lambda?()","last()","last()","last()","last()","last()","last()","last()","last!()","last_error()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_inserted_id()","last_match()","last_modified()","last_modified=()","last_modified?()","layout()","lchmod()","lchown()","lcm()","ldexp()","lease()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","length()","level()","level=()","lgamma()","lib()","lib()","lib()","license()","limit()","limit()","limited_update_conditions()","limited_update_conditions()","lineno()","lineno()","lineno=()","lineno=()","lines()","lines()","lines()","link()","link_to()","link_to_function()","link_to_if()","link_to_unless()","link_to_unless_current()","links()","list()","list()","list()","list()","listeners_for()","listening?()","ljust()","ljust()","load()","load()","load()","load()","load()","load_all!()","load_attributes_from_response()","load_console()","load_console()","load_console()","load_generators()","load_generators()","load_paths()","load_seed()","load_session()","load_tasks()","load_tasks()","load_tasks()","loaded?()","loaded?()","local()","local()","local?()","local_constant_names()","local_constants()","local_offset()","local_time()","local_to_utc()","local_variables()","locale_charmap()","localize()","localize()","locals()","localtime()","localtime()","location()","location()","location=()","location=()","lock()","lock()","lock!()","locked?()","locking_column()","locking_column=()","locking_enabled?()","log()","log()","log()","log()","log10()","log2()","log_level()","log_path()","log_process_action()","log_subscribers()","logged()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger()","logger=()","logger?()","lookup()","lookup_ancestors()","lookup_by_extension()","lookup_context()","lookup_store()","loop()","ls()","lstat()","lstat()","lstrip()","lstrip()","lstrip!()","magnitude()","magnitude()","magnitude()","magnitude()","magnitude()","mail()","mail_to()","mailer()","mailer_class()","mailer_name()","mailer_name()","main()","malloc_allocated_size()","malloc_allocations()","many?()","many?()","map()","map()","map!()","mark_for_destruction()","marked_for_destruction?()","marshal_dump()","marshal_dump()","marshal_load()","marshal_load()","mass_assignment_authorizer()","mass_assignment_options()","mass_assignment_role()","mass_assignment_sanitizer=()","match()","match()","match()","match()","match()","match()","match()","match()","match()","match?()","mattr_accessor()","mattr_reader()","mattr_writer()","max()","max()","max_by()","maxgroups()","maxgroups=()","maximum()","mb_chars()","mday()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure()","measure_mode()","media_type()","megabyte()","megabytes()","member()","member?()","member?()","member?()","member?()","member?()","member?()","members()","memoize()","memoize_all()","memoized_ivar_for()","merge()","merge()","merge()","merge()","merge()","merge!()","merge!()","merge!()","merge!()","message()","message()","message()","message()","message()","method()","method()","method_added()","method_defined?()","method_defined_within?()","method_for_action()","method_for_action()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_missing()","method_name()","method_names()","method_symbol()","methods()","middleware()","middleware()","middleware()","middleware()","midnight()","midnight()","midnight()","migrate()","migrate()","migration_template()","migrations_paths()","mime_type()","mime_type()","mime_type()","min()","min()","min()","min_by()","minimum()","minmax()","minmax_by()","minus_with_coercion()","minus_without_coercion()","minus_without_duration()","minute()","minutes()","missing_name()","missing_name?()","mkdir()","mktime()","mode()","model_name()","module_eval()","module_exec()","module_namespacing()","modules_for_helpers()","modules_for_helpers()","modulo()","modulo()","modulo()","modulo()","mon()","monday()","monday()","monday?()","month()","month()","months()","months_ago()","months_ago()","months_since()","months_since()","mount()","mountable?()","ms()","mtime()","mtime()","mtime()","multipart=()","multiple_of?()","mute()","mute()","mysql2_connection()","mysql_socket()","name()","name()","name()","name()","name()","name()","name()","name()","name_list()","named_captures()","names()","names()","names()","names()","namespace()","namespace()","namespace()","namespace()","namespaced?()","namespaced_class_path()","namespaced_file_path()","nan?()","native_database_types()","native_database_types()","navigation_behavior()","navigation_location()","negotiate_mime()","nested()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nested_under_indifferent_access()","nesting()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new?()","new_constants()","new_element_path()","new_element_path()","new_from_hash_copying_default()","new_from_hash_copying_default()","new_record?()","new_record?()","new_seed()","new_session()","next()","next()","next()","next()","next!()","next_element()","next_key()","next_migration_number()","next_month()","next_month()","next_selector()","next_values()","next_week()","next_week()","next_year()","next_year()","nil?()","nil?()","nlink()","no_color!()","nonce()","none?()","nonzero?()","normalize()","normalize()","normalize_boundary_map()","normalize_name()","normalize_path()","not_modified?()","notice()","notice=()","notify_observers()","now()","now()","now()","now_is_loaded?()","nsec()","nth_child()","number_field()","number_field_tag()","number_to_currency()","number_to_human()","number_to_human_size()","number_to_percentage()","number_to_phone()","number_with_delimiter()","number_with_precision()","numerator()","numerator()","numerator()","numerator()","numerator()","object()","object_id()","observe()","observed_class()","observed_classes()","observed_classes()","observer_class_for()","observer_instances()","observers()","observers=()","oct()","odd?()","odd?()","odd?()","odd?()","offset()","offset()","on_cdata_block()","on_characters()","on_end_document()","on_end_element()","on_load()","on_load_all()","on_start_document()","on_start_element()","one?()","only()","only_child()","opaque()","open()","open()","open()","open()","open()","open()","open_log()","open_session()","opt_parser()","option_groups_from_collection_for_select()","optional_port()","options()","options()","options()","options()","options()","options()","options_for()","options_for_select()","options_from_collection_for_select()","options_include_default?()","ord()","ord()","ord()","ord()","order()","ordered_railties()","ordinalize()","ordinalize()","orig_delete()","original_concat()","original_fullpath()","original_name()","original_url()","orm_class()","orm_instance()","output_filename()","output_filename()","output_filename()","outside_transaction?()","outside_transaction?()","overlaps?()","owned?()","owned?()","owned?()","owner()","owner()","p()","pack()","param_key()","parameter_filter()","parameter_filter_for()","parameterize()","parameterize()","parameters()","parameters()","parameters()","parameters()","paramify_values()","params()","params()","params=()","parent()","parent_class_name()","parent_name()","parent_of?()","parent_prefixes()","parents()","parse()","parse()","parse()","parse()","parse()","parse()","parse!()","parse!()","parse!()","parse!()","parse!()","parse!()","parse_codepoints()","parse_composition_exclusion()","parse_cp1252()","parse_data_with_trailing_star()","parse_error()","parse_grapheme_break_property()","parse_query()","parse_raw_value_as_a_number()","parse_raw_value_as_an_integer()","parser()","partition()","partition()","pass()","password()","password=()","password=()","password=()","password_field()","password_field_tag()","past?()","past?()","past?()","past?()","path()","path()","path()","path()","path()","path()","path=()","path_for()","path_parameters()","path_to_asset()","path_to_audio()","path_to_font()","path_to_font()","path_to_image()","path_to_image()","path_to_javascript()","path_to_javascript()","path_to_stylesheet()","path_to_stylesheet()","path_to_video()","paths()","paths()","peek()","peek_values()","pending()","perform_validations()","performed?()","period()","period_for_local()","period_for_utc()","permutation()","persisted?()","persisted?()","petabyte()","petabytes()","phase()","phase()","phase()","phone_field()","phone_field_tag()","pid()","pid()","pid()","pipe()","pipe?()","pipe?()","pipe?()","pk_and_sequence_for()","plain?()","pluck()","plugin()","plugins()","plural()","plural()","plural_file_name()","plural_name()","plural_table_name()","pluralize()","pluralize()","pluralize()","pluralize_table_names?()","polar()","polar()","polar()","polymorphic_path()","polymorphic_url()","pop()","pop_d()","pop_tags()","popen()","populate_with_current_scope_attributes()","port()","port=()","port_string()","pos()","pos()","pos()","pos=()","pos=()","pos=()","post()","post()","post()","post()","post()","post()","post?()","post_match()","post_via_redirect()","postgresql_version()","ppid()","pre_match()","precisionless_round()","pred()","prefetch_primary_key?()","prefix()","prefix=()","prefix_source()","preload()","prepare!()","prepare!()","prepare_controller_class()","prepare_destination()","prepend()","prepend_after_filter()","prepend_around_filter()","prepend_before_filter()","prepend_view_path()","prepend_view_path()","presence()","present?()","prev_month()","prev_month()","prev_week()","prev_week()","prev_year()","prev_year()","previous_changes()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key()","primary_key=()","primary_keys()","prime_cache()","primitive_convert()","primitive_errinfo()","print()","print()","print()","printf()","printf()","printf()","priority()","priority=()","private_class_method()","private_instance_methods()","private_method_defined?()","private_methods()","proc()","process()","process()","process()","process()","process_action()","process_action()","process_action()","process_action()","process_attributes_for()","process_node()","process_node()","process_node()","process_node()","process_removed_attributes()","process_removed_attributes()","process_removed_attributes()","process_view_paths()","process_with_new_base_test()","product()","profile()","properties()","property()","protect_against_forgery?()","protect_from_forgery()","protected_attributes()","protected_instance_methods()","protected_method_defined?()","protected_methods()","protocol()","provide()","proxy()","proxy=()","proxy=()","proxy_class()","proxy_class=()","prune()","pruning?()","public_class_method()","public_directory()","public_instance_method()","public_instance_methods()","public_method()","public_method_defined?()","public_methods()","public_path()","public_send()","publish()","publish()","push()","push_d()","push_tags()","put()","put()","put()","put()","put()","put()","put?()","put_via_redirect()","putback()","putc()","putc()","putc()","puts()","puts()","puts()","pwd()","qualified_const_defined?()","qualified_const_get()","qualified_const_set()","query()","query_attribute()","query_parameters()","quietly()","quo()","quo()","quo()","quo()","quote()","quote()","quote()","quote_column_name()","quote_string()","quote_string()","quote_table_name()","quote_table_name()","quote_table_name()","quoted_columns_for_index()","quoted_columns_for_index()","quoted_date()","quoted_false()","quoted_false()","quoted_locking_column()","quoted_primary_key()","quoted_table_name()","quoted_true()","quoted_true()","rack_cookies()","radio_button()","radio_button()","radio_button_checked?()","radio_button_tag()","rails","rails_gemfile_entry()","railtie_name()","railtie_name()","railtie_namespace()","railties()","railties()","raise()","raise()","raise()","raise_if_absolute()","rake()","rake_tasks()","rakefile()","rakefile()","rakefile()","rakefile_test_tasks()","rand()","rand()","rand()","range_field()","range_field_tag()","rassoc()","rassoc()","rassoc()","rationalize()","rationalize()","rationalize()","rationalize()","rationalize()","raw()","raw_connection()","raw_host_with_port()","raw_post()","raw_value()","raw_write_attribute()","rdev()","rdev_major()","rdev_minor()","re_exchange()","re_exchange()","re_exchangeable?()","re_exchangeable?()","read()","read()","read()","read()","read()","read()","read()","read()","read_attribute()","read_attribute_before_type_cast()","read_attribute_before_type_cast()","read_entry()","read_entry()","read_fragment()","read_multi()","read_multi()","read_nonblock()","read_nonblock()","readable?()","readable?()","readable?()","readable_inspect()","readable_inspect()","readable_real?()","readable_real?()","readable_real?()","readagain_bytes()","readbyte()","readbyte()","readchar()","readchar()","readline()","readline()","readline()","readlines()","readlines()","readlines()","readlines()","readlink()","readme()","readme()","readme()","readonly()","readonly!()","readonly?()","readonly_attributes()","readpartial()","readpartial()","real()","real()","real?()","real?()","realdirpath()","realpath()","reason()","receive()","receive()","receiver()","reconnect!()","reconnect!()","reconnect!()","reconnect!()","record()","record()","record()","record_key_for_dom_id()","recreate_database()","rect()","rect()","rect()","rectangular()","rectangular()","rectangular()","recycle!()","recycle!()","redefine_method()","redirect()","redirect_to()","redirect_to()","redirect_to()","redirect_to()","redirect_to_url()","redirect_url()","reduce()","ref()","reference?()","references()","references()","reflect_on_aggregation()","reflect_on_all_aggregations()","reflect_on_all_associations()","reflect_on_all_autosave_associations()","reflect_on_association()","refresh()","regexp()","register()","register_alias()","register_css_compressor()","register_interceptor()","register_interceptors()","register_javascript_expansion()","register_js_compressor()","register_observer()","register_observers()","register_stylesheet_expansion()","registered_css_compressor()","registered_js_compressor()","regular_class_path()","regular_update()","regular_update()","regular_writer()","regular_writer()","rehash()","rehash()","reinit_with()","reject()","reject()","reject()","reject()","reject()","reject!()","reject!()","reject!()","reject!()","release_connection()","release_savepoint()","release_savepoint()","release_savepoint()","release_savepoint()","reload()","reload()","reload()","reload()","reload!()","reload!()","reload_dependencies?()","reload_routes!()","reloader()","reloader_paths()","remainder()","remainder()","remote_addr=()","remote_ip()","remove()","remove()","remove_belongs_to()","remove_by_id()","remove_class_variable()","remove_column()","remove_column_sql()","remove_columns()","remove_connection()","remove_connection()","remove_filters!()","remove_hook_for()","remove_index()","remove_index()","remove_index_sql()","remove_multiparameter_id()","remove_possible_method()","remove_references()","remove_root()","remove_silencers!()","remove_timestamps()","remove_timestamps()","remove_timestamps_sql()","rename()","rename()","rename_column()","rename_column()","rename_column_sql()","rename_index()","rename_index()","rename_key()","rename_table()","rename_table()","rename_table()","rename_table()","render()","render()","render()","render()","render()","render()","render()","render()","render_body()","render_collection()","render_collection()","render_partial()","render_partial()","render_template()","render_to_body()","render_to_body()","render_to_body()","render_to_string()","render_to_string()","reopen()","reorder()","reorder_characters()","repeated_combination()","repeated_permutation()","replace()","replace()","replace()","replace()","replace()","replacement()","replacement=()","replicate()","report()","report()","repository()","request()","request_http_basic_authentication()","request_http_digest_authentication()","request_http_token_authentication()","request_method()","request_method=()","request_method_symbol()","request_parameters()","request_uri=()","request_via_redirect()","requests()","requests()","require()","require_engine()","require_fixture_classes()","require_relative()","require_tzinfo()","requires_reloading?()","requires_reloading?()","rescue_action()","rescue_action_without_handler()","rescue_from()","rescue_from()","rescue_responses()","rescue_template()","rescue_templates()","rescue_with_handler()","rescue_with_handler()","reset()","reset!()","reset!()","reset!()","reset!()","reset!()","reset!()","reset!()","reset_cache()","reset_callbacks()","reset_column_information()","reset_counters()","reset_cycle()","reset_locking_column()","reset_runtime()","reset_sequence!()","reset_session()","reset_session()","resolve()","resolve()","resource()","resource_errors()","resource_location()","resourceful?()","resources()","resources_path_names()","respond()","respond_to()","respond_to()","respond_to()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to?()","respond_to_missing?()","respond_to_without_attributes?()","respond_to_without_attributes?()","respond_with()","response_body=()","response_body=()","response_code()","response_from_page()","response_overridden?()","responses()","restore()","result()","result()","resume()","retrieve_autoindex()","retrieve_connection()","retrieve_connection_pool()","retrieve_object()","reverse()","reverse()","reverse()","reverse!()","reverse!()","reverse_each()","reverse_each()","reverse_merge()","reverse_merge()","reverse_merge()","reverse_merge!()","reverse_merge!()","reverse_merge!()","reverse_order()","reverse_update()","revert()","reverting?()","rewind()","rewind()","rewind()","rewind()","rfc2822()","rfc3339()","rfc822()","rid()","rid()","rindex()","rindex()","rindex()","rjust()","rjust()","rmdir()","robots","rollback_active_record_state!()","rollback_db_transaction()","rollback_db_transaction()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_to_savepoint()","rollback_transaction_records()","root()","root()","root()","root=()","rotate()","rotate!()","round()","round()","round()","round()","round()","round()","route()","route_key()","route_url()","routes()","routes?()","routes_url_helpers()","rpartition()","rstrip()","rstrip()","rstrip!()","ruby_debugger_gemfile_entry()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run()","run_bundle()","run_callbacks()","run_gc()","run_generator()","run_in_isolation()","run_in_isolation()","run_in_transaction?()","run_initializers()","run_load_hooks()","run_profile()","run_test()","run_test()","run_validations!()","run_validations!()","run_warmup()","runtime()","runtime=()","safe_concat()","safe_concat()","safe_constantize()","safe_constantize()","safe_get()","safe_join()","safe_level()","sample()","sample()","sanitize()","sanitize()","sanitize()","sanitize()","sanitize_conditions()","sanitize_css()","sanitize_css()","sanitize_dom_id()","sanitize_for_mass_assignment()","sanitize_limit()","sanitize_sql()","sanitize_sql_array()","sanitize_sql_for_assignment()","sanitize_sql_for_conditions()","sanitize_sql_hash()","sanitize_sql_hash_for_assignment()","sanitize_sql_hash_for_conditions()","sanitizeable?()","sanitizeable?()","saturday?()","save()","save()","save()","save()","save()","save!()","save!()","save!()","save_method()","save_record?()","save_with_validation()","say()","say_with_time()","scan()","schema()","schema()","schema=()","schema_exists?()","schema_format()","schema_search_path()","schema_search_path=()","scope()","scope()","scope_for_create()","scoped()","scoping()","script()","script()","search_convpath()","search_field()","search_field_tag()","sec()","second()","second()","seconds()","seconds_since_midnight()","seconds_since_midnight()","seconds_to_utc_offset()","secret_token()","seed()","seek()","seek()","seek()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select()","select!()","select!()","select!()","select_all()","select_all()","select_date()","select_datetime()","select_day()","select_first()","select_hour()","select_minute()","select_month()","select_one()","select_rows()","select_rows()","select_rows()","select_rows()","select_rows()","select_second()","select_tag()","select_time()","select_value()","select_values()","select_year()","selector()","send()","send_action()","send_data()","send_data()","send_data()","send_file()","send_file()","send_file()","sequence_name()","sequence_name=()","serial_sequence()","serializable_hash()","serializable_hash()","serialize()","serialize()","serialized_value()","server_port()","server_software()","session()","session_auth=()","session_id_column()","session_options=()","session_store()","session_table_name()","set()","set_backtrace()","set_callback()","set_content_type()","set_cookie()","set_default_accessors!()","set_enablement()","set_encoding()","set_encoding()","set_environment()","set_expected_mail()","set_fixture_class()","set_local_assigns!()","set_locking_column()","set_logger()","set_prefix()","set_session()","set_standard_conforming_strings()","set_trace_func()","set_trace_func()","setbyte()","setegid()","seteuid()","setgid()","setgid?()","setgid?()","setgid?()","setpgid()","setpgrp()","setpriority()","setregid()","setresgid()","setresuid()","setreuid()","setrgid()","setrlimit()","setruid()","setsid()","setuid()","setuid?()","setuid?()","setuid?()","setup()","setup()","setup()","setup()","setup()","setup_controller_request_and_response()","setup_fixture_accessors()","setup_fixtures()","setup_subscriptions()","setup_with_controller()","shallow()","shallow?()","shift()","shift()","shift()","shift()","show_detailed_exceptions?()","show_variable()","shuffle()","shuffle!()","sid_available?()","sid_available?()","signaled?()","signo()","silence()","silence()","silence()","silence()","silence()","silence!()","silence_auto_explain()","silence_stream()","silence_warnings()","silencer()","simple_format()","simple_selector()","sin()","since()","since()","since()","since()","since()","since()","singleton_class()","singleton_class()","singleton_method_added()","singleton_methods()","singular()","singular()","singular_route_key()","singular_table_name()","singularize()","singularize()","sinh()","site()","site=()","site=()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size()","size?()","size?()","size?()","skip()","skip_after_filter()","skip_around_filter()","skip_before_filter()","skip_callback()","skip_filter()","sleep()","sleep()","slice()","slice()","slice()","slice()","slice()","slice!()","slice!()","slice!()","slice_before()","socket?()","socket?()","socket?()","sort()","sort()","sort!()","sort_by()","sort_by!()","source()","source_encoding()","source_encoding()","source_encoding()","source_encoding_name()","source_encoding_name()","source_location()","source_location()","source_location()","source_root()","spawn()","spawn()","split()","split()","split()","split()","split_args()","sprintf()","sql()","sql_for_insert()","sql_for_insert()","sql_query_length()","sqlite_version()","sqrt()","squeeze()","squeeze!()","squish()","squish!()","srand()","srand()","ssl_options()","ssl_options=()","ssl_options=()","stale?()","stale_session_check!()","standard_port()","standard_port?()","start()","start()","start()","start()","start()","start()","start()","start_document()","start_element()","start_processing()","start_transaction()","start_with?()","started_request_message()","stat()","stat()","stat()","stats()","status()","status()","status()","status=()","status=()","status_code()","status_code_for_exception()","status_message()","step()","step()","step_with_blockless()","sti_name()","sticky?()","sticky?()","sticky?()","stop()","stop?()","stopped?()","stopsig()","store()","store()","store()","store()","store()","store()","store_accessor()","store_application_definition!()","stress()","stress=()","strftime()","strftime()","strict_encode64()","string()","stringify_keys()","stringify_keys()","stringify_keys()","stringify_keys!()","stringify_keys!()","stringify_keys!()","strip()","strip()","strip!()","strip_heredoc()","strip_links()","strip_tags()","structure_dump()","stylesheet_link_tag()","stylesheet_link_tag()","stylesheet_path()","stylesheet_path()","stylesheets()","sub()","sub()","sub!()","subclasses()","subclasses()","subdomain()","subdomains()","submit()","submit_tag()","subscribe()","subscribe()","subscribed()","subsec()","substitute_at()","substitute_at()","succ()","succ()","succ()","succ()","succ()","succ!()","success?()","success?()","success?()","sum()","sum()","sum()","sunday()","sunday()","sunday?()","superclass()","superclass_delegating_accessor()","supports_add_column?()","supports_bulk_alter?()","supports_count_distinct?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_ddl_transactions?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_explain?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_index_sort_order?()","supports_insert_with_returning?()","supports_migrations?()","supports_migrations?()","supports_migrations?()","supports_primary_key?()","supports_primary_key?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_savepoints?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_statement_cache?()","supports_streaming?()","supports_streaming?()","suppress()","suppress_messages()","svn_url?()","swap()","swapcase()","swapcase()","swapcase!()","switch()","switch()","symbolize_keys()","symbolize_keys()","symbolize_keys()","symbolize_keys!()","symbolized_base_class()","symbolized_path_parameters()","symbolized_sti_name()","symbols()","symlink()","symlink?()","symlink?()","symlink?()","sync()","sync=()","sync_keys!()","synchronize()","synchronize()","syscall()","sysopen()","sysread()","sysseek()","system()","syswrite()","t()","t()","table_alias_for()","table_alias_length()","table_alias_length()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_exists?()","table_name()","table_name()","table_name()","table_name=()","table_name_length()","table_rows()","table_structure()","tableize()","tableize()","tables()","tag()","tag()","tagged()","tail!()","taint()","tainted?()","take()","take()","take_while()","take_while()","tan()","tanh()","tap()","teardown()","teardown()","teardown_fixtures()","teardown_subscriptions()","telephone_field()","telephone_field_tag()","tell()","tell()","tell()","template()","template_exists?()","templates_path()","terabyte()","terabytes()","terminate()","termsig()","test()","test()","test()","test()","test_dummy_clean()","test_dummy_config()","test_errors_aref()","test_errors_full_messages()","test_homepage()","test_model_naming()","test_persisted?()","test_to_key()","test_to_param()","test_to_partial_path()","test_valid?()","tests()","tests()","tests()","tests()","text_area()","text_area_tag()","text_field()","text_field_tag()","third()","threadsafe!()","throw()","thursday?()","tidy_bytes()","tidy_bytes()","time()","time_ago_in_words()","time_select()","time_select()","time_tag()","time_with_block()","time_with_datetime_fallback()","time_zone_options_for_select()","time_zone_select()","time_zone_select()","timeout()","timeout=()","timeout=()","times()","times()","timestamped_migrations()","timestamps()","timestamps()","titlecase()","titlecase()","titleize()","titleize()","titleize()","tmp()","to()","to()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_a()","to_app()","to_ary()","to_ary()","to_boolean_select_tag()","to_c()","to_c()","to_c()","to_check_box_tag()","to_cleanup()","to_content_tag()","to_d()","to_date()","to_date()","to_date()","to_date()","to_date()","to_date_select_tag()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime()","to_datetime_select_tag()","to_default_s()","to_default_s()","to_default_s()","to_default_s()","to_default_s()","to_enum()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_f()","to_format()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_formatted_s()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_hash()","to_html()","to_html()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_i()","to_input_field_tag()","to_int()","to_int()","to_int()","to_io()","to_io()","to_js()","to_json()","to_json()","to_key()","to_key()","to_label_tag()","to_model()","to_model()","to_number_field_tag()","to_options()","to_options!()","to_options!()","to_options!()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_param()","to_partial_path()","to_partial_path()","to_path()","to_path()","to_path()","to_path()","to_prepare()","to_prepare()","to_prepare_blocks()","to_proc()","to_proc()","to_proc()","to_query()","to_query()","to_query()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_r()","to_radio_button_tag()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_s()","to_sentence()","to_sql()","to_sql()","to_sql()","to_str()","to_str()","to_sym()","to_sym()","to_sym()","to_tag()","to_text_area_tag()","to_time()","to_time()","to_time()","to_time()","to_time()","to_time_in_current_zone()","to_time_select_tag()","to_write_io()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_xml()","to_yaml()","to_yaml()","to_yaml()","to_yaml()","to_yaml_type()","today()","today?()","today?()","today?()","toggle()","toggle!()","token_and_options()","tokenize()","tokenize()","tomorrow()","tomorrow()","tomorrow()","total_time()","touch()","tr()","tr!()","tr_s()","tr_s!()","trace_var()","transaction()","transaction()","transaction()","transaction()","transaction_joinable=()","transfer()","translate()","translate()","translate_exception()","translate_exception()","translate_exception()","translate_exception()","transliterate()","transpose()","trap()","trap()","trigger()","trigger()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","truncate()","trust()","try()","try()","try_convert()","try_convert()","try_convert()","try_convert()","try_convert()","try_lock()","try_to_load_dependency()","tsort_each_child()","tsvector()","tty?()","tuesday?()","tv_nsec()","tv_sec()","tv_sec()","tv_usec()","type_cast()","type_cast()","type_cast()","type_cast_attribute_for_write()","type_to_sql()","type_to_sql()","u_unpack()","uid()","uid()","uid=()","umask()","unbind()","uncached()","uncached()","uncountable()","uncountable?()","uncountable?()","undefine_attribute_methods()","undefine_attribute_methods()","undefine_attribute_methods()","undefine_finalizer()","underscore()","underscore()","unescape()","unescape_bytea()","unescape_path()","ungetbyte()","ungetc()","uninstall()","union()","uniq()","uniq()","uniq!()","uniq_by()","uniq_by!()","unlink()","unlink()","unlock()","unmemoize_all()","unpack()","unregister()","unserialize()","unserialized_value()","unshift()","unsubscribe()","unsubscribe()","untaint()","until()","until()","untrace_var()","untrust()","untrusted?()","up()","upcase()","upcase()","upcase()","upcase!()","update()","update()","update()","update()","update()","update()","update()","update_all()","update_attribute()","update_attribute()","update_attributes()","update_attributes()","update_attributes()","update_attributes!()","update_column()","update_counters()","update_counters()","update_sql()","update_sql()","updated()","updated?()","upto()","upto()","url()","url_field()","url_field_tag()","url_for()","url_for()","url_for()","url_for()","url_options()","url_options()","url_options()","url_options()","url_options()","us_zones()","usage_path()","use()","use()","use()","use()","use_accept_header()","use_checkout?()","use_externals?()","use_renderer()","use_renderers()","use_svn?()","use_zone()","usec()","usec()","user()","user=()","user=()","user_agent=()","user_name_and_password()","uses_transaction()","uses_transaction?()","using_limitable_reflections?()","utc()","utc()","utc()","utc()","utc?()","utc?()","utc?()","utc_offset()","utc_offset()","utc_offset()","utc_offset()","utc_time()","utc_to_local()","utf8_enforcer_tag()","utime()","uuid()","valid?()","valid?()","valid?()","valid_accept_header()","valid_alter_table_options()","valid_const?()","valid_const?()","valid_encoding?()","valid_scope_name?()","validate()","validate()","validate()","validate()","validate_digest_response()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_each()","validate_fallbacks()","validate_nonce()","validates()","validates!()","validates_acceptance_of()","validates_associated()","validates_confirmation_of()","validates_each()","validates_exclusion_of()","validates_format_of()","validates_inclusion_of()","validates_length_of()","validates_numericality_of()","validates_presence_of()","validates_size_of()","validates_uniqueness_of()","validates_with()","validates_with()","validators()","validators_on()","value()","value()","value()","value()","value?()","value?()","value_before_type_cast()","value_before_type_cast()","values()","values()","values()","values()","values()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","values_at()","vendor()","vendor()","vendor_javascripts()","vendor_plugins()","vendor_stylesheets()","verified_request?()","verify()","verify!()","verify_authenticity_token()","verify_request?()","version()","video_path()","video_tag()","view_assigns()","view_context()","view_context_class()","view_context_class()","view_paths()","view_paths=()","view_paths=()","view_renderer()","visible_action?()","wait()","wait()","wait()","wait2()","waitall()","waitpid()","waitpid2()","wakeup()","wants?()","warn()","warn()","watch()","watch_namespaces()","watchable_args()","watchable_dirs()","watchable_files()","watching?()","wday()","wednesday?()","week()","weeks()","weeks_ago()","weeks_ago()","where()","where_values_hash()","with()","with()","with_backend()","with_backend()","with_connection()","with_default_scope()","with_exclusive_scope()","with_exclusive_scope()","with_fallbacks()","with_gc_stats()","with_index()","with_indifferent_access()","with_indifferent_access()","with_indifferent_access()","with_local_cache()","with_lock()","with_object()","with_options()","with_output_file()","with_routing()","with_scope()","with_scope_level()","with_transaction_returning_status()","with_warnings()","without()","without_modules()","word_wrap()","world_readable?()","world_readable?()","world_readable?()","world_writable?()","world_writable?()","world_writable?()","wrap()","wrap_parameters()","wrap_with_namespace()","writable?()","writable?()","writable?()","writable_real?()","writable_real?()","writable_real?()","write()","write()","write()","write()","write()","write()","write()","write_asset()","write_attribute()","write_entry()","write_entry()","write_fragment()","write_manifest()","write_nonblock()","xhr()","xhr()","xhr?()","xml()","xml()","xml_http_request()","xml_http_request()","xml_http_request?()","xmlschema()","xmlschema()","xmlschema()","yday()","year()","year()","years()","years_ago()","years_ago()","years_since()","years_since()","yesterday()","yesterday()","yesterday()","yield()","yield()","zero?()","zero?()","zero?()","zero?()","zero?()","zero?()","zip()","zip()","zone()","zone()","zone()","zone=()","zones_map()","|()","|()","|()","|()","|()","|()","~()","~()","~()","~()"],"longSearchIndex":["Ruby basicobject#!()","Ruby basicobject#!=()","Ruby object#!~()","Ruby bignum#%()","Ruby fixnum#%()","Ruby float#%()","Ruby numeric#%()","Ruby string#%()","Ruby array#&()","Ruby bignum#&()","Ruby falseclass#&()","Ruby fixnum#&()","Ruby nilclass#&()","Ruby process::status#&()","Ruby trueclass#&()","Ruby array#*()","Ruby bignum#*()","Ruby complex#*()","Ruby fixnum#*()","Ruby float#*()","Ruby rational#*()","Ruby string#*()","Ruby bignum#**()","Ruby complex#**()","Ruby fixnum#**()","Ruby float#**()","Ruby rational#**()","Ruby array#+()","Ruby bignum#+()","Ruby complex#+()","Ruby fixnum#+()","Ruby float#+()","Ruby rational#+()","Ruby string#+()","Ruby time#+()","Rails activemodel::massassignmentsecurity::permissionset#+()","Rails activesupport::duration#+()","Rails activesupport::multibyte::chars#+()","Rails activesupport::safebuffer#+()","Rails activesupport::timewithzone#+()","Rails rails::initializable::collection#+()","Ruby numeric#+@()","Ruby array#-()","Ruby bignum#-()","Ruby complex#-()","Ruby fixnum#-()","Ruby float#-()","Ruby rational#-()","Ruby time#-()","Rails activesupport::duration#-()","Rails activesupport::timewithzone#-()","Rails time#-()","Ruby bignum#-@()","Ruby complex#-@()","Ruby fixnum#-@()","Ruby float#-@()","Ruby numeric#-@()","Ruby bignum#/()","Ruby complex#/()","Ruby fixnum#/()","Ruby float#/()","Ruby rational#/()","Ruby bignum#<()","Ruby comparable#<()","Ruby fixnum#<()","Ruby float#<()","Ruby module#<()","Ruby array#<<()","Ruby bignum#<<()","Ruby fixnum#<<()","Ruby io#<<()","Ruby string#<<()","Rails activesupport::safebuffer#<<()","Ruby bignum#<=()","Ruby comparable#<=()","Ruby fixnum#<=()","Ruby float#<=()","Ruby module#<=()","Ruby array#<=>()","Ruby bignum#<=>()","Ruby file::stat#<=>()","Ruby fixnum#<=>()","Ruby float#<=>()","Ruby module#<=>()","Ruby numeric#<=>()","Ruby object#<=>()","Ruby rational#<=>()","Ruby string#<=>()","Ruby symbol#<=>()","Ruby time#<=>()","Rails activerecord::base#<=>()","Rails activerecord::connectionadapters::sqliteadapter::version#<=>()","Rails activesupport::multibyte::chars#<=>()","Rails activesupport::timewithzone#<=>()","Rails activesupport::timezone#<=>()","Rails datetime#<=>()","Rails time#<=>()","Ruby array#==()","Ruby basicobject#==()","Ruby bignum#==()","Ruby comparable#==()","Ruby complex#==()","Ruby encoding::converter#==()","Ruby exception#==()","Ruby fixnum#==()","Ruby float#==()","Ruby hash#==()","Ruby matchdata#==()","Ruby method#==()","Ruby module#==()","Ruby proc#==()","Ruby process::status#==()","Ruby random#==()","Ruby range#==()","Ruby rational#==()","Ruby regexp#==()","Ruby string#==()","Ruby struct#==()","Ruby symbol#==()","Ruby unboundmethod#==()","Rails actiondispatch::middlewarestack::middleware#==()","Rails actionview::filesystemresolver#==()","Rails activerecord::base#==()","Rails activerecord::reflection::macroreflection#==()","Rails activerecord::relation#==()","Rails activeresource::base#==()","Rails activeresource::request#==()","Rails activeresource::response#==()","Rails activesupport::duration#==()","Rails mime::type#==()","Ruby bignum#===()","Ruby fixnum#===()","Ruby float#===()","Ruby module#===()","Ruby object#===()","Ruby proc#===()","Ruby range#===()","Ruby regexp#===()","Ruby string#===()","Ruby symbol#===()","Ruby systemcallerror::===()","Rails activerecord::base::===()","Rails activesupport::multibyte::unicode::unicodedatabase#===()","Rails mime::type#===()","Rails time::===()","Ruby object#=~()","Ruby regexp#=~()","Ruby string#=~()","Ruby symbol#=~()","Rails activesupport::multibyte::chars#=~()","Rails activesupport::timezone#=~()","Rails mime::type#=~()","Ruby bignum#>()","Ruby comparable#>()","Ruby fixnum#>()","Ruby float#>()","Ruby module#>()","Ruby bignum#>=()","Ruby comparable#>=()","Ruby fixnum#>=()","Ruby float#>=()","Ruby module#>=()","Ruby bignum#>>()","Ruby fixnum#>>()","Ruby process::status#>>()","Rails date#>>()","Ruby argf","Rails abstractcontroller","Rails abstractcontroller::actionnotfound","Rails abstractcontroller::assetpaths","Rails abstractcontroller::base","Rails abstractcontroller::callbacks","Rails abstractcontroller::callbacks::classmethods","Rails abstractcontroller::collector","Rails abstractcontroller::doublerendererror","Rails abstractcontroller::error","Rails abstractcontroller::helpers","Rails abstractcontroller::helpers::classmethods","Rails abstractcontroller::layouts","Rails abstractcontroller::layouts::classmethods","Rails abstractcontroller::layouts::classmethods::layoutconditions","Rails abstractcontroller::logger","Rails abstractcontroller::railties","Rails abstractcontroller::railties::routeshelpers","Rails abstractcontroller::rendering","Rails abstractcontroller::rendering::classmethods","Rails abstractcontroller::translation","Rails abstractcontroller::urlfor","Rails abstractcontroller::urlfor::classmethods","Rails abstractcontroller::viewpaths","Rails abstractcontroller::viewpaths::classmethods","Rails actioncontroller","Rails actioncontroller::base","Rails actioncontroller::caching","Rails actioncontroller::caching::actions","Rails actioncontroller::caching::actions::actioncachepath","Rails actioncontroller::caching::actions::classmethods","Rails actioncontroller::caching::configmethods","Rails actioncontroller::caching::fragments","Rails actioncontroller::caching::pages","Rails actioncontroller::caching::pages::classmethods","Rails actioncontroller::caching::sweeping","Rails actioncontroller::compatibility","Rails actioncontroller::conditionalget","Rails actioncontroller::cookies","Rails actioncontroller::datastreaming","Rails actioncontroller::flash","Rails actioncontroller::forcessl","Rails actioncontroller::forcessl::classmethods","Rails actioncontroller::head","Rails actioncontroller::helpers","Rails actioncontroller::helpers::classmethods","Rails actioncontroller::hideactions","Rails actioncontroller::hideactions::classmethods","Rails actioncontroller::httpauthentication","Rails actioncontroller::httpauthentication::basic","Rails actioncontroller::httpauthentication::basic::controllermethods","Rails actioncontroller::httpauthentication::basic::controllermethods::classmethods","Rails actioncontroller::httpauthentication::digest","Rails actioncontroller::httpauthentication::digest::controllermethods","Rails actioncontroller::httpauthentication::token","Rails actioncontroller::httpauthentication::token::controllermethods","Rails actioncontroller::implicitrender","Rails actioncontroller::instrumentation","Rails actioncontroller::instrumentation::classmethods","Rails actioncontroller::logsubscriber","Rails actioncontroller::metal","Rails actioncontroller::middleware","Rails actioncontroller::middleware::actionmiddleware","Rails actioncontroller::mimeresponds","Rails actioncontroller::mimeresponds::classmethods","Rails actioncontroller::paramswrapper","Rails actioncontroller::paramswrapper::classmethods","Rails actioncontroller::rackdelegation","Rails actioncontroller::railtie","Rails actioncontroller::railties","Rails actioncontroller::railties::paths","Rails actioncontroller::recordidentifier","Rails actioncontroller::redirecting","Rails actioncontroller::renderers","Rails actioncontroller::renderers::all","Rails actioncontroller::renderers::classmethods","Rails actioncontroller::rendering","Rails actioncontroller::requestforgeryprotection","Rails actioncontroller::requestforgeryprotection::classmethods","Rails actioncontroller::rescue","Rails actioncontroller::responder","Rails actioncontroller::sessionmanagement","Rails actioncontroller::sessionmanagement::classmethods","Rails actioncontroller::streaming","Rails actioncontroller::templateassertions","Rails actioncontroller::testcase","Rails actioncontroller::testcase::behavior","Rails actioncontroller::testcase::behavior::classmethods","Rails actioncontroller::testcase::raiseactionexceptions","Rails actioncontroller::testresponse","Rails actioncontroller::testing","Rails actioncontroller::testing::classmethods","Rails actioncontroller::urlfor","Rails actiondispatch","Rails actiondispatch::assertions","Rails actiondispatch::assertions::domassertions","Rails actiondispatch::assertions::responseassertions","Rails actiondispatch::assertions::routingassertions","Rails actiondispatch::assertions::selectorassertions","Rails actiondispatch::assertions::tagassertions","Rails actiondispatch::beststandardssupport","Rails actiondispatch::bodyproxy","Rails actiondispatch::callbacks","Rails actiondispatch::cookies","Rails actiondispatch::cookies::cookieoverflow","Rails actiondispatch::debugexceptions","Rails actiondispatch::exceptionwrapper","Rails actiondispatch::filehandler","Rails actiondispatch::flash","Rails actiondispatch::flash::flashhash","Rails actiondispatch::head","Rails actiondispatch::http","Rails actiondispatch::http::cache","Rails actiondispatch::http::cache::request","Rails actiondispatch::http::cache::response","Rails actiondispatch::http::filterparameters","Rails actiondispatch::http::headers","Rails actiondispatch::http::mimenegotiation","Rails actiondispatch::http::parameterfilter","Rails actiondispatch::http::parameters","Rails actiondispatch::http::url","Rails actiondispatch::http::upload","Rails actiondispatch::http::uploadedfile","Rails actiondispatch::integration","Rails actiondispatch::integration::requesthelpers","Rails actiondispatch::integration::runner","Rails actiondispatch::integration::session","Rails actiondispatch::integrationtest","Rails actiondispatch::middlewarestack","Rails actiondispatch::middlewarestack::middleware","Rails actiondispatch::paramsparser","Rails actiondispatch::performancetest","Rails actiondispatch::publicexceptions","Rails actiondispatch::railsentitystore","Rails actiondispatch::railsmetastore","Rails actiondispatch::railtie","Rails actiondispatch::reloader","Rails actiondispatch::remoteip","Rails actiondispatch::remoteip::getip","Rails actiondispatch::remoteip::ipspoofattackerror","Rails actiondispatch::request","Rails actiondispatch::requestid","Rails actiondispatch::rescue","Rails actiondispatch::response","Rails actiondispatch::routing","Rails actiondispatch::routing::mapper","Rails actiondispatch::routing::mapper::base","Rails actiondispatch::routing::mapper::httphelpers","Rails actiondispatch::routing::mapper::resources","Rails actiondispatch::routing::mapper::scoping","Rails actiondispatch::routing::polymorphicroutes","Rails actiondispatch::routing::redirection","Rails actiondispatch::routing::routeset","Rails actiondispatch::routing::routeset::mountedhelpers","Rails actiondispatch::routing::urlfor","Rails actiondispatch::session","Rails actiondispatch::session::abstractstore","Rails actiondispatch::session::cachestore","Rails actiondispatch::session::compatibility","Rails actiondispatch::session::cookiestore","Rails actiondispatch::session::destroyablesession","Rails actiondispatch::session::memcachestore","Rails actiondispatch::session::stalesessioncheck","Rails actiondispatch::showexceptions","Rails actiondispatch::static","Rails actiondispatch::testprocess","Rails actiondispatch::testrequest","Rails actiondispatch::testresponse","Rails actionmailer","Rails actionmailer::base","Rails actionmailer::collector","Rails actionmailer::deliverymethods","Rails actionmailer::deliverymethods::classmethods","Rails actionmailer::logsubscriber","Rails actionmailer::mailhelper","Rails actionmailer::noninferrablemailererror","Rails actionmailer::railtie","Rails actionmailer::testcase","Rails actionmailer::testcase::behavior","Rails actionmailer::testcase::behavior::classmethods","Rails actionmailer::testhelper","Rails actionpack","Rails actionview","Rails actionview::base","Rails actionview::context","Rails actionview::filesystemresolver","Rails actionview::fixtureresolver","Rails actionview::helpers","Rails actionview::helpers::activemodelhelper","Rails actionview::helpers::activemodelinstancetag","Rails actionview::helpers::assetpaths","Rails actionview::helpers::assettaghelper","Rails actionview::helpers::assettaghelper::assetincludetag","Rails actionview::helpers::assettaghelper::javascriptincludetag","Rails actionview::helpers::assettaghelper::javascripttaghelpers","Rails actionview::helpers::assettaghelper::javascripttaghelpers::classmethods","Rails actionview::helpers::assettaghelper::stylesheetincludetag","Rails actionview::helpers::assettaghelper::stylesheettaghelpers","Rails actionview::helpers::assettaghelper::stylesheettaghelpers::classmethods","Rails actionview::helpers::atomfeedhelper","Rails actionview::helpers::atomfeedhelper::atombuilder","Rails actionview::helpers::atomfeedhelper::atomfeedbuilder","Rails actionview::helpers::cachehelper","Rails actionview::helpers::capturehelper","Rails actionview::helpers::csrfhelper","Rails actionview::helpers::datehelper","Rails actionview::helpers::datehelperinstancetag","Rails actionview::helpers::debughelper","Rails actionview::helpers::formbuilder","Rails actionview::helpers::formhelper","Rails actionview::helpers::formoptionshelper","Rails actionview::helpers::formtaghelper","Rails actionview::helpers::instancetag","Rails actionview::helpers::javascripthelper","Rails actionview::helpers::numberhelper","Rails actionview::helpers::numberhelper::invalidnumbererror","Rails actionview::helpers::outputsafetyhelper","Rails actionview::helpers::recordtaghelper","Rails actionview::helpers::renderinghelper","Rails actionview::helpers::sanitizehelper","Rails actionview::helpers::taghelper","Rails actionview::helpers::texthelper","Rails actionview::helpers::translationhelper","Rails actionview::helpers::urlhelper","Rails actionview::logsubscriber","Rails actionview::lookupcontext","Rails actionview::lookupcontext::detailscache","Rails actionview::lookupcontext::viewpaths","Rails actionview::nullresolver","Rails actionview::partialrenderer","Rails actionview::railtie","Rails actionview::renderer","Rails actionview::resolver","Rails actionview::resolver::path","Rails actionview::template","Rails actionview::template::handlers","Rails actionview::template::handlers::builder","Rails actionview::template::handlers::erb","Rails actionview::template::handlers::erubis","Rails actionview::testcase","Rails actionview::testcase::behavior","Rails actionview::testcase::behavior::classmethods","Rails actionview::testcase::behavior::locals","Rails actionview::testcase::testcontroller","Rails activemodel","Rails activemodel::attributemethods","Rails activemodel::attributemethods::classmethods","Rails activemodel::attributemethods::classmethods::attributemethodmatcher","Rails activemodel::blockvalidator","Rails activemodel::callbacks","Rails activemodel::conversion","Rails activemodel::dirty","Rails activemodel::eachvalidator","Rails activemodel::errors","Rails activemodel::lint","Rails activemodel::lint::tests","Rails activemodel::massassignmentsecurity","Rails activemodel::massassignmentsecurity::blacklist","Rails activemodel::massassignmentsecurity::classmethods","Rails activemodel::massassignmentsecurity::error","Rails activemodel::massassignmentsecurity::loggersanitizer","Rails activemodel::massassignmentsecurity::permissionset","Rails activemodel::massassignmentsecurity::sanitizer","Rails activemodel::massassignmentsecurity::strictsanitizer","Rails activemodel::massassignmentsecurity::whitelist","Rails activemodel::missingattributeerror","Rails activemodel::name","Rails activemodel::naming","Rails activemodel::observer","Rails activemodel::observerarray","Rails activemodel::observing","Rails activemodel::observing::classmethods","Rails activemodel::securepassword","Rails activemodel::securepassword::classmethods","Rails activemodel::securepassword::instancemethodsonactivation","Rails activemodel::serialization","Rails activemodel::serializers","Rails activemodel::serializers::json","Rails activemodel::serializers::xml","Rails activemodel::strictvalidationfailed","Rails activemodel::translation","Rails activemodel::validations","Rails activemodel::validations::acceptancevalidator","Rails activemodel::validations::callbacks","Rails activemodel::validations::callbacks::classmethods","Rails activemodel::validations::classmethods","Rails activemodel::validations::confirmationvalidator","Rails activemodel::validations::exclusionvalidator","Rails activemodel::validations::formatvalidator","Rails activemodel::validations::helpermethods","Rails activemodel::validations::inclusionvalidator","Rails activemodel::validations::lengthvalidator","Rails activemodel::validations::numericalityvalidator","Rails activemodel::validations::presencevalidator","Rails activemodel::validations::withvalidator","Rails activemodel::validator","Rails activerecord","Rails activerecord::activerecorderror","Rails activerecord::adapternotfound","Rails activerecord::adapternotspecified","Rails activerecord::aggregations","Rails activerecord::aggregations::classmethods","Rails activerecord::associationtypemismatch","Rails activerecord::associations","Rails activerecord::associations::classmethods","Rails activerecord::attributeassignment","Rails activerecord::attributeassignment::classmethods","Rails activerecord::attributeassignmenterror","Rails activerecord::attributemethods","Rails activerecord::attributemethods::beforetypecast","Rails activerecord::attributemethods::classmethods","Rails activerecord::attributemethods::deprecatedunderscoreread","Rails activerecord::attributemethods::deprecatedunderscoreread::classmethods","Rails activerecord::attributemethods::dirty","Rails activerecord::attributemethods::primarykey","Rails activerecord::attributemethods::primarykey::classmethods","Rails activerecord::attributemethods::query","Rails activerecord::attributemethods::read","Rails activerecord::attributemethods::read::classmethods","Rails activerecord::attributemethods::serialization","Rails activerecord::attributemethods::serialization::attribute","Rails activerecord::attributemethods::serialization::classmethods","Rails activerecord::attributemethods::timezoneconversion","Rails activerecord::attributemethods::timezoneconversion::classmethods","Rails activerecord::attributemethods::write","Rails activerecord::attributemethods::write::classmethods","Rails activerecord::autosaveassociation","Rails activerecord::autosaveassociation::classmethods","Rails activerecord::base","Rails activerecord::batches","Rails activerecord::calculations","Rails activerecord::callbacks","Rails activerecord::coders","Rails activerecord::coders::yamlcolumn","Rails activerecord::configurationerror","Rails activerecord::connectionadapters","Rails activerecord::connectionadapters::abstractadapter","Rails activerecord::connectionadapters::abstractmysqladapter","Rails activerecord::connectionadapters::column","Rails activerecord::connectionadapters::column::format","Rails activerecord::connectionadapters::connectionhandler","Rails activerecord::connectionadapters::connectionmanagement","Rails activerecord::connectionadapters::connectionpool","Rails activerecord::connectionadapters::databaselimits","Rails activerecord::connectionadapters::databasestatements","Rails activerecord::connectionadapters::mysql2adapter","Rails activerecord::connectionadapters::mysqladapter","Rails activerecord::connectionadapters::mysqladapter::statementpool","Rails activerecord::connectionadapters::postgresqladapter","Rails activerecord::connectionadapters::postgresqladapter::statementpool","Rails activerecord::connectionadapters::postgresqladapter::tabledefinition","Rails activerecord::connectionadapters::postgresqladapter::utils","Rails activerecord::connectionadapters::postgresqlcolumn","Rails activerecord::connectionadapters::querycache","Rails activerecord::connectionadapters::quoting","Rails activerecord::connectionadapters::sqliteadapter","Rails activerecord::connectionadapters::sqliteadapter::explainprettyprinter","Rails activerecord::connectionadapters::sqliteadapter::statementpool","Rails activerecord::connectionadapters::sqliteadapter::version","Rails activerecord::connectionadapters::schemacache","Rails activerecord::connectionadapters::schemastatements","Rails activerecord::connectionadapters::statementpool","Rails activerecord::connectionadapters::table","Rails activerecord::connectionadapters::tabledefinition","Rails activerecord::connectionnotestablished","Rails activerecord::connectiontimeouterror","Rails activerecord::countercache","Rails activerecord::dangerousattributeerror","Rails activerecord::delegation","Rails activerecord::dynamicfindermatch","Rails activerecord::dynamicmatchers","Rails activerecord::dynamicscopematch","Rails activerecord::explain","Rails activerecord::findermethods","Rails activerecord::fixtures","Rails activerecord::fixtures::file","Rails activerecord::generators","Rails activerecord::generators::migration","Rails activerecord::generators::migrationgenerator","Rails activerecord::generators::modelgenerator","Rails activerecord::generators::observergenerator","Rails activerecord::generators::sessionmigrationgenerator","Rails activerecord::identitymap","Rails activerecord::identitymap::middleware","Rails activerecord::inheritance","Rails activerecord::inheritance::classmethods","Rails activerecord::integration","Rails activerecord::invalidforeignkey","Rails activerecord::irreversiblemigration","Rails activerecord::locking","Rails activerecord::locking::optimistic","Rails activerecord::locking::optimistic::classmethods","Rails activerecord::locking::pessimistic","Rails activerecord::logsubscriber","Rails activerecord::migration","Rails activerecord::migration::commandrecorder","Rails activerecord::migrationproxy","Rails activerecord::modelschema","Rails activerecord::modelschema::classmethods","Rails activerecord::multiparameterassignmenterrors","Rails activerecord::nestedattributes","Rails activerecord::nestedattributes::classmethods","Rails activerecord::nestedattributes::toomanyrecords","Rails activerecord::observer","Rails activerecord::persistence","Rails activerecord::persistence::classmethods","Rails activerecord::preparedstatementinvalid","Rails activerecord::querycache","Rails activerecord::querycache::classmethods","Rails activerecord::querymethods","Rails activerecord::querying","Rails activerecord::railtie","Rails activerecord::railties","Rails activerecord::railties::controllerruntime","Rails activerecord::railties::controllerruntime::classmethods","Rails activerecord::readonlyrecord","Rails activerecord::readonlyattributes","Rails activerecord::readonlyattributes::classmethods","Rails activerecord::recordinvalid","Rails activerecord::recordnotfound","Rails activerecord::recordnotsaved","Rails activerecord::recordnotunique","Rails activerecord::reflection","Rails activerecord::reflection::classmethods","Rails activerecord::reflection::macroreflection","Rails activerecord::relation","Rails activerecord::result","Rails activerecord::rollback","Rails activerecord::sanitization","Rails activerecord::sanitization::classmethods","Rails activerecord::schema","Rails activerecord::scoping","Rails activerecord::scoping::classmethods","Rails activerecord::scoping::default","Rails activerecord::scoping::default::classmethods","Rails activerecord::scoping::named","Rails activerecord::scoping::named::classmethods","Rails activerecord::serialization","Rails activerecord::serializationtypemismatch","Rails activerecord::sessionstore","Rails activerecord::sessionstore::session","Rails activerecord::sessionstore::sqlbypass","Rails activerecord::spawnmethods","Rails activerecord::staleobjecterror","Rails activerecord::statementinvalid","Rails activerecord::store","Rails activerecord::store::classmethods","Rails activerecord::testfixtures","Rails activerecord::testfixtures::classmethods","Rails activerecord::throwresult","Rails activerecord::timestamp","Rails activerecord::transactions","Rails activerecord::transactions::classmethods","Rails activerecord::translation","Rails activerecord::unknownattributeerror","Rails activerecord::unknownprimarykey","Rails activerecord::validations","Rails activerecord::validations::associatedvalidator","Rails activerecord::validations::classmethods","Rails activerecord::validations::uniquenessvalidator","Rails activerecord::wrappeddatabaseexception","Rails activeresource","Rails activeresource::base","Rails activeresource::connection","Rails activeresource::custommethods","Rails activeresource::custommethods::classmethods","Rails activeresource::errors","Rails activeresource::formats","Rails activeresource::formats::jsonformat","Rails activeresource::formats::xmlformat","Rails activeresource::httpmock","Rails activeresource::invalidrequesterror","Rails activeresource::logsubscriber","Rails activeresource::observing","Rails activeresource::railtie","Rails activeresource::request","Rails activeresource::response","Rails activeresource::sslerror","Rails activeresource::timeouterror","Rails activeresource::validations","Rails activesupport","Rails activesupport::autoload","Rails activesupport::backtracecleaner","Rails activesupport::base64","Rails activesupport::basicobject","Rails activesupport::benchmarkable","Rails activesupport::bufferedlogger","Rails activesupport::bufferedlogger::severity","Rails activesupport::cache","Rails activesupport::cache::entry","Rails activesupport::cache::filestore","Rails activesupport::cache::memcachestore","Rails activesupport::cache::memorystore","Rails activesupport::cache::nullstore","Rails activesupport::cache::store","Rails activesupport::cache::strategy","Rails activesupport::cache::strategy::localcache","Rails activesupport::cache::strategy::localcache::localstore","Rails activesupport::callbacks","Rails activesupport::callbacks::classmethods","Rails activesupport::concern","Rails activesupport::configurable","Rails activesupport::configurable::classmethods","Rails activesupport::configurable::configuration","Rails activesupport::dependencies","Rails activesupport::dependencies::classcache","Rails activesupport::dependencies::watchstack","Rails activesupport::deprecation","Rails activesupport::descendantstracker","Rails activesupport::duration","Rails activesupport::fileupdatechecker","Rails activesupport::filewatcher","Rails activesupport::filewatcher::backend","Rails activesupport::gzip","Rails activesupport::gzip::stream","Rails activesupport::hashwithindifferentaccess","Rails activesupport::inflector","Rails activesupport::inflector::inflections","Rails activesupport::inheritableoptions","Rails activesupport::json","Rails activesupport::json::encoding","Rails activesupport::json::encoding::circularreferenceerror","Rails activesupport::json::encoding::encoder","Rails activesupport::json::variable","Rails activesupport::logsubscriber","Rails activesupport::logsubscriber::testhelper","Rails activesupport::logsubscriber::testhelper::mocklogger","Rails activesupport::memoizable","Rails activesupport::memoizable::instancemethods","Rails activesupport::messageencryptor","Rails activesupport::messageencryptor::invalidmessage","Rails activesupport::messageverifier","Rails activesupport::messageverifier::invalidsignature","Rails activesupport::multibyte","Rails activesupport::multibyte::chars","Rails activesupport::multibyte::encodingerror","Rails activesupport::multibyte::unicode","Rails activesupport::multibyte::unicode::codepoint","Rails activesupport::multibyte::unicode::databasegenerator","Rails activesupport::multibyte::unicode::unicodedatabase","Rails activesupport::notifications","Rails activesupport::notifications::event","Rails activesupport::notifications::fanout","Rails activesupport::notifications::instrumenter","Rails activesupport::orderedhash","Rails activesupport::orderedoptions","Rails activesupport::railtie","Rails activesupport::rescuable","Rails activesupport::rescuable::classmethods","Rails activesupport::safebuffer","Rails activesupport::safebuffer::safeconcaterror","Rails activesupport::stringinquirer","Rails activesupport::taggedlogging","Rails activesupport::testcase","Rails activesupport::testing","Rails activesupport::testing::assertions","Rails activesupport::testing::declarative","Rails activesupport::testing::isolation","Rails activesupport::testing::isolation::forking","Rails activesupport::testing::isolation::minitest","Rails activesupport::testing::isolation::subprocess","Rails activesupport::testing::isolation::testunit","Rails activesupport::testing::pending","Rails activesupport::testing::performance","Rails activesupport::testing::performance::benchmarker","Rails activesupport::testing::performance::forclassictestunit","Rails activesupport::testing::performance::forminitest","Rails activesupport::testing::performance::metrics","Rails activesupport::testing::performance::metrics::amount","Rails activesupport::testing::performance::metrics::base","Rails activesupport::testing::performance::metrics::cputime","Rails activesupport::testing::performance::metrics::digitalinformationunit","Rails activesupport::testing::performance::metrics::gcruns","Rails activesupport::testing::performance::metrics::gctime","Rails activesupport::testing::performance::metrics::memory","Rails activesupport::testing::performance::metrics::objects","Rails activesupport::testing::performance::metrics::processtime","Rails activesupport::testing::performance::metrics::time","Rails activesupport::testing::performance::metrics::usertime","Rails activesupport::testing::performance::metrics::walltime","Rails activesupport::testing::performance::performer","Rails activesupport::testing::performance::profiler","Rails activesupport::testing::proxytestresult","Rails activesupport::testing::remoteerror","Rails activesupport::testing::setupandteardown","Rails activesupport::testing::setupandteardown::classmethods","Rails activesupport::testing::setupandteardown::forclassictestunit","Rails activesupport::testing::setupandteardown::forminitest","Rails activesupport::timewithzone","Rails activesupport::timezone","Rails activesupport::xmlmini","Rails activesupport::xmlmini_libxmlsax","Rails activesupport::xmlmini_libxmlsax::hashbuilder","Rails activesupport::xmlmini_nokogirisax","Rails activesupport::xmlmini_nokogirisax::hashbuilder","Rails applicationcontroller","Rails applicationhelper","Rails arjdbcmysql","Rails arjdbcmysql::error","Ruby argumenterror","Ruby array","Ruby kernel#array()","Rails array","Rails base64","Ruby basicobject","Rails benchmark","Rails bigdecimal","Ruby bignum","Ruby binding","Ruby class","Rails class","Ruby comparable","Ruby complex","Ruby kernel#complex()","Ruby continuation","Rails css","Rails css::generators","Rails css::generators::assetsgenerator","Rails css::generators::scaffoldgenerator","Ruby thread::debug()","Ruby thread::debug=()","Ruby data","Rails date","Rails datetime","Ruby dir","Ruby env","Ruby eoferror","Rails erb","Rails erb::util","Ruby encoding","Ruby encoding::compatibilityerror","Ruby encoding::converter","Ruby encoding::converternotfounderror","Ruby encoding::invalidbytesequenceerror","Ruby encoding::undefinedconversionerror","Ruby encodingerror","Ruby enumerable","Rails enumerable","Ruby enumerator","Ruby enumerator::generator","Ruby enumerator::yielder","Rails erb","Rails erb::generators","Rails erb::generators::controllergenerator","Rails erb::generators::mailergenerator","Rails erb::generators::scaffoldgenerator","Ruby errno","Ruby exception","Ruby falseclass","Rails falseclass","Ruby fiber","Ruby fibererror","Ruby file","Rails file","Ruby file::constants","Ruby file::stat","Ruby filetest","Ruby fixnum","Ruby float","Ruby kernel#float()","Rails float","Ruby floatdomainerror","Ruby gc","Ruby gc::profiler","Rails actiondispatch::request#get()","Rails ","Rails ","Rails ","Rails html","Rails html::fullsanitizer","Rails html::linksanitizer","Rails html::sanitizer","Rails html::selector","Rails html::tag","Rails html::whitelistsanitizer","Ruby hash","Rails hash","Rails i18n","Rails i18n::exceptionhandler","Rails i18n::railtie","Ruby io","Rails io","Ruby io::waitreadable","Ruby io::waitwritable","Ruby ioerror","Ruby indexerror","Ruby integer","Ruby kernel#integer()","Rails integer","Ruby interrupt","Rails js","Rails js::generators","Rails js::generators::assetsgenerator","Ruby kernel","Rails kernel","Ruby keyerror","Ruby loaderror","Rails loaderror","Ruby localjumperror","Rails logger","Rails logger::simpleformatter","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby marshal","Ruby matchdata","Ruby math","Ruby math::domainerror","Ruby method","Rails mime","Rails mime::mimes","Rails mime::type","Ruby module","Rails module","Ruby mutex","Rails mysql","Rails mysql::result","Rails mysql::stmt","Rails mysql::time","Ruby nameerror","Rails nameerror","Ruby nilclass","Rails nilclass","Ruby nomemoryerror","Ruby nomethoderror","Ruby notimplementederror","Ruby numeric","Rails numeric","Ruby object","Rails object","Rails object::hashwithindifferentaccess","Rails object::missingsourcefile","Ruby objectspace","Rails actiondispatch::request#post()","Rails plugin","Ruby proc","Ruby process","Rails process","Ruby process::gid","Ruby process::status","Ruby process::sys","Ruby process::uid","Rails qualifiedconstutils","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails rack","Rails rails","Rails rails::actionmethods","Rails rails::appbuilder","Rails rails::application","Rails rails::application::bootstrap","Rails rails::application::configuration","Rails rails::application::finisher","Rails rails::application::railties","Rails rails::application::routesreloader","Rails rails::backtracecleaner","Rails rails::commands","Rails rails::commands::info","Rails rails::commands::install","Rails rails::commands::plugin","Rails rails::commands::remove","Rails rails::configuration","Rails rails::console","Rails rails::consolemethods","Rails rails::dbconsole","Rails rails::engine","Rails rails::engine::configuration","Rails rails::engine::railties","Rails rails::generators","Rails rails::generators::actions","Rails rails::generators::activemodel","Rails rails::generators::appbase","Rails rails::generators::appgenerator","Rails rails::generators::assetsgenerator","Rails rails::generators::base","Rails rails::generators::controllergenerator","Rails rails::generators::error","Rails rails::generators::generatedattribute","Rails rails::generators::generatorgenerator","Rails rails::generators::helpergenerator","Rails rails::generators::mailergenerator","Rails rails::generators::migration","Rails rails::generators::migration::classmethods","Rails rails::generators::migrationgenerator","Rails rails::generators::modelgenerator","Rails rails::generators::namedbase","Rails rails::generators::observergenerator","Rails rails::generators::pluginnewgenerator","Rails rails::generators::resourcegenerator","Rails rails::generators::resourcehelpers","Rails rails::generators::resourceroutegenerator","Rails rails::generators::scaffoldcontrollergenerator","Rails rails::generators::scaffoldgenerator","Rails rails::generators::sessionmigrationgenerator","Rails rails::generators::taskgenerator","Rails rails::generators::testcase","Rails rails::info","Rails rails::infocontroller","Rails rails::initializable","Rails rails::initializable::classmethods","Rails rails::initializable::collection","Rails rails::initializable::initializer","Rails rails::paths","Rails rails::paths::path","Rails rails::paths::root","Rails rails::plugin","Rails rails::pluginbuilder","Rails rails::rack","Rails rails::rack::debugger","Rails rails::rack::logtailer","Rails rails::rack::logger","Rails rails::railtie","Rails rails::railtie::configurable","Rails rails::railtie::configurable::classmethods","Rails rails::railtie::configuration","Rails rails::scriptrailsloader","Rails rails::server","Rails rails::server::options","Rails rails::subtesttask","Rails rails::testunitrailtie","Rails railsenvironment","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby random","Ruby range","Rails range","Ruby rangeerror","Ruby rational","Ruby kernel#rational()","Rails recursivehttpfetcher","Ruby regexp","Rails regexp","Ruby regexperror","Ruby rubyvm","Ruby rubyvm::env","Ruby rubyvm::instructionsequence","Ruby runtimeerror","Ruby scripterror","Ruby securityerror","Ruby signal","Ruby signalexception","Rails sourceannotationextractor","Rails sourceannotationextractor::annotation","Rails sprockets","Rails sprockets::bootstrap","Rails sprockets::compressors","Rails sprockets::helpers","Rails sprockets::helpers::isolatedhelper","Rails sprockets::helpers::railshelper","Rails sprockets::helpers::railshelper::assetpaths","Rails sprockets::helpers::railshelper::assetpaths::assetnotprecompilederror","Rails sprockets::railtie","Rails sprockets::staticcompiler","Ruby standarderror","Ruby stopiteration","Ruby string","Ruby kernel#string()","Rails string","Ruby struct","Ruby symbol","Rails symbol","Ruby syntaxerror","Ruby systemcallerror","Ruby systemexit","Ruby systemstackerror","Rails test","Rails test::unit","Rails test::unit::collector","Rails test::unit::collector::objectspace","Rails testunit","Rails testunit::generators","Rails testunit::generators::controllergenerator","Rails testunit::generators::helpergenerator","Rails testunit::generators::integrationgenerator","Rails testunit::generators::mailergenerator","Rails testunit::generators::modelgenerator","Rails testunit::generators::observergenerator","Rails testunit::generators::performancegenerator","Rails testunit::generators::plugingenerator","Rails testunit::generators::scaffoldgenerator","Ruby thread","Ruby threaderror","Ruby threadgroup","Ruby time","Rails time","Ruby trueclass","Rails trueclass","Ruby typeerror","Rails uri","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Rails ","Ruby unboundmethod","Ruby zerodivisionerror","Ruby array#[]()","Ruby array::[]()","Ruby bignum#[]()","Ruby continuation#[]()","Ruby dir::[]()","Ruby env::[]()","Ruby fixnum#[]()","Ruby hash::[]()","Ruby hash#[]()","Ruby matchdata#[]()","Ruby method#[]()","Ruby proc#[]()","Ruby string#[]()","Ruby struct#[]()","Ruby symbol#[]()","Ruby thread#[]()","Rails actiondispatch::flash::flashhash#[]()","Rails actiondispatch::http::headers#[]()","Rails actiondispatch::middlewarestack#[]()","Rails activemodel::errors#[]()","Rails activerecord::connectionadapters::mysqladapter::statementpool#[]()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#[]()","Rails activerecord::connectionadapters::sqliteadapter::statementpool#[]()","Rails activerecord::connectionadapters::statementpool#[]()","Rails activerecord::connectionadapters::tabledefinition#[]()","Rails activerecord::fixtures#[]()","Rails activeresource::formats::[]()","Rails activeresource::response#[]()","Rails activesupport::dependencies::classcache#[]()","Rails activesupport::multibyte::chars#[]()","Rails activesupport::orderedhash::[]()","Rails activesupport::orderedoptions#[]()","Rails activesupport::safebuffer#[]()","Rails activesupport::testing::performance::metrics::[]()","Rails activesupport::timezone::[]()","Rails mime::[]()","Ruby array#[]=()","Ruby env::[]=()","Ruby hash#[]=()","Ruby string#[]=()","Ruby struct#[]=()","Ruby thread#[]=()","Rails activemodel::errors#[]=()","Rails activerecord::connectionadapters::mysqladapter::statementpool#[]=()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#[]=()","Rails activerecord::connectionadapters::sqliteadapter::statementpool#[]=()","Rails activerecord::connectionadapters::statementpool#[]=()","Rails activerecord::fixtures#[]=()","Rails activeresource::response#[]=()","Rails activesupport::hashwithindifferentaccess#[]=()","Rails activesupport::hashwithindifferentaccess#[]=()","Rails activesupport::multibyte::chars#[]=()","Rails activesupport::orderedhash#[]=()","Rails activesupport::orderedoptions#[]=()","Rails rails::paths::root#[]=()","Ruby bignum#^()","Ruby falseclass#^()","Ruby fixnum#^()","Ruby nilclass#^()","Ruby trueclass#^()","Rails activesupport::callbacks::classmethods#__callback_runner_name()","Ruby kernel#__callee__()","Ruby basicobject#__id__()","Ruby kernel#__method__()","Rails activesupport::testing::proxytestresult#__replay__()","Rails activesupport::callbacks::classmethods#__reset_runner()","Ruby basicobject#__send__()","Rails rails::engine#_all_autoload_once_paths()","Rails rails::engine#_all_autoload_paths()","Rails rails::engine#_all_load_paths()","Rails activerecord::attributemethods::deprecatedunderscoreread#_attribute()","Rails activesupport::xmlmini#_dasherize()","Ruby time#_dump()","Rails time#_dump()","Rails time#_dump_without_utc_flag()","Rails time#_dump_without_zone()","Rails activesupport::orderedoptions#_get()","Rails actioncontroller::compatibility#_handle_method_missing()","Rails actioncontroller::renderers#_handle_render_options()","Ruby objectspace::_id2ref()","Rails abstractcontroller::layouts::classmethods#_implied_layout_name()","Rails abstractcontroller::callbacks::classmethods#_insert_callbacks()","Rails actionview::context#_layout_for()","Rails actionview::helpers::renderinghelper#_layout_for()","Ruby time::_load()","Rails time::_load()","Rails time::_load_without_utc_flag()","Rails time::_load_without_zone()","Rails abstractcontroller::callbacks::classmethods#_normalize_callback_options()","Rails abstractcontroller::layouts#_normalize_options()","Rails actioncontroller::compatibility#_normalize_options()","Rails bigdecimal#_original_to_s()","Rails activesupport::xmlmini#_parse_file()","Rails abstractcontroller::viewpaths#_prefixes()","Rails actionview::context#_prepare_context()","Rails abstractcontroller::urlfor#_routes()","Rails abstractcontroller::urlfor::classmethods#_routes()","Rails actiondispatch::routing::urlfor#_routes_context()","Rails actionview::helpers::urlhelper#_routes_context()","Rails activesupport::testing::isolation#_run_class_setup()","Rails actioncontroller::caching::actions#_save_fragment()","Rails actionview::lookupcontext::detailscache#_set_detail()","Rails actioncontroller::paramswrapper::classmethods#_set_wrapper_defaults()","Rails actionview::helpers::formbuilder::_to_partial_path()","Rails activemodel::validations::classmethods#_validates_default_keys()","Rails actiondispatch::routing::urlfor#_with_routes()","Rails abstractcontroller::layouts::classmethods#_write_layout_method()","Ruby kernel#`()","Ruby kernel#abort()","Ruby process::abort()","Ruby thread#abort_on_exception()","Ruby thread::abort_on_exception()","Ruby thread#abort_on_exception=()","Ruby thread::abort_on_exception=()","Ruby bignum#abs()","Ruby complex#abs()","Ruby fixnum#abs()","Ruby float#abs()","Ruby numeric#abs()","Ruby complex#abs2()","Ruby numeric#abs2()","Ruby file::absolute_path()","Rails abstractcontroller::base::abstract!()","Rails activerecord::inheritance::classmethods#abstract_class?()","Rails rails::railtie::abstract_railtie?()","Rails actiondispatch::testrequest#accept=()","Rails actiondispatch::http::mimenegotiation#accepts()","Rails activerecord::nestedattributes::classmethods#accepts_nested_attributes_for()","Rails activemodel::massassignmentsecurity::classmethods#accessible_attributes()","Rails activerecord::generators::modelgenerator#accessible_attributes()","Ruby math::acos()","Ruby math::acosh()","Rails activesupport::inflector::inflections#acronym()","Rails actioncontroller::metal::action()","Rails actiondispatch::testrequest#action=()","Rails abstractcontroller::layouts#action_has_layout?()","Rails abstractcontroller::base#action_methods()","Rails abstractcontroller::base::action_methods()","Rails abstractcontroller::urlfor::classmethods#action_methods()","Rails actioncontroller::hideactions::classmethods#action_methods()","Rails activerecord::connectionadapters::abstractadapter#active?()","Rails activerecord::connectionadapters::mysql2adapter#active?()","Rails activerecord::connectionadapters::mysqladapter#active?()","Rails activerecord::connectionadapters::postgresqladapter#active?()","Rails activemodel::massassignmentsecurity::classmethods#active_authorizer()","Rails activemodel::massassignmentsecurity::classmethods#active_authorizers()","Rails activerecord::connectionadapters::connectionpool#active_connection?()","Rails activerecord::connectionadapters::connectionhandler#active_connections?()","Rails object#acts_like?()","Rails date#acts_like_date?()","Rails datetime#acts_like_date?()","Rails activesupport::multibyte::chars#acts_like_string?()","Rails string#acts_like_string?()","Rails activesupport::timewithzone#acts_like_time?()","Rails datetime#acts_like_time?()","Rails time#acts_like_time?()","Rails activerecord::connectionadapters::abstractadapter#adapter_name()","Rails activerecord::connectionadapters::postgresqladapter#adapter_name()","Ruby threadgroup#add()","Rails actioncontroller::renderers::add()","Rails activemodel::errors#add()","Rails activerecord::identitymap::add()","Rails activesupport::bufferedlogger#add()","Rails activesupport::taggedlogging#add()","Rails rails::paths::root#add()","Rails activerecord::connectionadapters::abstractmysqladapter#add_column()","Rails activerecord::connectionadapters::postgresqladapter#add_column()","Rails activerecord::connectionadapters::schemastatements#add_column()","Rails activerecord::connectionadapters::abstractmysqladapter#add_column_position!()","Rails activerecord::connectionadapters::abstractmysqladapter#add_column_sql()","Rails actionmailer::deliverymethods::classmethods#add_delivery_method()","Rails activesupport::testing::proxytestresult#add_error()","Rails actionview::template::handlers::erubis#add_expr_escaped()","Rails actionview::template::handlers::erubis#add_expr_literal()","Rails activesupport::backtracecleaner#add_filter()","Rails activerecord::connectionadapters::schemastatements#add_index()","Rails activerecord::connectionadapters::abstractmysqladapter#add_index_length()","Rails activerecord::connectionadapters::schemastatements#add_index_options()","Rails activerecord::connectionadapters::schemastatements#add_index_sort_order()","Rails activerecord::connectionadapters::abstractmysqladapter#add_index_sql()","Rails activemodel::observing::classmethods#add_observer()","Rails activerecord::observer#add_observer!()","Rails activemodel::errors#add_on_blank()","Rails activemodel::errors#add_on_empty()","Rails actionview::template::handlers::erubis#add_postamble()","Rails actionview::template::handlers::erubis#add_preamble()","Rails actioncontroller::add_renderer()","Rails rails::generators::resourceroutegenerator#add_resource_route()","Rails rails::generators::controllergenerator#add_routes()","Rails rails::generators::appbase::add_shared_options_for()","Rails rails::generators::base::add_shebang_option!()","Rails activesupport::backtracecleaner#add_silencer()","Rails rails::generators::actions#add_source()","Rails actionview::template::handlers::erubis#add_text()","Rails activerecord::connectionadapters::schemastatements#add_timestamps()","Rails activerecord::connectionadapters::abstractmysqladapter#add_timestamps_sql()","Rails activerecord::transactions#add_to_transaction()","Ruby thread#add_trace_func()","Rails activerecord::connectionadapters::databasestatements#add_transaction_record()","Rails nilclass::add_whiner()","Rails activemodel::errors#added?()","Rails activesupport::timewithzone#advance()","Rails date#advance()","Rails datetime#advance()","Rails time#advance()","Ruby io#advise()","Rails actiondispatch::callbacks::after()","Rails rails::initializable::initializer#after()","Rails activerecord::transactions::classmethods#after_commit()","Rails abstractcontroller::callbacks::classmethods#after_filter()","Rails rails::railtie::configuration#after_initialize()","Rails activerecord::transactions::classmethods#after_rollback()","Rails activemodel::validations::callbacks::classmethods#after_validation()","Rails activesupport::duration#ago()","Rails activesupport::timewithzone#ago()","Rails date#ago()","Rails datetime#ago()","Rails numeric#ago()","Rails time#ago()","Rails actiondispatch::flash::flashhash#alert()","Rails actiondispatch::flash::flashhash#alert=()","Rails activemodel::attributemethods::classmethods#alias_attribute()","Rails module#alias_attribute()","Rails module#alias_method_chain()","Rails sprockets::staticcompiler#aliased_path_for()","Ruby encoding::aliases()","Ruby fiber#alive?()","Ruby thread#alive?()","Rails actionmailer::collector#all()","Rails activerecord::findermethods#all()","Rails activeresource::base::all()","Rails activesupport::timezone::all()","Rails rails::application::railties#all()","Rails rails::engine::railties#all()","Rails rails::generators::activemodel::all()","Rails rails::plugin::all()","Ruby enumerable#all?()","Rails time#all_day()","Rails actioncontroller::helpers::classmethods#all_helpers_from_path()","Rails time#all_month()","Rails rails::paths::root#all_paths()","Rails time#all_quarter()","Ruby symbol::all_symbols()","Rails time#all_week()","Rails time#all_year()","Ruby class#allocate()","Ruby module#ancestors()","Ruby complex#angle()","Ruby float#angle()","Ruby numeric#angle()","Rails activerecord::migration#announce()","Rails module#anonymous?()","Rails actionmailer::collector#any()","Ruby enumerable#any?()","Rails activerecord::relation#any?()","Rails actioncontroller::responder#api_behavior()","Rails actioncontroller::responder#api_location()","Rails actiondispatch::integration::runner#app()","Rails actiondispatch::integrationtest#app()","Rails actiondispatch::integrationtest::app()","Rails rails::appbuilder#app()","Rails rails::consolemethods#app()","Rails rails::engine#app()","Rails rails::pluginbuilder#app()","Rails rails::server#app()","Rails actiondispatch::integrationtest::app=()","Rails rails::generators::appgenerator#app_const()","Rails rails::generators::appgenerator#app_const_base()","Rails rails::railtie::configuration#app_generators()","Rails rails::railtie::configuration#app_middleware()","Rails rails::generators::appgenerator#app_name()","Rails rails::generators::appgenerator#app_secret()","Rails rails::generators::pluginnewgenerator#app_templates_dir()","Rails abstractcontroller::callbacks::classmethods#append_after_filter()","Rails abstractcontroller::callbacks::classmethods#append_around_filter()","Rails abstractcontroller::callbacks::classmethods#append_before_filter()","Rails activesupport::concern#append_features()","Rails abstractcontroller::viewpaths#append_view_path()","Rails abstractcontroller::viewpaths::classmethods#append_view_path()","Rails rails::application()","Rails rails::generators::actions#application()","Rails rails::application=()","Rails rails::generators::pluginnewgenerator#application_definition()","Rails rails::generators::namedbase#application_name()","Rails actiondispatch::exceptionwrapper#application_trace()","Rails activerecord::spawnmethods#apply_finder_options()","Rails activerecord::findermethods#apply_join_dependency()","Rails rails::generators::appbase#apply_rails_template()","Rails activerecord::querymethods#arel()","Rails activerecord::base::arel_engine()","Rails activerecord::base::arel_table()","Ruby complex#arg()","Ruby float#arg()","Ruby numeric#arg()","Ruby nomethoderror#args()","Rails rails::generators::testcase::arguments()","Ruby argf#argv()","Ruby method#arity()","Ruby proc#arity()","Ruby unboundmethod#arity()","Rails abstractcontroller::callbacks::classmethods#around_filter()","Rails activemodel::errors#as_json()","Rails activemodel::serializers::json#as_json()","Rails activesupport::json::encoding::encoder#as_json()","Rails activesupport::json::variable#as_json()","Rails activesupport::timewithzone#as_json()","Rails bigdecimal#as_json()","Rails falseclass#as_json()","Rails nilclass#as_json()","Rails numeric#as_json()","Rails regexp#as_json()","Rails string#as_json()","Rails symbol#as_json()","Rails trueclass#as_json()","Ruby encoding#ascii_compatible?()","Ruby string#ascii_only?()","Ruby encoding::converter::asciicompat_encoding()","Ruby time#asctime()","Ruby math::asin()","Ruby math::asinh()","Rails activesupport::testing::assertions#assert_blank()","Rails rails::generators::testcase#assert_class_method()","Rails activesupport::testing::assertions#assert_difference()","Rails rails::generators::testcase#assert_directory()","Rails actiondispatch::assertions::domassertions#assert_dom_equal()","Rails actiondispatch::assertions::domassertions#assert_dom_not_equal()","Rails actionmailer::testhelper#assert_emails()","Rails rails::generators::testcase#assert_field_default_value()","Rails rails::generators::testcase#assert_field_type()","Rails rails::generators::testcase#assert_file()","Rails actiondispatch::assertions::routingassertions#assert_generates()","Rails actiondispatch::middlewarestack#assert_index()","Rails rails::generators::testcase#assert_instance_method()","Rails rails::generators::testcase#assert_method()","Rails rails::generators::testcase#assert_migration()","Rails activesupport::testing::assertions#assert_no_difference()","Rails rails::generators::testcase#assert_no_directory()","Rails actionmailer::testhelper#assert_no_emails()","Rails rails::generators::testcase#assert_no_file()","Rails rails::generators::testcase#assert_no_migration()","Rails actiondispatch::assertions::tagassertions#assert_no_tag()","Rails activesupport::testing::assertions#assert_present()","Rails actiondispatch::assertions::routingassertions#assert_recognizes()","Rails actiondispatch::assertions::responseassertions#assert_redirected_to()","Rails actiondispatch::assertions::responseassertions#assert_response()","Rails actiondispatch::assertions::routingassertions#assert_routing()","Rails actiondispatch::assertions::selectorassertions#assert_select()","Rails actiondispatch::assertions::selectorassertions#assert_select_email()","Rails actiondispatch::assertions::selectorassertions#assert_select_encoded()","Rails actiondispatch::assertions::tagassertions#assert_tag()","Rails actioncontroller::templateassertions#assert_template()","Rails hash#assert_valid_keys()","Rails actionview::helpers::assettaghelper::assetincludetag#asset_name()","Rails actionview::helpers::assettaghelper::javascriptincludetag#asset_name()","Rails actionview::helpers::assettaghelper::stylesheetincludetag#asset_name()","Rails rails::generators::assetsgenerator#asset_name()","Rails sprockets::helpers::railshelper#asset_path()","Rails sprockets::helpers::railshelper#asset_paths()","Rails actionview::helpers::assettaghelper::assetincludetag#asset_tag()","Rails actionview::helpers::assettaghelper::javascriptincludetag#asset_tag()","Rails actionview::helpers::assettaghelper::stylesheetincludetag#asset_tag()","Rails rails::generators::appbase#assets_gemfile_entry()","Rails activerecord::attributeassignment#assign_attributes()","Rails actioncontroller::compatibility#assign_shortcuts()","Rails actiondispatch::testprocess#assigns()","Ruby array#assoc()","Ruby env::assoc()","Ruby hash#assoc()","Rails activerecord::connectionadapters::schemastatements#assume_migrated_upto_version()","Ruby array#at()","Ruby time::at()","Rails activesupport::timezone#at()","Rails string#at()","Rails date#at_beginning_of_day()","Rails datetime#at_beginning_of_day()","Rails time#at_beginning_of_day()","Rails datetime#at_beginning_of_hour()","Rails time#at_beginning_of_hour()","Rails date#at_beginning_of_month()","Rails time#at_beginning_of_month()","Rails date#at_beginning_of_quarter()","Rails time#at_beginning_of_quarter()","Rails date#at_beginning_of_week()","Rails time#at_beginning_of_week()","Rails date#at_beginning_of_year()","Rails time#at_beginning_of_year()","Rails date#at_end_of_month()","Rails time#at_end_of_month()","Rails date#at_end_of_quarter()","Rails time#at_end_of_quarter()","Rails date#at_end_of_week()","Rails time#at_end_of_week()","Rails date#at_end_of_year()","Rails time#at_end_of_year()","Ruby kernel#at_exit()","Rails date#at_midnight()","Rails datetime#at_midnight()","Rails time#at_midnight()","Ruby math::atan()","Ruby math::atan2()","Ruby math::atanh()","Ruby file::atime()","Ruby file#atime()","Ruby file::stat#atime()","Rails actionview::helpers::atomfeedhelper#atom_feed()","Rails file::atomic_write()","Rails activesupport::logsubscriber::attach_to()","Rails actionmailer::base#attachments()","Rails actionmailer::mailhelper#attachments()","Rails activemodel::massassignmentsecurity::classmethods#attr_accessible()","Rails module#attr_internal()","Rails module#attr_internal_accessor()","Rails module#attr_internal_reader()","Rails module#attr_internal_writer()","Rails activemodel::massassignmentsecurity::classmethods#attr_protected()","Rails activerecord::readonlyattributes::classmethods#attr_readonly()","Rails activerecord::attributemethods::timezoneconversion::classmethods#attribute_cast_code()","Rails html::selector#attribute_match()","Rails activemodel::attributemethods#attribute_method?()","Rails activemodel::validations::classmethods#attribute_method?()","Rails activerecord::attributemethods::classmethods#attribute_method?()","Rails activemodel::attributemethods::classmethods#attribute_method_affix()","Rails activemodel::attributemethods::classmethods#attribute_method_prefix()","Rails activemodel::attributemethods::classmethods#attribute_method_suffix()","Rails activerecord::attributemethods::classmethods#attribute_methods_generated?()","Rails activemodel::attributemethods#attribute_missing()","Rails activerecord::attributemethods::classmethods#attribute_names()","Rails activerecord::attributeassignment#attributes=()","Rails activerecord::attributemethods::beforetypecast#attributes_before_type_cast()","Rails activemodel::massassignmentsecurity::classmethods#attributes_protected_by_default()","Rails activemodel::securepassword::classmethods::attributes_protected_by_default()","Rails activerecord::generators::modelgenerator#attributes_with_index()","Rails actionview::helpers::assettaghelper#audio_path()","Rails actionview::helpers::assettaghelper#audio_tag()","Rails activeresource::base::auth_type()","Rails activeresource::base::auth_type=()","Rails activeresource::connection#auth_type=()","Rails actioncontroller::httpauthentication::basic#authenticate()","Rails actioncontroller::httpauthentication::digest#authenticate()","Rails actioncontroller::httpauthentication::token#authenticate()","Rails activemodel::securepassword::instancemethodsonactivation#authenticate()","Rails actioncontroller::httpauthentication::basic::controllermethods#authenticate_or_request_with_http_basic()","Rails actioncontroller::httpauthentication::digest::controllermethods#authenticate_or_request_with_http_digest()","Rails actioncontroller::httpauthentication::token::controllermethods#authenticate_or_request_with_http_token()","Rails actioncontroller::httpauthentication::basic::controllermethods#authenticate_with_http_basic()","Rails actioncontroller::httpauthentication::digest::controllermethods#authenticate_with_http_digest()","Rails actioncontroller::httpauthentication::token::controllermethods#authenticate_with_http_token()","Rails actioncontroller::httpauthentication::digest#authentication_header()","Rails actioncontroller::httpauthentication::basic#authentication_request()","Rails actioncontroller::httpauthentication::digest#authentication_request()","Rails actioncontroller::httpauthentication::token#authentication_request()","Rails actiondispatch::request#authorization()","Rails actionview::helpers::assettaghelper#auto_discovery_link_tag()","Rails activesupport::bufferedlogger#auto_flushing=()","Ruby io#autoclose=()","Ruby io#autoclose?()","Ruby kernel#autoload()","Ruby module#autoload()","Rails activesupport::autoload#autoload()","Ruby kernel#autoload?()","Ruby module#autoload?()","Rails activesupport::autoload#autoload_at()","Rails rails::paths::root#autoload_once()","Rails rails::engine::configuration#autoload_once_paths()","Rails rails::engine::configuration#autoload_paths()","Rails rails::paths::root#autoload_paths()","Rails activesupport::autoload#autoload_under()","Rails activesupport::autoload#autoloads()","Rails abstractcontroller::base#available_action?()","Rails erb::generators::scaffoldgenerator#available_views()","Rails activerecord::calculations#average()","Rails activesupport::json::backend()","Rails activesupport::json::backend=()","Rails activesupport::xmlmini#backend=()","Ruby exception#backtrace()","Ruby thread#backtrace()","Rails rails::backtrace_cleaner()","Rails activerecord::dynamicfindermatch#bang?()","Rails rails::generators::appgenerator::banner()","Rails rails::generators::base::banner()","Rails rails::generators::pluginnewgenerator::banner()","Rails activerecord::inheritance::classmethods#base_class()","Rails rails::generators::base::base_name()","Rails rails::generators::base::base_root()","Ruby file::basename()","Rails activerecord::migrationproxy#basename()","Rails activerecord::persistence#becomes()","Rails actiondispatch::callbacks::before()","Rails rails::initializable::initializer#before()","Rails rails::railtie::configuration#before_configuration()","Rails rails::railtie::configuration#before_eager_load()","Rails abstractcontroller::callbacks::classmethods#before_filter()","Rails actioncontroller::testing::classmethods#before_filters()","Rails rails::railtie::configuration#before_initialize()","Rails activemodel::validations::callbacks::classmethods#before_validation()","Ruby matchdata#begin()","Ruby range#begin()","Rails activerecord::connectionadapters::abstractmysqladapter#begin_db_transaction()","Rails activerecord::connectionadapters::databasestatements#begin_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter#begin_db_transaction()","Rails date#beginning_of_day()","Rails datetime#beginning_of_day()","Rails time#beginning_of_day()","Rails datetime#beginning_of_hour()","Rails time#beginning_of_hour()","Rails date#beginning_of_month()","Rails time#beginning_of_month()","Rails date#beginning_of_quarter()","Rails time#beginning_of_quarter()","Rails date#beginning_of_week()","Rails time#beginning_of_week()","Rails date#beginning_of_year()","Rails time#beginning_of_year()","Rails activesupport::deprecation::behavior()","Rails activesupport::deprecation::behavior=()","Rails activerecord::associations::classmethods#belongs_to()","Rails activerecord::connectionadapters::table#belongs_to()","Rails activerecord::connectionadapters::tabledefinition#belongs_to()","Rails rails::initializable::initializer#belongs_to?()","Rails activesupport::benchmarkable#benchmark()","Rails activesupport::testing::performance::metrics::base#benchmark()","Rails railsenvironment#best_install_method()","Ruby comparable#between?()","Rails activesupport::timewithzone#between?()","Ruby unboundmethod#bind()","Rails activerecord::querymethods#bind()","Rails rails::initializable::initializer#bind()","Ruby kernel#binding()","Ruby proc#binding()","Ruby argf#binmode()","Ruby io#binmode()","Ruby argf#binmode?()","Ruby io#binmode?()","Ruby io::binread()","Ruby io::binwrite()","Rails activemodel::errors#blank?()","Rails falseclass#blank?()","Rails nilclass#blank?()","Rails object#blank?()","Rails string#blank?()","Rails trueclass#blank?()","Ruby file::stat#blksize()","Rails actionmailer::mailhelper#block_format()","Ruby kernel#block_given?()","Ruby file::blockdev?()","Ruby file::stat#blockdev?()","Ruby filetest#blockdev?()","Ruby file::stat#blocks()","Rails actiondispatch::request#body()","Rails actiondispatch::response#body()","Rails actiondispatch::response#body=()","Rails actiondispatch::response#body_parts()","Rails kernel#breakpoint()","Rails actioncontroller::middleware::build()","Rails actiondispatch::middlewarestack#build()","Rails actiondispatch::middlewarestack::middleware#build()","Rails actionview::resolver::path::build()","Rails activerecord::relation#build()","Rails activeresource::base::build()","Rails rails::generators::activemodel::build()","Rails rails::generators::appbase#build()","Rails activerecord::querymethods#build_arel()","Rails activesupport::cache::memcachestore::build_mem_cache()","Rails rails::application#build_original_fullpath()","Rails rails::generators::appbase#builder()","Rails rails::generators::appbase#bundle_command()","Rails actionview::helpers::formbuilder#button()","Rails actionview::helpers::formtaghelper#button_tag()","Rails actionview::helpers::urlhelper#button_to()","Rails actionview::helpers::javascripthelper#button_to_function()","Rails numeric#byte()","Ruby argf#bytes()","Ruby io#bytes()","Ruby random#bytes()","Ruby string#bytes()","Rails numeric#bytes()","Ruby string#bytesize()","Ruby string#byteslice()","Rails actioncontroller::caching#cache()","Rails actionview::helpers::cachehelper#cache()","Rails activerecord::connectionadapters::querycache#cache()","Rails activerecord::querycache::classmethods#cache()","Rails rails::cache()","Rails activerecord::attributemethods::read::classmethods#cache_attribute?()","Rails activerecord::attributemethods::read::classmethods#cache_attributes()","Rails activerecord::fixtures::cache_fixtures()","Rails activerecord::fixtures::cache_for_connection()","Rails activerecord::integration#cache_key()","Rails actioncontroller::caching::pages#cache_page()","Rails actioncontroller::caching::pages::classmethods#cache_page()","Rails actioncontroller::caching::configmethods#cache_store()","Rails actioncontroller::caching::configmethods#cache_store=()","Rails actionview::base::cache_template_loading()","Rails actionview::base::cache_template_loading=()","Rails activerecord::attributemethods::read::classmethods#cached_attributes()","Rails activerecord::fixtures::cached_fixtures()","Rails actioncontroller::caching::actions::classmethods#caches_action()","Rails actioncontroller::caching::pages::classmethods#caches_page()","Rails actioncontroller::caching#caching_allowed?()","Rails activerecord::calculations#calculate()","Rails actiondispatch::remoteip::getip#calculate_ip()","Ruby continuation#call()","Ruby method#call()","Ruby proc#call()","Rails actioncontroller::metal::call()","Rails actioncontroller::middleware::actionmiddleware#call()","Rails actioncontroller::responder::call()","Rails actiondispatch::beststandardssupport#call()","Rails actiondispatch::callbacks#call()","Rails actiondispatch::cookies#call()","Rails actiondispatch::debugexceptions#call()","Rails actiondispatch::filehandler#call()","Rails actiondispatch::flash#call()","Rails actiondispatch::head#call()","Rails actiondispatch::paramsparser#call()","Rails actiondispatch::publicexceptions#call()","Rails actiondispatch::reloader#call()","Rails actiondispatch::remoteip#call()","Rails actiondispatch::requestid#call()","Rails actiondispatch::rescue#call()","Rails actiondispatch::showexceptions#call()","Rails actiondispatch::static#call()","Rails actionview::template::handlers::builder#call()","Rails actionview::template::handlers::erb::call()","Rails actionview::template::handlers::erb#call()","Rails activerecord::connectionadapters::connectionmanagement#call()","Rails activerecord::identitymap::middleware#call()","Rails activerecord::querycache#call()","Rails activesupport::logsubscriber#call()","Rails i18n::exceptionhandler#call()","Rails logger::simpleformatter#call()","Rails rails::application#call()","Rails rails::engine#call()","Rails rails::rack::debugger#call()","Rails rails::rack::logtailer#call()","Rails rails::rack::logger#call()","Rails rails::rack::logger#call_app()","Ruby kernel#callcc()","Ruby kernel#caller()","Rails string#camelcase()","Rails activesupport::inflector#camelize()","Rails string#camelize()","Rails rails::generators::appgenerator#camelized()","Rails rails::generators::pluginnewgenerator#camelized()","Rails rails::generators::actions#capify!()","Ruby string#capitalize()","Ruby symbol#capitalize()","Rails activesupport::multibyte::chars#capitalize()","Ruby string#capitalize!()","Rails actionview::helpers::capturehelper#capture()","Rails kernel#capture()","Ruby matchdata#captures()","Rails activerecord::connectionadapters::abstractadapter#case_insensitive_comparison()","Rails activerecord::connectionadapters::abstractmysqladapter#case_insensitive_comparison()","Rails activerecord::connectionadapters::databasestatements#case_sensitive_equality_operator()","Rails activerecord::connectionadapters::abstractadapter#case_sensitive_modifier()","Rails activerecord::connectionadapters::abstractmysqladapter#case_sensitive_modifier()","Ruby string#casecmp()","Ruby symbol#casecmp()","Ruby regexp#casefold?()","Ruby kernel#catch()","Rails class#cattr_accessor()","Rails class#cattr_reader()","Rails class#cattr_writer()","Ruby math::cbrt()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#cdata_block()","Rails actionview::helpers::taghelper#cdata_section()","Ruby float#ceil()","Ruby integer#ceil()","Ruby numeric#ceil()","Ruby rational#ceil()","Ruby string#center()","Rails activesupport::multibyte::chars#center()","Rails activerecord::connectionadapters::table#change()","Rails date#change()","Rails datetime#change()","Rails time#change()","Rails activerecord::connectionadapters::postgresqladapter#change_column()","Rails activerecord::connectionadapters::schemastatements#change_column()","Rails activerecord::connectionadapters::abstractmysqladapter#change_column_default()","Rails activerecord::connectionadapters::postgresqladapter#change_column_default()","Rails activerecord::connectionadapters::schemastatements#change_column_default()","Rails activerecord::connectionadapters::abstractmysqladapter#change_column_null()","Rails activerecord::connectionadapters::postgresqladapter#change_column_null()","Rails activerecord::connectionadapters::sqliteadapter#change_column_null()","Rails activerecord::connectionadapters::abstractmysqladapter#change_column_sql()","Rails activerecord::connectionadapters::table#change_default()","Ruby process::gid::change_privilege()","Ruby process::uid::change_privilege()","Rails activerecord::connectionadapters::schemastatements#change_table()","Rails activemodel::dirty#changed()","Rails activemodel::dirty#changed?()","Rails activemodel::dirty#changed_attributes()","Rails activerecord::autosaveassociation#changed_for_autosave?()","Rails activemodel::dirty#changes()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#characters()","Ruby file::chardev?()","Ruby file::stat#chardev?()","Ruby filetest#chardev?()","Ruby argf#chars()","Ruby io#chars()","Ruby string#chars()","Rails activerecord::connectionadapters::abstractmysqladapter#charset()","Ruby dir::chdir()","Rails actionview::helpers::formbuilder#check_box()","Rails actionview::helpers::formhelper#check_box()","Rails actionview::helpers::instancetag::check_box_checked?()","Rails actionview::helpers::formtaghelper#check_box_tag()","Rails rails::generators::namedbase::check_class_collision()","Rails activemodel::eachvalidator#check_validity!()","Rails activemodel::validations::exclusionvalidator#check_validity!()","Rails activemodel::validations::formatvalidator#check_validity!()","Rails activemodel::validations::inclusionvalidator#check_validity!()","Rails activemodel::validations::lengthvalidator#check_validity!()","Rails activemodel::validations::numericalityvalidator#check_validity!()","Rails activerecord::connectionadapters::connectionpool#checkin()","Rails activerecord::connectionadapters::connectionpool#checkout()","Rails rails::paths::path#children()","Ruby file::chmod()","Ruby file#chmod()","Ruby kernel#chomp()","Ruby string#chomp()","Ruby string#chomp!()","Ruby kernel#chop()","Ruby string#chop()","Ruby string#chop!()","Ruby file#chown()","Ruby file::chown()","Ruby integer#chr()","Ruby string#chr()","Ruby dir::chroot()","Ruby enumerable#chunk()","Rails datetime::civil_from_format()","Ruby object#class()","Rails class#class_attribute()","Ruby module#class_eval()","Rails kernel#class_eval()","Ruby module#class_exec()","Rails activerecord::reflection::macroreflection#class_name()","Rails rails::generators::namedbase#class_name()","Rails activerecord::inheritance::classmethods#class_of_active_record_descendant()","Rails rails::generators::namedbase#class_path()","Ruby module#class_variable_defined?()","Ruby module#class_variable_get()","Ruby module#class_variable_set()","Ruby module#class_variables()","Rails activesupport::inflector#classify()","Rails string#classify()","Rails activesupport::backtracecleaner#clean()","Rails activesupport::cache::filestore#cleanup()","Rails activesupport::cache::memorystore#cleanup()","Rails activesupport::cache::nullstore#cleanup()","Rails activesupport::cache::store#cleanup()","Rails actiondispatch::reloader::cleanup!()","Ruby array#clear()","Ruby env::clear()","Ruby gc::profiler::clear()","Ruby hash#clear()","Ruby string#clear()","Rails actiondispatch::flash::flashhash#clear()","Rails activemodel::errors#clear()","Rails activerecord::connectionadapters::mysqladapter::statementpool#clear()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#clear()","Rails activerecord::connectionadapters::sqliteadapter::statementpool#clear()","Rails activerecord::connectionadapters::statementpool#clear()","Rails activerecord::identitymap::clear()","Rails activesupport::cache::filestore#clear()","Rails activesupport::cache::memcachestore#clear()","Rails activesupport::cache::memorystore#clear()","Rails activesupport::cache::nullstore#clear()","Rails activesupport::cache::store#clear()","Rails activesupport::cache::strategy::localcache::localstore#clear()","Rails activesupport::descendantstracker::clear()","Rails activesupport::inflector::inflections#clear()","Rails activesupport::orderedhash#clear()","Rails activerecord::connectionadapters::schemacache#clear!()","Rails activesupport::dependencies::classcache#clear!()","Rails abstractcontroller::base::clear_action_methods!()","Rails activerecord::base::clear_active_connections!()","Rails activerecord::connectionadapters::connectionhandler#clear_active_connections!()","Rails activerecord::connectionadapters::connectionhandler#clear_all_connections!()","Rails actionview::resolver#clear_cache()","Rails activerecord::connectionadapters::abstractadapter#clear_cache!()","Rails activerecord::connectionadapters::connectionpool#clear_cache!()","Rails activerecord::connectionadapters::mysqladapter#clear_cache!()","Rails activerecord::connectionadapters::postgresqladapter#clear_cache!()","Rails activerecord::connectionadapters::sqliteadapter#clear_cache!()","Rails abstractcontroller::helpers::classmethods#clear_helpers()","Rails activerecord::connectionadapters::querycache#clear_query_cache()","Rails activerecord::connectionadapters::connectionhandler#clear_reloadable_connections!()","Rails activerecord::connectionadapters::connectionpool#clear_reloadable_connections!()","Rails actioncontroller::mimeresponds::classmethods#clear_respond_to()","Rails activerecord::connectionadapters::connectionpool#clear_stale_cached_connections!()","Rails activerecord::connectionadapters::schemacache#clear_table_cache!()","Rails activesupport::taggedlogging#clear_tags!()","Rails activerecord::connectionadapters::mysqladapter#client_encoding()","Rails activerecord::connectionadapters::postgresqladapter#client_min_messages()","Rails activerecord::connectionadapters::postgresqladapter#client_min_messages=()","Ruby method#clone()","Ruby object#clone()","Ruby unboundmethod#clone()","Rails activeresource::base#clone()","Rails activesupport::safebuffer#clone_empty()","Ruby argf#close()","Ruby dir#close()","Ruby io#close()","Rails actiondispatch::bodyproxy#close()","Rails actiondispatch::response#close()","Rails activerecord::connectionadapters::abstractadapter#close()","Rails activesupport::bufferedlogger#close()","Rails activesupport::gzip::stream#close()","Ruby io#close_on_exec=()","Ruby io#close_on_exec?()","Ruby io#close_read()","Ruby io#close_write()","Ruby argf#closed?()","Ruby io#closed?()","Rails actiondispatch::bodyproxy#closed?()","Rails actiondispatch::response#code()","Ruby argf#codepoints()","Ruby io#codepoints()","Ruby string#codepoints()","Ruby bignum#coerce()","Ruby float#coerce()","Ruby numeric#coerce()","Rails activerecord::connectionadapters::abstractmysqladapter#collation()","Ruby array#collect()","Ruby enumerable#collect()","Ruby array#collect!()","Ruby enumerable#collect_concat()","Rails actiondispatch::routing::mapper::resources#collection()","Rails activeresource::base::collection_name()","Rails activeresource::base#collection_path()","Rails activeresource::base::collection_path()","Rails actionview::helpers::formbuilder#collection_select()","Rails actionview::helpers::formoptionshelper#collection_select()","Rails activesupport::logsubscriber#color()","Rails rails::application::configuration#colorize_logging()","Rails rails::application::configuration#colorize_logging=()","Rails activerecord::connectionadapters::table#column()","Rails activerecord::connectionadapters::tabledefinition#column()","Rails activerecord::modelschema::classmethods#column_defaults()","Rails activerecord::connectionadapters::schemastatements#column_exists?()","Rails activerecord::connectionadapters::table#column_exists?()","Rails activerecord::connectionadapters::databaselimits#column_name_length()","Rails activerecord::modelschema::classmethods#column_names()","Rails activerecord::connectionadapters::connectionpool#columns()","Rails activerecord::connectionadapters::postgresqladapter#columns()","Rails activerecord::connectionadapters::schemastatements#columns()","Rails activerecord::modelschema::classmethods#columns()","Rails activerecord::connectionadapters::schemastatements#columns_for_remove()","Rails activerecord::connectionadapters::connectionpool#columns_hash()","Rails activerecord::modelschema::classmethods#columns_hash()","Rails activerecord::connectionadapters::databaselimits#columns_per_multicolumn_index()","Rails activerecord::connectionadapters::databaselimits#columns_per_table()","Ruby array#combination()","Rails rails::generators::appbase#comment_if()","Rails activerecord::connectionadapters::databasestatements#commit_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter#commit_db_transaction()","Rails activerecord::connectionadapters::databasestatements#commit_transaction_records()","Ruby array#compact()","Ruby array#compact!()","Rails activesupport::timewithzone#comparable_time()","Ruby hash#compare_by_identity()","Ruby hash#compare_by_identity?()","Rails time#compare_with_coercion()","Rails time#compare_without_coercion()","Ruby encoding::compatible?()","Ruby regexp::compile()","Ruby rubyvm::instructionsequence::compile()","Rails sprockets::staticcompiler#compile()","Ruby rubyvm::instructionsequence::compile_file()","Rails activesupport::configurable::configuration::compile_methods!()","Rails activesupport::configurable::configuration#compile_methods!()","Ruby rubyvm::instructionsequence::compile_option()","Ruby rubyvm::instructionsequence::compile_option=()","Rails rails::application::configuration#compiled_asset_path()","Rails activesupport::multibyte::chars#compose()","Rails activesupport::multibyte::unicode#compose_codepoints()","Rails activerecord::aggregations::classmethods#composed_of()","Rails activesupport::gzip::compress()","Rails activesupport::cache::entry#compressed?()","Rails rails::rack::logger#compute_tags()","Rails activerecord::inheritance::classmethods#compute_type()","Ruby array#concat()","Ruby string#concat()","Rails actionview::helpers::texthelper#concat()","Rails activesupport::safebuffer#concat()","Rails abstractcontroller::layouts#conditional_layout?()","Rails abstractcontroller::layouts::classmethods::layoutconditions#conditional_layout?()","Rails actionview::testcase::behavior#config()","Rails activesupport::configurable#config()","Rails activesupport::configurable::classmethods#config()","Rails rails::appbuilder#config()","Rails rails::engine#config()","Rails rails::plugin#config()","Rails rails::pluginbuilder#config()","Rails rails::railtie#config()","Rails sprockets::helpers::isolatedhelper#config()","Rails activesupport::configurable::classmethods#config_accessor()","Rails rails::appbuilder#configru()","Rails rails::configuration()","Rails activerecord::base::configurations()","Rails activesupport::configurable::classmethods#configure()","Rails rails::railtie::configurable::classmethods#configure()","Ruby complex#conj()","Ruby numeric#conj()","Ruby complex#conjugate()","Ruby numeric#conjugate()","Rails activerecord::base::connected?()","Rails activerecord::connectionadapters::connectionhandler#connected?()","Rails activerecord::connectionadapters::connectionpool#connected?()","Rails activerecord::base#connection()","Rails activerecord::base::connection()","Rails activerecord::connectionadapters::connectionpool#connection()","Rails activerecord::migration#connection()","Rails activerecord::sessionstore::sqlbypass::connection()","Rails activeresource::base#connection()","Rails activeresource::base::connection()","Rails activerecord::base::connection_config()","Rails activerecord::base::connection_handler()","Rails activerecord::base::connection_id()","Rails activerecord::base::connection_id=()","Rails activerecord::base::connection_pool()","Rails activerecord::sessionstore::sqlbypass::connection_pool()","Rails rails::infocontroller#consider_all_requests_local?()","Rails rails::railtie::console()","Ruby module#const_defined?()","Ruby module#const_get()","Ruby module#const_missing()","Ruby module#const_set()","Rails activesupport::inflector#constantize()","Rails string#constantize()","Ruby module::constants()","Ruby module#constants()","Rails actiondispatch::routing::mapper::scoping#constraints()","Rails activerecord::findermethods#construct_join_dependency_for_association_find()","Rails activerecord::findermethods#construct_limited_ids_condition()","Rails activerecord::findermethods#construct_relation_for_association_calculations()","Rails activerecord::findermethods#construct_relation_for_association_find()","Rails activesupport::multibyte::chars::consumes?()","Rails html::whitelistsanitizer#contains_bad_protocols?()","Rails activerecord::modelschema::classmethods#content_columns()","Rails actionview::helpers::capturehelper#content_for()","Rails actionview::helpers::capturehelper#content_for?()","Rails actiondispatch::request#content_length()","Rails actiondispatch::http::mimenegotiation#content_mime_type()","Rails actionview::helpers::taghelper#content_tag()","Rails actionview::helpers::recordtaghelper#content_tag_for()","Rails actioncontroller::metal#content_type()","Rails actiondispatch::http::mimenegotiation#content_type()","Rails actioncontroller::metal#content_type=()","Rails actiondispatch::routing::mapper::scoping#controller()","Rails rails::consolemethods#controller()","Rails sprockets::helpers::isolatedhelper#controller()","Rails actioncontroller::testcase::behavior::classmethods#controller_class()","Rails actioncontroller::testcase::behavior::classmethods#controller_class=()","Rails rails::generators::resourcehelpers#controller_class_name()","Rails rails::generators::resourcehelpers#controller_class_path()","Rails rails::generators::resourcehelpers#controller_file_name()","Rails rails::generators::resourcehelpers#controller_file_path()","Rails rails::generators::resourcehelpers#controller_i18n_scope()","Rails actioncontroller::metal::controller_name()","Rails actioncontroller::metal#controller_name()","Rails abstractcontroller::base::controller_path()","Rails abstractcontroller::base#controller_path()","Rails actionmailer::base::controller_path()","Rails actionview::testcase::testcontroller#controller_path=()","Ruby encoding::converter#convert()","Rails rails::generators::appbase#convert_database_option_for_jruby()","Rails activesupport::hashwithindifferentaccess#convert_key()","Rails activesupport::hashwithindifferentaccess#convert_key()","Rails actionview::helpers::formhelper#convert_to_model()","Rails activesupport::hashwithindifferentaccess#convert_value()","Rails activesupport::hashwithindifferentaccess#convert_value()","Ruby encoding::converter#convpath()","Rails actiondispatch::request#cookie_jar()","Rails actiondispatch::integration::session#cookies()","Rails actiondispatch::response#cookies()","Rails actiondispatch::testprocess#cookies()","Rails actiondispatch::testrequest#cookies()","Rails activerecord::migration#copy()","Rails js::generators::assetsgenerator#copy_javascript()","Ruby io::copy_stream()","Rails css::generators::assetsgenerator#copy_stylesheet()","Rails css::generators::scaffoldgenerator#copy_stylesheet()","Rails erb::generators::controllergenerator#copy_view_files()","Rails erb::generators::scaffoldgenerator#copy_view_files()","Ruby process::status#coredump?()","Ruby math::cos()","Ruby math::cosh()","Ruby array#count()","Ruby enumerable#count()","Ruby gc::count()","Ruby string#count()","Rails activemodel::errors#count()","Rails activerecord::calculations#count()","Rails activerecord::querying#count_by_sql()","Ruby objectspace::count_objects()","Rails activemodel::observing::classmethods#count_observers()","Ruby range#cover?()","Rails activerecord::connectionadapters::mysql2adapter#create()","Rails activerecord::persistence::classmethods#create()","Rails activerecord::relation#create()","Rails activeresource::base#create()","Rails activeresource::base::create()","Rails activesupport::cache::entry::create()","Rails activesupport::timezone::create()","Rails activerecord::relation#create!()","Rails activerecord::validations::classmethods#create!()","Rails rails::generators::appgenerator#create_active_record_files()","Rails rails::generators::appgenerator#create_app_files()","Rails rails::generators::pluginnewgenerator#create_app_files()","Rails rails::generators::appgenerator#create_boot_file()","Rails activesupport::multibyte::unicode::databasegenerator#create_composition_map()","Rails rails::generators::appgenerator#create_config_files()","Rails rails::generators::pluginnewgenerator#create_config_files()","Rails rails::generators::controllergenerator#create_controller_files()","Rails rails::generators::scaffoldcontrollergenerator#create_controller_files()","Rails activerecord::connectionadapters::abstractmysqladapter#create_database()","Rails activerecord::connectionadapters::postgresqladapter#create_database()","Rails rails::generators::appgenerator#create_db_files()","Rails rails::generators::appgenerator#create_doc_files()","Rails rails::generators::pluginnewgenerator#create_dummy_app()","Rails testunit::generators::modelgenerator#create_fixture_file()","Rails activerecord::fixtures::create_fixtures()","Rails object#create_fixtures()","Rails rails::generators::testcase#create_generated_attribute()","Rails rails::generators::generatorgenerator#create_generator_files()","Rails rails::generators::helpergenerator#create_helper_files()","Rails testunit::generators::helpergenerator#create_helper_files()","Rails rails::generators::pluginnewgenerator#create_images_directory()","Rails rails::generators::pluginnewgenerator#create_javascript_files()","Rails rails::generators::appgenerator#create_lib_files()","Rails rails::generators::pluginnewgenerator#create_lib_files()","Rails rails::generators::appgenerator#create_log_files()","Rails rails::generators::mailergenerator#create_mailer_file()","Rails activerecord::generators::migrationgenerator#create_migration_file()","Rails activerecord::generators::modelgenerator#create_migration_file()","Rails activerecord::generators::sessionmigrationgenerator#create_migration_file()","Rails activerecord::generators::modelgenerator#create_model_file()","Rails activerecord::generators::modelgenerator#create_module_file()","Rails activerecord::generators::observergenerator#create_observer_file()","Rails activesupport::testing::performance::profiler#create_path_and_open_file()","Rails rails::generators::appgenerator#create_public_files()","Rails rails::generators::pluginnewgenerator#create_public_stylesheets_files()","Rails activerecord::reflection::classmethods#create_reflection()","Rails rails::generators::appbase#create_root()","Rails rails::generators::appgenerator#create_root_files()","Rails rails::generators::pluginnewgenerator#create_root_files()","Rails erb::generators::scaffoldgenerator#create_root_folder()","Rails activerecord::connectionadapters::abstractadapter#create_savepoint()","Rails activerecord::connectionadapters::abstractmysqladapter#create_savepoint()","Rails activerecord::connectionadapters::postgresqladapter#create_savepoint()","Rails activerecord::connectionadapters::sqliteadapter#create_savepoint()","Rails rails::generators::appgenerator#create_script_files()","Rails rails::generators::pluginnewgenerator#create_script_files()","Rails activerecord::connectionadapters::schemastatements#create_table()","Rails rails::generators::taskgenerator#create_task_files()","Rails rails::generators::pluginnewgenerator#create_test_dummy_files()","Rails testunit::generators::modelgenerator#create_test_file()","Rails rails::generators::appgenerator#create_test_files()","Rails rails::generators::pluginnewgenerator#create_test_files()","Rails testunit::generators::controllergenerator#create_test_files()","Rails testunit::generators::integrationgenerator#create_test_files()","Rails testunit::generators::mailergenerator#create_test_files()","Rails testunit::generators::observergenerator#create_test_files()","Rails testunit::generators::performancegenerator#create_test_files()","Rails testunit::generators::plugingenerator#create_test_files()","Rails testunit::generators::scaffoldgenerator#create_test_files()","Rails rails::generators::appgenerator#create_tmp_files()","Rails rails::generators::appgenerator#create_vendor_files()","Rails activerecord::querymethods#create_with()","Rails activerecord::dynamicfindermatch#creator?()","Ruby string#crypt()","Rails actionview::helpers::csrfhelper#csrf_meta_tag()","Rails actionview::helpers::csrfhelper#csrf_meta_tags()","Rails actiondispatch::assertions::selectorassertions#css_select()","Ruby file::ctime()","Ruby file#ctime()","Ruby file::stat#ctime()","Ruby time#ctime()","Ruby fiber::current()","Ruby thread::current()","Rails date::current()","Rails datetime::current()","Rails time::current()","Rails actionview::helpers::texthelper#current_cycle()","Rails activerecord::connectionadapters::abstractmysqladapter#current_database()","Rails activerecord::connectionadapters::postgresqladapter#current_database()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#current_hash()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#current_hash()","Rails actionview::helpers::urlhelper#current_page?()","Rails activerecord::connectionadapters::abstractadapter#current_savepoint_name()","Rails activerecord::connectionadapters::postgresqladapter#current_schema()","Ruby proc#curry()","Rails actionmailer::collector#custom()","Rails actionview::helpers::assettaghelper::assetincludetag#custom_dir()","Rails actionview::helpers::assettaghelper::javascriptincludetag#custom_dir()","Rails actionview::helpers::assettaghelper::stylesheetincludetag#custom_dir()","Rails activeresource::custommethods::classmethods#custom_method_collection_url()","Ruby array#cycle()","Ruby enumerable#cycle()","Rails actionview::helpers::texthelper#cycle()","Ruby process::daemon()","Rails process::daemon()","Rails activerecord::attributemethods::classmethods#dangerous_attribute_method?()","Rails activerecord::attributemethods::primarykey::classmethods#dangerous_attribute_method?()","Rails activesupport::inflector#dasherize()","Rails string#dasherize()","Rails activerecord::sessionstore::session#data()","Rails activerecord::sessionstore::sqlbypass#data()","Rails activerecord::sessionstore::sqlbypass::data_column()","Rails activerecord::sessionstore::session::data_column_name()","Rails activerecord::sessionstore::sqlbypass::data_column_name()","Rails activerecord::sessionstore::session::data_column_size_limit()","Rails rails::application::configuration#database_configuration()","Rails rails::generators::appbase#database_gemfile_entry()","Rails rails::appbuilder#database_yml()","Rails actionview::helpers::datehelper#date_select()","Rails actionview::helpers::formbuilder#date_select()","Rails actionview::helpers::datehelper#datetime_select()","Rails actionview::helpers::formbuilder#datetime_select()","Ruby time#day()","Rails numeric#day()","Rails numeric#days()","Rails time::days_in_month()","Rails date#days_to_week_start()","Rails time#days_to_week_start()","Rails rails::appbuilder#db()","Rails actionview::helpers::debughelper#debug()","Rails activemodel::massassignmentsecurity::sanitizer#debug_protected_attribute_removal()","Rails kernel#debugger()","Rails activeresource::formats::jsonformat#decode()","Rails activeresource::formats::xmlformat#decode()","Rails activesupport::json::decode()","Rails activesupport::base64::decode64()","Rails base64::decode64()","Rails actioncontroller::httpauthentication::basic#decode_credentials()","Rails actioncontroller::httpauthentication::digest#decode_credentials()","Rails actioncontroller::httpauthentication::digest#decode_credentials_header()","Rails activesupport::multibyte::chars#decompose()","Rails activesupport::multibyte::unicode#decompose_codepoints()","Rails activesupport::gzip::decompress()","Rails activesupport::inflector#deconstantize()","Rails string#deconstantize()","Rails activerecord::persistence#decrement()","Rails activesupport::cache::filestore#decrement()","Rails activesupport::cache::memorystore#decrement()","Rails activesupport::cache::nullstore#decrement()","Rails activesupport::cache::store#decrement()","Rails activerecord::persistence#decrement!()","Rails activerecord::countercache#decrement_counter()","Rails activerecord::connectionadapters::abstractadapter#decrement_open_transactions()","Rails activesupport::messageencryptor#decrypt()","Rails activesupport::messageencryptor#decrypt_and_verify()","Rails hash#deep_dup()","Rails hash#deep_merge()","Rails hash#deep_merge!()","Rails actiondispatch::request#deep_munge()","Ruby hash#default()","Rails actionmailer::base::default()","Rails activesupport::hashwithindifferentaccess#default()","Rails activesupport::hashwithindifferentaccess#default()","Rails rails::generators::generatedattribute#default()","Rails railsenvironment::default()","Ruby hash#default=()","Rails railsenvironment::default=()","Rails actioncontroller::responder#default_action()","Rails rails::generators::base::default_aliases_for_option()","Rails actioncontroller::compatibility::default_charset=()","Ruby encoding::default_external()","Ruby encoding::default_external=()","Rails rails::generators::base::default_for_option()","Rails rails::generators::base::default_generator_root()","Rails date#default_inspect()","Rails datetime#default_inspect()","Ruby encoding::default_internal()","Ruby encoding::default_internal=()","Rails rails::application#default_middleware_stack()","Rails rails::engine#default_middleware_stack()","Rails rails::server#default_options()","Rails activerecord::connectionadapters::sqliteadapter#default_primary_key_type()","Ruby hash#default_proc()","Ruby hash#default_proc=()","Rails actioncontroller::implicitrender#default_render()","Rails actioncontroller::responder#default_render()","Rails activerecord::scoping::default::classmethods#default_scope()","Rails activerecord::connectionadapters::databasestatements#default_sequence_name()","Rails rails::generators::base::default_source_root()","Rails activerecord::base::default_timezone()","Rails actiondispatch::integration::runner#default_url_options()","Rails actiondispatch::routing::mapper::base#default_url_options()","Rails actiondispatch::integration::runner#default_url_options=()","Rails actiondispatch::routing::mapper::base#default_url_options=()","Rails rails::generators::base::default_value_for_option()","Rails actiondispatch::routing::mapper::scoping#defaults()","Rails activerecord::schema::define()","Rails activemodel::attributemethods::classmethods#define_attribute_method()","Rails activemodel::attributemethods::classmethods#define_attribute_methods()","Rails activerecord::attributemethods::classmethods#define_attribute_methods()","Rails activerecord::observer#define_callbacks()","Rails activesupport::callbacks::classmethods#define_callbacks()","Ruby objectspace::define_finalizer()","Rails activerecord::attributemethods::deprecatedunderscoreread::classmethods#define_method__attribute()","Rails activerecord::attributemethods::primarykey::classmethods#define_method_attribute()","Rails activerecord::attributemethods::read::classmethods#define_method_attribute()","Rails activerecord::attributemethods::timezoneconversion::classmethods#define_method_attribute=()","Rails activerecord::attributemethods::write::classmethods#define_method_attribute=()","Rails activemodel::callbacks#define_model_callbacks()","Ruby object#define_singleton_method()","Rails rails::generators::appgenerator#defined_app_const_base()","Rails rails::generators::appgenerator#defined_app_const_base?()","Rails rails::generators::appgenerator#defined_app_name()","Rails module#delegate()","Rails activerecord::delegation::delegate_to_scoped_klass()","Ruby array#delete()","Ruby dir::delete()","Ruby env::delete()","Ruby file::delete()","Ruby hash#delete()","Ruby string#delete()","Rails actioncontroller::testcase::behavior#delete()","Rails actiondispatch::flash::flashhash#delete()","Rails actiondispatch::integration::requesthelpers#delete()","Rails actiondispatch::middlewarestack#delete()","Rails actiondispatch::routing::mapper::httphelpers#delete()","Rails activemodel::errors#delete()","Rails activerecord::connectionadapters::databasestatements#delete()","Rails activerecord::connectionadapters::mysqladapter::statementpool#delete()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#delete()","Rails activerecord::connectionadapters::statementpool#delete()","Rails activerecord::persistence#delete()","Rails activerecord::relation#delete()","Rails activeresource::base::delete()","Rails activeresource::connection#delete()","Rails activeresource::custommethods::delete()","Rails activeresource::custommethods#delete()","Rails activesupport::cache::store#delete()","Rails activesupport::hashwithindifferentaccess#delete()","Rails activesupport::hashwithindifferentaccess#delete()","Rails activesupport::orderedhash#delete()","Ruby string#delete!()","Rails actiondispatch::request#delete?()","Rails activerecord::relation#delete_all()","Ruby array#delete_at()","Rails actiondispatch::response#delete_cookie()","Rails activesupport::cache::filestore#delete_entry()","Rails activesupport::cache::strategy::localcache::localstore#delete_entry()","Ruby array#delete_if()","Ruby env::delete_if()","Ruby hash#delete_if()","Rails activesupport::orderedhash#delete_if()","Rails activesupport::cache::filestore#delete_matched()","Rails activesupport::cache::memorystore#delete_matched()","Rails activesupport::cache::nullstore#delete_matched()","Rails activesupport::cache::store#delete_matched()","Rails activeresource::httpmock::delete_responses_to_replace()","Rails activerecord::connectionadapters::databasestatements#delete_sql()","Rails actiondispatch::integration::requesthelpers#delete_via_redirect()","Rails actionmailer::logsubscriber#deliver()","Rails activesupport::inflector#demodulize()","Rails string#demodulize()","Ruby complex#denominator()","Ruby float#denominator()","Ruby integer#denominator()","Ruby numeric#denominator()","Ruby rational#denominator()","Rails activemodel::massassignmentsecurity::blacklist#deny?()","Rails activemodel::massassignmentsecurity::permissionset#deny?()","Rails activemodel::massassignmentsecurity::whitelist#deny?()","Rails module#deprecate()","Rails activesupport::deprecation::deprecate_methods()","Rails activesupport::deprecation::deprecated_method_warning()","Rails rails::generators::base::desc()","Rails rails::subtesttask#desc()","Rails activesupport::descendantstracker#descendants()","Rails activesupport::descendantstracker::descendants()","Rails activerecord::inheritance::classmethods#descends_from_active_record?()","Rails activesupport::testing::declarative::describe()","Rails rails::generators::testcase::destination()","Ruby encoding::converter#destination_encoding()","Ruby encoding::invalidbytesequenceerror#destination_encoding()","Ruby encoding::undefinedconversionerror#destination_encoding()","Ruby encoding::invalidbytesequenceerror#destination_encoding_name()","Ruby encoding::undefinedconversionerror#destination_encoding_name()","Rails actiondispatch::session::destroyablesession#destroy()","Rails activerecord::persistence#destroy()","Rails activerecord::relation#destroy()","Rails activerecord::sessionstore::sqlbypass#destroy()","Rails activeresource::base#destroy()","Rails rails::generators::activemodel#destroy()","Rails activerecord::relation#destroy_all()","Rails actiondispatch::session::cachestore#destroy_session()","Rails activerecord::persistence#destroyed?()","Ruby process::detach()","Rails actionview::lookupcontext::viewpaths#detail_args_for()","Rails abstractcontroller::viewpaths#details_for_lookup()","Ruby enumerable#detect()","Rails actioncontroller::testcase::behavior::classmethods#determine_default_controller_class()","Rails actionview::testcase::behavior::classmethods#determine_default_helper_class()","Rails actionmailer::testcase::behavior::classmethods#determine_default_mailer()","Rails rails::commands::install#determine_install_method()","Ruby file::stat#dev()","Ruby file::stat#dev_major()","Ruby file::stat#dev_minor()","Rails hash#diff()","Rails activesupport::descendantstracker#direct_descendants()","Rails activesupport::descendantstracker::direct_descendants()","Ruby file::directory?()","Ruby file::stat#directory?()","Ruby filetest#directory?()","Ruby file::dirname()","Rails activesupport::multibyte::unicode::unicodedatabase::dirname()","Rails activerecord::connectionadapters::querycache::dirties_query_cache()","Ruby gc::disable()","Ruby gc::profiler::disable()","Rails activemodel::observerarray#disable()","Rails actionview::lookupcontext::detailscache#disable_cache()","Rails activerecord::connectionadapters::querycache#disable_query_cache!()","Rails activerecord::connectionadapters::abstractadapter#disable_referential_integrity()","Rails activemodel::observer#disabled_for?()","Rails activemodel::observerarray#disabled_for?()","Rails activemodel::observerarray#disabled_observer_stack()","Rails activemodel::observerarray#disabled_observers()","Ruby rubyvm::instructionsequence::disasm()","Ruby rubyvm::instructionsequence#disasm()","Ruby rubyvm::instructionsequence::disassemble()","Ruby rubyvm::instructionsequence#disassemble()","Rails actiondispatch::flash::flashhash#discard()","Rails activerecord::connectionadapters::abstractadapter#disconnect!()","Rails activerecord::connectionadapters::connectionpool#disconnect!()","Rails activerecord::connectionadapters::mysql2adapter#disconnect!()","Rails activerecord::connectionadapters::mysqladapter#disconnect!()","Rails activerecord::connectionadapters::postgresqladapter#disconnect!()","Rails activerecord::connectionadapters::sqliteadapter#disconnect!()","Rails actioncontroller::rackdelegation#dispatch()","Ruby object#display()","Rails actioncontroller::responder#display()","Rails sourceannotationextractor#display()","Rails actioncontroller::responder#display_errors()","Rails actionview::helpers::datehelper#distance_of_time_in_words()","Rails actionview::helpers::datehelper#distance_of_time_in_words_to_now()","Rails activerecord::connectionadapters::schemastatements#distinct()","Ruby bignum#div()","Ruby fixnum#div()","Ruby numeric#div()","Rails actionview::helpers::recordtaghelper#div_for()","Ruby bignum#divmod()","Ruby fixnum#divmod()","Ruby float#divmod()","Ruby numeric#divmod()","Rails rails::appbuilder#doc()","Rails actioncontroller::recordidentifier#dom_class()","Rails actioncontroller::recordidentifier#dom_id()","Rails actiondispatch::http::url#domain()","Rails activerecord::migration#down()","Ruby string#downcase()","Ruby symbol#downcase()","Rails activesupport::multibyte::chars#downcase()","Ruby string#downcase!()","Rails recursivehttpfetcher#download()","Ruby integer#downto()","Ruby array#drop()","Ruby enumerable#drop()","Rails activerecord::connectionadapters::schemastatements#drop_table()","Ruby array#drop_while()","Ruby enumerable#drop_while()","Ruby time#dst?()","Rails activesupport::timewithzone#dst?()","Ruby encoding#dummy?()","Rails rails::generators::pluginnewgenerator#dummy_path()","Ruby marshal::dump()","Ruby string#dump()","Rails activesupport::multibyte::unicode::databasegenerator#dump_to()","Ruby object#dup()","Rails activeresource::base#dup()","Rails activesupport::hashwithindifferentaccess#dup()","Rails activesupport::hashwithindifferentaccess#dup()","Rails bigdecimal#duplicable?()","Rails class#duplicable?()","Rails falseclass#duplicable?()","Rails module#duplicable?()","Rails nilclass#duplicable?()","Rails numeric#duplicable?()","Rails object#duplicable?()","Rails symbol#duplicable?()","Rails trueclass#duplicable?()","Ruby argf#each()","Ruby array#each()","Ruby dir#each()","Ruby env::each()","Ruby enumerator#each()","Ruby hash#each()","Ruby io#each()","Ruby range#each()","Ruby struct#each()","Rails actiondispatch::flash::flashhash#each()","Rails actiondispatch::middlewarestack#each()","Rails activemodel::errors#each()","Rails activerecord::connectionadapters::mysqladapter::statementpool#each()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#each()","Rails activerecord::connectionadapters::sqliteadapter::statementpool#each()","Rails activerecord::connectionadapters::statementpool#each()","Rails activerecord::fixtures#each()","Rails activerecord::fixtures::file#each()","Rails activerecord::result#each()","Rails activesupport::dependencies::watchstack#each()","Rails activesupport::orderedhash#each()","Ruby argf#each_byte()","Ruby io#each_byte()","Ruby string#each_byte()","Ruby argf#each_char()","Ruby io#each_char()","Ruby string#each_char()","Ruby argf#each_codepoint()","Ruby io#each_codepoint()","Ruby string#each_codepoint()","Ruby enumerable#each_cons()","Ruby enumerable#each_entry()","Ruby array#each_index()","Ruby env::each_key()","Ruby hash#each_key()","Rails activesupport::orderedhash#each_key()","Ruby argf#each_line()","Ruby io#each_line()","Ruby string#each_line()","Ruby objectspace::each_object()","Ruby env::each_pair()","Ruby hash#each_pair()","Ruby struct#each_pair()","Rails activesupport::orderedhash#each_pair()","Ruby enumerable#each_slice()","Rails activemodel::observerarray#each_subclass_array()","Ruby env::each_value()","Ruby hash#each_value()","Rails activesupport::orderedhash#each_value()","Ruby enumerable#each_with_index()","Ruby enumerator#each_with_index()","Ruby enumerable#each_with_object()","Ruby enumerator#each_with_object()","Rails enumerable#each_with_object()","Rails activesupport::autoload#eager_autoload()","Rails activesupport::autoload::eager_autoload!()","Rails activerecord::querymethods#eager_load()","Rails rails::paths::root#eager_load()","Rails rails::engine#eager_load!()","Rails rails::railtie#eager_load!()","Rails rails::engine::configuration#eager_load_paths()","Rails activerecord::relation#eager_loading?()","Ruby process::egid()","Ruby process::egid=()","Ruby process::gid::eid()","Ruby process::uid::eid()","Rails activeresource::base::element_name()","Rails activeresource::base#element_path()","Rails activeresource::base::element_path()","Rails actionview::helpers::formhelper#email_field()","Rails actionview::helpers::formtaghelper#email_field_tag()","Rails actionview::helpers::formbuilder#emitted_hidden_id?()","Ruby array#empty?()","Ruby env::empty?()","Ruby hash#empty?()","Ruby string#empty?()","Ruby symbol#empty?()","Rails actiondispatch::flash::flashhash#empty?()","Rails activemodel::errors#empty?()","Rails activerecord::relation#empty?()","Rails activesupport::dependencies::classcache#empty?()","Rails rails::generators::appbase#empty_directory_with_gitkeep()","Rails activerecord::connectionadapters::databasestatements#empty_insert_statement_value()","Rails activerecord::connectionadapters::sqliteadapter#empty_insert_statement_value()","Rails activerecord::connectionadapters::abstractmysqladapter::emulate_booleans()","Ruby gc::enable()","Ruby gc::profiler::enable()","Rails activemodel::observerarray#enable()","Rails activerecord::connectionadapters::querycache#enable_query_cache!()","Rails kernel#enable_warnings()","Rails activerecord::identitymap::enabled()","Rails activerecord::identitymap::enabled=()","Ruby gc::profiler::enabled?()","Rails activerecord::identitymap::enabled?()","Ruby threadgroup#enclose()","Ruby threadgroup#enclosed?()","Ruby string#encode()","Rails activeresource::base#encode()","Rails activeresource::formats::jsonformat#encode()","Rails activeresource::formats::xmlformat#encode()","Rails activesupport::json::encode()","Rails activesupport::json::encoding::encoder#encode()","Ruby string#encode!()","Rails actionview::template#encode!()","Rails activesupport::base64::encode64()","Rails base64::encode64()","Rails activesupport::base64::encode64s()","Rails actioncontroller::httpauthentication::basic#encode_credentials()","Rails actioncontroller::httpauthentication::digest#encode_credentials()","Rails actioncontroller::httpauthentication::token#encode_credentials()","Rails activesupport::json::variable#encode_json()","Rails falseclass#encode_json()","Rails hash#encode_json()","Rails nilclass#encode_json()","Rails numeric#encode_json()","Rails string#encode_json()","Rails trueclass#encode_json()","Rails activerecord::base#encode_with()","Rails activesupport::orderedhash#encode_with()","Rails activesupport::safebuffer#encode_with()","Rails activesupport::timewithzone#encode_with()","Rails bigdecimal#encode_with()","Ruby regexp#encoding()","Ruby string#encoding()","Ruby symbol#encoding()","Rails activerecord::connectionadapters::postgresqladapter#encoding()","Rails rails::application::configuration#encoding=()","Rails string#encoding_aware?()","Rails activesupport::messageencryptor#encrypt()","Rails activesupport::messageencryptor#encrypt_and_sign()","Ruby matchdata#end()","Ruby range#end()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#end_document()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#end_element()","Rails date#end_of_day()","Rails datetime#end_of_day()","Rails time#end_of_day()","Rails datetime#end_of_hour()","Rails time#end_of_hour()","Rails date#end_of_month()","Rails time#end_of_month()","Rails date#end_of_quarter()","Rails time#end_of_quarter()","Rails date#end_of_week()","Rails time#end_of_week()","Rails date#end_of_year()","Rails time#end_of_year()","Rails activemodel::observerarray#end_transaction()","Ruby string#end_with?()","Rails rails::engine::endpoint()","Rails rails::engine#endpoint()","Rails activesupport::json::engine()","Rails activesupport::json::engine=()","Rails rails::engine::railties::engines()","Rails activerecord::testfixtures#enlist_fixture_connections()","Ruby dir::entries()","Ruby enumerable#entries()","Rails actionview::helpers::atomfeedhelper::atomfeedbuilder#entry()","Ruby object#enum_for()","Rails sourceannotationextractor::enumerate()","Rails actioncontroller::metal#env()","Rails rails::env()","Rails rails::env=()","Rails rails::application#env_config()","Rails rails::engine#env_config()","Rails actiondispatch::http::filterparameters#env_filter()","Rails activesupport::testing::performance::benchmarker#environment()","Rails rails::generators::actions#environment()","Rails rails::commands::plugin#environment=()","Ruby argf#eof()","Ruby io#eof()","Ruby argf#eof?()","Ruby io#eof?()","Ruby array#eql?()","Ruby bignum#eql?()","Ruby float#eql?()","Ruby hash#eql?()","Ruby matchdata#eql?()","Ruby method#eql?()","Ruby numeric#eql?()","Ruby object#eql?()","Ruby proc#eql?()","Ruby range#eql?()","Ruby regexp#eql?()","Ruby string#eql?()","Ruby struct#eql?()","Ruby time#eql?()","Ruby unboundmethod#eql?()","Rails actionview::filesystemresolver#eql?()","Rails activerecord::base#eql?()","Rails activeresource::base#eql?()","Rails activesupport::timewithzone#eql?()","Rails time#eql?()","Rails time#eql_with_coercion()","Rails time#eql_without_coercion()","Ruby basicobject#equal?()","Ruby math::erf()","Ruby math::erfc()","Ruby systemcallerror#errno()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#error()","Ruby encoding::invalidbytesequenceerror#error_bytes()","Ruby encoding::undefinedconversionerror#error_char()","Rails actionview::helpers::activemodelinstancetag#error_message()","Rails activerecord::connectionadapters::mysql2adapter#error_number()","Rails actionview::helpers::activemodelinstancetag#error_wrapping()","Rails activemodel::validations#errors()","Rails activeresource::validations#errors()","Rails rails::generators::activemodel#errors()","Ruby regexp::escape()","Rails activesupport::json::encoding::encoder#escape()","Rails activerecord::connectionadapters::postgresqladapter#escape_bytea()","Rails actiondispatch::filehandler#escape_glob_chars()","Rails actionview::helpers::javascripthelper#escape_javascript()","Rails actionview::helpers::taghelper#escape_once()","Rails activerecord::base::establish_connection()","Rails activerecord::connectionadapters::connectionhandler#establish_connection()","Rails actiondispatch::http::cache::response#etag=()","Rails actiondispatch::http::cache::request#etag_matches?()","Ruby process::euid()","Ruby process::euid=()","Ruby binding#eval()","Ruby kernel#eval()","Ruby rubyvm::instructionsequence#eval()","Rails activerecord::scoping::default::classmethods#evaluate_default_scope()","Ruby bignum#even?()","Ruby fixnum#even?()","Ruby integer#even?()","Rails numeric#exabyte()","Rails numeric#exabytes()","Rails activerecord::spawnmethods#except()","Rails hash#except()","Rails hash#except!()","Ruby exception::exception()","Ruby exception#exception()","Rails actionview::helpers::texthelper#excerpt()","Rails enumerable#exclude?()","Rails string#exclude?()","Ruby range#exclude_end?()","Ruby thread::exclusive()","Ruby kernel#exec()","Ruby process::exec()","Rails activerecord::connectionadapters::databasestatements#exec_delete()","Rails activerecord::connectionadapters::mysql2adapter#exec_delete()","Rails activerecord::connectionadapters::mysqladapter#exec_delete()","Rails activerecord::connectionadapters::postgresqladapter#exec_delete()","Rails activerecord::connectionadapters::sqliteadapter#exec_delete()","Rails activerecord::connectionadapters::databasestatements#exec_insert()","Rails activerecord::connectionadapters::mysql2adapter#exec_insert()","Rails activerecord::connectionadapters::databasestatements#exec_query()","Rails activerecord::connectionadapters::mysql2adapter#exec_query()","Rails activerecord::connectionadapters::mysqladapter#exec_query()","Rails activerecord::connectionadapters::postgresqladapter#exec_query()","Rails activerecord::connectionadapters::sqliteadapter#exec_query()","Rails rails::scriptrailsloader::exec_script_rails!()","Rails activerecord::connectionadapters::databasestatements#exec_update()","Rails activerecord::connectionadapters::mysql2adapter#exec_update()","Rails activerecord::connectionadapters::mysqladapter#exec_update()","Rails activerecord::connectionadapters::postgresqladapter#exec_update()","Rails activerecord::connectionadapters::sqliteadapter#exec_update()","Rails activerecord::connectionadapters::mysql2adapter#exec_without_stmt()","Ruby file::executable?()","Ruby file::stat#executable?()","Ruby filetest#executable?()","Ruby file::executable_real?()","Ruby file::stat#executable_real?()","Ruby filetest#executable_real?()","Rails activerecord::connectionadapters::abstractmysqladapter#execute()","Rails activerecord::connectionadapters::databasestatements#execute()","Rails activerecord::connectionadapters::mysql2adapter#execute()","Rails activerecord::connectionadapters::postgresqladapter#execute()","Rails activesupport::fileupdatechecker#execute()","Rails activerecord::connectionadapters::mysqladapter#execute_and_free()","Rails activesupport::execute_hook()","Rails activesupport::fileupdatechecker#execute_if_updated()","Ruby dir::exist?()","Ruby file::exist?()","Ruby filetest#exist?()","Rails actiondispatch::railsentitystore#exist?()","Rails activesupport::cache::store#exist?()","Rails rails::paths::path#existent()","Rails rails::paths::path#existent_directories()","Ruby dir::exists?()","Ruby file::exists?()","Ruby filetest#exists?()","Rails actionview::lookupcontext::viewpaths#exists?()","Rails activerecord::findermethods#exists?()","Rails activeresource::base::exists?()","Rails activeresource::base#exists?()","Ruby kernel#exit()","Ruby process::exit()","Ruby thread#exit()","Ruby thread::exit()","Ruby kernel#exit!()","Ruby process::exit!()","Rails rails::generators::appgenerator::exit_on_failure?()","Ruby localjumperror#exit_value()","Ruby process::status#exited?()","Ruby process::status#exitstatus()","Ruby math::exp()","Rails activesupport::cache::expand_cache_key()","Rails activerecord::sanitization::classmethods#expand_hash_conditions_for_aggregates()","Ruby file::expand_path()","Rails rails::paths::path#expanded()","Rails actioncontroller::httpauthentication::digest#expected_response()","Rails activerecord::connectionadapters::abstractadapter#expire()","Rails actioncontroller::caching::actions#expire_action()","Rails actioncontroller::caching::fragments#expire_fragment()","Rails actioncontroller::caching::pages#expire_page()","Rails actioncontroller::caching::pages::classmethods#expire_page()","Rails activesupport::cache::entry#expired?()","Rails activesupport::cache::entry#expires_at()","Rails activesupport::cache::entry#expires_at=()","Rails actioncontroller::conditionalget#expires_in()","Rails actioncontroller::conditionalget#expires_now()","Rails activerecord::connectionadapters::mysql2adapter#explain()","Rails activerecord::connectionadapters::postgresqladapter#explain()","Rails activerecord::connectionadapters::sqliteadapter#explain()","Rails activerecord::relation#explain()","Rails actiondispatch::filehandler#ext()","Ruby object#extend()","Rails activemodel::callbacks::extended()","Rails activerecord::explain::extended()","Rails activesupport::concern::extended()","Rails activesupport::memoizable::extended()","Rails activesupport::testing::declarative::extended()","Rails activerecord::querymethods#extending()","Rails actionview::helpers::assettaghelper::assetincludetag#extension()","Rails actionview::helpers::assettaghelper::javascriptincludetag#extension()","Rails actionview::helpers::assettaghelper::stylesheetincludetag#extension()","Rails activeresource::formats::jsonformat#extension()","Rails activeresource::formats::xmlformat#extension()","Ruby argf#external_encoding()","Ruby io#external_encoding()","Rails railsenvironment#externals()","Rails railsenvironment#externals=()","Rails rails::generators::actions#extify()","Ruby file::extname()","Rails hash#extract!()","Rails sourceannotationextractor#extract_annotations_from()","Rails actiondispatch::http::url::extract_domain()","Rails array#extract_options!()","Rails activerecord::connectionadapters::postgresqladapter::utils#extract_schema_and_table()","Rails actiondispatch::session::stalesessioncheck#extract_session_id()","Rails actiondispatch::http::url::extract_subdomain()","Rails actiondispatch::http::url::extract_subdomains()","Rails activesupport::hashwithindifferentaccess#extractable_options?()","Rails activesupport::hashwithindifferentaccess#extractable_options?()","Rails activesupport::orderedhash#extractable_options?()","Rails hash#extractable_options?()","Ruby kernel#fail()","Rails rails::generators::fallbacks()","Ruby fatal","Rails actionview::helpers::assettaghelper#favicon_link_tag()","Ruby io#fcntl()","Ruby io#fdatasync()","Ruby bignum#fdiv()","Ruby complex#fdiv()","Ruby fixnum#fdiv()","Ruby float#fdiv()","Ruby numeric#fdiv()","Ruby rational#fdiv()","Ruby enumerator#feed()","Ruby array#fetch()","Ruby env::fetch()","Ruby hash#fetch()","Rails activesupport::cache::store#fetch()","Rails activesupport::hashwithindifferentaccess#fetch()","Rails activesupport::hashwithindifferentaccess#fetch()","Rails recursivehttpfetcher#fetch()","Rails recursivehttpfetcher#fetch_dir()","Rails actionview::helpers::formtaghelper#field_set_tag()","Rails rails::generators::generatedattribute#field_type()","Rails actionview::helpers::formbuilder#fields_for()","Rails actionview::helpers::formhelper#fields_for()","Rails array#fifth()","Ruby argf#file()","Rails rails::generators::appgenerator#file()","Ruby file::file?()","Ruby file::stat#file?()","Ruby filetest#file?()","Rails actionview::helpers::formbuilder#file_field()","Rails actionview::helpers::formhelper#file_field()","Rails actionview::helpers::formtaghelper#file_field_tag()","Rails rails::generators::namedbase#file_path()","Ruby argf#filename()","Rails activesupport::multibyte::unicode::unicodedatabase::filename()","Ruby argf#fileno()","Ruby io#fileno()","Ruby array#fill()","Rails actiondispatch::http::parameterfilter#filter()","Rails rails::paths::root#filter_by()","Rails actiondispatch::http::filterparameters#filtered_env()","Rails activemodel::validations::numericalityvalidator#filtered_options()","Rails actiondispatch::http::filterparameters#filtered_parameters()","Rails actiondispatch::http::filterparameters#filtered_path()","Rails actiondispatch::http::filterparameters#filtered_query_string()","Ruby encoding::find()","Ruby enumerable#find()","Rails actionview::lookupcontext::viewpaths#find()","Rails activerecord::findermethods#find()","Rails activeresource::base::find()","Rails plugin::find()","Rails rails::engine::find()","Rails rails::generators::activemodel::find()","Rails railsenvironment::find()","Rails sourceannotationextractor#find()","Ruby enumerable#find_all()","Rails actionview::lookupcontext::viewpaths#find_all()","Rails actionview::resolver#find_all()","Rails actiondispatch::assertions::tagassertions#find_all_tag()","Rails activerecord::findermethods#find_by_attributes()","Rails activerecord::sessionstore::session::find_by_session_id()","Rails activerecord::sessionstore::sqlbypass::find_by_session_id()","Rails activerecord::querying#find_by_sql()","Rails rails::dbconsole#find_cmd()","Rails activerecord::batches#find_each()","Rails activerecord::findermethods#find_first()","Rails sourceannotationextractor#find_in()","Rails activerecord::batches#find_in_batches()","Ruby array#find_index()","Ruby enumerable#find_index()","Rails activerecord::findermethods#find_last()","Rails activerecord::findermethods#find_one()","Rails activerecord::findermethods#find_or_instantiator_by_attributes()","Rails rails::engine#find_root_with_flag()","Rails activerecord::findermethods#find_some()","Rails actiondispatch::assertions::tagassertions#find_tag()","Rails actionview::lookupcontext::viewpaths#find_template()","Rails activesupport::timezone::find_tzinfo()","Rails activerecord::findermethods#find_with_associations()","Rails activerecord::findermethods#find_with_ids()","Rails time::find_zone()","Rails time::find_zone!()","Rails activerecord::dynamicfindermatch#finder?()","Ruby encoding::converter#finish()","Rails rails::generators::appgenerator#finish_template()","Rails rails::generators::pluginnewgenerator#finish_template()","Ruby float#finite?()","Ruby array#first()","Ruby enumerable#first()","Ruby range#first()","Rails activerecord::findermethods#first()","Rails activeresource::base::first()","Rails rails::paths::path#first()","Rails string#first()","Rails activerecord::findermethods#first!()","Rails activerecord::relation#first_or_create()","Rails activerecord::relation#first_or_create!()","Rails activerecord::relation#first_or_initialize()","Ruby regexp#fixed_encoding?()","Rails actiondispatch::testprocess#fixture_file_upload()","Rails activerecord::fixtures::fixture_is_cached?()","Rails activerecord::testfixtures::classmethods#fixtures()","Rails actiondispatch::request#flash()","Rails actiondispatch::testprocess#flash()","Ruby enumerable#flat_map()","Ruby array#flatten()","Ruby hash#flatten()","Ruby array#flatten!()","Ruby file#flock()","Ruby float#floor()","Ruby integer#floor()","Ruby numeric#floor()","Ruby rational#floor()","Ruby io#flush()","Rails activesupport::bufferedlogger#flush()","Rails activesupport::logsubscriber::testhelper::mocklogger#flush()","Rails activesupport::taggedlogging#flush()","Rails activesupport::logsubscriber::flush_all!()","Rails activesupport::memoizable::instancemethods#flush_cache()","Rails activesupport::logsubscriber::flushable_loggers()","Ruby file::fnmatch()","Ruby file::fnmatch?()","Rails actiondispatch::integration::requesthelpers#follow_redirect!()","Rails actionview::helpers::assettaghelper#font_path()","Rails sprockets::helpers::railshelper#font_path()","Rails html::selector::for_class()","Ruby io::for_fd()","Rails html::selector::for_id()","Rails activesupport::testcase::for_tag()","Ruby string#force_encoding()","Rails actioncontroller::forcessl::classmethods#force_ssl()","Ruby dir::foreach()","Ruby io::foreach()","Rails activesupport::inflector#foreign_key()","Rails string#foreign_key()","Ruby kernel#fork()","Ruby process::fork()","Ruby thread::fork()","Rails activesupport::testing::isolation::forking_env?()","Rails actioncontroller::requestforgeryprotection#form_authenticity_param()","Rails actioncontroller::requestforgeryprotection#form_authenticity_token()","Rails actiondispatch::request#form_data?()","Rails actionview::helpers::formhelper#form_for()","Rails actionview::helpers::formtaghelper#form_tag()","Ruby kernel#format()","Rails actiondispatch::http::mimenegotiation#format()","Rails activeresource::base::format()","Rails activesupport::testing::performance::metrics::amount#format()","Rails activesupport::testing::performance::metrics::digitalinformationunit#format()","Rails activesupport::testing::performance::metrics::time#format()","Rails erb::generators::mailergenerator#format()","Rails actiondispatch::http::mimenegotiation#format=()","Rails activeresource::base::format=()","Rails actionmailer::mailhelper#format_paragraph()","Rails actiondispatch::http::mimenegotiation#formats()","Rails activesupport::timewithzone#formatted_offset()","Rails activesupport::timezone#formatted_offset()","Rails datetime#formatted_offset()","Rails time#formatted_offset()","Rails numeric#fortnight()","Rails numeric#fortnights()","Rails array#forty_two()","Rails array#fourth()","Rails actioncontroller::caching::fragments#fragment_cache_key()","Rails actioncontroller::caching::fragments#fragment_exist?()","Rails actiondispatch::exceptionwrapper#framework_trace()","Rails rails::info::framework_version()","Rails rails::info::frameworks()","Ruby module#freeze()","Ruby object#freeze()","Rails activerecord::base#freeze()","Rails activesupport::timewithzone#freeze()","Rails activesupport::memoizable::instancemethods#freeze_with_memoizable()","Rails actiondispatch::http::cache::request#fresh?()","Rails actioncontroller::conditionalget#fresh_when()","Ruby math::frexp()","Ruby time#friday?()","Rails activerecord::querymethods#from()","Rails array#from()","Rails string#from()","Rails activeresource::errors#from_array()","Rails activemodel::serializers::json#from_json()","Rails activeresource::errors#from_json()","Rails activesupport::duration#from_now()","Rails numeric#from_now()","Rails actionview::logsubscriber#from_rails_root()","Rails actiondispatch::testresponse::from_response()","Rails hash::from_trusted_xml()","Rails activemodel::serializers::xml#from_xml()","Rails activeresource::errors#from_xml()","Rails hash::from_xml()","Ruby array#frozen?()","Ruby object#frozen?()","Rails activerecord::base#frozen?()","Ruby io#fsync()","Ruby file::ftype()","Ruby file::stat#ftype()","Rails rails::generators::pluginnewgenerator#full?()","Rails activemodel::errors#full_message()","Rails activemodel::errors#full_messages()","Rails activesupport::testing::performance#full_profile_options()","Rails activesupport::testing::performance#full_test_name()","Rails actiondispatch::exceptionwrapper#full_trace()","Rails actiondispatch::request#fullpath()","Rails activesupport::timewithzone#future?()","Rails date#future?()","Rails datetime#future?()","Rails time#future?()","Rails activesupport::multibyte::chars#g_length()","Rails activesupport::multibyte::unicode#g_pack()","Rails activesupport::multibyte::unicode#g_unpack()","Ruby math::gamma()","Ruby gc#garbage_collect()","Ruby objectspace::garbage_collect()","Ruby integer#gcd()","Ruby integer#gcdlcm()","Rails rails::generators::actions#gem()","Rails rails::generators::appbase#gem_for_database()","Rails rails::generators::actions#gem_group()","Rails rails::appbuilder#gemfile()","Rails rails::pluginbuilder#gemfile()","Rails rails::pluginbuilder#gemspec()","Rails activesupport::messageverifier#generate()","Rails rails::generators::actions#generate()","Rails activemodel::errors#generate_message()","Rails abstractcontroller::collector::generate_method_for_mime()","Rails rails::railtie::generate_railtie_name()","Rails actiondispatch::session::compatibility#generate_sid()","Rails rails::pluginbuilder#generate_test_dummy()","Rails activerecord::attributemethods::classmethods#generated_external_attribute_methods()","Rails activerecord::base::generated_feature_methods()","Rails rails::generators::testcase#generator()","Rails rails::generators::generatorgenerator#generator_dir()","Rails rails::generators::base::generator_name()","Rails rails::railtie::generators()","Rails actioncontroller::testcase::behavior#get()","Rails actiondispatch::integration::requesthelpers#get()","Rails actiondispatch::routing::mapper::httphelpers#get()","Rails activemodel::errors#get()","Rails activerecord::identitymap::get()","Rails activeresource::connection#get()","Rails activeresource::custommethods#get()","Rails activeresource::custommethods::get()","Rails activesupport::dependencies::classcache#get()","Rails actiondispatch::request#get?()","Rails rails::generators::appgenerator#get_builder_class()","Rails rails::generators::pluginnewgenerator#get_builder_class()","Rails actiondispatch::session::cachestore#get_session()","Rails actiondispatch::integration::requesthelpers#get_via_redirect()","Ruby argf#getbyte()","Ruby io#getbyte()","Ruby string#getbyte()","Ruby argf#getc()","Ruby io#getc()","Ruby process::sys::getegid()","Ruby process::sys::geteuid()","Ruby process::sys::getgid()","Ruby time#getgm()","Rails activesupport::timewithzone#getgm()","Ruby time#getlocal()","Rails activesupport::timewithzone#getlocal()","Ruby process::getpgid()","Ruby process::getpgrp()","Ruby process::getpriority()","Ruby process::getrlimit()","Ruby argf#gets()","Ruby io#gets()","Ruby kernel#gets()","Ruby process::sys::getuid()","Ruby time#getutc()","Rails activesupport::timewithzone#getutc()","Rails datetime#getutc()","Ruby dir::getwd()","Ruby file::stat#gid()","Ruby process::gid()","Ruby process::gid=()","Rails numeric#gigabyte()","Rails numeric#gigabytes()","Rails rails::generators::actions#git()","Rails rails::generators::appbase#git_keep()","Rails plugin#git_url?()","Rails ","Rails ","Rails rails::appbuilder#gitignore()","Rails rails::pluginbuilder#gitignore()","Ruby dir::glob()","Rails rails::plugin::global_plugins()","Ruby kernel#global_variables()","Ruby time::gm()","Ruby time#gmt?()","Rails activesupport::timewithzone#gmt?()","Ruby time#gmt_offset()","Rails activesupport::timewithzone#gmt_offset()","Ruby time#gmtime()","Rails activesupport::timewithzone#gmtime()","Ruby time#gmtoff()","Rails activesupport::timewithzone#gmtoff()","Ruby process::gid::grant_privilege()","Ruby process::uid::grant_privilege()","Ruby enumerable#grep()","Ruby thread#group()","Rails activerecord::querymethods#group()","Ruby enumerable#group_by()","Rails enumerable#group_by()","Rails actionview::helpers::formbuilder#grouped_collection_select()","Rails actionview::helpers::formoptionshelper#grouped_collection_select()","Rails actionview::helpers::formoptionshelper#grouped_options_for_select()","Ruby process::groups()","Rails rails::groups()","Ruby process::groups=()","Ruby file::grpowned?()","Ruby file::stat#grpowned?()","Ruby filetest#grpowned?()","Ruby kernel#gsub()","Ruby string#gsub()","Ruby string#gsub!()","Rails erb::util::h()","Rails actioncontroller::httpauthentication::digest#ha1()","Rails actioncontroller::logsubscriber#halted_callback()","Rails actioncontroller::requestforgeryprotection#handle_unverified_request()","Rails activesupport::rescuable#handler_for_rescue()","Rails actionview::template::handlers::erb#handles_encoding?()","Rails activerecord::associations::classmethods#has_and_belongs_to_many()","Rails actioncontroller::responder#has_errors?()","Rails rails::generators::generatedattribute#has_index?()","Ruby env::has_key?()","Ruby hash#has_key?()","Rails activemodel::errors#has_key?()","Rails activesupport::hashwithindifferentaccess#has_key?()","Rails activesupport::hashwithindifferentaccess#has_key?()","Rails activerecord::associations::classmethods#has_many()","Rails rails::engine#has_migrations?()","Rails activerecord::associations::classmethods#has_one()","Rails activemodel::securepassword::classmethods#has_secure_password()","Rails rails::generators::generatedattribute#has_uniq_index?()","Ruby env::has_value?()","Ruby hash#has_value?()","Ruby array#hash()","Ruby bignum#hash()","Ruby float#hash()","Ruby hash#hash()","Ruby matchdata#hash()","Ruby method#hash()","Ruby object#hash()","Ruby proc#hash()","Ruby range#hash()","Ruby regexp#hash()","Ruby string#hash()","Ruby struct#hash()","Ruby time#hash()","Ruby unboundmethod#hash()","Rails activerecord::base#hash()","Rails activeresource::base#hash()","Rails activesupport::timewithzone#hash()","Rails activerecord::querymethods#having()","Rails actioncontroller::head#head()","Rails actioncontroller::testcase::behavior#head()","Rails actiondispatch::integration::requesthelpers#head()","Rails activeresource::connection#head()","Rails actiondispatch::request#head?()","Rails actiondispatch::request#headers()","Rails actionmailer::base#headers()","Rails activeresource::base::headers()","Rails actioncontroller::testing#headers=()","Rails rails::generators::help()","Rails abstractcontroller::helpers::classmethods#helper()","Rails rails::consolemethods#helper()","Rails actioncontroller::helpers::classmethods#helper_attr()","Rails actionview::testcase::behavior::classmethods#helper_class()","Rails abstractcontroller::helpers::classmethods#helper_method()","Rails actionview::testcase::behavior::classmethods#helper_method()","Rails actioncontroller::helpers::classmethods#helpers()","Rails rails::engine#helpers()","Rails rails::engine#helpers_paths()","Ruby string#hex()","Rails abstractcontroller::base::hidden_actions()","Rails actionview::helpers::formbuilder#hidden_field()","Rails actionview::helpers::formhelper#hidden_field()","Rails actionview::helpers::formtaghelper#hidden_field_tag()","Rails rails::generators::hidden_namespaces()","Rails actioncontroller::hideactions::classmethods#hide_action()","Rails rails::generators::hide_namespace()","Rails rails::generators::hide_namespaces()","Rails actionview::helpers::texthelper#highlight()","Ruby dir::home()","Rails rails::generators::base::hook_for()","Rails actiondispatch::http::url#host()","Rails actiondispatch::integration::session#host()","Rails actiondispatch::testrequest#host=()","Rails actiondispatch::http::url#host_with_port()","Ruby time#hour()","Rails numeric#hour()","Rails numeric#hours()","Rails mime::type#html?()","Rails actiondispatch::assertions::tagassertions#html_document()","Rails erb::util::html_escape()","Rails string#html_safe()","Rails activesupport::safebuffer#html_safe?()","Rails numeric#html_safe?()","Rails object#html_safe?()","Rails actioncontroller::httpauthentication::basic::controllermethods::classmethods#http_basic_authenticate_with()","Rails activesupport::timewithzone#httpdate()","Rails actiondispatch::integration::session#https!()","Rails actiondispatch::integration::session#https?()","Rails activemodel::name#human()","Rails activesupport::inflector::inflections#human()","Rails activemodel::translation#human_attribute_name()","Rails rails::generators::generatedattribute#human_name()","Rails rails::generators::namedbase#human_name()","Rails activesupport::inflector#humanize()","Rails string#humanize()","Ruby math::hypot()","Ruby numeric#i()","Rails activemodel::translation#i18n_scope()","Rails rails::generators::namedbase#i18n_scope()","Rails activerecord::attributemethods::primarykey#id()","Rails activeresource::base#id()","Rails nilclass#id()","Ruby symbol#id2name()","Rails activerecord::attributemethods::primarykey#id=()","Rails activeresource::base#id=()","Rails activerecord::attributemethods::primarykey#id?()","Rails activeresource::base#id_from_response()","Ruby file::identical?()","Ruby filetest#identical?()","Rails activerecord::fixtures::identify()","Rails activerecord::logsubscriber#identity()","Rails actiondispatch::http::cache::request#if_modified_since()","Rails actiondispatch::testrequest#if_modified_since=()","Rails actiondispatch::http::cache::request#if_none_match()","Rails actiondispatch::testrequest#if_none_match=()","Ruby complex#imag()","Ruby numeric#imag()","Rails actionview::helpers::assettaghelper#image_alt()","Rails actionview::helpers::assettaghelper#image_path()","Rails sprockets::helpers::railshelper#image_path()","Rails actionview::helpers::formtaghelper#image_submit_tag()","Rails actionview::helpers::assettaghelper#image_tag()","Ruby complex#imaginary()","Ruby numeric#imaginary()","Rails date#in()","Rails datetime#in()","Rails time#in()","Rails object#in?()","Rails activesupport::multibyte::unicode#in_char_class?()","Rails activerecord::connectionadapters::databaselimits#in_clause_length()","Rails array#in_groups()","Rails array#in_groups_of()","Rails rails::scriptrailsloader::in_rails_application?()","Rails rails::scriptrailsloader::in_rails_application_subdirectory?()","Rails activesupport::timewithzone#in_time_zone()","Rails datetime#in_time_zone()","Rails time#in_time_zone()","Ruby array#include?()","Ruby env::include?()","Ruby enumerable#include?()","Ruby hash#include?()","Ruby module#include?()","Ruby range#include?()","Ruby string#include?()","Rails activemodel::errors#include?()","Rails activemodel::massassignmentsecurity::permissionset#include?()","Rails activesupport::hashwithindifferentaccess#include?()","Rails activesupport::hashwithindifferentaccess#include?()","Rails activesupport::multibyte::chars#include?()","Rails test::unit::collector::objectspace#include?()","Rails rails::generators::appbase#include_all_railties?()","Rails i18n::railtie::include_fallbacks_module()","Rails actionview::helpers::assettaghelper::assetincludetag#include_tag()","Rails range#include_with_range?()","Rails actioncontroller::testcase::raiseactionexceptions::included()","Rails activerecord::connectionadapters::querycache::included()","Rails activesupport::concern#included()","Rails activesupport::memoizable::instancemethods::included()","Rails activesupport::testing::isolation::included()","Rails rails::initializable::included()","Ruby module#included_modules()","Rails activerecord::querymethods#includes()","Ruby encoding::invalidbytesequenceerror#incomplete_input?()","Rails activerecord::persistence#increment()","Rails activesupport::cache::filestore#increment()","Rails activesupport::cache::memorystore#increment()","Rails activesupport::cache::nullstore#increment()","Rails activesupport::cache::store#increment()","Rails activerecord::persistence#increment!()","Rails activerecord::countercache#increment_counter()","Rails activerecord::connectionadapters::abstractadapter#increment_open_transactions()","Rails rails::generators::namedbase#indent()","Ruby array#index()","Ruby env::index()","Ruby string#index()","Rails actioncontroller::middleware#index()","Rails activerecord::connectionadapters::table#index()","Rails activesupport::multibyte::chars#index()","Rails enumerable#index_by()","Rails activerecord::connectionadapters::schemastatements#index_exists?()","Rails activerecord::connectionadapters::table#index_exists?()","Rails rails::generators::namedbase#index_helper()","Rails rails::generators::generatedattribute#index_name()","Rails activerecord::connectionadapters::schemastatements#index_name_exists?()","Rails activerecord::connectionadapters::schemastatements#index_name_for_remove()","Rails activerecord::connectionadapters::databaselimits#index_name_length()","Rails activerecord::connectionadapters::postgresqladapter#index_name_length()","Rails activerecord::connectionadapters::postgresqladapter#indexes()","Rails activerecord::connectionadapters::databaselimits#indexes_per_table()","Ruby float#infinite?()","Rails activesupport::inflector#inflections()","Rails plugin#info()","Rails activesupport::inheritableoptions#inheritable_copy()","Rails activerecord::modelschema::classmethods#inheritance_column()","Rails activerecord::modelschema::classmethods#inheritance_column=()","Rails abstractcontroller::helpers::classmethods#inherited()","Rails abstractcontroller::layouts::classmethods#inherited()","Rails actioncontroller::hideactions::classmethods#inherited()","Rails actioncontroller::paramswrapper::classmethods#inherited()","Rails actionview::helpers::assettaghelper::assetincludetag::inherited()","Rails activemodel::observing::classmethods#inherited()","Rails activemodel::validations::classmethods#inherited()","Rails activesupport::descendantstracker#inherited()","Rails rails::application::inherited()","Rails rails::engine::inherited()","Rails rails::plugin::inherited()","Rails rails::railtie::inherited()","Rails rails::railtie::configurable::classmethods#inherited()","Rails i18n::railtie::init_fallbacks()","Rails activerecord::base#init_with()","Ruby process::initgroups()","Rails rails::initialize!()","Ruby array#initialize_copy()","Ruby hash#initialize_copy()","Ruby string#initialize_copy()","Rails actiondispatch::flash::flashhash#initialize_copy()","Rails actiondispatch::middlewarestack#initialize_copy()","Rails activerecord::relation#initialize_copy()","Rails activesupport::orderedhash#initialize_copy()","Rails activesupport::safebuffer#initialize_copy()","Rails activemodel::errors#initialize_dup()","Rails activerecord::base#initialize_dup()","Rails activerecord::timestamp#initialize_dup()","Rails rails::engine#initialize_generators()","Rails i18n::railtie::initialize_i18n()","Rails activerecord::connectionadapters::schemastatements#initialize_schema_migrations_table()","Rails actiondispatch::session::compatibility#initialize_sid()","Rails actioncontroller::compatibility#initialize_template_class()","Rails actionmailer::testcase::behavior#initialize_test_deliveries()","Rails rails::initialized=()","Rails rails::initialized?()","Rails rails::generators::actions#initializer()","Rails rails::initializable::classmethods#initializer()","Rails rails::engine#initializers()","Rails rails::initializable#initializers()","Rails rails::initializable::classmethods#initializers()","Rails rails::initializable::classmethods#initializers_chain()","Rails rails::initializable::classmethods#initializers_for()","Ruby enumerable#inject()","Rails rails::generators::generatedattribute#inject_index_options()","Rails rails::generators::generatedattribute#inject_options()","Ruby file::stat#ino()","Ruby argf#inplace_mode()","Ruby argf#inplace_mode=()","Rails string#inquiry()","Rails activemodel::massassignmentsecurity::strictsanitizer#insensitive_attributes()","Ruby array#insert()","Ruby string#insert()","Rails actiondispatch::middlewarestack#insert()","Rails activerecord::connectionadapters::databasestatements#insert()","Rails activerecord::relation#insert()","Rails activesupport::multibyte::chars#insert()","Rails actiondispatch::middlewarestack#insert_after()","Rails actiondispatch::middlewarestack#insert_before()","Rails activerecord::connectionadapters::databasestatements#insert_fixture()","Ruby encoding::converter#insert_output()","Rails activerecord::connectionadapters::databasestatements#insert_sql()","Rails activerecord::connectionadapters::mysql2adapter#insert_sql()","Rails activerecord::connectionadapters::postgresqladapter#insert_sql()","Rails rails::generators::namedbase#inside_template()","Rails rails::generators::namedbase#inside_template?()","Ruby array#inspect()","Ruby complex#inspect()","Ruby dir#inspect()","Ruby env::inspect()","Ruby encoding#inspect()","Ruby encoding::converter#inspect()","Ruby enumerator#inspect()","Ruby exception#inspect()","Ruby file::stat#inspect()","Ruby hash#inspect()","Ruby io#inspect()","Ruby matchdata#inspect()","Ruby method#inspect()","Ruby nilclass#inspect()","Ruby object#inspect()","Ruby process::status#inspect()","Ruby range#inspect()","Ruby rational#inspect()","Ruby regexp#inspect()","Ruby rubyvm::instructionsequence#inspect()","Ruby string#inspect()","Ruby struct#inspect()","Ruby symbol#inspect()","Ruby thread#inspect()","Ruby time#inspect()","Ruby unboundmethod#inspect()","Rails actiondispatch::middlewarestack::middleware#inspect()","Rails actionview::template#inspect()","Rails activerecord::base#inspect()","Rails activerecord::base::inspect()","Rails activerecord::relation#inspect()","Rails activesupport::orderedhash#inspect()","Rails activesupport::timewithzone#inspect()","Rails date#inspect()","Rails datetime#inspect()","Rails rails::info::inspect()","Rails plugin#install()","Rails railsenvironment#install()","Rails plugin#installed?()","Rails activesupport::inflector::inflections::instance()","Rails rails::railtie::configurable::classmethods#instance()","Ruby basicobject#instance_eval()","Ruby basicobject#instance_exec()","Ruby module#instance_method()","Rails activemodel::attributemethods::classmethods#instance_method_already_implemented?()","Rails activerecord::attributemethods::classmethods#instance_method_already_implemented?()","Rails module#instance_method_names()","Ruby module#instance_methods()","Ruby object#instance_of?()","Ruby object#instance_variable_defined?()","Ruby object#instance_variable_get()","Rails object#instance_variable_names()","Ruby object#instance_variable_set()","Ruby object#instance_variables()","Rails activerecord::inheritance::classmethods#instantiate()","Rails activerecord::fixtures::instantiate_all_loaded_fixtures()","Rails activerecord::fixtures::instantiate_fixtures()","Rails activemodel::observing::classmethods#instantiate_observers()","Rails activerecord::dynamicfindermatch#instantiator?()","Rails activesupport::cache::store::instrument()","Rails activesupport::notifications::instrument()","Rails activesupport::notifications::instrumenter#instrument()","Rails activesupport::cache::store::instrument=()","Rails actioncontroller::caching::fragments#instrument_fragment_cache()","Rails activesupport::notifications::instrumenter()","Ruby integer#integer?()","Ruby numeric#integer?()","Ruby string#intern()","Ruby symbol#intern()","Ruby argf#internal_encoding()","Ruby io#internal_encoding()","Rails abstractcontroller::base::internal_methods()","Rails activemodel::validations#invalid?()","Rails activerecord::migration::commandrecorder#inverse()","Ruby env::invert()","Ruby hash#invert()","Rails activesupport::orderedhash#invert()","Rails rails::generators::invoke()","Ruby io#ioctl()","Rails actiondispatch::request#ip()","Rails actiondispatch::remoteip::getip#ips_from()","Rails activesupport::inflector::inflections#irregular()","Ruby object#is_a?()","Rails activesupport::timewithzone#is_a?()","Rails loaderror#is_missing?()","Rails loaderror#is_missing?()","Rails string#is_utf8?()","Ruby io#isatty()","Ruby time#isdst()","Rails activesupport::timewithzone#isdst()","Rails activesupport::timewithzone#iso8601()","Rails date#iso8601()","Rails rails::engine::isolate_namespace()","Ruby process::sys::issetugid()","Ruby kernel#iterator?()","Rails actionview::helpers::javascripthelper#j()","Rails erb::util::j()","Rails rails::generators::appbase#javascript_gemfile_entry()","Rails actionview::helpers::assettaghelper::javascripttaghelpers#javascript_include_tag()","Rails sprockets::helpers::railshelper#javascript_include_tag()","Rails actionview::helpers::assettaghelper::javascripttaghelpers#javascript_path()","Rails sprockets::helpers::railshelper#javascript_path()","Rails rails::generators::appbase#javascript_runtime_gemfile_entry()","Rails actionview::helpers::javascripthelper#javascript_tag()","Rails rails::pluginbuilder#javascripts()","Ruby array#join()","Ruby file::join()","Ruby thread#join()","Rails activerecord::relation#joined_includes_values()","Rails activerecord::querymethods#joins()","Rails activerecord::connectionadapters::databaselimits#joins_per_query()","Rails erb::util::json_escape()","Rails actioncontroller::responder#json_resource_errors()","Rails actiondispatch::flash::flashhash#keep()","Ruby array#keep_if()","Ruby env::keep_if()","Ruby hash#keep_if()","Ruby env::key()","Ruby hash#key()","Ruby env::key?()","Ruby hash#key?()","Ruby thread#key?()","Rails actiondispatch::flash::flashhash#key?()","Rails actiondispatch::request#key?()","Rails activerecord::connectionadapters::mysqladapter::statementpool#key?()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#key?()","Rails activerecord::connectionadapters::sqliteadapter::statementpool#key?()","Rails activerecord::connectionadapters::statementpool#key?()","Rails activesupport::dependencies::classcache#key?()","Rails activesupport::hashwithindifferentaccess#key?()","Rails activesupport::hashwithindifferentaccess#key?()","Rails activesupport::cache::store#key_matcher()","Rails rails::generators::appbase#key_value()","Rails rails::generators::namedbase#key_value()","Ruby env::keys()","Ruby hash#keys()","Ruby thread#keys()","Rails actiondispatch::flash::flashhash#keys()","Rails activemodel::errors#keys()","Rails activesupport::orderedhash#keys()","Ruby process::kill()","Ruby thread::kill()","Ruby thread#kill()","Rails numeric#kilobyte()","Rails numeric#kilobytes()","Rails activemodel::validator::kind()","Rails activemodel::validator#kind()","Ruby object#kind_of?()","Rails activesupport::timewithzone#kind_of?()","Rails actiondispatch::middlewarestack::middleware#klass()","Rails activerecord::reflection::macroreflection#klass()","Rails activeresource::base#known_attributes()","Rails activeresource::base::known_attributes()","Rails abstractcontroller::translation#l()","Rails actionview::helpers::translationhelper#l()","Rails actionview::helpers::formbuilder#label()","Rails actionview::helpers::formhelper#label()","Rails actionview::helpers::formtaghelper#label_tag()","Ruby kernel#lambda()","Ruby proc#lambda?()","Ruby array#last()","Ruby range#last()","Rails actiondispatch::middlewarestack#last()","Rails activerecord::findermethods#last()","Rails activeresource::base::last()","Rails rails::paths::path#last()","Rails string#last()","Rails activerecord::findermethods#last!()","Ruby encoding::converter#last_error()","Rails activerecord::connectionadapters::databasestatements#last_inserted_id()","Rails activerecord::connectionadapters::mysql2adapter#last_inserted_id()","Rails activerecord::connectionadapters::mysqladapter#last_inserted_id()","Rails activerecord::connectionadapters::sqliteadapter#last_inserted_id()","Ruby regexp::last_match()","Rails actiondispatch::http::cache::response#last_modified()","Rails actiondispatch::http::cache::response#last_modified=()","Rails actiondispatch::http::cache::response#last_modified?()","Rails abstractcontroller::layouts::classmethods#layout()","Ruby file::lchmod()","Ruby file::lchown()","Ruby integer#lcm()","Ruby math::ldexp()","Rails activerecord::connectionadapters::abstractadapter#lease()","Ruby array#length()","Ruby env::length()","Ruby hash#length()","Ruby matchdata#length()","Ruby string#length()","Ruby struct#length()","Ruby symbol#length()","Rails activerecord::connectionadapters::mysqladapter::statementpool#length()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#length()","Rails activerecord::connectionadapters::sqliteadapter::statementpool#length()","Rails activerecord::connectionadapters::statementpool#length()","Rails activesupport::bufferedlogger#level()","Rails activesupport::bufferedlogger#level=()","Ruby math::lgamma()","Rails rails::appbuilder#lib()","Rails rails::generators::actions#lib()","Rails rails::pluginbuilder#lib()","Rails rails::pluginbuilder#license()","Rails activerecord::querymethods#limit()","Rails activesupport::multibyte::chars#limit()","Rails activerecord::connectionadapters::abstractmysqladapter#limited_update_conditions()","Rails activerecord::connectionadapters::databasestatements#limited_update_conditions()","Ruby argf#lineno()","Ruby io#lineno()","Ruby argf#lineno=()","Ruby io#lineno=()","Ruby argf#lines()","Ruby io#lines()","Ruby string#lines()","Ruby file::link()","Rails actionview::helpers::urlhelper#link_to()","Rails actionview::helpers::javascripthelper#link_to_function()","Rails actionview::helpers::urlhelper#link_to_if()","Rails actionview::helpers::urlhelper#link_to_unless()","Rails actionview::helpers::urlhelper#link_to_unless_current()","Rails recursivehttpfetcher#links()","Ruby encoding::list()","Ruby signal::list()","Ruby thread::list()","Ruby threadgroup#list()","Rails activesupport::notifications::fanout#listeners_for()","Rails activesupport::notifications::fanout#listening?()","Ruby string#ljust()","Rails activesupport::multibyte::chars#ljust()","Ruby kernel#load()","Ruby marshal::load()","Ruby rubyvm::instructionsequence::load()","Rails activeresource::base#load()","Rails activesupport::multibyte::unicode::unicodedatabase#load()","Rails activesupport::load_all!()","Rails activeresource::base#load_attributes_from_response()","Rails rails::application#load_console()","Rails rails::engine#load_console()","Rails rails::railtie#load_console()","Rails rails::engine#load_generators()","Rails rails::railtie#load_generators()","Rails rails::paths::root#load_paths()","Rails rails::engine#load_seed()","Rails actiondispatch::session::stalesessioncheck#load_session()","Rails rails::application#load_tasks()","Rails rails::engine#load_tasks()","Rails rails::railtie#load_tasks()","Rails activerecord::sessionstore::session#loaded?()","Rails activerecord::sessionstore::sqlbypass#loaded?()","Ruby time::local()","Rails activesupport::timezone#local()","Rails actiondispatch::request#local?()","Rails module#local_constant_names()","Rails module#local_constants()","Rails datetime::local_offset()","Rails time::local_time()","Rails activesupport::timezone#local_to_utc()","Ruby kernel#local_variables()","Ruby encoding::locale_charmap()","Rails abstractcontroller::translation#localize()","Rails actionview::helpers::translationhelper#localize()","Rails actionview::testcase::behavior#locals()","Ruby time#localtime()","Rails activesupport::timewithzone#localtime()","Rails actioncontroller::metal#location()","Rails actiondispatch::response#location()","Rails actioncontroller::metal#location=()","Rails actiondispatch::response#location=()","Ruby mutex#lock()","Rails activerecord::querymethods#lock()","Rails activerecord::locking::pessimistic#lock!()","Ruby mutex#locked?()","Rails activerecord::locking::optimistic::classmethods#locking_column()","Rails activerecord::locking::optimistic::classmethods#locking_column=()","Rails activerecord::locking::optimistic::classmethods#locking_enabled?()","Ruby math::log()","Rails activerecord::connectionadapters::abstractadapter#log()","Rails rails::appbuilder#log()","Rails rails::generators::actions#log()","Ruby math::log10()","Ruby math::log2()","Rails rails::application::configuration#log_level()","Rails rails::server#log_path()","Rails activerecord::railties::controllerruntime::classmethods#log_process_action()","Rails activesupport::logsubscriber::log_subscribers()","Rails activesupport::logsubscriber::testhelper::mocklogger#logged()","Rails actioncontroller::logsubscriber#logger()","Rails actionmailer::logsubscriber#logger()","Rails actionview::logsubscriber#logger()","Rails activerecord::base::logger()","Rails activerecord::logsubscriber#logger()","Rails activeresource::base::logger()","Rails activeresource::logsubscriber#logger()","Rails activesupport::logsubscriber::logger()","Rails rails::logger()","Rails rails::logger=()","Rails activemodel::massassignmentsecurity::loggersanitizer#logger?()","Rails mime::type::lookup()","Rails activemodel::translation#lookup_ancestors()","Rails mime::type::lookup_by_extension()","Rails abstractcontroller::viewpaths#lookup_context()","Rails activesupport::cache::lookup_store()","Ruby kernel#loop()","Rails recursivehttpfetcher#ls()","Ruby file#lstat()","Ruby file::lstat()","Ruby string#lstrip()","Rails activesupport::multibyte::chars#lstrip()","Ruby string#lstrip!()","Ruby bignum#magnitude()","Ruby complex#magnitude()","Ruby fixnum#magnitude()","Ruby float#magnitude()","Ruby numeric#magnitude()","Rails actionmailer::base#mail()","Rails actionview::helpers::urlhelper#mail_to()","Rails actionmailer::mailhelper#mailer()","Rails actionmailer::testcase::behavior::classmethods#mailer_class()","Rails actionmailer::base::mailer_name()","Rails actionmailer::base#mailer_name()","Ruby thread::main()","Ruby gc::malloc_allocated_size()","Ruby gc::malloc_allocations()","Rails activerecord::relation#many?()","Rails enumerable#many?()","Ruby array#map()","Ruby enumerable#map()","Ruby array#map!()","Rails activerecord::autosaveassociation#mark_for_destruction()","Rails activerecord::autosaveassociation#marked_for_destruction?()","Ruby time#marshal_dump()","Rails activesupport::timewithzone#marshal_dump()","Ruby time#marshal_load()","Rails activesupport::timewithzone#marshal_load()","Rails activemodel::massassignmentsecurity#mass_assignment_authorizer()","Rails activerecord::attributeassignment#mass_assignment_options()","Rails activerecord::attributeassignment#mass_assignment_role()","Rails activemodel::massassignmentsecurity::classmethods#mass_assignment_sanitizer=()","Ruby regexp#match()","Ruby string#match()","Ruby symbol#match()","Rails actiondispatch::routing::mapper::base#match()","Rails actiondispatch::routing::mapper::resources#match()","Rails activemodel::attributemethods::classmethods::attributemethodmatcher#match()","Rails activerecord::dynamicfindermatch::match()","Rails activerecord::dynamicscopematch::match()","Rails html::selector#match()","Rails actiondispatch::filehandler#match?()","Rails module#mattr_accessor()","Rails module#mattr_reader()","Rails module#mattr_writer()","Ruby enumerable#max()","Ruby range#max()","Ruby enumerable#max_by()","Ruby process::maxgroups()","Ruby process::maxgroups=()","Rails activerecord::calculations#maximum()","Rails string#mb_chars()","Ruby time#mday()","Rails activesupport::testing::performance::metrics::cputime#measure()","Rails activesupport::testing::performance::metrics::gcruns#measure()","Rails activesupport::testing::performance::metrics::gctime#measure()","Rails activesupport::testing::performance::metrics::memory#measure()","Rails activesupport::testing::performance::metrics::objects#measure()","Rails activesupport::testing::performance::metrics::processtime#measure()","Rails activesupport::testing::performance::metrics::time#measure()","Rails activesupport::testing::performance::metrics::usertime#measure()","Rails activesupport::testing::performance::metrics::walltime#measure()","Rails activesupport::testing::performance::metrics::base#measure_mode()","Rails actiondispatch::request#media_type()","Rails numeric#megabyte()","Rails numeric#megabytes()","Rails actiondispatch::routing::mapper::resources#member()","Ruby env::member?()","Ruby enumerable#member?()","Ruby hash#member?()","Ruby range#member?()","Rails activesupport::hashwithindifferentaccess#member?()","Rails activesupport::hashwithindifferentaccess#member?()","Ruby struct#members()","Rails activesupport::memoizable#memoize()","Rails activesupport::memoizable::instancemethods#memoize_all()","Rails activesupport::memoizable::memoized_ivar_for()","Ruby hash#merge()","Rails activerecord::spawnmethods#merge()","Rails activesupport::hashwithindifferentaccess#merge()","Rails activesupport::hashwithindifferentaccess#merge()","Rails activesupport::orderedhash#merge()","Ruby hash#merge!()","Rails activesupport::hashwithindifferentaccess#merge!()","Rails activesupport::hashwithindifferentaccess#merge!()","Rails activesupport::orderedhash#merge!()","Ruby exception#message()","Rails actiondispatch::response#message()","Rails actionmailer::mailhelper#message()","Rails activerecord::staleobjecterror#message()","Rails activerecord::unknownprimarykey#message()","Ruby object#method()","Rails actiondispatch::request#method()","Rails abstractcontroller::base::method_added()","Ruby module#method_defined?()","Rails activerecord::attributemethods::classmethods#method_defined_within?()","Rails actioncontroller::compatibility#method_for_action()","Rails actioncontroller::implicitrender#method_for_action()","Rails abstractcontroller::collector#method_missing()","Rails actiondispatch::assertions::routingassertions#method_missing()","Rails actiondispatch::bodyproxy#method_missing()","Rails actiondispatch::integration::runner#method_missing()","Rails activemodel::attributemethods#method_missing()","Rails activerecord::delegation#method_missing()","Rails activerecord::migration#method_missing()","Rails activesupport::logsubscriber::testhelper::mocklogger#method_missing()","Rails activesupport::multibyte::chars#method_missing()","Rails activesupport::orderedoptions#method_missing()","Rails activesupport::stringinquirer#method_missing()","Rails activesupport::taggedlogging#method_missing()","Rails activesupport::testing::proxytestresult#method_missing()","Rails activesupport::timewithzone#method_missing()","Rails rails::railtie::configurable::classmethods#method_missing()","Rails activemodel::attributemethods::classmethods::attributemethodmatcher#method_name()","Rails module#method_names()","Rails actiondispatch::request#method_symbol()","Ruby object#methods()","Rails actioncontroller::metal::middleware()","Rails activesupport::cache::strategy::localcache#middleware()","Rails rails::engine::configuration#middleware()","Rails rails::server#middleware()","Rails date#midnight()","Rails datetime#midnight()","Rails time#midnight()","Rails activerecord::migration::migrate()","Rails activerecord::migration#migrate()","Rails rails::generators::migration#migration_template()","Rails activerecord::schema#migrations_paths()","Rails actionview::template#mime_type()","Rails activeresource::formats::jsonformat#mime_type()","Rails activeresource::formats::xmlformat#mime_type()","Ruby enumerable#min()","Ruby range#min()","Ruby time#min()","Ruby enumerable#min_by()","Rails activerecord::calculations#minimum()","Ruby enumerable#minmax()","Ruby enumerable#minmax_by()","Rails time#minus_with_coercion()","Rails time#minus_without_coercion()","Rails time#minus_without_duration()","Rails numeric#minute()","Rails numeric#minutes()","Rails nameerror#missing_name()","Rails nameerror#missing_name?()","Ruby dir::mkdir()","Ruby time::mktime()","Ruby file::stat#mode()","Rails activemodel::naming#model_name()","Ruby module#module_eval()","Ruby module#module_exec()","Rails rails::generators::namedbase#module_namespacing()","Rails abstractcontroller::helpers::classmethods#modules_for_helpers()","Rails actioncontroller::helpers::classmethods#modules_for_helpers()","Ruby bignum#modulo()","Ruby fixnum#modulo()","Ruby float#modulo()","Ruby numeric#modulo()","Ruby time#mon()","Rails date#monday()","Rails time#monday()","Ruby time#monday?()","Ruby time#month()","Rails integer#month()","Rails integer#months()","Rails date#months_ago()","Rails time#months_ago()","Rails date#months_since()","Rails time#months_since()","Rails actiondispatch::routing::mapper::base#mount()","Rails rails::generators::pluginnewgenerator#mountable?()","Rails benchmark::ms()","Ruby file::mtime()","Ruby file#mtime()","Ruby file::stat#mtime()","Rails actionview::helpers::formbuilder#multipart=()","Rails integer#multiple_of?()","Rails activesupport::cache::store#mute()","Rails rails::generators::pluginnewgenerator#mute()","Rails activerecord::base::mysql2_connection()","Rails rails::generators::appgenerator#mysql_socket()","Ruby encoding#name()","Ruby method#name()","Ruby module#name()","Ruby nameerror#name()","Ruby unboundmethod#name()","Rails activesupport::testing::performance::metrics::base#name()","Rails activesupport::timewithzone::name()","Rails rails::generators::pluginnewgenerator#name()","Ruby encoding::name_list()","Ruby regexp#named_captures()","Ruby encoding#names()","Ruby matchdata#names()","Ruby regexp#names()","Rails qualifiedconstutils::names()","Rails actiondispatch::routing::mapper::resources#namespace()","Rails actiondispatch::routing::mapper::scoping#namespace()","Rails rails::generators::base::namespace()","Rails rails::generators::namedbase#namespace()","Rails rails::generators::namedbase#namespaced?()","Rails rails::generators::namedbase#namespaced_class_path()","Rails rails::generators::namedbase#namespaced_file_path()","Ruby float#nan?()","Rails activerecord::connectionadapters::abstractmysqladapter#native_database_types()","Rails activerecord::connectionadapters::schemastatements#native_database_types()","Rails actioncontroller::responder#navigation_behavior()","Rails actioncontroller::responder#navigation_location()","Rails actiondispatch::http::mimenegotiation#negotiate_mime()","Rails actiondispatch::routing::mapper::resources#nested()","Rails activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","Rails activesupport::hashwithindifferentaccess#nested_under_indifferent_access()","Rails activesupport::orderedhash#nested_under_indifferent_access()","Rails hash#nested_under_indifferent_access()","Ruby module::nesting()","Ruby array::new()","Ruby basicobject::new()","Ruby class#new()","Ruby class::new()","Ruby dir::new()","Ruby encoding::converter::new()","Ruby enumerator::new()","Ruby exception::new()","Ruby file::new()","Ruby file::stat::new()","Ruby hash::new()","Ruby io::new()","Ruby module::new()","Ruby mutex::new()","Ruby nameerror::new()","Ruby nomethoderror::new()","Ruby proc::new()","Ruby random::new()","Ruby range::new()","Ruby regexp::new()","Ruby rubyvm::instructionsequence::new()","Ruby signalexception::new()","Ruby string::new()","Ruby struct::new()","Ruby systemcallerror::new()","Ruby systemexit::new()","Ruby time::new()","Rails abstractcontroller::doublerendererror::new()","Rails abstractcontroller::layouts::new()","Rails actioncontroller::caching::actions::actioncachepath::new()","Rails actioncontroller::metal::new()","Rails actioncontroller::middleware::new()","Rails actioncontroller::middleware::new()","Rails actioncontroller::middleware::actionmiddleware::new()","Rails actioncontroller::responder::new()","Rails actiondispatch::beststandardssupport::new()","Rails actiondispatch::bodyproxy::new()","Rails actiondispatch::callbacks::new()","Rails actiondispatch::cookies::new()","Rails actiondispatch::debugexceptions::new()","Rails actiondispatch::exceptionwrapper::new()","Rails actiondispatch::filehandler::new()","Rails actiondispatch::flash::new()","Rails actiondispatch::head::new()","Rails actiondispatch::http::headers::new()","Rails actiondispatch::http::parameterfilter::new()","Rails actiondispatch::http::uploadedfile::new()","Rails actiondispatch::integration::session::new()","Rails actiondispatch::middlewarestack::new()","Rails actiondispatch::middlewarestack::middleware::new()","Rails actiondispatch::paramsparser::new()","Rails actiondispatch::publicexceptions::new()","Rails actiondispatch::railsentitystore::new()","Rails actiondispatch::railsmetastore::new()","Rails actiondispatch::reloader::new()","Rails actiondispatch::remoteip::new()","Rails actiondispatch::remoteip::getip::new()","Rails actiondispatch::requestid::new()","Rails actiondispatch::rescue::new()","Rails actiondispatch::response::new()","Rails actiondispatch::routing::mapper::resources#new()","Rails actiondispatch::routing::urlfor::new()","Rails actiondispatch::session::cachestore::new()","Rails actiondispatch::session::compatibility::new()","Rails actiondispatch::session::memcachestore::new()","Rails actiondispatch::showexceptions::new()","Rails actiondispatch::static::new()","Rails actiondispatch::testrequest::new()","Rails actiondispatch::testrequest::new()","Rails actionmailer::base::new()","Rails actionmailer::collector::new()","Rails actionmailer::noninferrablemailererror::new()","Rails actionview::filesystemresolver::new()","Rails actionview::fixtureresolver::new()","Rails actionview::helpers::assettaghelper::assetincludetag::new()","Rails actionview::helpers::atomfeedhelper::atombuilder::new()","Rails actionview::helpers::atomfeedhelper::atomfeedbuilder::new()","Rails actionview::helpers::formbuilder::new()","Rails actionview::helpers::instancetag::new()","Rails actionview::helpers::numberhelper::invalidnumbererror::new()","Rails actionview::partialrenderer::new()","Rails actionview::renderer::new()","Rails actionview::resolver::new()","Rails actionview::resolver::path::new()","Rails actionview::template::new()","Rails actionview::testcase::behavior::classmethods#new()","Rails actionview::testcase::testcontroller::new()","Rails activemodel::attributemethods::classmethods::attributemethodmatcher::new()","Rails activemodel::blockvalidator::new()","Rails activemodel::eachvalidator::new()","Rails activemodel::errors::new()","Rails activemodel::massassignmentsecurity::loggersanitizer::new()","Rails activemodel::massassignmentsecurity::sanitizer::new()","Rails activemodel::name::new()","Rails activemodel::observer::new()","Rails activemodel::observerarray::new()","Rails activemodel::validations::acceptancevalidator::new()","Rails activemodel::validations::lengthvalidator::new()","Rails activemodel::validator::new()","Rails activerecord::attributeassignmenterror::new()","Rails activerecord::base::new()","Rails activerecord::connectionadapters::abstractmysqladapter::new()","Rails activerecord::connectionadapters::connectionhandler::new()","Rails activerecord::connectionadapters::connectionmanagement::new()","Rails activerecord::connectionadapters::connectionpool::new()","Rails activerecord::connectionadapters::mysql2adapter::new()","Rails activerecord::connectionadapters::mysqladapter::new()","Rails activerecord::connectionadapters::mysqladapter::statementpool::new()","Rails activerecord::connectionadapters::postgresqladapter::new()","Rails activerecord::connectionadapters::postgresqladapter::statementpool::new()","Rails activerecord::connectionadapters::sqliteadapter::new()","Rails activerecord::connectionadapters::sqliteadapter::statementpool::new()","Rails activerecord::connectionadapters::sqliteadapter::version::new()","Rails activerecord::connectionadapters::schemacache::new()","Rails activerecord::connectionadapters::statementpool::new()","Rails activerecord::connectionadapters::table::new()","Rails activerecord::connectionadapters::tabledefinition::new()","Rails activerecord::dynamicfindermatch::new()","Rails activerecord::dynamicscopematch::new()","Rails activerecord::fixtures::new()","Rails activerecord::fixtures::file::new()","Rails activerecord::identitymap::middleware::new()","Rails activerecord::logsubscriber::new()","Rails activerecord::migration::new()","Rails activerecord::migration::commandrecorder::new()","Rails activerecord::migrationproxy::new()","Rails activerecord::multiparameterassignmenterrors::new()","Rails activerecord::querycache::new()","Rails activerecord::recordinvalid::new()","Rails activerecord::reflection::macroreflection::new()","Rails activerecord::relation::new()","Rails activerecord::relation#new()","Rails activerecord::result::new()","Rails activerecord::sessionstore::session::new()","Rails activerecord::sessionstore::sqlbypass::new()","Rails activerecord::staleobjecterror::new()","Rails activerecord::unknownprimarykey::new()","Rails activerecord::validations::uniquenessvalidator::new()","Rails activerecord::wrappeddatabaseexception::new()","Rails activeresource::base::new()","Rails activeresource::connection::new()","Rails activeresource::request::new()","Rails activeresource::response::new()","Rails activeresource::sslerror::new()","Rails activeresource::timeouterror::new()","Rails activesupport::backtracecleaner::new()","Rails activesupport::bufferedlogger::new()","Rails activesupport::cache::entry::new()","Rails activesupport::cache::filestore::new()","Rails activesupport::cache::memcachestore::new()","Rails activesupport::cache::memorystore::new()","Rails activesupport::cache::nullstore::new()","Rails activesupport::cache::store::new()","Rails activesupport::cache::strategy::localcache::localstore::new()","Rails activesupport::dependencies::classcache::new()","Rails activesupport::dependencies::watchstack::new()","Rails activesupport::fileupdatechecker::new()","Rails activesupport::filewatcher::new()","Rails activesupport::filewatcher::backend::new()","Rails activesupport::gzip::stream::new()","Rails activesupport::hashwithindifferentaccess::new()","Rails activesupport::hashwithindifferentaccess::new()","Rails activesupport::inflector::inflections::new()","Rails activesupport::inheritableoptions::new()","Rails activesupport::json::encoding::encoder::new()","Rails activesupport::logsubscriber::testhelper::mocklogger::new()","Rails activesupport::messageencryptor::new()","Rails activesupport::messageverifier::new()","Rails activesupport::multibyte::chars::new()","Rails activesupport::multibyte::unicode::databasegenerator::new()","Rails activesupport::multibyte::unicode::unicodedatabase::new()","Rails activesupport::notifications::event::new()","Rails activesupport::notifications::fanout::new()","Rails activesupport::notifications::instrumenter::new()","Rails activesupport::orderedhash::new()","Rails activesupport::safebuffer::new()","Rails activesupport::safebuffer::safeconcaterror::new()","Rails activesupport::taggedlogging::new()","Rails activesupport::testing::performance::benchmarker::new()","Rails activesupport::testing::performance::metrics::base::new()","Rails activesupport::testing::performance::metrics::cputime::new()","Rails activesupport::testing::performance::performer::new()","Rails activesupport::testing::performance::profiler::new()","Rails activesupport::testing::proxytestresult::new()","Rails activesupport::testing::remoteerror::new()","Rails activesupport::timewithzone::new()","Rails activesupport::timezone::new()","Rails activesupport::timezone::new()","Rails arjdbcmysql::error::new()","Rails html::selector::new()","Rails mime::type::new()","Rails plugin::new()","Rails rails::actionmethods::new()","Rails rails::application::new()","Rails rails::application::configuration::new()","Rails rails::application::routesreloader::new()","Rails rails::backtracecleaner::new()","Rails rails::commands::info::new()","Rails rails::commands::install::new()","Rails rails::commands::plugin::new()","Rails rails::commands::remove::new()","Rails rails::console::new()","Rails rails::dbconsole::new()","Rails rails::engine::configuration::new()","Rails rails::engine::railties::new()","Rails rails::generators::activemodel::new()","Rails rails::generators::appbase::new()","Rails rails::generators::appgenerator::new()","Rails rails::generators::generatedattribute::new()","Rails rails::generators::pluginnewgenerator::new()","Rails rails::initializable::initializer::new()","Rails rails::paths::path::new()","Rails rails::paths::root::new()","Rails rails::plugin::new()","Rails rails::rack::debugger::new()","Rails rails::rack::logtailer::new()","Rails rails::rack::logger::new()","Rails rails::railtie::configuration::new()","Rails rails::server::new()","Rails railsenvironment::new()","Rails recursivehttpfetcher::new()","Rails sourceannotationextractor::new()","Rails sprockets::bootstrap::new()","Rails sprockets::staticcompiler::new()","Rails activeresource::base#new?()","Rails activesupport::dependencies::watchstack#new_constants()","Rails activeresource::base::new_element_path()","Rails activeresource::base#new_element_path()","Rails activesupport::hashwithindifferentaccess::new_from_hash_copying_default()","Rails activesupport::hashwithindifferentaccess::new_from_hash_copying_default()","Rails activerecord::persistence#new_record?()","Rails activeresource::base#new_record?()","Ruby random::new_seed()","Rails rails::consolemethods#new_session()","Ruby enumerator#next()","Ruby integer#next()","Ruby string#next()","Ruby symbol#next()","Ruby string#next!()","Rails html::selector#next_element()","Rails activerecord::connectionadapters::postgresqladapter::statementpool#next_key()","Rails activerecord::migration#next_migration_number()","Rails date#next_month()","Rails time#next_month()","Rails html::selector#next_selector()","Ruby enumerator#next_values()","Rails date#next_week()","Rails time#next_week()","Rails date#next_year()","Rails time#next_year()","Ruby nilclass#nil?()","Ruby object#nil?()","Ruby file::stat#nlink()","Rails rails::generators::no_color!()","Rails actioncontroller::httpauthentication::digest#nonce()","Ruby enumerable#none?()","Ruby numeric#nonzero?()","Rails activesupport::multibyte::chars#normalize()","Rails activesupport::multibyte::unicode#normalize()","Rails activesupport::multibyte::unicode::databasegenerator#normalize_boundary_map()","Rails actiondispatch::routing::mapper::normalize_name()","Rails actiondispatch::routing::mapper::normalize_path()","Rails actiondispatch::http::cache::request#not_modified?()","Rails actiondispatch::flash::flashhash#notice()","Rails actiondispatch::flash::flashhash#notice=()","Rails activemodel::observing::classmethods#notify_observers()","Ruby time::now()","Rails actiondispatch::flash::flashhash#now()","Rails activesupport::timezone#now()","Rails actiondispatch::flash::flashhash#now_is_loaded?()","Ruby time#nsec()","Rails html::selector#nth_child()","Rails actionview::helpers::formhelper#number_field()","Rails actionview::helpers::formtaghelper#number_field_tag()","Rails actionview::helpers::numberhelper#number_to_currency()","Rails actionview::helpers::numberhelper#number_to_human()","Rails actionview::helpers::numberhelper#number_to_human_size()","Rails actionview::helpers::numberhelper#number_to_percentage()","Rails actionview::helpers::numberhelper#number_to_phone()","Rails actionview::helpers::numberhelper#number_with_delimiter()","Rails actionview::helpers::numberhelper#number_with_precision()","Ruby complex#numerator()","Ruby float#numerator()","Ruby integer#numerator()","Ruby numeric#numerator()","Ruby rational#numerator()","Rails actionview::helpers::activemodelinstancetag#object()","Ruby object#object_id()","Rails activemodel::observer::observe()","Rails activemodel::observer::observed_class()","Rails activemodel::observer::observed_classes()","Rails activerecord::observer#observed_classes()","Rails activemodel::observerarray#observer_class_for()","Rails activemodel::observing::classmethods#observer_instances()","Rails activemodel::observing::classmethods#observers()","Rails activemodel::observing::classmethods#observers=()","Ruby string#oct()","Ruby bignum#odd?()","Ruby fixnum#odd?()","Ruby integer#odd?()","Rails activerecord::logsubscriber#odd?()","Ruby matchdata#offset()","Rails activerecord::querymethods#offset()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_cdata_block()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_characters()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_end_document()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_end_element()","Rails activesupport::on_load()","Rails activesupport::on_load_all()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_start_document()","Rails activesupport::xmlmini_libxmlsax::hashbuilder#on_start_element()","Ruby enumerable#one?()","Rails activerecord::spawnmethods#only()","Rails html::selector#only_child()","Rails actioncontroller::httpauthentication::digest#opaque()","Ruby dir::open()","Ruby file::open()","Ruby io::open()","Ruby kernel#open()","Rails actiondispatch::railsentitystore#open()","Rails activerecord::fixtures::file::open()","Rails activesupport::bufferedlogger#open_log()","Rails actiondispatch::integration::runner#open_session()","Rails rails::server#opt_parser()","Rails actionview::helpers::formoptionshelper#option_groups_from_collection_for_select()","Rails actiondispatch::http::url#optional_port()","Ruby regexp#options()","Rails object#options()","Rails rails::commands::info#options()","Rails rails::commands::install#options()","Rails rails::commands::plugin#options()","Rails rails::commands::remove#options()","Rails activesupport::json::encoding::encoder#options_for()","Rails actionview::helpers::formoptionshelper#options_for_select()","Rails actionview::helpers::formoptionshelper#options_from_collection_for_select()","Rails activerecord::connectionadapters::schemastatements#options_include_default?()","Ruby integer#ord()","Ruby string#ord()","Rails activesupport::multibyte::chars#ord()","Rails string#ord()","Rails activerecord::querymethods#order()","Rails rails::engine#ordered_railties()","Rails activesupport::inflector#ordinalize()","Rails integer#ordinalize()","Rails activeresource::custommethods::orig_delete()","Rails activesupport::safebuffer#original_concat()","Rails actiondispatch::request#original_fullpath()","Rails rails::generators::pluginnewgenerator#original_name()","Rails actiondispatch::request#original_url()","Rails rails::generators::resourcehelpers#orm_class()","Rails rails::generators::resourcehelpers#orm_instance()","Rails activesupport::testing::performance::benchmarker#output_filename()","Rails activesupport::testing::performance::performer#output_filename()","Rails activesupport::testing::performance::profiler#output_filename()","Rails activerecord::connectionadapters::databasestatements#outside_transaction?()","Rails activerecord::connectionadapters::postgresqladapter#outside_transaction?()","Rails range#overlaps?()","Ruby file::owned?()","Ruby file::stat#owned?()","Ruby filetest#owned?()","Ruby method#owner()","Ruby unboundmethod#owner()","Ruby kernel#p()","Ruby array#pack()","Rails activemodel::naming::param_key()","Rails actiondispatch::http::filterparameters#parameter_filter()","Rails actiondispatch::http::filterparameters#parameter_filter_for()","Rails activesupport::inflector#parameterize()","Rails string#parameterize()","Ruby method#parameters()","Ruby proc#parameters()","Ruby unboundmethod#parameters()","Rails actiondispatch::http::parameters#parameters()","Rails actioncontroller::testcase::behavior#paramify_values()","Rails actioncontroller::metal#params()","Rails actiondispatch::http::parameters#params()","Rails actioncontroller::metal#params=()","Rails module#parent()","Rails activerecord::generators::modelgenerator#parent_class_name()","Rails module#parent_name()","Rails activesupport::notifications::event#parent_of?()","Rails abstractcontroller::viewpaths::classmethods#parent_prefixes()","Rails module#parents()","Rails activesupport::multibyte::unicode::databasegenerator#parse()","Rails activesupport::timezone#parse()","Rails activesupport::xmlmini_libxmlsax#parse()","Rails activesupport::xmlmini_nokogirisax#parse()","Rails mime::type::parse()","Rails rails::generators::generatedattribute::parse()","Rails rails::commands::info#parse!()","Rails rails::commands::install#parse!()","Rails rails::commands::plugin#parse!()","Rails rails::commands::plugin::parse!()","Rails rails::commands::remove#parse!()","Rails rails::server::options#parse!()","Rails activesupport::multibyte::unicode::databasegenerator#parse_codepoints()","Rails activesupport::multibyte::unicode::databasegenerator#parse_composition_exclusion()","Rails activesupport::multibyte::unicode::databasegenerator#parse_cp1252()","Rails mime::type::parse_data_with_trailing_star()","Rails activesupport::json::parse_error()","Rails activesupport::multibyte::unicode::databasegenerator#parse_grapheme_break_property()","Rails actiondispatch::request#parse_query()","Rails activemodel::validations::numericalityvalidator#parse_raw_value_as_a_number()","Rails activemodel::validations::numericalityvalidator#parse_raw_value_as_an_integer()","Rails uri::parser()","Ruby enumerable#partition()","Ruby string#partition()","Ruby thread::pass()","Rails activeresource::base::password()","Rails activemodel::securepassword::instancemethodsonactivation#password=()","Rails activeresource::base::password=()","Rails activeresource::connection#password=()","Rails actionview::helpers::formhelper#password_field()","Rails actionview::helpers::formtaghelper#password_field_tag()","Rails activesupport::timewithzone#past?()","Rails date#past?()","Rails datetime#past?()","Rails time#past?()","Ruby argf#path()","Ruby dir#path()","Ruby file::path()","Ruby file#path()","Rails loaderror#path()","Rails loaderror#path()","Rails actiondispatch::testrequest#path=()","Rails sprockets::staticcompiler#path_for()","Rails actiondispatch::http::parameters#path_parameters()","Rails sprockets::helpers::railshelper#path_to_asset()","Rails actionview::helpers::assettaghelper#path_to_audio()","Rails actionview::helpers::assettaghelper#path_to_font()","Rails sprockets::helpers::railshelper#path_to_font()","Rails actionview::helpers::assettaghelper#path_to_image()","Rails sprockets::helpers::railshelper#path_to_image()","Rails actionview::helpers::assettaghelper::javascripttaghelpers#path_to_javascript()","Rails sprockets::helpers::railshelper#path_to_javascript()","Rails actionview::helpers::assettaghelper::stylesheettaghelpers#path_to_stylesheet()","Rails sprockets::helpers::railshelper#path_to_stylesheet()","Rails actionview::helpers::assettaghelper#path_to_video()","Rails rails::application::configuration#paths()","Rails rails::engine::configuration#paths()","Ruby enumerator#peek()","Ruby enumerator#peek_values()","Rails activesupport::testing::pending#pending()","Rails activerecord::validations#perform_validations()","Rails actioncontroller::metal#performed?()","Rails activesupport::timewithzone#period()","Rails activesupport::timezone#period_for_local()","Rails activesupport::timezone#period_for_utc()","Ruby array#permutation()","Rails activerecord::persistence#persisted?()","Rails activeresource::base#persisted?()","Rails numeric#petabyte()","Rails numeric#petabytes()","Ruby complex#phase()","Ruby float#phase()","Ruby numeric#phase()","Rails actionview::helpers::formhelper#phone_field()","Rails actionview::helpers::formtaghelper#phone_field_tag()","Ruby io#pid()","Ruby process::pid()","Ruby process::status#pid()","Ruby io::pipe()","Ruby file::pipe?()","Ruby file::stat#pipe?()","Ruby filetest#pipe?()","Rails activerecord::connectionadapters::abstractmysqladapter#pk_and_sequence_for()","Rails activemodel::attributemethods::classmethods::attributemethodmatcher#plain?()","Rails activerecord::calculations#pluck()","Rails rails::generators::actions#plugin()","Rails rails::engine::railties#plugins()","Rails activemodel::naming::plural()","Rails activesupport::inflector::inflections#plural()","Rails rails::generators::namedbase#plural_file_name()","Rails rails::generators::namedbase#plural_name()","Rails rails::generators::namedbase#plural_table_name()","Rails actionview::helpers::texthelper#pluralize()","Rails activesupport::inflector#pluralize()","Rails string#pluralize()","Rails rails::generators::namedbase#pluralize_table_names?()","Ruby complex::polar()","Ruby complex#polar()","Ruby numeric#polar()","Rails actiondispatch::routing::polymorphicroutes#polymorphic_path()","Rails actiondispatch::routing::polymorphicroutes#polymorphic_url()","Ruby array#pop()","Rails recursivehttpfetcher#pop_d()","Rails activesupport::taggedlogging#pop_tags()","Ruby io::popen()","Rails activerecord::scoping#populate_with_current_scope_attributes()","Rails actiondispatch::http::url#port()","Rails actiondispatch::testrequest#port=()","Rails actiondispatch::http::url#port_string()","Ruby argf#pos()","Ruby dir#pos()","Ruby io#pos()","Ruby argf#pos=()","Ruby dir#pos=()","Ruby io#pos=()","Rails actioncontroller::testcase::behavior#post()","Rails actiondispatch::integration::requesthelpers#post()","Rails actiondispatch::routing::mapper::httphelpers#post()","Rails activeresource::connection#post()","Rails activeresource::custommethods::post()","Rails activeresource::custommethods#post()","Rails actiondispatch::request#post?()","Ruby matchdata#post_match()","Rails actiondispatch::integration::requesthelpers#post_via_redirect()","Rails activerecord::connectionadapters::postgresqladapter#postgresql_version()","Ruby process::ppid()","Ruby matchdata#pre_match()","Rails float#precisionless_round()","Ruby integer#pred()","Rails activerecord::connectionadapters::abstractadapter#prefetch_primary_key?()","Rails activeresource::base::prefix()","Rails activeresource::base::prefix=()","Rails activeresource::base::prefix_source()","Rails activerecord::querymethods#preload()","Rails actiondispatch::reloader::prepare!()","Rails actiondispatch::response#prepare!()","Rails actioncontroller::testcase::behavior::classmethods#prepare_controller_class()","Rails rails::generators::testcase#prepare_destination()","Ruby string#prepend()","Rails abstractcontroller::callbacks::classmethods#prepend_after_filter()","Rails abstractcontroller::callbacks::classmethods#prepend_around_filter()","Rails abstractcontroller::callbacks::classmethods#prepend_before_filter()","Rails abstractcontroller::viewpaths#prepend_view_path()","Rails abstractcontroller::viewpaths::classmethods#prepend_view_path()","Rails object#presence()","Rails object#present?()","Rails date#prev_month()","Rails time#prev_month()","Rails date#prev_week()","Rails time#prev_week()","Rails date#prev_year()","Rails time#prev_year()","Rails activemodel::dirty#previous_changes()","Rails activerecord::attributemethods::primarykey::classmethods#primary_key()","Rails activerecord::connectionadapters::abstractmysqladapter#primary_key()","Rails activerecord::connectionadapters::postgresqladapter#primary_key()","Rails activerecord::connectionadapters::tabledefinition#primary_key()","Rails activeresource::base::primary_key()","Rails activerecord::attributemethods::primarykey::classmethods#primary_key=()","Rails activerecord::connectionadapters::connectionpool#primary_keys()","Rails activesupport::memoizable::instancemethods#prime_cache()","Ruby encoding::converter#primitive_convert()","Ruby encoding::converter#primitive_errinfo()","Ruby argf#print()","Ruby io#print()","Ruby kernel#print()","Ruby argf#printf()","Ruby io#printf()","Ruby kernel#printf()","Ruby thread#priority()","Ruby thread#priority=()","Ruby module#private_class_method()","Ruby module#private_instance_methods()","Ruby module#private_method_defined?()","Ruby object#private_methods()","Ruby kernel#proc()","Rails abstractcontroller::base#process()","Rails actioncontroller::middleware#process()","Rails actioncontroller::templateassertions#process()","Rails actioncontroller::testcase::behavior#process()","Rails abstractcontroller::callbacks#process_action()","Rails actioncontroller::instrumentation#process_action()","Rails actioncontroller::logsubscriber#process_action()","Rails actioncontroller::paramswrapper#process_action()","Rails html::whitelistsanitizer#process_attributes_for()","Rails html::fullsanitizer#process_node()","Rails html::linksanitizer#process_node()","Rails html::sanitizer#process_node()","Rails html::whitelistsanitizer#process_node()","Rails activemodel::massassignmentsecurity::loggersanitizer#process_removed_attributes()","Rails activemodel::massassignmentsecurity::sanitizer#process_removed_attributes()","Rails activemodel::massassignmentsecurity::strictsanitizer#process_removed_attributes()","Rails actionview::base::process_view_paths()","Rails actioncontroller::testing#process_with_new_base_test()","Ruby array#product()","Rails activesupport::testing::performance::metrics::base#profile()","Rails rails::infocontroller#properties()","Rails rails::info::property()","Rails actioncontroller::requestforgeryprotection#protect_against_forgery?()","Rails actioncontroller::requestforgeryprotection::classmethods#protect_from_forgery()","Rails activemodel::massassignmentsecurity::classmethods#protected_attributes()","Ruby module#protected_instance_methods()","Ruby module#protected_method_defined?()","Ruby object#protected_methods()","Rails actiondispatch::http::url#protocol()","Rails actionview::helpers::capturehelper#provide()","Rails activeresource::base::proxy()","Rails activeresource::base::proxy=()","Rails activeresource::connection#proxy=()","Rails activesupport::multibyte::proxy_class()","Rails activesupport::multibyte::proxy_class=()","Rails activesupport::cache::memorystore#prune()","Rails activesupport::cache::memorystore#pruning?()","Ruby module#public_class_method()","Rails rails::appbuilder#public_directory()","Ruby module#public_instance_method()","Ruby module#public_instance_methods()","Ruby object#public_method()","Ruby module#public_method_defined?()","Ruby object#public_methods()","Rails rails::public_path()","Ruby object#public_send()","Rails activesupport::notifications::publish()","Rails activesupport::notifications::fanout#publish()","Ruby array#push()","Rails recursivehttpfetcher#push_d()","Rails activesupport::taggedlogging#push_tags()","Rails actioncontroller::testcase::behavior#put()","Rails actiondispatch::integration::requesthelpers#put()","Rails actiondispatch::routing::mapper::httphelpers#put()","Rails activeresource::connection#put()","Rails activeresource::custommethods#put()","Rails activeresource::custommethods::put()","Rails actiondispatch::request#put?()","Rails actiondispatch::integration::requesthelpers#put_via_redirect()","Ruby encoding::converter#putback()","Ruby argf#putc()","Ruby io#putc()","Ruby kernel#putc()","Ruby argf#puts()","Ruby io#puts()","Ruby kernel#puts()","Ruby dir::pwd()","Rails module#qualified_const_defined?()","Rails module#qualified_const_get()","Rails module#qualified_const_set()","Rails actionview::nullresolver#query()","Rails activerecord::attributemethods::query#query_attribute()","Rails actiondispatch::request#query_parameters()","Rails kernel#quietly()","Ruby complex#quo()","Ruby float#quo()","Ruby numeric#quo()","Ruby rational#quo()","Ruby regexp::quote()","Rails activerecord::connectionadapters::abstractmysqladapter#quote()","Rails activerecord::connectionadapters::quoting#quote()","Rails activerecord::connectionadapters::quoting#quote_column_name()","Rails activerecord::connectionadapters::mysql2adapter#quote_string()","Rails activerecord::connectionadapters::quoting#quote_string()","Rails activerecord::connectionadapters::abstractadapter#quote_table_name()","Rails activerecord::connectionadapters::postgresqladapter#quote_table_name()","Rails activerecord::connectionadapters::quoting#quote_table_name()","Rails activerecord::connectionadapters::abstractmysqladapter#quoted_columns_for_index()","Rails activerecord::connectionadapters::schemastatements#quoted_columns_for_index()","Rails activerecord::connectionadapters::quoting#quoted_date()","Rails activerecord::connectionadapters::abstractmysqladapter#quoted_false()","Rails activerecord::connectionadapters::quoting#quoted_false()","Rails activerecord::locking::optimistic::classmethods#quoted_locking_column()","Rails activerecord::attributemethods::primarykey::classmethods#quoted_primary_key()","Rails activerecord::modelschema::classmethods#quoted_table_name()","Rails activerecord::connectionadapters::abstractmysqladapter#quoted_true()","Rails activerecord::connectionadapters::quoting#quoted_true()","Rails actiondispatch::testrequest#rack_cookies()","Rails actionview::helpers::formbuilder#radio_button()","Rails actionview::helpers::formhelper#radio_button()","Rails actionview::helpers::instancetag::radio_button_checked?()","Rails actionview::helpers::formtaghelper#radio_button_tag()","Rails ","Rails rails::generators::appbase#rails_gemfile_entry()","Rails rails::plugin#railtie_name()","Rails rails::railtie::railtie_name()","Rails rails::railtie#railtie_namespace()","Rails rails::engine#railties()","Rails rails::engine::railties::railties()","Ruby kernel#raise()","Ruby thread#raise()","Rails activesupport::basicobject#raise()","Rails qualifiedconstutils::raise_if_absolute()","Rails rails::generators::actions#rake()","Rails rails::railtie::rake_tasks()","Rails rails::appbuilder#rakefile()","Rails rails::generators::actions#rakefile()","Rails rails::pluginbuilder#rakefile()","Rails rails::generators::pluginnewgenerator#rakefile_test_tasks()","Ruby kernel#rand()","Ruby random#rand()","Ruby random::rand()","Rails actionview::helpers::formhelper#range_field()","Rails actionview::helpers::formtaghelper#range_field_tag()","Ruby array#rassoc()","Ruby env::rassoc()","Ruby hash#rassoc()","Ruby complex#rationalize()","Ruby float#rationalize()","Ruby integer#rationalize()","Ruby nilclass#rationalize()","Ruby rational#rationalize()","Rails actionview::helpers::outputsafetyhelper#raw()","Rails activerecord::connectionadapters::abstractadapter#raw_connection()","Rails actiondispatch::http::url#raw_host_with_port()","Rails actiondispatch::request#raw_post()","Rails activesupport::cache::entry#raw_value()","Rails activerecord::attributemethods::write#raw_write_attribute()","Ruby file::stat#rdev()","Ruby file::stat#rdev_major()","Ruby file::stat#rdev_minor()","Ruby process::gid::re_exchange()","Ruby process::uid::re_exchange()","Ruby process::gid::re_exchangeable?()","Ruby process::uid::re_exchangeable?()","Ruby argf#read()","Ruby dir#read()","Ruby io::read()","Ruby io#read()","Rails actiondispatch::http::uploadedfile#read()","Rails actiondispatch::railsentitystore#read()","Rails actiondispatch::railsmetastore#read()","Rails activesupport::cache::store#read()","Rails activerecord::attributemethods::read#read_attribute()","Rails activerecord::attributemethods::beforetypecast#read_attribute_before_type_cast()","Rails activerecord::attributemethods::serialization#read_attribute_before_type_cast()","Rails activesupport::cache::filestore#read_entry()","Rails activesupport::cache::strategy::localcache::localstore#read_entry()","Rails actioncontroller::caching::fragments#read_fragment()","Rails activesupport::cache::memcachestore#read_multi()","Rails activesupport::cache::store#read_multi()","Ruby argf#read_nonblock()","Ruby io#read_nonblock()","Ruby file::readable?()","Ruby file::stat#readable?()","Ruby filetest#readable?()","Rails date#readable_inspect()","Rails datetime#readable_inspect()","Ruby file::readable_real?()","Ruby file::stat#readable_real?()","Ruby filetest#readable_real?()","Ruby encoding::invalidbytesequenceerror#readagain_bytes()","Ruby argf#readbyte()","Ruby io#readbyte()","Ruby argf#readchar()","Ruby io#readchar()","Ruby argf#readline()","Ruby io#readline()","Ruby kernel#readline()","Ruby argf#readlines()","Ruby io::readlines()","Ruby io#readlines()","Ruby kernel#readlines()","Ruby file::readlink()","Rails rails::appbuilder#readme()","Rails rails::generators::actions#readme()","Rails rails::pluginbuilder#readme()","Rails activerecord::querymethods#readonly()","Rails activerecord::base#readonly!()","Rails activerecord::base#readonly?()","Rails activerecord::readonlyattributes::classmethods#readonly_attributes()","Ruby argf#readpartial()","Ruby io#readpartial()","Ruby complex#real()","Ruby numeric#real()","Ruby complex#real?()","Ruby numeric#real?()","Ruby file::realdirpath()","Ruby file::realpath()","Ruby localjumperror#reason()","Rails actionmailer::base::receive()","Rails actionmailer::logsubscriber#receive()","Ruby method#receiver()","Rails activerecord::connectionadapters::abstractadapter#reconnect!()","Rails activerecord::connectionadapters::mysql2adapter#reconnect!()","Rails activerecord::connectionadapters::mysqladapter#reconnect!()","Rails activerecord::connectionadapters::postgresqladapter#reconnect!()","Rails activerecord::migration::commandrecorder#record()","Rails activesupport::testing::performance::benchmarker#record()","Rails activesupport::testing::performance::profiler#record()","Rails actioncontroller::recordidentifier#record_key_for_dom_id()","Rails activerecord::connectionadapters::abstractmysqladapter#recreate_database()","Ruby complex#rect()","Ruby complex::rect()","Ruby numeric#rect()","Ruby complex#rectangular()","Ruby complex::rectangular()","Ruby numeric#rectangular()","Rails actioncontroller::testresponse#recycle!()","Rails actioncontroller::testing#recycle!()","Rails module#redefine_method()","Rails actiondispatch::routing::redirection#redirect()","Rails actioncontroller::flash#redirect_to()","Rails actioncontroller::instrumentation#redirect_to()","Rails actioncontroller::logsubscriber#redirect_to()","Rails actioncontroller::redirecting#redirect_to()","Rails actiondispatch::testprocess#redirect_to_url()","Rails actiondispatch::response#redirect_url()","Ruby enumerable#reduce()","Rails mime::type#ref()","Rails rails::generators::generatedattribute#reference?()","Rails activerecord::connectionadapters::table#references()","Rails activerecord::connectionadapters::tabledefinition#references()","Rails activerecord::reflection::classmethods#reflect_on_aggregation()","Rails activerecord::reflection::classmethods#reflect_on_all_aggregations()","Rails activerecord::reflection::classmethods#reflect_on_all_associations()","Rails activerecord::reflection::classmethods#reflect_on_all_autosave_associations()","Rails activerecord::reflection::classmethods#reflect_on_association()","Rails actionview::template#refresh()","Ruby matchdata#regexp()","Rails mime::type::register()","Rails mime::type::register_alias()","Rails sprockets::compressors::register_css_compressor()","Rails actionmailer::base::register_interceptor()","Rails actionmailer::base::register_interceptors()","Rails actionview::helpers::assettaghelper::javascripttaghelpers::classmethods#register_javascript_expansion()","Rails sprockets::compressors::register_js_compressor()","Rails actionmailer::base::register_observer()","Rails actionmailer::base::register_observers()","Rails actionview::helpers::assettaghelper::stylesheettaghelpers::classmethods#register_stylesheet_expansion()","Rails sprockets::compressors::registered_css_compressor()","Rails sprockets::compressors::registered_js_compressor()","Rails rails::generators::namedbase#regular_class_path()","Rails activesupport::hashwithindifferentaccess#regular_update()","Rails activesupport::hashwithindifferentaccess#regular_update()","Rails activesupport::hashwithindifferentaccess#regular_writer()","Rails activesupport::hashwithindifferentaccess#regular_writer()","Ruby env::rehash()","Ruby hash#rehash()","Rails activerecord::identitymap#reinit_with()","Ruby array#reject()","Ruby env::reject()","Ruby enumerable#reject()","Ruby hash#reject()","Rails activesupport::orderedhash#reject()","Ruby array#reject!()","Ruby env::reject!()","Ruby hash#reject!()","Rails activesupport::orderedhash#reject!()","Rails activerecord::connectionadapters::connectionpool#release_connection()","Rails activerecord::connectionadapters::abstractadapter#release_savepoint()","Rails activerecord::connectionadapters::abstractmysqladapter#release_savepoint()","Rails activerecord::connectionadapters::postgresqladapter#release_savepoint()","Rails activerecord::connectionadapters::sqliteadapter#release_savepoint()","Rails activerecord::autosaveassociation#reload()","Rails activerecord::persistence#reload()","Rails activerecord::relation#reload()","Rails activeresource::base#reload()","Rails rails::application::routesreloader#reload!()","Rails rails::consolemethods#reload!()","Rails rails::application#reload_dependencies?()","Rails rails::application#reload_routes!()","Rails i18n::railtie::reloader()","Rails i18n::railtie::reloader_paths()","Ruby bignum#remainder()","Ruby numeric#remainder()","Rails actiondispatch::testrequest#remote_addr=()","Rails actiondispatch::request#remote_ip()","Rails activerecord::connectionadapters::table#remove()","Rails activerecord::identitymap::remove()","Rails activerecord::connectionadapters::table#remove_belongs_to()","Rails activerecord::identitymap::remove_by_id()","Ruby module#remove_class_variable()","Rails activerecord::connectionadapters::schemastatements#remove_column()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_column_sql()","Rails activerecord::connectionadapters::schemastatements#remove_columns()","Rails activerecord::base::remove_connection()","Rails activerecord::connectionadapters::connectionhandler#remove_connection()","Rails activesupport::backtracecleaner#remove_filters!()","Rails rails::generators::base::remove_hook_for()","Rails activerecord::connectionadapters::schemastatements#remove_index()","Rails activerecord::connectionadapters::table#remove_index()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_index_sql()","Rails activemodel::massassignmentsecurity::permissionset#remove_multiparameter_id()","Rails module#remove_possible_method()","Rails activerecord::connectionadapters::table#remove_references()","Rails activeresource::formats::remove_root()","Rails activesupport::backtracecleaner#remove_silencers!()","Rails activerecord::connectionadapters::schemastatements#remove_timestamps()","Rails activerecord::connectionadapters::table#remove_timestamps()","Rails activerecord::connectionadapters::abstractmysqladapter#remove_timestamps_sql()","Ruby file::rename()","Rails activerecord::connectionadapters::table#rename()","Rails activerecord::connectionadapters::postgresqladapter#rename_column()","Rails activerecord::connectionadapters::schemastatements#rename_column()","Rails activerecord::connectionadapters::abstractmysqladapter#rename_column_sql()","Rails activerecord::connectionadapters::postgresqladapter#rename_index()","Rails activerecord::connectionadapters::schemastatements#rename_index()","Rails activesupport::xmlmini#rename_key()","Rails activerecord::connectionadapters::abstractmysqladapter#rename_table()","Rails activerecord::connectionadapters::postgresqladapter#rename_table()","Rails activerecord::connectionadapters::sqliteadapter#rename_table()","Rails activerecord::connectionadapters::schemastatements#rename_table()","Rails abstractcontroller::rendering#render()","Rails actioncontroller::instrumentation#render()","Rails actionview::helpers::renderinghelper#render()","Rails actionview::partialrenderer#render()","Rails actionview::renderer#render()","Rails actionview::template#render()","Rails actionview::testcase::behavior#render()","Rails actionview::testcase::behavior::locals#render()","Rails actionview::renderer#render_body()","Rails actionview::logsubscriber#render_collection()","Rails actionview::partialrenderer#render_collection()","Rails actionview::logsubscriber#render_partial()","Rails actionview::partialrenderer#render_partial()","Rails actionview::logsubscriber#render_template()","Rails abstractcontroller::rendering#render_to_body()","Rails actioncontroller::compatibility#render_to_body()","Rails actioncontroller::renderers#render_to_body()","Rails abstractcontroller::rendering#render_to_string()","Rails actioncontroller::rendering#render_to_string()","Ruby io#reopen()","Rails activerecord::querymethods#reorder()","Rails activesupport::multibyte::unicode#reorder_characters()","Ruby array#repeated_combination()","Ruby array#repeated_permutation()","Ruby array#replace()","Ruby env::replace()","Ruby hash#replace()","Ruby string#replace()","Rails activesupport::orderedhash#replace()","Ruby encoding::converter#replacement()","Ruby encoding::converter#replacement=()","Ruby encoding#replicate()","Ruby gc::profiler::report()","Rails activesupport::testing::performance::performer#report()","Rails activerecord::identitymap::repository()","Rails activeresource::logsubscriber#request()","Rails actioncontroller::httpauthentication::basic::controllermethods#request_http_basic_authentication()","Rails actioncontroller::httpauthentication::digest::controllermethods#request_http_digest_authentication()","Rails actioncontroller::httpauthentication::token::controllermethods#request_http_token_authentication()","Rails actiondispatch::request#request_method()","Rails actiondispatch::testrequest#request_method=()","Rails actiondispatch::request#request_method_symbol()","Rails actiondispatch::request#request_parameters()","Rails actiondispatch::testrequest#request_uri=()","Rails actiondispatch::integration::requesthelpers#request_via_redirect()","Rails activeresource::connection::requests()","Rails activeresource::httpmock::requests()","Ruby kernel#require()","Rails actionview::template::handlers::builder#require_engine()","Rails activerecord::testfixtures::classmethods#require_fixture_classes()","Ruby kernel#require_relative()","Rails activesupport::timezone::require_tzinfo()","Rails activerecord::connectionadapters::abstractadapter#requires_reloading?()","Rails activerecord::connectionadapters::sqliteadapter#requires_reloading?()","Rails actioncontroller::compatibility#rescue_action()","Rails actioncontroller::testcase::raiseactionexceptions#rescue_action_without_handler()","Rails actiondispatch::rescue#rescue_from()","Rails activesupport::rescuable::classmethods#rescue_from()","Rails actiondispatch::showexceptions::rescue_responses()","Rails actiondispatch::exceptionwrapper#rescue_template()","Rails actiondispatch::showexceptions::rescue_templates()","Rails actioncontroller::rescue#rescue_with_handler()","Rails activesupport::rescuable#rescue_with_handler()","Rails activerecord::relation#reset()","Rails actiondispatch::integration::runner#reset!()","Rails actiondispatch::integration::session#reset!()","Rails activerecord::connectionadapters::abstractadapter#reset!()","Rails activerecord::connectionadapters::mysql2adapter#reset!()","Rails activerecord::connectionadapters::mysqladapter#reset!()","Rails activerecord::connectionadapters::postgresqladapter#reset!()","Rails activeresource::httpmock::reset!()","Rails activerecord::fixtures::reset_cache()","Rails activesupport::callbacks::classmethods#reset_callbacks()","Rails activerecord::modelschema::classmethods#reset_column_information()","Rails activerecord::countercache#reset_counters()","Rails actionview::helpers::texthelper#reset_cycle()","Rails activerecord::locking::optimistic::classmethods#reset_locking_column()","Rails activerecord::logsubscriber::reset_runtime()","Rails activerecord::connectionadapters::databasestatements#reset_sequence!()","Rails actioncontroller::rackdelegation#reset_session()","Rails actiondispatch::request#reset_session()","Rails actiondispatch::railsentitystore::resolve()","Rails actiondispatch::railsmetastore::resolve()","Rails actiondispatch::routing::mapper::resources#resource()","Rails actioncontroller::responder#resource_errors()","Rails actioncontroller::responder#resource_location()","Rails actioncontroller::responder#resourceful?()","Rails actiondispatch::routing::mapper::resources#resources()","Rails actiondispatch::routing::mapper::resources#resources_path_names()","Rails actioncontroller::responder#respond()","Rails actioncontroller::mimeresponds#respond_to()","Rails actioncontroller::mimeresponds::classmethods#respond_to()","Rails activeresource::httpmock::respond_to()","Ruby object#respond_to?()","Rails actiondispatch::bodyproxy#respond_to?()","Rails actiondispatch::integration::runner#respond_to?()","Rails actiondispatch::response#respond_to?()","Rails activemodel::attributemethods#respond_to?()","Rails activerecord::delegation#respond_to?()","Rails activerecord::dynamicmatchers#respond_to?()","Rails activeresource::base#respond_to?()","Rails activesupport::bufferedlogger#respond_to?()","Rails activesupport::multibyte::chars#respond_to?()","Rails activesupport::orderedoptions#respond_to?()","Rails activesupport::timewithzone#respond_to?()","Rails rails::railtie::configurable::classmethods#respond_to?()","Rails rails::railtie::configuration#respond_to?()","Ruby object#respond_to_missing?()","Rails activemodel::attributemethods#respond_to_without_attributes?()","Rails activeresource::base#respond_to_without_attributes?()","Rails actioncontroller::mimeresponds#respond_with()","Rails actioncontroller::metal#response_body=()","Rails actioncontroller::rackdelegation#response_body=()","Rails actiondispatch::response#response_code()","Rails actiondispatch::assertions::selectorassertions#response_from_page()","Rails actioncontroller::responder#response_overridden?()","Rails activeresource::httpmock::responses()","Ruby marshal::restore()","Ruby gc::profiler::result()","Ruby stopiteration#result()","Ruby fiber#resume()","Rails actionview::helpers::instancetag#retrieve_autoindex()","Rails activerecord::base::retrieve_connection()","Rails activerecord::connectionadapters::connectionhandler#retrieve_connection_pool()","Rails actionview::helpers::instancetag#retrieve_object()","Ruby array#reverse()","Ruby string#reverse()","Rails activesupport::multibyte::chars#reverse()","Ruby array#reverse!()","Ruby string#reverse!()","Ruby array#reverse_each()","Ruby enumerable#reverse_each()","Rails activesupport::hashwithindifferentaccess#reverse_merge()","Rails activesupport::hashwithindifferentaccess#reverse_merge()","Rails hash#reverse_merge()","Rails activesupport::hashwithindifferentaccess#reverse_merge!()","Rails activesupport::hashwithindifferentaccess#reverse_merge!()","Rails hash#reverse_merge!()","Rails activerecord::querymethods#reverse_order()","Rails hash#reverse_update()","Rails activerecord::migration#revert()","Rails activerecord::migration#reverting?()","Ruby argf#rewind()","Ruby dir#rewind()","Ruby enumerator#rewind()","Ruby io#rewind()","Rails activesupport::timewithzone#rfc2822()","Rails date#rfc3339()","Rails activesupport::timewithzone#rfc822()","Ruby process::gid::rid()","Ruby process::uid::rid()","Ruby array#rindex()","Ruby string#rindex()","Rails activesupport::multibyte::chars#rindex()","Ruby string#rjust()","Rails activesupport::multibyte::chars#rjust()","Ruby dir::rmdir()","Rails ","Rails activerecord::transactions#rollback_active_record_state!()","Rails activerecord::connectionadapters::databasestatements#rollback_db_transaction()","Rails activerecord::connectionadapters::postgresqladapter#rollback_db_transaction()","Rails activerecord::connectionadapters::abstractadapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::abstractmysqladapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::postgresqladapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::sqliteadapter#rollback_to_savepoint()","Rails activerecord::connectionadapters::databasestatements#rollback_transaction_records()","Rails actiondispatch::routing::mapper::base#root()","Rails actiondispatch::routing::mapper::resources#root()","Rails rails::root()","Rails rails::engine::configuration#root=()","Ruby array#rotate()","Ruby array#rotate!()","Ruby float#round()","Ruby integer#round()","Ruby numeric#round()","Ruby rational#round()","Ruby time#round()","Rails float#round()","Rails rails::generators::actions#route()","Rails activemodel::naming::route_key()","Rails rails::generators::namedbase#route_url()","Rails rails::engine#routes()","Rails rails::engine#routes?()","Rails rails::engine#routes_url_helpers()","Ruby string#rpartition()","Ruby string#rstrip()","Rails activesupport::multibyte::chars#rstrip()","Ruby string#rstrip!()","Rails rails::generators::appbase#ruby_debugger_gemfile_entry()","Ruby thread#run()","Rails activesupport::testing::isolation::minitest#run()","Rails activesupport::testing::isolation::testunit#run()","Rails activesupport::testing::performance::benchmarker#run()","Rails activesupport::testing::performance::forclassictestunit#run()","Rails activesupport::testing::performance::forminitest#run()","Rails activesupport::testing::performance::profiler#run()","Rails activesupport::testing::setupandteardown::forclassictestunit#run()","Rails activesupport::testing::setupandteardown::forminitest#run()","Rails rails::initializable::initializer#run()","Rails sprockets::bootstrap#run()","Rails rails::generators::appbase#run_bundle()","Rails activesupport::callbacks#run_callbacks()","Rails activesupport::testing::performance#run_gc()","Rails rails::generators::testcase#run_generator()","Rails activesupport::testing::isolation::forking#run_in_isolation()","Rails activesupport::testing::isolation::subprocess#run_in_isolation()","Rails activerecord::testfixtures#run_in_transaction?()","Rails rails::initializable#run_initializers()","Rails activesupport::run_load_hooks()","Rails activesupport::testing::performance#run_profile()","Rails activesupport::testing::performance::forclassictestunit#run_test()","Rails activesupport::testing::performance::forminitest#run_test()","Rails activemodel::validations#run_validations!()","Rails activemodel::validations::callbacks#run_validations!()","Rails activesupport::testing::performance#run_warmup()","Rails activerecord::logsubscriber::runtime()","Rails activerecord::logsubscriber::runtime=()","Rails actionview::helpers::texthelper#safe_concat()","Rails activesupport::safebuffer#safe_concat()","Rails activesupport::inflector#safe_constantize()","Rails string#safe_constantize()","Rails activesupport::dependencies::classcache#safe_get()","Rails actionview::helpers::outputsafetyhelper#safe_join()","Ruby thread#safe_level()","Ruby array#sample()","Rails array#sample()","Rails actionview::helpers::sanitizehelper#sanitize()","Rails activemodel::massassignmentsecurity::sanitizer#sanitize()","Rails html::fullsanitizer#sanitize()","Rails html::sanitizer#sanitize()","Rails activerecord::sanitization::classmethods#sanitize_conditions()","Rails actionview::helpers::sanitizehelper#sanitize_css()","Rails html::whitelistsanitizer#sanitize_css()","Rails actioncontroller::recordidentifier#sanitize_dom_id()","Rails activemodel::massassignmentsecurity#sanitize_for_mass_assignment()","Rails activerecord::connectionadapters::databasestatements#sanitize_limit()","Rails activerecord::sanitization::classmethods#sanitize_sql()","Rails activerecord::sanitization::classmethods#sanitize_sql_array()","Rails activerecord::sanitization::classmethods#sanitize_sql_for_assignment()","Rails activerecord::sanitization::classmethods#sanitize_sql_for_conditions()","Rails activerecord::sanitization::classmethods#sanitize_sql_hash()","Rails activerecord::sanitization::classmethods#sanitize_sql_hash_for_assignment()","Rails activerecord::sanitization::classmethods#sanitize_sql_hash_for_conditions()","Rails html::linksanitizer#sanitizeable?()","Rails html::sanitizer#sanitizeable?()","Ruby time#saturday?()","Rails activerecord::persistence#save()","Rails activerecord::sessionstore::sqlbypass#save()","Rails activerecord::validations#save()","Rails activeresource::base#save()","Rails rails::generators::activemodel#save()","Rails activerecord::persistence#save!()","Rails activerecord::validations#save!()","Rails activeresource::base#save!()","Rails activerecord::dynamicfindermatch#save_method()","Rails activerecord::dynamicfindermatch#save_record?()","Rails activeresource::validations#save_with_validation()","Rails activerecord::migration#say()","Rails activerecord::migration#say_with_time()","Ruby string#scan()","Rails activeresource::base::schema()","Rails activeresource::base#schema()","Rails activeresource::base::schema=()","Rails activerecord::connectionadapters::postgresqladapter#schema_exists?()","Rails activerecord::base::schema_format()","Rails activerecord::connectionadapters::postgresqladapter#schema_search_path()","Rails activerecord::connectionadapters::postgresqladapter#schema_search_path=()","Rails actiondispatch::routing::mapper::scoping#scope()","Rails activerecord::scoping::named::classmethods#scope()","Rails activerecord::relation#scope_for_create()","Rails activerecord::scoping::named::classmethods#scoped()","Rails activerecord::relation#scoping()","Rails rails::appbuilder#script()","Rails rails::pluginbuilder#script()","Ruby encoding::converter::search_convpath()","Rails actionview::helpers::formhelper#search_field()","Rails actionview::helpers::formtaghelper#search_field_tag()","Ruby time#sec()","Rails array#second()","Rails numeric#second()","Rails numeric#seconds()","Rails datetime#seconds_since_midnight()","Rails time#seconds_since_midnight()","Rails activesupport::timezone::seconds_to_utc_offset()","Rails actioncontroller::httpauthentication::digest#secret_token()","Ruby random#seed()","Ruby argf#seek()","Ruby dir#seek()","Ruby io#seek()","Ruby array#select()","Ruby env::select()","Ruby enumerable#select()","Ruby hash#select()","Ruby io::select()","Ruby kernel#select()","Ruby struct#select()","Rails actionview::helpers::formbuilder#select()","Rails actionview::helpers::formoptionshelper#select()","Rails activerecord::connectionadapters::databasestatements#select()","Rails activerecord::connectionadapters::mysql2adapter#select()","Rails activerecord::querymethods#select()","Rails html::selector#select()","Rails html::tag#select()","Ruby array#select!()","Ruby env::select!()","Ruby hash#select!()","Rails activerecord::connectionadapters::databasestatements#select_all()","Rails activerecord::connectionadapters::querycache#select_all()","Rails actionview::helpers::datehelper#select_date()","Rails actionview::helpers::datehelper#select_datetime()","Rails actionview::helpers::datehelper#select_day()","Rails html::selector#select_first()","Rails actionview::helpers::datehelper#select_hour()","Rails actionview::helpers::datehelper#select_minute()","Rails actionview::helpers::datehelper#select_month()","Rails activerecord::connectionadapters::databasestatements#select_one()","Rails activerecord::connectionadapters::databasestatements#select_rows()","Rails activerecord::connectionadapters::mysql2adapter#select_rows()","Rails activerecord::connectionadapters::mysqladapter#select_rows()","Rails activerecord::connectionadapters::postgresqladapter#select_rows()","Rails activerecord::connectionadapters::sqliteadapter#select_rows()","Rails actionview::helpers::datehelper#select_second()","Rails actionview::helpers::formtaghelper#select_tag()","Rails actionview::helpers::datehelper#select_time()","Rails activerecord::connectionadapters::databasestatements#select_value()","Rails activerecord::connectionadapters::databasestatements#select_values()","Rails actionview::helpers::datehelper#select_year()","Rails html::selector()","Ruby object#send()","Rails actioncontroller::implicitrender#send_action()","Rails actioncontroller::datastreaming#send_data()","Rails actioncontroller::instrumentation#send_data()","Rails actioncontroller::logsubscriber#send_data()","Rails actioncontroller::datastreaming#send_file()","Rails actioncontroller::instrumentation#send_file()","Rails actioncontroller::logsubscriber#send_file()","Rails activerecord::modelschema::classmethods#sequence_name()","Rails activerecord::modelschema::classmethods#sequence_name=()","Rails activerecord::connectionadapters::postgresqladapter#serial_sequence()","Rails activemodel::serialization#serializable_hash()","Rails activerecord::serialization#serializable_hash()","Rails activerecord::attributemethods::serialization::attribute#serialize()","Rails activerecord::attributemethods::serialization::classmethods#serialize()","Rails activerecord::attributemethods::serialization::attribute#serialized_value()","Rails actiondispatch::http::url#server_port()","Rails actiondispatch::request#server_software()","Rails actiondispatch::testprocess#session()","Rails activerecord::connectionadapters::postgresqladapter#session_auth=()","Rails activerecord::sessionstore::sqlbypass::session_id_column()","Rails actiondispatch::request#session_options=()","Rails rails::application::configuration#session_store()","Rails activerecord::generators::sessionmigrationgenerator#session_table_name()","Rails activemodel::errors#set()","Ruby exception#set_backtrace()","Rails activesupport::callbacks::classmethods#set_callback()","Rails actionmailer::base#set_content_type()","Rails actiondispatch::response#set_cookie()","Rails rails::generators::appbase#set_default_accessors!()","Rails activemodel::observerarray#set_enablement()","Ruby argf#set_encoding()","Ruby io#set_encoding()","Rails rails::server#set_environment()","Rails actionmailer::testcase::behavior#set_expected_mail()","Rails activerecord::testfixtures::classmethods#set_fixture_class()","Rails activerecord::generators::migrationgenerator#set_local_assigns!()","Rails activerecord::locking::optimistic::classmethods#set_locking_column()","Rails activesupport::logsubscriber::testhelper#set_logger()","Rails activeresource::base::set_prefix()","Rails actiondispatch::session::cachestore#set_session()","Rails activerecord::connectionadapters::postgresqladapter#set_standard_conforming_strings()","Ruby kernel#set_trace_func()","Ruby thread#set_trace_func()","Ruby string#setbyte()","Ruby process::sys::setegid()","Ruby process::sys::seteuid()","Ruby process::sys::setgid()","Ruby file::setgid?()","Ruby file::stat#setgid?()","Ruby filetest#setgid?()","Ruby process::setpgid()","Ruby process::setpgrp()","Ruby process::setpriority()","Ruby process::sys::setregid()","Ruby process::sys::setresgid()","Ruby process::sys::setresuid()","Ruby process::sys::setreuid()","Ruby process::sys::setrgid()","Ruby process::setrlimit()","Ruby process::sys::setruid()","Ruby process::setsid()","Ruby process::sys::setuid()","Ruby file::setuid?()","Ruby file::stat#setuid?()","Ruby filetest#setuid?()","Rails activemodel::validations::acceptancevalidator#setup()","Rails activemodel::validations::confirmationvalidator#setup()","Rails activerecord::validations::uniquenessvalidator#setup()","Rails activesupport::logsubscriber::testhelper#setup()","Rails activesupport::testing::setupandteardown::classmethods#setup()","Rails actioncontroller::testcase::behavior#setup_controller_request_and_response()","Rails activerecord::testfixtures::classmethods#setup_fixture_accessors()","Rails activerecord::testfixtures#setup_fixtures()","Rails actioncontroller::templateassertions#setup_subscriptions()","Rails actionview::testcase::behavior#setup_with_controller()","Rails actiondispatch::routing::mapper::resources#shallow()","Rails actiondispatch::routing::mapper::resources#shallow?()","Ruby array#shift()","Ruby env::shift()","Ruby hash#shift()","Rails activesupport::orderedhash#shift()","Rails actioncontroller::rescue#show_detailed_exceptions?()","Rails activerecord::connectionadapters::abstractmysqladapter#show_variable()","Ruby array#shuffle()","Ruby array#shuffle!()","Ruby process::gid::sid_available?()","Ruby process::uid::sid_available?()","Ruby process::status#signaled?()","Ruby signalexception#signo()","Rails activesupport::benchmarkable#silence()","Rails activesupport::bufferedlogger#silence()","Rails activesupport::deprecation::silence()","Rails activesupport::taggedlogging#silence()","Rails kernel#silence()","Rails activesupport::cache::store#silence!()","Rails activerecord::explain#silence_auto_explain()","Rails kernel#silence_stream()","Rails kernel#silence_warnings()","Rails activesupport::bufferedlogger::silencer()","Rails actionview::helpers::texthelper#simple_format()","Rails html::selector#simple_selector()","Ruby math::sin()","Rails activesupport::duration#since()","Rails activesupport::timewithzone#since()","Rails date#since()","Rails datetime#since()","Rails numeric#since()","Rails time#since()","Ruby object#singleton_class()","Rails kernel#singleton_class()","Ruby numeric#singleton_method_added()","Ruby object#singleton_methods()","Rails activemodel::naming::singular()","Rails activesupport::inflector::inflections#singular()","Rails activemodel::naming::singular_route_key()","Rails rails::generators::namedbase#singular_table_name()","Rails activesupport::inflector#singularize()","Rails string#singularize()","Ruby math::sinh()","Rails activeresource::base::site()","Rails activeresource::base::site=()","Rails activeresource::connection#site=()","Ruby array#size()","Ruby bignum#size()","Ruby env::size()","Ruby file#size()","Ruby file::size()","Ruby file::stat#size()","Ruby filetest#size()","Ruby fixnum#size()","Ruby hash#size()","Ruby matchdata#size()","Ruby string#size()","Ruby struct#size()","Ruby symbol#size()","Rails actiondispatch::middlewarestack#size()","Rails activemodel::errors#size()","Rails activerecord::fixtures#size()","Rails activerecord::relation#size()","Rails activesupport::cache::entry#size()","Rails activesupport::multibyte::chars#size()","Ruby file::size?()","Ruby file::stat#size?()","Ruby filetest#size?()","Ruby argf#skip()","Rails abstractcontroller::callbacks::classmethods#skip_after_filter()","Rails abstractcontroller::callbacks::classmethods#skip_around_filter()","Rails abstractcontroller::callbacks::classmethods#skip_before_filter()","Rails activesupport::callbacks::classmethods#skip_callback()","Rails abstractcontroller::callbacks::classmethods#skip_filter()","Ruby kernel#sleep()","Ruby mutex#sleep()","Ruby array#slice()","Ruby string#slice()","Ruby symbol#slice()","Rails activesupport::multibyte::chars#slice()","Rails hash#slice()","Ruby array#slice!()","Ruby string#slice!()","Rails hash#slice!()","Ruby enumerable#slice_before()","Ruby file::socket?()","Ruby file::stat#socket?()","Ruby filetest#socket?()","Ruby array#sort()","Ruby enumerable#sort()","Ruby array#sort!()","Ruby enumerable#sort_by()","Ruby array#sort_by!()","Ruby regexp#source()","Ruby encoding::converter#source_encoding()","Ruby encoding::invalidbytesequenceerror#source_encoding()","Ruby encoding::undefinedconversionerror#source_encoding()","Ruby encoding::invalidbytesequenceerror#source_encoding_name()","Ruby encoding::undefinedconversionerror#source_encoding_name()","Ruby method#source_location()","Ruby proc#source_location()","Ruby unboundmethod#source_location()","Rails rails::generators::base::source_root()","Ruby kernel#spawn()","Ruby process::spawn()","Ruby file::split()","Ruby string#split()","Rails activesupport::multibyte::chars#split()","Rails array#split()","Rails rails::commands::plugin#split_args()","Ruby kernel#sprintf()","Rails activerecord::logsubscriber#sql()","Rails activerecord::connectionadapters::databasestatements#sql_for_insert()","Rails activerecord::connectionadapters::postgresqladapter#sql_for_insert()","Rails activerecord::connectionadapters::databaselimits#sql_query_length()","Rails activerecord::connectionadapters::sqliteadapter#sqlite_version()","Ruby math::sqrt()","Ruby string#squeeze()","Ruby string#squeeze!()","Rails string#squish()","Rails string#squish!()","Ruby kernel#srand()","Ruby random::srand()","Rails activeresource::base::ssl_options()","Rails activeresource::base::ssl_options=()","Rails activeresource::connection#ssl_options=()","Rails actioncontroller::conditionalget#stale?()","Rails actiondispatch::session::stalesessioncheck#stale_session_check!()","Rails actiondispatch::http::url#standard_port()","Rails actiondispatch::http::url#standard_port?()","Ruby gc::start()","Ruby thread::start()","Rails rails::console#start()","Rails rails::console::start()","Rails rails::dbconsole#start()","Rails rails::dbconsole::start()","Rails rails::server#start()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#start_document()","Rails activesupport::xmlmini_nokogirisax::hashbuilder#start_element()","Rails actioncontroller::logsubscriber#start_processing()","Rails activemodel::observerarray#start_transaction()","Ruby string#start_with?()","Rails rails::rack::logger#started_request_message()","Ruby file::stat()","Ruby gc::stat()","Ruby io#stat()","Rails activesupport::cache::memcachestore#stats()","Ruby systemexit#status()","Ruby thread#status()","Rails actioncontroller::metal#status()","Rails actioncontroller::metal#status=()","Rails actiondispatch::response#status=()","Rails actiondispatch::exceptionwrapper#status_code()","Rails actiondispatch::exceptionwrapper::status_code_for_exception()","Rails actiondispatch::response#status_message()","Ruby numeric#step()","Ruby range#step()","Rails range#step_with_blockless()","Rails activerecord::inheritance::classmethods#sti_name()","Ruby file::sticky?()","Ruby file::stat#sticky?()","Ruby filetest#sticky?()","Ruby thread::stop()","Ruby thread#stop?()","Ruby process::status#stopped?()","Ruby process::status#stopsig()","Ruby env::store()","Ruby hash#store()","Rails activerecord::store::classmethods#store()","Rails activesupport::dependencies::classcache#store()","Rails activesupport::hashwithindifferentaccess#store()","Rails activesupport::hashwithindifferentaccess#store()","Rails activerecord::store::classmethods#store_accessor()","Rails rails::generators::pluginnewgenerator#store_application_definition!()","Ruby gc::stress()","Ruby gc::stress=()","Ruby time#strftime()","Rails activesupport::timewithzone#strftime()","Rails base64::strict_encode64()","Ruby matchdata#string()","Rails activesupport::hashwithindifferentaccess#stringify_keys()","Rails activesupport::hashwithindifferentaccess#stringify_keys()","Rails hash#stringify_keys()","Rails activesupport::hashwithindifferentaccess#stringify_keys!()","Rails activesupport::hashwithindifferentaccess#stringify_keys!()","Rails hash#stringify_keys!()","Ruby string#strip()","Rails activesupport::multibyte::chars#strip()","Ruby string#strip!()","Rails string#strip_heredoc()","Rails actionview::helpers::sanitizehelper#strip_links()","Rails actionview::helpers::sanitizehelper#strip_tags()","Rails activerecord::connectionadapters::schemastatements#structure_dump()","Rails actionview::helpers::assettaghelper::stylesheettaghelpers#stylesheet_link_tag()","Rails sprockets::helpers::railshelper#stylesheet_link_tag()","Rails actionview::helpers::assettaghelper::stylesheettaghelpers#stylesheet_path()","Rails sprockets::helpers::railshelper#stylesheet_path()","Rails rails::pluginbuilder#stylesheets()","Ruby kernel#sub()","Ruby string#sub()","Ruby string#sub!()","Rails rails::generators::subclasses()","Rails rails::railtie::subclasses()","Rails actiondispatch::http::url#subdomain()","Rails actiondispatch::http::url#subdomains()","Rails actionview::helpers::formbuilder#submit()","Rails actionview::helpers::formtaghelper#submit_tag()","Rails activesupport::notifications::subscribe()","Rails activesupport::notifications::fanout#subscribe()","Rails activesupport::notifications::subscribed()","Ruby time#subsec()","Rails activerecord::connectionadapters::abstractadapter#substitute_at()","Rails activerecord::connectionadapters::postgresqladapter#substitute_at()","Ruby fixnum#succ()","Ruby integer#succ()","Ruby string#succ()","Ruby symbol#succ()","Ruby time#succ()","Ruby string#succ!()","Ruby process::status#success?()","Ruby systemexit#success?()","Rails activeresource::response#success?()","Ruby string#sum()","Rails activerecord::calculations#sum()","Rails enumerable#sum()","Rails date#sunday()","Rails time#sunday()","Ruby time#sunday?()","Ruby class#superclass()","Rails class#superclass_delegating_accessor()","Rails activerecord::connectionadapters::sqliteadapter#supports_add_column?()","Rails activerecord::connectionadapters::abstractadapter#supports_bulk_alter?()","Rails activerecord::connectionadapters::abstractadapter#supports_count_distinct?()","Rails activerecord::connectionadapters::abstractadapter#supports_ddl_transactions?()","Rails activerecord::connectionadapters::postgresqladapter#supports_ddl_transactions?()","Rails activerecord::connectionadapters::sqliteadapter#supports_ddl_transactions?()","Rails activerecord::connectionadapters::abstractadapter#supports_explain?()","Rails activerecord::connectionadapters::mysql2adapter#supports_explain?()","Rails activerecord::connectionadapters::postgresqladapter#supports_explain?()","Rails activerecord::connectionadapters::sqliteadapter#supports_explain?()","Rails activerecord::connectionadapters::abstractadapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::postgresqladapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::sqliteadapter#supports_index_sort_order?()","Rails activerecord::connectionadapters::postgresqladapter#supports_insert_with_returning?()","Rails activerecord::connectionadapters::abstractadapter#supports_migrations?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_migrations?()","Rails activerecord::connectionadapters::postgresqladapter#supports_migrations?()","Rails activerecord::connectionadapters::abstractadapter#supports_primary_key?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_primary_key?()","Rails activerecord::connectionadapters::abstractadapter#supports_savepoints?()","Rails activerecord::connectionadapters::abstractmysqladapter#supports_savepoints?()","Rails activerecord::connectionadapters::postgresqladapter#supports_savepoints?()","Rails activerecord::connectionadapters::sqliteadapter#supports_savepoints?()","Rails activerecord::connectionadapters::databasestatements#supports_statement_cache?()","Rails activerecord::connectionadapters::mysqladapter#supports_statement_cache?()","Rails activerecord::connectionadapters::postgresqladapter#supports_statement_cache?()","Rails activerecord::connectionadapters::sqliteadapter#supports_statement_cache?()","Rails actionview::template#supports_streaming?()","Rails actionview::template::handlers::erb#supports_streaming?()","Rails kernel#suppress()","Rails activerecord::migration#suppress_messages()","Rails plugin#svn_url?()","Rails actiondispatch::middlewarestack#swap()","Ruby string#swapcase()","Ruby symbol#swapcase()","Ruby string#swapcase!()","Ruby process::gid::switch()","Ruby process::uid::switch()","Rails activesupport::hashwithindifferentaccess#symbolize_keys()","Rails activesupport::hashwithindifferentaccess#symbolize_keys()","Rails hash#symbolize_keys()","Rails hash#symbolize_keys!()","Rails activerecord::inheritance::classmethods#symbolized_base_class()","Rails actiondispatch::http::parameters#symbolized_path_parameters()","Rails activerecord::inheritance::classmethods#symbolized_sti_name()","Rails mime::mimes#symbols()","Ruby file::symlink()","Ruby file::symlink?()","Ruby file::stat#symlink?()","Ruby filetest#symlink?()","Ruby io#sync()","Ruby io#sync=()","Rails activesupport::orderedhash#sync_keys!()","Ruby mutex#synchronize()","Rails module#synchronize()","Ruby kernel#syscall()","Ruby io::sysopen()","Ruby io#sysread()","Ruby io#sysseek()","Ruby kernel#system()","Ruby io#syswrite()","Rails abstractcontroller::translation#t()","Rails actionview::helpers::translationhelper#t()","Rails activerecord::connectionadapters::schemastatements#table_alias_for()","Rails activerecord::connectionadapters::databaselimits#table_alias_length()","Rails activerecord::connectionadapters::postgresqladapter#table_alias_length()","Rails activerecord::connectionadapters::abstractmysqladapter#table_exists?()","Rails activerecord::connectionadapters::postgresqladapter#table_exists?()","Rails activerecord::connectionadapters::sqliteadapter#table_exists?()","Rails activerecord::connectionadapters::schemacache#table_exists?()","Rails activerecord::connectionadapters::schemastatements#table_exists?()","Rails activerecord::modelschema::classmethods#table_exists?()","Rails activerecord::modelschema::classmethods#table_name()","Rails activerecord::sessionstore::sqlbypass::table_name()","Rails rails::generators::namedbase#table_name()","Rails activerecord::modelschema::classmethods#table_name=()","Rails activerecord::connectionadapters::databaselimits#table_name_length()","Rails activerecord::fixtures#table_rows()","Rails activerecord::connectionadapters::sqliteadapter#table_structure()","Rails activesupport::inflector#tableize()","Rails string#tableize()","Rails activerecord::connectionadapters::postgresqladapter#tables()","Rails actionview::helpers::activemodelinstancetag#tag()","Rails actionview::helpers::taghelper#tag()","Rails activesupport::taggedlogging#tagged()","Rails rails::rack::logtailer#tail!()","Ruby object#taint()","Ruby object#tainted?()","Ruby array#take()","Ruby enumerable#take()","Ruby array#take_while()","Ruby enumerable#take_while()","Ruby math::tan()","Ruby math::tanh()","Ruby object#tap()","Rails activesupport::logsubscriber::testhelper#teardown()","Rails activesupport::testing::setupandteardown::classmethods#teardown()","Rails activerecord::testfixtures#teardown_fixtures()","Rails actioncontroller::templateassertions#teardown_subscriptions()","Rails actionview::helpers::formhelper#telephone_field()","Rails actionview::helpers::formtaghelper#telephone_field_tag()","Ruby argf#tell()","Ruby dir#tell()","Ruby io#tell()","Rails rails::generators::namedbase#template()","Rails actionview::lookupcontext::viewpaths#template_exists?()","Rails rails::generators::templates_path()","Rails numeric#terabyte()","Rails numeric#terabytes()","Ruby thread#terminate()","Ruby process::status#termsig()","Ruby kernel#test()","Rails activesupport::testing::declarative#test()","Rails rails::appbuilder#test()","Rails rails::pluginbuilder#test()","Rails rails::pluginbuilder#test_dummy_clean()","Rails rails::pluginbuilder#test_dummy_config()","Rails activemodel::lint::tests#test_errors_aref()","Rails activemodel::lint::tests#test_errors_full_messages()","Rails object#test_homepage()","Rails activemodel::lint::tests#test_model_naming()","Rails activemodel::lint::tests#test_persisted?()","Rails activemodel::lint::tests#test_to_key()","Rails activemodel::lint::tests#test_to_param()","Rails activemodel::lint::tests#test_to_partial_path()","Rails activemodel::lint::tests#test_valid?()","Rails actioncontroller::testcase::behavior::classmethods#tests()","Rails actionmailer::testcase::behavior::classmethods#tests()","Rails actionview::testcase::behavior::classmethods#tests()","Rails rails::generators::testcase::tests()","Rails actionview::helpers::formhelper#text_area()","Rails actionview::helpers::formtaghelper#text_area_tag()","Rails actionview::helpers::formhelper#text_field()","Rails actionview::helpers::formtaghelper#text_field_tag()","Rails array#third()","Rails rails::application::configuration#threadsafe!()","Ruby kernel#throw()","Ruby time#thursday?()","Rails activesupport::multibyte::chars#tidy_bytes()","Rails activesupport::multibyte::unicode#tidy_bytes()","Rails activesupport::timewithzone#time()","Rails actionview::helpers::datehelper#time_ago_in_words()","Rails actionview::helpers::datehelper#time_select()","Rails actionview::helpers::formbuilder#time_select()","Rails actionview::helpers::datehelper#time_tag()","Rails activesupport::testing::performance::profiler#time_with_block()","Rails time::time_with_datetime_fallback()","Rails actionview::helpers::formoptionshelper#time_zone_options_for_select()","Rails actionview::helpers::formbuilder#time_zone_select()","Rails actionview::helpers::formoptionshelper#time_zone_select()","Rails activeresource::base::timeout()","Rails activeresource::base::timeout=()","Rails activeresource::connection#timeout=()","Ruby integer#times()","Ruby process::times()","Rails activerecord::base::timestamped_migrations()","Rails activerecord::connectionadapters::table#timestamps()","Rails activerecord::connectionadapters::tabledefinition#timestamps()","Rails activesupport::multibyte::chars#titlecase()","Rails string#titlecase()","Rails activesupport::inflector#titleize()","Rails activesupport::multibyte::chars#titleize()","Rails string#titleize()","Rails rails::appbuilder#tmp()","Rails array#to()","Rails string#to()","Ruby argf#to_a()","Ruby array#to_a()","Ruby env::to_a()","Ruby enumerable#to_a()","Ruby hash#to_a()","Ruby matchdata#to_a()","Ruby nilclass#to_a()","Ruby rubyvm::instructionsequence#to_a()","Ruby struct#to_a()","Ruby time#to_a()","Rails actiondispatch::response#to_a()","Rails activemodel::errors#to_a()","Rails activerecord::relation#to_a()","Rails activesupport::orderedhash#to_a()","Rails activesupport::timewithzone#to_a()","Rails rails::paths::path#to_a()","Rails rails::application#to_app()","Ruby array#to_ary()","Rails actiondispatch::response#to_ary()","Rails actionview::helpers::instancetag#to_boolean_select_tag()","Ruby nilclass#to_c()","Ruby numeric#to_c()","Ruby string#to_c()","Rails actionview::helpers::instancetag#to_check_box_tag()","Rails actiondispatch::reloader::to_cleanup()","Rails actionview::helpers::instancetag#to_content_tag()","Rails bigdecimal#to_d()","Rails date#to_date()","Rails datetime#to_date()","Rails mysql::time#to_date()","Rails string#to_date()","Rails time#to_date()","Rails actionview::helpers::datehelperinstancetag#to_date_select_tag()","Rails activesupport::timewithzone#to_datetime()","Rails date#to_datetime()","Rails datetime#to_datetime()","Rails string#to_datetime()","Rails time#to_datetime()","Rails actionview::helpers::datehelperinstancetag#to_datetime_select_tag()","Rails array#to_default_s()","Rails date#to_default_s()","Rails datetime#to_default_s()","Rails range#to_default_s()","Rails time#to_default_s()","Ruby object#to_enum()","Ruby bignum#to_f()","Ruby complex#to_f()","Ruby fixnum#to_f()","Ruby float#to_f()","Ruby nilclass#to_f()","Ruby rational#to_f()","Ruby string#to_f()","Ruby time#to_f()","Rails activesupport::timewithzone#to_f()","Rails datetime#to_f()","Rails actioncontroller::responder#to_format()","Rails activesupport::timewithzone#to_formatted_s()","Rails array#to_formatted_s()","Rails bigdecimal#to_formatted_s()","Rails date#to_formatted_s()","Rails datetime#to_formatted_s()","Rails range#to_formatted_s()","Rails time#to_formatted_s()","Ruby env::to_hash()","Ruby hash#to_hash()","Rails actiondispatch::flash::flashhash#to_hash()","Rails activemodel::errors#to_hash()","Rails activerecord::result#to_hash()","Rails activesupport::hashwithindifferentaccess#to_hash()","Rails activesupport::hashwithindifferentaccess#to_hash()","Rails activesupport::orderedhash#to_hash()","Rails actioncontroller::responder#to_html()","Rails rails::info::to_html()","Ruby argf#to_i()","Ruby complex#to_i()","Ruby float#to_i()","Ruby io#to_i()","Ruby integer#to_i()","Ruby nilclass#to_i()","Ruby process::status#to_i()","Ruby rational#to_i()","Ruby string#to_i()","Ruby time#to_i()","Rails activesupport::timewithzone#to_i()","Rails datetime#to_i()","Rails actionview::helpers::instancetag#to_input_field_tag()","Ruby float#to_int()","Ruby integer#to_int()","Ruby numeric#to_int()","Ruby argf#to_io()","Ruby io#to_io()","Rails actioncontroller::responder#to_js()","Rails activeresource::base#to_json()","Rails object#to_json()","Rails activemodel::conversion#to_key()","Rails activerecord::attributemethods::primarykey#to_key()","Rails actionview::helpers::instancetag#to_label_tag()","Rails actionview::helpers::formbuilder#to_model()","Rails activemodel::conversion#to_model()","Rails actionview::helpers::instancetag#to_number_field_tag()","Rails hash#to_options()","Rails activesupport::hashwithindifferentaccess#to_options!()","Rails activesupport::hashwithindifferentaccess#to_options!()","Rails hash#to_options!()","Rails activemodel::conversion#to_param()","Rails activerecord::integration#to_param()","Rails activesupport::safebuffer#to_param()","Rails array#to_param()","Rails falseclass#to_param()","Rails hash#to_param()","Rails nilclass#to_param()","Rails object#to_param()","Rails trueclass#to_param()","Rails actionview::helpers::formbuilder#to_partial_path()","Rails activemodel::conversion#to_partial_path()","Ruby dir#to_path()","Ruby file#to_path()","Rails actiondispatch::response#to_path()","Rails actionview::filesystemresolver#to_path()","Rails actiondispatch::reloader::to_prepare()","Rails rails::railtie::configuration#to_prepare()","Rails rails::railtie::configuration#to_prepare_blocks()","Ruby method#to_proc()","Ruby proc#to_proc()","Ruby symbol#to_proc()","Rails array#to_query()","Rails hash#to_query()","Rails object#to_query()","Ruby complex#to_r()","Ruby float#to_r()","Ruby integer#to_r()","Ruby nilclass#to_r()","Ruby rational#to_r()","Ruby string#to_r()","Ruby time#to_r()","Rails actionview::helpers::instancetag#to_radio_button_tag()","Ruby argf#to_s()","Ruby array#to_s()","Ruby bignum#to_s()","Ruby complex#to_s()","Ruby env::to_s()","Ruby encoding#to_s()","Ruby exception#to_s()","Ruby falseclass#to_s()","Ruby fixnum#to_s()","Ruby float#to_s()","Ruby hash#to_s()","Ruby matchdata#to_s()","Ruby method#to_s()","Ruby module#to_s()","Ruby nameerror#to_s()","Ruby nilclass#to_s()","Ruby object#to_s()","Ruby proc#to_s()","Ruby process::status#to_s()","Ruby range#to_s()","Ruby rational#to_s()","Ruby regexp#to_s()","Ruby string#to_s()","Ruby struct#to_s()","Ruby symbol#to_s()","Ruby time#to_s()","Ruby trueclass#to_s()","Ruby unboundmethod#to_s()","Rails actiondispatch::remoteip::getip#to_s()","Rails actionview::filesystemresolver#to_s()","Rails actionview::fixtureresolver#to_s()","Rails activeresource::request#to_s()","Rails activeresource::sslerror#to_s()","Rails activeresource::timeouterror#to_s()","Rails activesupport::safebuffer#to_s()","Rails activesupport::timewithzone#to_s()","Rails activesupport::timezone#to_s()","Rails array#to_s()","Rails bigdecimal#to_s()","Rails date#to_s()","Rails datetime#to_s()","Rails mime::type#to_s()","Rails plugin#to_s()","Rails rails::info::to_s()","Rails range#to_s()","Rails sourceannotationextractor::annotation#to_s()","Rails time#to_s()","Rails array#to_sentence()","Rails activerecord::connectionadapters::databasestatements#to_sql()","Rails activerecord::connectionadapters::tabledefinition#to_sql()","Rails activerecord::relation#to_sql()","Ruby string#to_str()","Rails mime::type#to_str()","Ruby string#to_sym()","Ruby symbol#to_sym()","Rails mime::type#to_sym()","Rails activesupport::xmlmini#to_tag()","Rails actionview::helpers::instancetag#to_text_area_tag()","Rails activesupport::timewithzone#to_time()","Rails date#to_time()","Rails datetime#to_time()","Rails string#to_time()","Rails time#to_time()","Rails date#to_time_in_current_zone()","Rails actionview::helpers::datehelperinstancetag#to_time_select_tag()","Ruby argf#to_write_io()","Rails activemodel::errors#to_xml()","Rails activemodel::serializers::xml#to_xml()","Rails activerecord::serialization#to_xml()","Rails activeresource::base#to_xml()","Rails array#to_xml()","Rails hash#to_xml()","Rails activesupport::orderedhash#to_yaml()","Rails activesupport::safebuffer#to_yaml()","Rails activesupport::timewithzone#to_yaml()","Rails bigdecimal#to_yaml()","Rails activesupport::orderedhash#to_yaml_type()","Rails activesupport::timezone#today()","Rails activesupport::timewithzone#today?()","Rails date#today?()","Rails time#today?()","Rails activerecord::persistence#toggle()","Rails activerecord::persistence#toggle!()","Rails actioncontroller::httpauthentication::token#token_and_options()","Rails html::sanitizer#tokenize()","Rails html::whitelistsanitizer#tokenize()","Rails date#tomorrow()","Rails date::tomorrow()","Rails time#tomorrow()","Ruby gc::profiler::total_time()","Rails activerecord::persistence#touch()","Ruby string#tr()","Ruby string#tr!()","Ruby string#tr_s()","Ruby string#tr_s!()","Ruby kernel#trace_var()","Rails activemodel::observerarray#transaction()","Rails activerecord::connectionadapters::databasestatements#transaction()","Rails activerecord::transactions#transaction()","Rails activerecord::transactions::classmethods#transaction()","Rails activerecord::connectionadapters::abstractadapter#transaction_joinable=()","Ruby fiber#transfer()","Rails abstractcontroller::translation#translate()","Rails actionview::helpers::translationhelper#translate()","Rails activerecord::connectionadapters::abstractadapter#translate_exception()","Rails activerecord::connectionadapters::abstractmysqladapter#translate_exception()","Rails activerecord::connectionadapters::postgresqladapter#translate_exception()","Rails activerecord::connectionadapters::sqliteadapter#translate_exception()","Rails activesupport::inflector#transliterate()","Ruby array#transpose()","Ruby kernel#trap()","Ruby signal::trap()","Rails activesupport::filewatcher#trigger()","Rails activesupport::filewatcher::backend#trigger()","Ruby file::truncate()","Ruby file#truncate()","Ruby float#truncate()","Ruby integer#truncate()","Ruby numeric#truncate()","Ruby rational#truncate()","Rails actionview::helpers::texthelper#truncate()","Rails string#truncate()","Ruby object#trust()","Rails nilclass#try()","Rails object#try()","Ruby array::try_convert()","Ruby hash::try_convert()","Ruby io::try_convert()","Ruby regexp::try_convert()","Ruby string::try_convert()","Ruby mutex#try_lock()","Rails activerecord::testfixtures::classmethods#try_to_load_dependency()","Rails rails::initializable::collection#tsort_each_child()","Rails activerecord::connectionadapters::postgresqladapter::tabledefinition#tsvector()","Ruby io#tty?()","Ruby time#tuesday?()","Ruby time#tv_nsec()","Ruby time#tv_sec()","Rails activesupport::timewithzone#tv_sec()","Ruby time#tv_usec()","Rails activerecord::connectionadapters::mysqladapter#type_cast()","Rails activerecord::connectionadapters::postgresqladapter#type_cast()","Rails activerecord::connectionadapters::quoting#type_cast()","Rails activerecord::attributemethods::serialization#type_cast_attribute_for_write()","Rails activerecord::connectionadapters::abstractmysqladapter#type_to_sql()","Rails activerecord::connectionadapters::postgresqladapter#type_to_sql()","Rails activesupport::multibyte::unicode#u_unpack()","Ruby file::stat#uid()","Ruby process::uid()","Ruby process::uid=()","Ruby file::umask()","Ruby method#unbind()","Rails activerecord::connectionadapters::querycache#uncached()","Rails activerecord::querycache::classmethods#uncached()","Rails activesupport::inflector::inflections#uncountable()","Rails activemodel::naming::uncountable?()","Rails rails::generators::namedbase#uncountable?()","Rails activemodel::attributemethods::classmethods#undefine_attribute_methods()","Rails activerecord::attributemethods::classmethods#undefine_attribute_methods()","Rails activerecord::attributemethods::read::classmethods#undefine_attribute_methods()","Ruby objectspace::undefine_finalizer()","Rails activesupport::inflector#underscore()","Rails string#underscore()","Rails object#unescape()","Rails activerecord::connectionadapters::postgresqladapter#unescape_bytea()","Rails actiondispatch::filehandler#unescape_path()","Ruby io#ungetbyte()","Ruby io#ungetc()","Rails plugin#uninstall()","Ruby regexp::union()","Ruby array#uniq()","Rails activerecord::querymethods#uniq()","Ruby array#uniq!()","Rails array#uniq_by()","Rails array#uniq_by!()","Ruby dir::unlink()","Ruby file::unlink()","Ruby mutex#unlock()","Rails activesupport::memoizable::instancemethods#unmemoize_all()","Ruby string#unpack()","Rails mime::type::unregister()","Rails activerecord::attributemethods::serialization::attribute#unserialize()","Rails activerecord::attributemethods::serialization::attribute#unserialized_value()","Ruby array#unshift()","Rails activesupport::notifications::unsubscribe()","Rails activesupport::notifications::fanout#unsubscribe()","Ruby object#untaint()","Rails activesupport::duration#until()","Rails numeric#until()","Ruby kernel#untrace_var()","Ruby object#untrust()","Ruby object#untrusted?()","Rails activerecord::migration#up()","Ruby string#upcase()","Ruby symbol#upcase()","Rails activesupport::multibyte::chars#upcase()","Ruby string#upcase!()","Ruby env::update()","Ruby hash#update()","Rails activerecord::connectionadapters::databasestatements#update()","Rails activerecord::relation#update()","Rails activeresource::base#update()","Rails activesupport::hashwithindifferentaccess#update()","Rails activesupport::hashwithindifferentaccess#update()","Rails activerecord::relation#update_all()","Rails activerecord::persistence#update_attribute()","Rails activeresource::base#update_attribute()","Rails activerecord::persistence#update_attributes()","Rails activeresource::base#update_attributes()","Rails rails::generators::activemodel#update_attributes()","Rails activerecord::persistence#update_attributes!()","Rails activerecord::persistence#update_column()","Rails activerecord::countercache#update_counters()","Rails activerecord::locking::optimistic::classmethods#update_counters()","Rails activerecord::connectionadapters::databasestatements#update_sql()","Rails activerecord::connectionadapters::postgresqladapter#update_sql()","Rails actionview::helpers::atomfeedhelper::atomfeedbuilder#updated()","Rails activesupport::fileupdatechecker#updated?()","Ruby integer#upto()","Ruby string#upto()","Rails actiondispatch::http::url#url()","Rails actionview::helpers::formhelper#url_field()","Rails actionview::helpers::formtaghelper#url_field_tag()","Rails actioncontroller::metal#url_for()","Rails actiondispatch::http::url::url_for()","Rails actiondispatch::routing::urlfor#url_for()","Rails actionview::helpers::urlhelper#url_for()","Rails actioncontroller::urlfor#url_options()","Rails actiondispatch::integration::session#url_options()","Rails actiondispatch::integrationtest#url_options()","Rails actiondispatch::routing::urlfor#url_options()","Rails actionview::helpers::urlhelper#url_options()","Rails activesupport::timezone::us_zones()","Rails rails::generators::base::usage_path()","Rails actioncontroller::metal::use()","Rails actiondispatch::flash::flashhash#use()","Rails actiondispatch::middlewarestack#use()","Rails activerecord::identitymap::use()","Rails actiondispatch::http::mimenegotiation#use_accept_header()","Rails railsenvironment#use_checkout?()","Rails railsenvironment#use_externals?()","Rails actioncontroller::renderers::classmethods#use_renderer()","Rails actioncontroller::renderers::classmethods#use_renderers()","Rails railsenvironment#use_svn?()","Rails time::use_zone()","Ruby time#usec()","Rails activesupport::timewithzone#usec()","Rails activeresource::base::user()","Rails activeresource::base::user=()","Rails activeresource::connection#user=()","Rails actiondispatch::testrequest#user_agent=()","Rails actioncontroller::httpauthentication::basic#user_name_and_password()","Rails activerecord::testfixtures::classmethods#uses_transaction()","Rails activerecord::testfixtures::classmethods#uses_transaction?()","Rails activerecord::findermethods#using_limitable_reflections?()","Ruby time::utc()","Ruby time#utc()","Rails activesupport::timewithzone#utc()","Rails datetime#utc()","Ruby time#utc?()","Rails activesupport::timewithzone#utc?()","Rails datetime#utc?()","Ruby time#utc_offset()","Rails activesupport::timewithzone#utc_offset()","Rails activesupport::timezone#utc_offset()","Rails datetime#utc_offset()","Rails time::utc_time()","Rails activesupport::timezone#utc_to_local()","Rails actionview::helpers::formtaghelper#utf8_enforcer_tag()","Ruby file::utime()","Rails actiondispatch::request#uuid()","Rails activemodel::validations#valid?()","Rails activerecord::validations#valid?()","Rails activeresource::validations#valid?()","Rails actiondispatch::http::mimenegotiation#valid_accept_header()","Rails activerecord::connectionadapters::sqliteadapter#valid_alter_table_options()","Rails rails::generators::appgenerator#valid_const?()","Rails rails::generators::pluginnewgenerator#valid_const?()","Ruby string#valid_encoding?()","Rails activerecord::scoping::named::classmethods#valid_scope_name?()","Rails activemodel::eachvalidator#validate()","Rails activemodel::validations::classmethods#validate()","Rails activemodel::validations::presencevalidator#validate()","Rails activemodel::validator#validate()","Rails actioncontroller::httpauthentication::digest#validate_digest_response()","Rails activemodel::eachvalidator#validate_each()","Rails activemodel::validations::acceptancevalidator#validate_each()","Rails activemodel::validations::confirmationvalidator#validate_each()","Rails activemodel::validations::exclusionvalidator#validate_each()","Rails activemodel::validations::formatvalidator#validate_each()","Rails activemodel::validations::inclusionvalidator#validate_each()","Rails activemodel::validations::lengthvalidator#validate_each()","Rails activemodel::validations::numericalityvalidator#validate_each()","Rails activemodel::validations::withvalidator#validate_each()","Rails activerecord::validations::associatedvalidator#validate_each()","Rails activerecord::validations::uniquenessvalidator#validate_each()","Rails i18n::railtie::validate_fallbacks()","Rails actioncontroller::httpauthentication::digest#validate_nonce()","Rails activemodel::validations::classmethods#validates()","Rails activemodel::validations::classmethods#validates!()","Rails activemodel::validations::helpermethods#validates_acceptance_of()","Rails activerecord::validations::classmethods#validates_associated()","Rails activemodel::validations::helpermethods#validates_confirmation_of()","Rails activemodel::validations::classmethods#validates_each()","Rails activemodel::validations::helpermethods#validates_exclusion_of()","Rails activemodel::validations::helpermethods#validates_format_of()","Rails activemodel::validations::helpermethods#validates_inclusion_of()","Rails activemodel::validations::helpermethods#validates_length_of()","Rails activemodel::validations::helpermethods#validates_numericality_of()","Rails activemodel::validations::helpermethods#validates_presence_of()","Rails activemodel::validations::helpermethods#validates_size_of()","Rails activerecord::validations::classmethods#validates_uniqueness_of()","Rails activemodel::validations#validates_with()","Rails activemodel::validations::classmethods#validates_with()","Rails activemodel::validations::classmethods#validators()","Rails activemodel::validations::classmethods#validators_on()","Ruby thread#value()","Rails actionview::helpers::instancetag::value()","Rails actionview::helpers::instancetag#value()","Rails activesupport::cache::entry#value()","Ruby env::value?()","Ruby hash#value?()","Rails actionview::helpers::instancetag::value_before_type_cast()","Rails actionview::helpers::instancetag#value_before_type_cast()","Ruby env::values()","Ruby hash#values()","Ruby struct#values()","Rails activemodel::errors#values()","Rails activesupport::orderedhash#values()","Ruby array#values_at()","Ruby env::values_at()","Ruby hash#values_at()","Ruby matchdata#values_at()","Ruby struct#values_at()","Rails activesupport::hashwithindifferentaccess#values_at()","Rails activesupport::hashwithindifferentaccess#values_at()","Rails rails::appbuilder#vendor()","Rails rails::generators::actions#vendor()","Rails rails::appbuilder#vendor_javascripts()","Rails rails::appbuilder#vendor_plugins()","Rails rails::appbuilder#vendor_stylesheets()","Rails actioncontroller::requestforgeryprotection#verified_request?()","Rails activesupport::messageverifier#verify()","Rails activerecord::connectionadapters::abstractadapter#verify!()","Rails actioncontroller::requestforgeryprotection#verify_authenticity_token()","Rails mime::type#verify_request?()","Rails rails::version()","Rails actionview::helpers::assettaghelper#video_path()","Rails actionview::helpers::assettaghelper#video_tag()","Rails abstractcontroller::rendering#view_assigns()","Rails abstractcontroller::rendering#view_context()","Rails abstractcontroller::rendering#view_context_class()","Rails abstractcontroller::rendering::classmethods#view_context_class()","Rails abstractcontroller::viewpaths::classmethods#view_paths()","Rails abstractcontroller::viewpaths::classmethods#view_paths=()","Rails actionview::lookupcontext::viewpaths#view_paths=()","Rails abstractcontroller::rendering#view_renderer()","Rails actioncontroller::hideactions::classmethods#visible_action?()","Ruby process::wait()","Rails activesupport::logsubscriber::testhelper#wait()","Rails activesupport::notifications::fanout#wait()","Ruby process::wait2()","Ruby process::waitall()","Ruby process::waitpid()","Ruby process::waitpid2()","Ruby thread#wakeup()","Rails activesupport::multibyte::chars::wants?()","Ruby kernel#warn()","Rails activesupport::deprecation::warn()","Rails activesupport::filewatcher#watch()","Rails activesupport::dependencies::watchstack#watch_namespaces()","Rails rails::application#watchable_args()","Rails rails::railtie::configuration#watchable_dirs()","Rails rails::railtie::configuration#watchable_files()","Rails activesupport::dependencies::watchstack#watching?()","Ruby time#wday()","Ruby time#wednesday?()","Rails numeric#week()","Rails numeric#weeks()","Rails date#weeks_ago()","Rails time#weeks_ago()","Rails activerecord::querymethods#where()","Rails activerecord::relation#where_values_hash()","Rails abstractcontroller::railties::routeshelpers::with()","Rails actioncontroller::railties::paths::with()","Rails activesupport::json::with_backend()","Rails activesupport::xmlmini#with_backend()","Rails activerecord::connectionadapters::connectionpool#with_connection()","Rails actiondispatch::routing::mapper::base#with_default_scope()","Rails actiondispatch::routing::mapper::resources#with_exclusive_scope()","Rails activerecord::scoping::classmethods#with_exclusive_scope()","Rails actionview::lookupcontext::viewpaths#with_fallbacks()","Rails activesupport::testing::performance::metrics::base#with_gc_stats()","Ruby enumerator#with_index()","Rails activesupport::hashwithindifferentaccess#with_indifferent_access()","Rails activesupport::hashwithindifferentaccess#with_indifferent_access()","Rails hash#with_indifferent_access()","Rails activesupport::cache::strategy::localcache#with_local_cache()","Rails activerecord::locking::pessimistic#with_lock()","Ruby enumerator#with_object()","Rails object#with_options()","Rails activesupport::testing::performance::benchmarker#with_output_file()","Rails actiondispatch::assertions::routingassertions#with_routing()","Rails activerecord::scoping::classmethods#with_scope()","Rails actiondispatch::routing::mapper::resources#with_scope_level()","Rails activerecord::transactions#with_transaction_returning_status()","Rails kernel#with_warnings()","Rails activerecord::identitymap::without()","Rails actioncontroller::base::without_modules()","Rails actionview::helpers::texthelper#word_wrap()","Ruby file::world_readable?()","Ruby file::stat#world_readable?()","Ruby filetest#world_readable?()","Ruby file::world_writable?()","Ruby file::stat#world_writable?()","Ruby filetest#world_writable?()","Rails array::wrap()","Rails actioncontroller::paramswrapper::classmethods#wrap_parameters()","Rails rails::generators::namedbase#wrap_with_namespace()","Ruby file::writable?()","Ruby file::stat#writable?()","Ruby filetest#writable?()","Ruby file::writable_real?()","Ruby file::stat#writable_real?()","Ruby filetest#writable_real?()","Ruby argf#write()","Ruby io::write()","Ruby io#write()","Rails actiondispatch::railsentitystore#write()","Rails actiondispatch::railsmetastore#write()","Rails activerecord::migration#write()","Rails activesupport::cache::store#write()","Rails sprockets::staticcompiler#write_asset()","Rails activerecord::attributemethods::write#write_attribute()","Rails activesupport::cache::filestore#write_entry()","Rails activesupport::cache::strategy::localcache::localstore#write_entry()","Rails actioncontroller::caching::fragments#write_fragment()","Rails sprockets::staticcompiler#write_manifest()","Ruby io#write_nonblock()","Rails actioncontroller::testcase::behavior#xhr()","Rails actiondispatch::integration::requesthelpers#xhr()","Rails actiondispatch::request#xhr?()","Rails activerecord::connectionadapters::postgresqladapter::tabledefinition#xml()","Rails activerecord::connectionadapters::tabledefinition#xml()","Rails actioncontroller::testcase::behavior#xml_http_request()","Rails actiondispatch::integration::requesthelpers#xml_http_request()","Rails actiondispatch::request#xml_http_request?()","Rails activesupport::timewithzone#xmlschema()","Rails date#xmlschema()","Rails datetime#xmlschema()","Ruby time#yday()","Ruby time#year()","Rails integer#year()","Rails integer#years()","Rails date#years_ago()","Rails time#years_ago()","Rails date#years_since()","Rails time#years_since()","Rails date::yesterday()","Rails date#yesterday()","Rails time#yesterday()","Ruby fiber::yield()","Ruby proc#yield()","Ruby file::zero?()","Ruby file::stat#zero?()","Ruby filetest#zero?()","Ruby fixnum#zero?()","Ruby float#zero?()","Ruby numeric#zero?()","Ruby array#zip()","Ruby enumerable#zip()","Ruby time#zone()","Rails activesupport::timewithzone#zone()","Rails time::zone()","Rails time::zone=()","Rails activesupport::timezone::zones_map()","Ruby array#|()","Ruby bignum#|()","Ruby falseclass#|()","Ruby fixnum#|()","Ruby nilclass#|()","Ruby trueclass#|()","Ruby bignum#~()","Ruby complex#~()","Ruby fixnum#~()","Ruby regexp#~()"],"info":[["!","BasicObject","Ruby/classes/BasicObject.html#method-i-21","()","<p>Boolean negate.\n",null,0],["!=","BasicObject","Ruby/classes/BasicObject.html#method-i-21-3D","(p1)","<p>Returns true if two objects are not-equal, otherwise false.\n",null,0],["!~","Object","Ruby/classes/Object.html#method-i-21-7E","(p1)","<p>Returns true if two objects do not match (using the <em>=~</em> method),\notherwise false.\n",null,0],["%","Bignum","Ruby/classes/Bignum.html#method-i-25","(p1)","<p>Returns big modulo other. See Numeric.divmod for more information.\n",null,0],["%","Fixnum","Ruby/classes/Fixnum.html#method-i-25","(p1)","<p>Returns <code>fix</code> modulo <code>other</code>. See\n<code>numeric.divmod</code> for more information.\n",null,0],["%","Float","Ruby/classes/Float.html#method-i-25","(p1)","<p>Return the modulo after division of <code>flt</code> by <code>other</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137</span>)      <span class=\"ruby-comment\">#=&gt; 104.21</span>\n<span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137.24</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["%","Numeric","Ruby/classes/Numeric.html#method-i-25","(p1)","\n<pre>x.modulo(y) means x-y*(x/y).floor</pre>\n<p>Equivalent to <em>num.divmod(aNumeric)</em>.\n<p>See <code>Numeric#divmod</code>.\n",null,0],["%","String","Ruby/classes/String.html#method-i-25","(p1)","<p>Format—Uses <em>str</em> as a format specification, and returns the result\nof applying it to <em>arg</em>. If the format …\n",null,0],["&","Array","Ruby/classes/Array.html#method-i-26","(p1)","<p>Set Intersection—Returns a new array containing elements common to the two\narrays, with no duplicates. …\n",null,0],["&","Bignum","Ruby/classes/Bignum.html#method-i-26","(p1)","<p>Performs bitwise <code>and</code> between <em>big</em> and\n<em>numeric</em>.\n",null,0],["&","FalseClass","Ruby/classes/FalseClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code>. <em>obj</em> is always evaluated as it is\nthe argument to a method call—there is no short-circuit …\n",null,0],["&","Fixnum","Ruby/classes/Fixnum.html#method-i-26","(p1)","<p>Bitwise AND.\n",null,0],["&","NilClass","Ruby/classes/NilClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code>. <em>obj</em> is always evaluated as it is\nthe argument to a method call—there is no short-circuit …\n",null,0],["&","Process::Status","Ruby/classes/Process/Status.html#method-i-26","(p1)","<p>Logical AND of the bits in <em>stat</em> with <em>num</em>.\n\n<pre>fork { exit 0x37 }\nProcess.wait\nsprintf(&#39;%04x&#39;, $?.to_i)    ...</pre>\n",null,0],["&","TrueClass","Ruby/classes/TrueClass.html#method-i-26","(p1)","<p>And—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>, <code>true</code> otherwise.\n",null,0],["*","Array","Ruby/classes/Array.html#method-i-2A","(p1)","<p>Repetition—With a String argument, equivalent to self.join(str). Otherwise,\nreturns a new array built …\n",null,0],["*","Bignum","Ruby/classes/Bignum.html#method-i-2A","(p1)","<p>Multiplies big and other, returning the result.\n",null,0],["*","Complex","Ruby/classes/Complex.html#method-i-2A","(p1)","<p>Performs multiplication.\n",null,0],["*","Fixnum","Ruby/classes/Fixnum.html#method-i-2A","(p1)","<p>Performs multiplication: the class of the resulting object depends on the\nclass of <code>numeric</code> and on the …\n",null,0],["*","Float","Ruby/classes/Float.html#method-i-2A","(p1)","<p>Returns a new float which is the product of <code>float</code> and\n<code>other</code>.\n",null,0],["*","Rational","Ruby/classes/Rational.html#method-i-2A","(p1)","<p>Performs multiplication.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  * <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (4/9)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   * <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["*","String","Ruby/classes/String.html#method-i-2A","(p1)","<p>Copy—Returns a new <code>String</code> containing <em>integer</em> copies\nof the receiver.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;Ho! &quot;</span> * <span class=\"ruby-value\">3</span>   <span class=\"ruby-comment\">#=&gt; &quot;Ho! Ho! Ho! &quot;</span>\n</pre>\n",null,0],["**","Bignum","Ruby/classes/Bignum.html#method-i-2A-2A","(p1)","<p>Raises <em>big</em> to the <em>exponent</em> power (which may be an\ninteger, float, or anything that will coerce to a number). …\n",null,0],["**","Complex","Ruby/classes/Complex.html#method-i-2A-2A","(p1)","<p>Performs exponentiation.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-string\">&#39;i&#39;</span>) <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">2</span>             <span class=\"ruby-comment\">#=&gt; (-1+0i)</span>\n<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">-8</span>) <span class=\"ruby-operator\">**</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">3</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["**","Fixnum","Ruby/classes/Fixnum.html#method-i-2A-2A","(p1)","<p>Raises <code>fix</code> to the <code>numeric</code> power, which may be\nnegative or fractional.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">2</span> <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">3</span>      <span class=\"ruby-comment\">#=&gt; 8</span>\n<span class=\"ruby-value\">2</span> <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">-1</span>     <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["**","Float","Ruby/classes/Float.html#method-i-2A-2A","(p1)","<p>Raises <code>float</code> the <code>other</code> power.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">2.0</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">3</span>      <span class=\"ruby-comment\">#=&gt; 8.0</span>\n</pre>\n",null,0],["**","Rational","Ruby/classes/Rational.html#method-i-2A-2A","(p1)","<p>Performs exponentiation.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>)    <span class=\"ruby-operator\">**</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>)    <span class=\"ruby-comment\">#=&gt; (8/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">10</span>)   <span class=\"ruby-operator\">**</span> <span class=\"ruby-value\">-2</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["+","Array","Ruby/classes/Array.html#method-i-2B","(p1)","<p>Concatenation—Returns a new array built by concatenating the two arrays\ntogether to produce a third …\n",null,0],["+","Bignum","Ruby/classes/Bignum.html#method-i-2B","(p1)","<p>Adds big and other, returning the result.\n",null,0],["+","Complex","Ruby/classes/Complex.html#method-i-2B","(p1)","<p>Performs addition.\n",null,0],["+","Fixnum","Ruby/classes/Fixnum.html#method-i-2B","(p1)","<p>Performs addition: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,0],["+","Float","Ruby/classes/Float.html#method-i-2B","(p1)","<p>Returns a new float which is the sum of <code>float</code> and\n<code>other</code>.\n",null,0],["+","Rational","Ruby/classes/Rational.html#method-i-2B","(p1)","<p>Performs addition.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">+</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (4/3)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">+</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["+","String","Ruby/classes/String.html#method-i-2B","(p1)","<p>Concatenation—Returns a new <code>String</code> containing\n<em>other_str</em> concatenated to <em>str</em>.\n\n<pre>&quot;Hello from &quot; + self.to_s ...</pre>\n",null,0],["+","Time","Ruby/classes/Time.html#method-i-2B","(p1)","<p>Addition—Adds some number of seconds (possibly fractional) to <em>time</em>\nand returns that value as a new …\n",null,0],["+","ActiveModel::MassAssignmentSecurity::PermissionSet","Rails/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-2B","(values)","",null,1],["+","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-2B","(other)","<p>Adds another Duration or a Numeric to this Duration. Numeric values are\ntreated as seconds.\n",null,1],["+","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-2B","(other)","<p>Returns a new Chars object containing the <em>other</em> object\nconcatenated to the string.\n<p>Example:\n\n<pre>(&#39;Café&#39;.mb_chars ...</pre>\n",null,1],["+","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-2B","(other)","",null,1],["+","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-2B","(other)","",null,1],["+","Rails::Initializable::Collection","Rails/classes/Rails/Initializable/Collection.html#method-i-2B","(other)","",null,1],["+@","Numeric","Ruby/classes/Numeric.html#method-i-2B-40","()","<p>Unary Plus—Returns the receiver&#39;s value.\n",null,0],["-","Array","Ruby/classes/Array.html#method-i-2D","(p1)","<p>Array Difference—Returns a new array that is a copy of the original array,\nremoving any items that …\n",null,0],["-","Bignum","Ruby/classes/Bignum.html#method-i-2D","(p1)","<p>Subtracts other from big, returning the result.\n",null,0],["-","Complex","Ruby/classes/Complex.html#method-i-2D","(p1)","<p>Performs subtraction.\n",null,0],["-","Fixnum","Ruby/classes/Fixnum.html#method-i-2D","(p1)","<p>Performs subtraction: the class of the resulting object depends on the\nclass of <code>numeric</code> and on the magnitude …\n",null,0],["-","Float","Ruby/classes/Float.html#method-i-2D","(p1)","<p>Returns a new float which is the difference of <code>float</code> and\n<code>other</code>.\n",null,0],["-","Rational","Ruby/classes/Rational.html#method-i-2D","(p1)","<p>Performs subtraction.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">-</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (0/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">-</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["-","Time","Ruby/classes/Time.html#method-i-2D","(p1)","<p>Difference—Returns a new time that represents the difference between two\ntimes, or subtracts the given …\n",null,0],["-","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-2D","(other)","<p>Subtracts another Duration or a Numeric from this Duration. Numeric values\nare treated as seconds.\n",null,1],["-","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-2D","(other)","",null,1],["-","Time","Rails/classes/Time.html#method-i-2D","(other)","",null,1],["-@","Bignum","Ruby/classes/Bignum.html#method-i-2D-40","()","<p>Unary minus (returns an integer whose value is 0-big)\n",null,0],["-@","Complex","Ruby/classes/Complex.html#method-i-2D-40","()","<p>Returns negation of the value.\n",null,0],["-@","Fixnum","Ruby/classes/Fixnum.html#method-i-2D-40","()","<p>Negates <code>fix</code> (which might return a Bignum).\n",null,0],["-@","Float","Ruby/classes/Float.html#method-i-2D-40","()","<p>Returns float, negated.\n",null,0],["-@","Numeric","Ruby/classes/Numeric.html#method-i-2D-40","()","<p>Unary Minus—Returns the receiver&#39;s value, negated.\n",null,0],["/","Bignum","Ruby/classes/Bignum.html#method-i-2F","(p1)","<p>Performs division: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,0],["/","Complex","Ruby/classes/Complex.html#method-i-2F","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10.0</span>) <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-comment\">#=&gt; (3.3333333333333335+(0/1)*i)</span>\n<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["/","Fixnum","Ruby/classes/Fixnum.html#method-i-2F","(p1)","<p>Performs division: the class of the resulting object depends on the class\nof <code>numeric</code> and on the magnitude …\n",null,0],["/","Float","Ruby/classes/Float.html#method-i-2F","(p1)","<p>Returns a new float which is the result of dividing <code>float</code> by\n<code>other</code>.\n",null,0],["/","Rational","Ruby/classes/Rational.html#method-i-2F","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (1/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["<","Bignum","Ruby/classes/Bignum.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is less than\nthat of <code>real</code>.\n",null,0],["<","Comparable","Ruby/classes/Comparable.html#method-i-3C","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns -1.\n",null,0],["<","Fixnum","Ruby/classes/Fixnum.html#method-i-3C","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is less than\nthat of <code>real</code>.\n",null,0],["<","Float","Ruby/classes/Float.html#method-i-3C","(p1)","<p><code>true</code> if <code>flt</code> is less than <code>real</code>.\n",null,0],["<","Module","Ruby/classes/Module.html#method-i-3C","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em>. Returns\n<code>nil</code> if there&#39;s no relationship between the two. …\n",null,0],["<<","Array","Ruby/classes/Array.html#method-i-3C-3C","(p1)","<p>Append—Pushes the given object on to the end of this array. This expression\nreturns the array itself, …\n",null,0],["<<","Bignum","Ruby/classes/Bignum.html#method-i-3C-3C","(p1)","<p>Shifts big left <em>numeric</em> positions (right if <em>numeric</em> is\nnegative).\n",null,0],["<<","Fixnum","Ruby/classes/Fixnum.html#method-i-3C-3C","(p1)","<p>Shifts <em>fix</em> left <em>count</em> positions (right if <em>count</em>\nis negative).\n",null,0],["<<","IO","Ruby/classes/IO.html#method-i-3C-3C","(p1)","<p>String Output—Writes <em>obj</em> to <em>ios</em>. <em>obj</em> will be\nconverted to a string using <code>to_s</code>.\n\n<pre>$stdout &lt;&lt; &quot;Hello &quot; &lt;&lt; ...</pre>\n",null,0],["<<","String","Ruby/classes/String.html#method-i-3C-3C","(p1)","<p>Append—Concatenates the given object to <em>str</em>. If the object is a\n<code>Integer</code>, it is considered as a codepoint, …\n",null,0],["<<","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-3C-3C","(value)","",null,1],["<=","Bignum","Ruby/classes/Bignum.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is less than or\nequal to that of <code>real</code>.\n",null,0],["<=","Comparable","Ruby/classes/Comparable.html#method-i-3C-3D","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns -1 or …\n",null,0],["<=","Fixnum","Ruby/classes/Fixnum.html#method-i-3C-3D","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is less than or\nequal to that of <code>real</code>.\n",null,0],["<=","Float","Ruby/classes/Float.html#method-i-3C-3D","(p1)","<p><code>true</code> if <code>flt</code> is less than or equal to\n<code>real</code>.\n",null,0],["<=","Module","Ruby/classes/Module.html#method-i-3C-3D","(p1)","<p>Returns true if <em>mod</em> is a subclass of <em>other</em> or is the same\nas <em>other</em>. Returns <code>nil</code> if there&#39;s no relationship\n…\n",null,0],["<=>","Array","Ruby/classes/Array.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns an integer (-1, 0, or +1) if this array is less than,\nequal to, or greater than …\n",null,0],["<=>","Bignum","Ruby/classes/Bignum.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, or +1 depending on whether <em>big</em> is less\nthan, equal to, or greater than <em>numeric</em> …\n",null,0],["<=>","File::Stat","Ruby/classes/File/Stat.html#method-i-3C-3D-3E","(p1)","<p>Compares <code>File::Stat</code> objects by comparing their respective\nmodification times.\n\n<pre>f1 = File.new(&quot;f1&quot;, &quot;w&quot;) ...</pre>\n",null,0],["<=>","Fixnum","Ruby/classes/Fixnum.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1, 0, +1 or nil depending on whether <em>fix</em> is\nless than, equal to, or greater than …\n",null,0],["<=>","Float","Ruby/classes/Float.html#method-i-3C-3D-3E","(p1)","<p>Returns -1, 0, +1 or nil depending on whether <em>flt</em> is less than,\nequal to, or greater than <em>real</em>. This …\n",null,0],["<=>","Module","Ruby/classes/Module.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1 if <em>mod</em> includes <em>other_mod</em>, 0 if\n<em>mod</em> is the same as <em>other_mod</em>, and +1 if <em>mod</em> is …\n",null,0],["<=>","Numeric","Ruby/classes/Numeric.html#method-i-3C-3D-3E","(p1)","<p>Returns zero if <em>num</em> equals <em>other</em>, <code>nil</code>\notherwise.\n",null,0],["<=>","Object","Ruby/classes/Object.html#method-i-3C-3D-3E","(p1)","<p>Returns 0 if obj === other, otherwise nil.\n",null,0],["<=>","Rational","Ruby/classes/Rational.html#method-i-3C-3D-3E","(p1)","<p>Performs comparison and returns -1, 0, or +1.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">&lt;=&gt;</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["<=>","String","Ruby/classes/String.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Returns -1 if <em>other_str</em> is greater than, 0 if\n<em>other_str</em> is equal to, and +1 if <em>other_str</em> …\n",null,0],["<=>","Symbol","Ruby/classes/Symbol.html#method-i-3C-3D-3E","(p1)","<p>Compares <em>sym</em> with <em>other</em> in string form.\n",null,0],["<=>","Time","Ruby/classes/Time.html#method-i-3C-3D-3E","(p1)","<p>Comparison—Compares <em>time</em> with <em>other_time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>       <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:12:12 -0600</span>\n<span class=\"ruby-identifier\">t2</span> = <span class=\"ruby-identifier\">t</span> <span class=\"ruby-operator\">+</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["<=>","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-3C-3D-3E","(other_object)","<p>Allows sort on objects\n",null,1],["<=>","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#method-i-3C-3D-3E","(version_string)","",null,1],["<=>","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-3C-3D-3E","(other)","<p>Returns -1, 0, or 1, depending on whether the Chars object is to be sorted\nbefore, equal or after the …\n",null,1],["<=>","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-3C-3D-3E","(other)","<p>Use the time in UTC for comparisons.\n",null,1],["<=>","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-3C-3D-3E","(zone)","<p>Compare this time zone to the parameter. The two are compared first on\ntheir offsets, and then by name. …\n",null,1],["<=>","DateTime","Rails/classes/DateTime.html#method-i-3C-3D-3E","(other)","<p>Layers additional behavior on DateTime#&lt;=&gt; so that Time and\nActiveSupport::TimeWithZone instances …\n",null,1],["<=>","Time","Rails/classes/Time.html#method-i-3C-3D-3E","(other)","",null,1],["==","Array","Ruby/classes/Array.html#method-i-3D-3D","(p1)","<p>Equality—Two arrays are equal if they contain the same number of elements\nand if each element is equal …\n",null,0],["==","BasicObject","Ruby/classes/BasicObject.html#method-i-3D-3D","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,0],["==","Bignum","Ruby/classes/Bignum.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>big</em>. Contrast this with <code>Bignum#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["==","Comparable","Ruby/classes/Comparable.html#method-i-3D-3D","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns 0. Also …\n",null,0],["==","Complex","Ruby/classes/Complex.html#method-i-3D-3D","(p1)","<p>Returns true if cmp equals object numerically.\n",null,0],["==","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-3D-3D","(p1)","",null,0],["==","Exception","Ruby/classes/Exception.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not an <code>Exception</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>exc</em>\nand <em>obj</em> share same …\n",null,0],["==","Fixnum","Ruby/classes/Fixnum.html#method-i-3D-3D","(p1)","<p>Return <code>true</code> if <code>fix</code> equals <code>other</code>\nnumerically.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">2</span>      <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">1.0</span>    <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,0],["==","Float","Ruby/classes/Float.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>flt</em>. Contrast this with <code>Float#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["==","Hash","Ruby/classes/Hash.html#method-i-3D-3D","(p1)","<p>Equality—Two hashes are equal if they each contain the same number of keys\nand if each key-value pair …\n",null,0],["==","MatchData","Ruby/classes/MatchData.html#method-i-3D-3D","(p1)","<p>Equality—Two matchdata are equal if their target strings, patterns, and\nmatched positions are identical. …\n",null,0],["==","Method","Ruby/classes/Method.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,0],["==","Module","Ruby/classes/Module.html#method-i-3D-3D","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,0],["==","Proc","Ruby/classes/Proc.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if <em>prc</em> is the same object as\n<em>other_proc</em>, or if they are both procs with the same body.\n",null,0],["==","Process::Status","Ruby/classes/Process/Status.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> if the integer value of <em>stat</em> equals\n<em>other</em>.\n",null,0],["==","Random","Ruby/classes/Random.html#method-i-3D-3D","(p1)","<p>Returns true if the generators&#39; states equal.\n",null,0],["==","Range","Ruby/classes/Range.html#method-i-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a Range, has equivalent\nbeginning and end items (by comparing them with  …\n",null,0],["==","Rational","Ruby/classes/Rational.html#method-i-3D-3D","(p1)","<p>Returns true if rat equals object numerically.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">==</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; true ...</span>\n</pre>\n",null,0],["==","Regexp","Ruby/classes/Regexp.html#method-i-3D-3D","(p1)","<p>Equality—Two regexps are equal if their patterns are identical, they have\nthe same character set code, …\n",null,0],["==","String","Ruby/classes/String.html#method-i-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not a <code>String</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>str</em>\n<code>&lt;=&gt;</code> <em>obj</em> returns …\n",null,0],["==","Struct","Ruby/classes/Struct.html#method-i-3D-3D","(p1)","<p>Equality—Returns <code>true</code> if <em>other_struct</em> is equal to\nthis one: they must be of the same class as generated …\n",null,0],["==","Symbol","Ruby/classes/Symbol.html#method-i-3D-3D","(p1)","<p>Equality—If <em>sym</em> and <em>obj</em> are exactly the same symbol,\nreturns <code>true</code>.\n",null,0],["==","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-3D-3D","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,0],["==","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-3D-3D","(middleware)","",null,1],["==","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-3D-3D","(resolver)","",null,1],["==","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-3D-3D","(comparison_object)","<p>Returns true if <code>comparison_object</code> is the same exact object, or\n<code>comparison_object</code> is of the same type …\n",null,1],["==","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-3D-3D","(other_aggregation)","<p>Returns <code>true</code> if <code>self</code> and\n<code>other_aggregation</code> have the same <code>name</code> attribute,\n<code>active_record</code> attribute, and …\n",null,1],["==","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-3D-3D","(other)","",null,1],["==","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-3D-3D","(other)","<p>Test for equality.  Resource are equal if and only if <code>other</code> is\nthe same object or is an instance of the …\n",null,1],["==","ActiveResource::Request","Rails/classes/ActiveResource/Request.html#method-i-3D-3D","(req)","",null,1],["==","ActiveResource::Response","Rails/classes/ActiveResource/Response.html#method-i-3D-3D","(other)","<p>Returns true if the other is a Response with an equal body, equal message\nand equal headers. Otherwise …\n",null,1],["==","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-3D-3D","(other)","<p>Returns true if <code>other</code> is also a Duration instance with the\nsame <code>value</code>, or if <code>other == value</code>.\n",null,1],["==","Mime::Type","Rails/classes/Mime/Type.html#method-i-3D-3D","(mime_type)","",null,1],["===","Bignum","Ruby/classes/Bignum.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>big</em>. Contrast this with <code>Bignum#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["===","Fixnum","Ruby/classes/Fixnum.html#method-i-3D-3D-3D","(p1)","<p>Return <code>true</code> if <code>fix</code> equals <code>other</code>\nnumerically.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">2</span>      <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">1.0</span>    <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,0],["===","Float","Ruby/classes/Float.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> only if <em>obj</em> has the same value as\n<em>flt</em>. Contrast this with <code>Float#eql?</code>, which requires\n<em>obj</em> …\n",null,0],["===","Module","Ruby/classes/Module.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Returns <code>true</code> if <em>anObject</em> is an instance\nof <em>mod</em> or one of <em>mod</em>&#39;s descendants. Of limited …\n",null,0],["===","Object","Ruby/classes/Object.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—For class <code>Object</code>, effectively the same as\ncalling  <code>#==</code>, but typically overridden by descendants …\n",null,0],["===","Proc","Ruby/classes/Proc.html#method-i-3D-3D-3D","(*args)","<p>Invokes the block with <code>obj</code> as the proc&#39;s parameter like\nProc#call.  It is to allow a proc object …\n",null,0],["===","Range","Ruby/classes/Range.html#method-i-3D-3D-3D","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an element of <em>rng</em>,\n<code>false</code> otherwise. Conveniently, <code>===</code> is the\ncomparison operator …\n",null,0],["===","Regexp","Ruby/classes/Regexp.html#method-i-3D-3D-3D","(p1)","<p>Case Equality—Synonym for <code>Regexp#=~</code> used in case statements.\n\n<pre>a = &quot;HELLO&quot;\ncase a\nwhen /^[a-z]*$/; print ...</pre>\n",null,0],["===","String","Ruby/classes/String.html#method-i-3D-3D-3D","(p1)","<p>Equality—If <em>obj</em> is not a <code>String</code>, returns\n<code>false</code>. Otherwise, returns <code>true</code> if <em>str</em>\n<code>&lt;=&gt;</code> <em>obj</em> returns …\n",null,0],["===","Symbol","Ruby/classes/Symbol.html#method-i-3D-3D-3D","(p1)","<p>Equality—If <em>sym</em> and <em>obj</em> are exactly the same symbol,\nreturns <code>true</code>.\n",null,0],["===","SystemCallError","Ruby/classes/SystemCallError.html#method-c-3D-3D-3D","(p1)","<p>Return <code>true</code> if the receiver is a generic\n<code>SystemCallError</code>, or if the error numbers <code>self</code> and\n<em>other</em> are …\n",null,0],["===","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-3D-3D-3D","(object)","<p>Overwrite the default class equality method to provide support for\nassociation proxies.\n",null,1],["===","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-i-3D-3D-3D","(other)","",null,1],["===","Mime::Type","Rails/classes/Mime/Type.html#method-i-3D-3D-3D","(list)","",null,1],["===","Time","Rails/classes/Time.html#method-c-3D-3D-3D","(other)","<p>Overriding case equality method so that it returns true for\nActiveSupport::TimeWithZone instances\n",null,1],["=~","Object","Ruby/classes/Object.html#method-i-3D-7E","(p1)","<p>Pattern Match—Overridden by descendants (notably <code>Regexp</code> and\n<code>String</code>) to provide meaningful pattern-match …\n",null,0],["=~","Regexp","Ruby/classes/Regexp.html#method-i-3D-7E","(p1)","<p>Match—Matches <em>rxp</em> against <em>str</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/at/</span> <span class=\"ruby-operator\">=~</span> <span class=\"ruby-string\">&quot;input data&quot;</span>   <span class=\"ruby-comment\">#=&gt; 7</span>\n<span class=\"ruby-regexp\">/ax/</span> <span class=\"ruby-operator\">=~</span> <span class=\"ruby-string\">&quot;input data&quot;</span>   <span class=\"ruby-comment\">#=&gt; nil</span>\n</pre>\n<p>If <code>=~</code> is used …\n",null,0],["=~","String","Ruby/classes/String.html#method-i-3D-7E","(p1)","<p>Match—If <em>obj</em> is a <code>Regexp</code>, use it as a pattern to\nmatch against <em>str</em>,and returns the position the match …\n",null,0],["=~","Symbol","Ruby/classes/Symbol.html#method-i-3D-7E","(p1)","<p>Returns <code>sym.to_s =~ obj</code>.\n",null,0],["=~","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-3D-7E","(other)","<p>Like <code>String#=~</code> only it returns the character offset (in\ncodepoints) instead of the byte offset.\n<p>Example: …\n",null,1],["=~","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-3D-7E","(re)","<p>Compare #name and TZInfo identifier to a supplied regexp, returning true if\na match is found.\n",null,1],["=~","Mime::Type","Rails/classes/Mime/Type.html#method-i-3D-7E","(mime_type)","",null,1],[">","Bignum","Ruby/classes/Bignum.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is greater than\nthat of <code>real</code>.\n",null,0],[">","Comparable","Ruby/classes/Comparable.html#method-i-3E","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns 1.\n",null,0],[">","Fixnum","Ruby/classes/Fixnum.html#method-i-3E","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is greater than\nthat of <code>real</code>.\n",null,0],[">","Float","Ruby/classes/Float.html#method-i-3E","(p1)","<p><code>true</code> if <code>flt</code> is greater than <code>real</code>.\n",null,0],[">","Module","Ruby/classes/Module.html#method-i-3E","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>. Returns\n<code>nil</code> if there&#39;s no relationship between the two. …\n",null,0],[">=","Bignum","Ruby/classes/Bignum.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>big</code> is greater than\nor equal to that of <code>real</code>.\n",null,0],[">=","Comparable","Ruby/classes/Comparable.html#method-i-3E-3D","(p1)","<p>Compares two objects based on the receiver&#39;s <code>&lt;=&gt;</code>\nmethod, returning true if it returns 0 or …\n",null,0],[">=","Fixnum","Ruby/classes/Fixnum.html#method-i-3E-3D","(p1)","<p>Returns <code>true</code> if the value of <code>fix</code> is greater than\nor equal to that of <code>real</code>.\n",null,0],[">=","Float","Ruby/classes/Float.html#method-i-3E-3D","(p1)","<p><code>true</code> if <code>flt</code> is greater than or equal to\n<code>real</code>.\n",null,0],[">=","Module","Ruby/classes/Module.html#method-i-3E-3D","(p1)","<p>Returns true if <em>mod</em> is an ancestor of <em>other</em>, or the two\nmodules are the same. Returns <code>nil</code> if there&#39;s …\n",null,0],[">>","Bignum","Ruby/classes/Bignum.html#method-i-3E-3E","(p1)","<p>Shifts big right <em>numeric</em> positions (left if <em>numeric</em> is\nnegative).\n",null,0],[">>","Fixnum","Ruby/classes/Fixnum.html#method-i-3E-3E","(p1)","<p>Shifts <em>fix</em> right <em>count</em> positions (left if <em>count</em>\nis negative).\n",null,0],[">>","Process::Status","Ruby/classes/Process/Status.html#method-i-3E-3E","(p1)","<p>Shift the bits in <em>stat</em> right <em>num</em> places.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">fork</span> { <span class=\"ruby-identifier\">exit</span> <span class=\"ruby-value\">99</span> }   <span class=\"ruby-comment\">#=&gt; 26563</span>\n<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">wait</span>       <span class=\"ruby-comment\">#=&gt; 26563</span>\n<span class=\"ruby-identifier\">$?</span>.<span class=\"ruby-identifier\">to_i</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],[">>","Date","Rails/classes/Date.html#method-i-3E-3E","(n)","<p>Backported from 1.9. The one in 1.8 leads to incorrect next_month and\nfriends for dates where the calendar …\n",null,1],["ARGF","","Ruby/classes/ARGF.html","","<p><code>ARGF</code> is a stream designed for use in scripts that process\nfiles given as command-line arguments or passed …\n",null,0],["AbstractController","","Rails/classes/AbstractController.html","","<p>Includes <code>url_for</code> into the host class (e.g. an abstract\ncontroller or mailer). The class has to provide …\n",null,1],["AbstractController::ActionNotFound","","Rails/classes/AbstractController/ActionNotFound.html","","",null,1],["AbstractController::AssetPaths","","Rails/classes/AbstractController/AssetPaths.html","","",null,1],["AbstractController::Base","","Rails/classes/AbstractController/Base.html","","<p><code>AbstractController::Base</code> is a low-level API. Nobody should be\nusing it directly, and subclasses (like …\n",null,1],["AbstractController::Callbacks","","Rails/classes/AbstractController/Callbacks.html","","",null,1],["AbstractController::Callbacks::ClassMethods","","Rails/classes/AbstractController/Callbacks/ClassMethods.html","","",null,1],["AbstractController::Collector","","Rails/classes/AbstractController/Collector.html","","",null,1],["AbstractController::DoubleRenderError","","Rails/classes/AbstractController/DoubleRenderError.html","","",null,1],["AbstractController::Error","","Rails/classes/AbstractController/Error.html","","",null,1],["AbstractController::Helpers","","Rails/classes/AbstractController/Helpers.html","","",null,1],["AbstractController::Helpers::ClassMethods","","Rails/classes/AbstractController/Helpers/ClassMethods.html","","",null,1],["AbstractController::Layouts","","Rails/classes/AbstractController/Layouts.html","","<p>Layouts reverse the common pattern of including shared headers and footers\nin many templates to isolate …\n",null,1],["AbstractController::Layouts::ClassMethods","","Rails/classes/AbstractController/Layouts/ClassMethods.html","","",null,1],["AbstractController::Layouts::ClassMethods::LayoutConditions","","Rails/classes/AbstractController/Layouts/ClassMethods/LayoutConditions.html","","<p>This module is mixed in if layout conditions are provided. This means that\nif no layout conditions are …\n",null,1],["AbstractController::Logger","","Rails/classes/AbstractController/Logger.html","","",null,1],["AbstractController::Railties","","Rails/classes/AbstractController/Railties.html","","",null,1],["AbstractController::Railties::RoutesHelpers","","Rails/classes/AbstractController/Railties/RoutesHelpers.html","","",null,1],["AbstractController::Rendering","","Rails/classes/AbstractController/Rendering.html","","",null,1],["AbstractController::Rendering::ClassMethods","","Rails/classes/AbstractController/Rendering/ClassMethods.html","","",null,1],["AbstractController::Translation","","Rails/classes/AbstractController/Translation.html","","",null,1],["AbstractController::UrlFor","","Rails/classes/AbstractController/UrlFor.html","","",null,1],["AbstractController::UrlFor::ClassMethods","","Rails/classes/AbstractController/UrlFor/ClassMethods.html","","",null,1],["AbstractController::ViewPaths","","Rails/classes/AbstractController/ViewPaths.html","","",null,1],["AbstractController::ViewPaths::ClassMethods","","Rails/classes/AbstractController/ViewPaths/ClassMethods.html","","",null,1],["ActionController","","Rails/classes/ActionController.html","","<p>Includes <code>url_for</code> into the host class. The class has to provide\na <code>RouteSet</code> by implementing  the <code>_routes</code> …\n",null,1],["ActionController::Base","","Rails/classes/ActionController/Base.html","","<p>Action Controllers are the core of a web request in Rails. They are made up\nof one or more actions that …\n",null,1],["ActionController::Caching","","Rails/classes/ActionController/Caching.html","","<p>Caching is a cheap way of speeding up slow applications by keeping the\nresult of calculations, renderings, …\n",null,1],["ActionController::Caching::Actions","","Rails/classes/ActionController/Caching/Actions.html","","<p>Action caching is similar to page caching by the fact that the entire\noutput of the response is cached, …\n",null,1],["ActionController::Caching::Actions::ActionCachePath","","Rails/classes/ActionController/Caching/Actions/ActionCachePath.html","","",null,1],["ActionController::Caching::Actions::ClassMethods","","Rails/classes/ActionController/Caching/Actions/ClassMethods.html","","",null,1],["ActionController::Caching::ConfigMethods","","Rails/classes/ActionController/Caching/ConfigMethods.html","","",null,1],["ActionController::Caching::Fragments","","Rails/classes/ActionController/Caching/Fragments.html","","<p>Fragment caching is used for caching various blocks within  views without\ncaching the entire action as …\n",null,1],["ActionController::Caching::Pages","","Rails/classes/ActionController/Caching/Pages.html","","<p>Page caching is an approach to caching where the entire action output of is\nstored as a HTML file that …\n",null,1],["ActionController::Caching::Pages::ClassMethods","","Rails/classes/ActionController/Caching/Pages/ClassMethods.html","","",null,1],["ActionController::Caching::Sweeping","","Rails/classes/ActionController/Caching/Sweeping.html","","<p>Sweepers are the terminators of the caching world and responsible for\nexpiring caches when model objects …\n",null,1],["ActionController::Compatibility","","Rails/classes/ActionController/Compatibility.html","","",null,1],["ActionController::ConditionalGet","","Rails/classes/ActionController/ConditionalGet.html","","",null,1],["ActionController::Cookies","","Rails/classes/ActionController/Cookies.html","","",null,1],["ActionController::DataStreaming","","Rails/classes/ActionController/DataStreaming.html","","<p>Methods for sending arbitrary data and for streaming files to the browser,\ninstead of rendering.\n",null,1],["ActionController::Flash","","Rails/classes/ActionController/Flash.html","","",null,1],["ActionController::ForceSSL","","Rails/classes/ActionController/ForceSSL.html","","<p>This module provides a method which will redirect browser to use HTTPS\nprotocol. This will ensure that …\n",null,1],["ActionController::ForceSSL::ClassMethods","","Rails/classes/ActionController/ForceSSL/ClassMethods.html","","",null,1],["ActionController::Head","","Rails/classes/ActionController/Head.html","","",null,1],["ActionController::Helpers","","Rails/classes/ActionController/Helpers.html","","<p>The Rails framework provides a large number of helpers for working with\nassets, dates, forms, numbers …\n",null,1],["ActionController::Helpers::ClassMethods","","Rails/classes/ActionController/Helpers/ClassMethods.html","","",null,1],["ActionController::HideActions","","Rails/classes/ActionController/HideActions.html","","<p>Adds the ability to prevent public methods on a controller to be called as\nactions.\n",null,1],["ActionController::HideActions::ClassMethods","","Rails/classes/ActionController/HideActions/ClassMethods.html","","",null,1],["ActionController::HttpAuthentication","","Rails/classes/ActionController/HttpAuthentication.html","","",null,1],["ActionController::HttpAuthentication::Basic","","Rails/classes/ActionController/HttpAuthentication/Basic.html","","<p>Makes it dead easy to do HTTP Basic and Digest authentication.\n<p>Simple Basic example\n\n<pre class=\"ruby\"> <span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActionController::HttpAuthentication::Basic::ControllerMethods","","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html","","",null,1],["ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html","","",null,1],["ActionController::HttpAuthentication::Digest","","Rails/classes/ActionController/HttpAuthentication/Digest.html","","",null,1],["ActionController::HttpAuthentication::Digest::ControllerMethods","","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html","","",null,1],["ActionController::HttpAuthentication::Token","","Rails/classes/ActionController/HttpAuthentication/Token.html","","<p>Makes it dead easy to do HTTP Token authentication.\n<p>Simple Token example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ApplicationController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActionController::HttpAuthentication::Token::ControllerMethods","","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html","","",null,1],["ActionController::ImplicitRender","","Rails/classes/ActionController/ImplicitRender.html","","",null,1],["ActionController::Instrumentation","","Rails/classes/ActionController/Instrumentation.html","","<p>Adds instrumentation to several ends in ActionController::Base. It also\nprovides some hooks related with …\n",null,1],["ActionController::Instrumentation::ClassMethods","","Rails/classes/ActionController/Instrumentation/ClassMethods.html","","",null,1],["ActionController::LogSubscriber","","Rails/classes/ActionController/LogSubscriber.html","","",null,1],["ActionController::Metal","","Rails/classes/ActionController/Metal.html","","<p><code>ActionController::Metal</code> is the simplest possible controller,\nproviding a valid Rack interface without …\n",null,1],["ActionController::Middleware","","Rails/classes/ActionController/Middleware.html","","",null,1],["ActionController::Middleware::ActionMiddleware","","Rails/classes/ActionController/Middleware/ActionMiddleware.html","","",null,1],["ActionController::MimeResponds","","Rails/classes/ActionController/MimeResponds.html","","",null,1],["ActionController::MimeResponds::ClassMethods","","Rails/classes/ActionController/MimeResponds/ClassMethods.html","","",null,1],["ActionController::ParamsWrapper","","Rails/classes/ActionController/ParamsWrapper.html","","<p>Wraps the parameters hash into a nested hash. This will allow clients to\nsubmit POST requests without …\n",null,1],["ActionController::ParamsWrapper::ClassMethods","","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html","","",null,1],["ActionController::RackDelegation","","Rails/classes/ActionController/RackDelegation.html","","",null,1],["ActionController::Railtie","","Rails/classes/ActionController/Railtie.html","","",null,1],["ActionController::Railties","","Rails/classes/ActionController/Railties.html","","",null,1],["ActionController::Railties::Paths","","Rails/classes/ActionController/Railties/Paths.html","","",null,1],["ActionController::RecordIdentifier","","Rails/classes/ActionController/RecordIdentifier.html","","<p>The record identifier encapsulates a number of naming conventions for\ndealing with records, like Active …\n",null,1],["ActionController::Redirecting","","Rails/classes/ActionController/Redirecting.html","","",null,1],["ActionController::Renderers","","Rails/classes/ActionController/Renderers.html","","",null,1],["ActionController::Renderers::All","","Rails/classes/ActionController/Renderers/All.html","","",null,1],["ActionController::Renderers::ClassMethods","","Rails/classes/ActionController/Renderers/ClassMethods.html","","",null,1],["ActionController::Rendering","","Rails/classes/ActionController/Rendering.html","","",null,1],["ActionController::RequestForgeryProtection","","Rails/classes/ActionController/RequestForgeryProtection.html","","<p>Controller actions are protected from Cross-Site Request Forgery (CSRF)\nattacks by including a token …\n",null,1],["ActionController::RequestForgeryProtection::ClassMethods","","Rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html","","",null,1],["ActionController::Rescue","","Rails/classes/ActionController/Rescue.html","","<p>This module is responsible to provide `rescue_from` helpers to controllers\nand configure when detailed …\n",null,1],["ActionController::Responder","","Rails/classes/ActionController/Responder.html","","<p>Responsible for exposing a resource to different mime requests, usually\ndepending on the HTTP verb.  …\n",null,1],["ActionController::SessionManagement","","Rails/classes/ActionController/SessionManagement.html","","",null,1],["ActionController::SessionManagement::ClassMethods","","Rails/classes/ActionController/SessionManagement/ClassMethods.html","","",null,1],["ActionController::Streaming","","Rails/classes/ActionController/Streaming.html","","<p>Allows views to be streamed back to the client as they are rendered.\n<p>The default way Rails renders views …\n",null,1],["ActionController::TemplateAssertions","","Rails/classes/ActionController/TemplateAssertions.html","","",null,1],["ActionController::TestCase","","Rails/classes/ActionController/TestCase.html","","<p>Superclass for ActionController functional tests. Functional tests allow\nyou to test a single controller …\n",null,1],["ActionController::TestCase::Behavior","","Rails/classes/ActionController/TestCase/Behavior.html","","",null,1],["ActionController::TestCase::Behavior::ClassMethods","","Rails/classes/ActionController/TestCase/Behavior/ClassMethods.html","","",null,1],["ActionController::TestCase::RaiseActionExceptions","","Rails/classes/ActionController/TestCase/RaiseActionExceptions.html","","<p>When the request.remote_addr remains the default for testing, which is\n0.0.0.0, the exception is simply …\n",null,1],["ActionController::TestResponse","","Rails/classes/ActionController/TestResponse.html","","",null,1],["ActionController::Testing","","Rails/classes/ActionController/Testing.html","","",null,1],["ActionController::Testing::ClassMethods","","Rails/classes/ActionController/Testing/ClassMethods.html","","",null,1],["ActionController::UrlFor","","Rails/classes/ActionController/UrlFor.html","","",null,1],["ActionDispatch","","Rails/classes/ActionDispatch.html","","<p>Keep this file meanwhile github.com/rack/rack/pull/313 is not released\n",null,1],["ActionDispatch::Assertions","","Rails/classes/ActionDispatch/Assertions.html","","",null,1],["ActionDispatch::Assertions::DomAssertions","","Rails/classes/ActionDispatch/Assertions/DomAssertions.html","","",null,1],["ActionDispatch::Assertions::ResponseAssertions","","Rails/classes/ActionDispatch/Assertions/ResponseAssertions.html","","<p>A small suite of assertions that test responses from Rails applications.\n",null,1],["ActionDispatch::Assertions::RoutingAssertions","","Rails/classes/ActionDispatch/Assertions/RoutingAssertions.html","","<p>Suite of assertions to test routes generated by Rails and the handling of\nrequests made to them.\n",null,1],["ActionDispatch::Assertions::SelectorAssertions","","Rails/classes/ActionDispatch/Assertions/SelectorAssertions.html","","<p>Adds the <code>assert_select</code> method for use in Rails functional test\ncases, which can be used to make assertions …\n",null,1],["ActionDispatch::Assertions::TagAssertions","","Rails/classes/ActionDispatch/Assertions/TagAssertions.html","","<p>Pair of assertions to testing elements in the HTML output of the response.\n",null,1],["ActionDispatch::BestStandardsSupport","","Rails/classes/ActionDispatch/BestStandardsSupport.html","","",null,1],["ActionDispatch::BodyProxy","","Rails/classes/ActionDispatch/BodyProxy.html","","",null,1],["ActionDispatch::Callbacks","","Rails/classes/ActionDispatch/Callbacks.html","","<p>Provide callbacks to be executed before and after the request dispatch.\n",null,1],["ActionDispatch::Cookies","","Rails/classes/ActionDispatch/Cookies.html","","<p>Cookies are read and written through ActionController#cookies.\n<p>The cookies being read are the ones received …\n",null,1],["ActionDispatch::Cookies::CookieOverflow","","Rails/classes/ActionDispatch/Cookies/CookieOverflow.html","","<p>Raised when storing more than 4K of session data.\n",null,1],["ActionDispatch::DebugExceptions","","Rails/classes/ActionDispatch/DebugExceptions.html","","<p>This middleware is responsible for logging exceptions and showing a\ndebugging page in case the request …\n",null,1],["ActionDispatch::ExceptionWrapper","","Rails/classes/ActionDispatch/ExceptionWrapper.html","","",null,1],["ActionDispatch::FileHandler","","Rails/classes/ActionDispatch/FileHandler.html","","",null,1],["ActionDispatch::Flash","","Rails/classes/ActionDispatch/Flash.html","","<p>The flash provides a way to pass temporary objects between actions.\nAnything you place in the flash will …\n",null,1],["ActionDispatch::Flash::FlashHash","","Rails/classes/ActionDispatch/Flash/FlashHash.html","","<p>Implementation detail: please do not change the signature of the FlashHash\nclass. Doing that will likely …\n",null,1],["ActionDispatch::Head","","Rails/classes/ActionDispatch/Head.html","","",null,1],["ActionDispatch::Http","","Rails/classes/ActionDispatch/Http.html","","",null,1],["ActionDispatch::Http::Cache","","Rails/classes/ActionDispatch/Http/Cache.html","","",null,1],["ActionDispatch::Http::Cache::Request","","Rails/classes/ActionDispatch/Http/Cache/Request.html","","",null,1],["ActionDispatch::Http::Cache::Response","","Rails/classes/ActionDispatch/Http/Cache/Response.html","","",null,1],["ActionDispatch::Http::FilterParameters","","Rails/classes/ActionDispatch/Http/FilterParameters.html","","<p>Allows you to specify sensitive parameters which will be replaced from the\nrequest log by looking in …\n",null,1],["ActionDispatch::Http::Headers","","Rails/classes/ActionDispatch/Http/Headers.html","","",null,1],["ActionDispatch::Http::MimeNegotiation","","Rails/classes/ActionDispatch/Http/MimeNegotiation.html","","",null,1],["ActionDispatch::Http::ParameterFilter","","Rails/classes/ActionDispatch/Http/ParameterFilter.html","","",null,1],["ActionDispatch::Http::Parameters","","Rails/classes/ActionDispatch/Http/Parameters.html","","",null,1],["ActionDispatch::Http::URL","","Rails/classes/ActionDispatch/Http/URL.html","","",null,1],["ActionDispatch::Http::Upload","","Rails/classes/ActionDispatch/Http/Upload.html","","",null,1],["ActionDispatch::Http::UploadedFile","","Rails/classes/ActionDispatch/Http/UploadedFile.html","","",null,1],["ActionDispatch::Integration","","Rails/classes/ActionDispatch/Integration.html","","",null,1],["ActionDispatch::Integration::RequestHelpers","","Rails/classes/ActionDispatch/Integration/RequestHelpers.html","","",null,1],["ActionDispatch::Integration::Runner","","Rails/classes/ActionDispatch/Integration/Runner.html","","",null,1],["ActionDispatch::Integration::Session","","Rails/classes/ActionDispatch/Integration/Session.html","","<p>An instance of this class represents a set of requests and responses\nperformed sequentially by a test …\n",null,1],["ActionDispatch::IntegrationTest","","Rails/classes/ActionDispatch/IntegrationTest.html","","<p>An integration test spans multiple controllers and actions, tying them all\ntogether to ensure they work …\n",null,1],["ActionDispatch::MiddlewareStack","","Rails/classes/ActionDispatch/MiddlewareStack.html","","",null,1],["ActionDispatch::MiddlewareStack::Middleware","","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html","","",null,1],["ActionDispatch::ParamsParser","","Rails/classes/ActionDispatch/ParamsParser.html","","",null,1],["ActionDispatch::PerformanceTest","","Rails/classes/ActionDispatch/PerformanceTest.html","","<p>An integration test that runs a code profiler on your test methods.\nProfiling output for combinations …\n",null,1],["ActionDispatch::PublicExceptions","","Rails/classes/ActionDispatch/PublicExceptions.html","","<p>A simple Rack application that renders exceptions in the given public path.\n",null,1],["ActionDispatch::RailsEntityStore","","Rails/classes/ActionDispatch/RailsEntityStore.html","","",null,1],["ActionDispatch::RailsMetaStore","","Rails/classes/ActionDispatch/RailsMetaStore.html","","",null,1],["ActionDispatch::Railtie","","Rails/classes/ActionDispatch/Railtie.html","","",null,1],["ActionDispatch::Reloader","","Rails/classes/ActionDispatch/Reloader.html","","<p>ActionDispatch::Reloader provides prepare and cleanup callbacks, intended\nto assist with code reloading …\n",null,1],["ActionDispatch::RemoteIp","","Rails/classes/ActionDispatch/RemoteIp.html","","",null,1],["ActionDispatch::RemoteIp::GetIp","","Rails/classes/ActionDispatch/RemoteIp/GetIp.html","","",null,1],["ActionDispatch::RemoteIp::IpSpoofAttackError","","Rails/classes/ActionDispatch/RemoteIp/IpSpoofAttackError.html","","",null,1],["ActionDispatch::Request","","Rails/classes/ActionDispatch/Request.html","","",null,1],["ActionDispatch::RequestId","","Rails/classes/ActionDispatch/RequestId.html","","<p>Makes a unique request id available to the action_dispatch.request_id env\nvariable (which is then accessible …\n",null,1],["ActionDispatch::Rescue","","Rails/classes/ActionDispatch/Rescue.html","","",null,1],["ActionDispatch::Response","","Rails/classes/ActionDispatch/Response.html","","<p>Represents an HTTP response generated by a controller action. Use it to\nretrieve the current state of …\n",null,1],["ActionDispatch::Routing","","Rails/classes/ActionDispatch/Routing.html","","<p>The routing module provides URL rewriting in native Ruby. It&#39;s a way to\nredirect incoming requests …\n",null,1],["ActionDispatch::Routing::Mapper","","Rails/classes/ActionDispatch/Routing/Mapper.html","","",null,1],["ActionDispatch::Routing::Mapper::Base","","Rails/classes/ActionDispatch/Routing/Mapper/Base.html","","",null,1],["ActionDispatch::Routing::Mapper::HttpHelpers","","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html","","",null,1],["ActionDispatch::Routing::Mapper::Resources","","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html","","<p>Resource routing allows you to quickly declare all of the common routes for\na given resourceful controller. …\n",null,1],["ActionDispatch::Routing::Mapper::Scoping","","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html","","<p>You may wish to organize groups of controllers under a namespace. Most\ncommonly, you might group a number …\n",null,1],["ActionDispatch::Routing::PolymorphicRoutes","","Rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html","","<p>Polymorphic URL helpers are methods for smart resolution to a named route\ncall when given an Active  …\n",null,1],["ActionDispatch::Routing::Redirection","","Rails/classes/ActionDispatch/Routing/Redirection.html","","",null,1],["ActionDispatch::Routing::RouteSet","","Rails/classes/ActionDispatch/Routing/RouteSet.html","","",null,1],["ActionDispatch::Routing::RouteSet::MountedHelpers","","Rails/classes/ActionDispatch/Routing/RouteSet/MountedHelpers.html","","",null,1],["ActionDispatch::Routing::UrlFor","","Rails/classes/ActionDispatch/Routing/UrlFor.html","","<p>In <code>config/routes.rb</code> you define URL-to-controller mappings, but\nthe reverse is also possible: an URL can …\n",null,1],["ActionDispatch::Session","","Rails/classes/ActionDispatch/Session.html","","",null,1],["ActionDispatch::Session::AbstractStore","","Rails/classes/ActionDispatch/Session/AbstractStore.html","","",null,1],["ActionDispatch::Session::CacheStore","","Rails/classes/ActionDispatch/Session/CacheStore.html","","<p>Session store that uses an ActiveSupport::Cache::Store to store the\nsessions. This store is most useful …\n",null,1],["ActionDispatch::Session::Compatibility","","Rails/classes/ActionDispatch/Session/Compatibility.html","","",null,1],["ActionDispatch::Session::CookieStore","","Rails/classes/ActionDispatch/Session/CookieStore.html","","<p>This cookie-based session store is the Rails default. Sessions typically\ncontain at most a user_id and …\n",null,1],["ActionDispatch::Session::DestroyableSession","","Rails/classes/ActionDispatch/Session/DestroyableSession.html","","",null,1],["ActionDispatch::Session::MemCacheStore","","Rails/classes/ActionDispatch/Session/MemCacheStore.html","","",null,1],["ActionDispatch::Session::StaleSessionCheck","","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html","","",null,1],["ActionDispatch::ShowExceptions","","Rails/classes/ActionDispatch/ShowExceptions.html","","<p>This middleware rescues any exception returned by the application and calls\nan exceptions app that will …\n",null,1],["ActionDispatch::Static","","Rails/classes/ActionDispatch/Static.html","","",null,1],["ActionDispatch::TestProcess","","Rails/classes/ActionDispatch/TestProcess.html","","",null,1],["ActionDispatch::TestRequest","","Rails/classes/ActionDispatch/TestRequest.html","","",null,1],["ActionDispatch::TestResponse","","Rails/classes/ActionDispatch/TestResponse.html","","<p>Integration test methods such as ActionDispatch::Integration::Session#get\nand ActionDispatch::Integration::Session#post …\n",null,1],["ActionMailer","","Rails/classes/ActionMailer.html","","",null,1],["ActionMailer::Base","","Rails/classes/ActionMailer/Base.html","","<p>Action Mailer allows you to send email from your application using a mailer\nmodel and views.\n<p>Mailer Models …\n",null,1],["ActionMailer::Collector","","Rails/classes/ActionMailer/Collector.html","","",null,1],["ActionMailer::DeliveryMethods","","Rails/classes/ActionMailer/DeliveryMethods.html","","<p>This module handles everything related to mail delivery, from registering\nnew delivery methods to configuring …\n",null,1],["ActionMailer::DeliveryMethods::ClassMethods","","Rails/classes/ActionMailer/DeliveryMethods/ClassMethods.html","","",null,1],["ActionMailer::LogSubscriber","","Rails/classes/ActionMailer/LogSubscriber.html","","",null,1],["ActionMailer::MailHelper","","Rails/classes/ActionMailer/MailHelper.html","","",null,1],["ActionMailer::NonInferrableMailerError","","Rails/classes/ActionMailer/NonInferrableMailerError.html","","",null,1],["ActionMailer::Railtie","","Rails/classes/ActionMailer/Railtie.html","","",null,1],["ActionMailer::TestCase","","Rails/classes/ActionMailer/TestCase.html","","",null,1],["ActionMailer::TestCase::Behavior","","Rails/classes/ActionMailer/TestCase/Behavior.html","","",null,1],["ActionMailer::TestCase::Behavior::ClassMethods","","Rails/classes/ActionMailer/TestCase/Behavior/ClassMethods.html","","",null,1],["ActionMailer::TestHelper","","Rails/classes/ActionMailer/TestHelper.html","","",null,1],["ActionPack","","Rails/classes/ActionPack.html","","",null,1],["ActionView","","Rails/classes/ActionView.html","","",null,1],["ActionView::Base","","Rails/classes/ActionView/Base.html","","<p>Action View Base\n<p>Action View templates can be written in several ways. If the template file\nhas a <code>.erb</code> …\n",null,1],["ActionView::Context","","Rails/classes/ActionView/Context.html","","<p>Action View Context\n<p>Action View contexts are supplied to Action Controller to render template.\nThe default …\n",null,1],["ActionView::FileSystemResolver","","Rails/classes/ActionView/FileSystemResolver.html","","<p>A resolver that loads files from the filesystem. It allows to set your own\nresolving pattern. Such pattern …\n",null,1],["ActionView::FixtureResolver","","Rails/classes/ActionView/FixtureResolver.html","","<p>Use FixtureResolver in your tests to simulate the presence of files on the\nfile system. This is used …\n",null,1],["ActionView::Helpers","","Rails/classes/ActionView/Helpers.html","","<p>Active Model Helpers\n<p>Action View Cache Helper\n<p>Action View Capture Helper\n",null,1],["ActionView::Helpers::ActiveModelHelper","","Rails/classes/ActionView/Helpers/ActiveModelHelper.html","","",null,1],["ActionView::Helpers::ActiveModelInstanceTag","","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html","","",null,1],["ActionView::Helpers::AssetPaths","","Rails/classes/ActionView/AssetPaths.html","","",null,1],["ActionView::Helpers::AssetTagHelper","","Rails/classes/ActionView/Helpers/AssetTagHelper.html","","<p>This module provides methods for generating HTML that links views to assets\nsuch as images, javascripts, …\n",null,1],["ActionView::Helpers::AssetTagHelper::AssetIncludeTag","","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html","","",null,1],["ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html","","",null,1],["ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html","","",null,1],["ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers::ClassMethods","","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers/ClassMethods.html","","",null,1],["ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html","","",null,1],["ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html","","",null,1],["ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers::ClassMethods","","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers/ClassMethods.html","","",null,1],["ActionView::Helpers::AtomFeedHelper","","Rails/classes/ActionView/Helpers/AtomFeedHelper.html","","",null,1],["ActionView::Helpers::AtomFeedHelper::AtomBuilder","","Rails/classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html","","",null,1],["ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","","Rails/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html","","",null,1],["ActionView::Helpers::CacheHelper","","Rails/classes/ActionView/Helpers/CacheHelper.html","","",null,1],["ActionView::Helpers::CaptureHelper","","Rails/classes/ActionView/Helpers/CaptureHelper.html","","<p>CaptureHelper exposes methods to let you extract generated markup which can\nbe used in other parts of …\n",null,1],["ActionView::Helpers::CsrfHelper","","Rails/classes/ActionView/Helpers/CsrfHelper.html","","",null,1],["ActionView::Helpers::DateHelper","","Rails/classes/ActionView/Helpers/DateHelper.html","","<p>Action View Date Helpers\n<p>The Date Helper primarily creates select/option tags for different kinds of\ndates …\n",null,1],["ActionView::Helpers::DateHelperInstanceTag","","Rails/classes/ActionView/Helpers/DateHelperInstanceTag.html","","",null,1],["ActionView::Helpers::DebugHelper","","Rails/classes/ActionView/Helpers/DebugHelper.html","","",null,1],["ActionView::Helpers::FormBuilder","","Rails/classes/ActionView/Helpers/FormBuilder.html","","",null,1],["ActionView::Helpers::FormHelper","","Rails/classes/ActionView/Helpers/FormHelper.html","","<p>Form helpers are designed to make working with resources much easier\ncompared to using vanilla HTML. …\n",null,1],["ActionView::Helpers::FormOptionsHelper","","Rails/classes/ActionView/Helpers/FormOptionsHelper.html","","<p>Provides a number of methods for turning different kinds of containers into\na set of option tags.\n<p>Options …\n",null,1],["ActionView::Helpers::FormTagHelper","","Rails/classes/ActionView/Helpers/FormTagHelper.html","","<p>Provides a number of methods for creating form tags that doesn&#39;t rely\non an Active Record object …\n",null,1],["ActionView::Helpers::InstanceTag","","Rails/classes/ActionView/Helpers/InstanceTag.html","","",null,1],["ActionView::Helpers::JavaScriptHelper","","Rails/classes/ActionView/Helpers/JavaScriptHelper.html","","",null,1],["ActionView::Helpers::NumberHelper","","Rails/classes/ActionView/Helpers/NumberHelper.html","","<p>Provides methods for converting numbers into formatted strings. Methods are\nprovided for phone numbers, …\n",null,1],["ActionView::Helpers::NumberHelper::InvalidNumberError","","Rails/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html","","<p>Raised when argument <code>number</code> param given to the helpers is\ninvalid and the option :raise is set to  <code>true</code> …\n",null,1],["ActionView::Helpers::OutputSafetyHelper","","Rails/classes/ActionView/Helpers/OutputSafetyHelper.html","","",null,1],["ActionView::Helpers::RecordTagHelper","","Rails/classes/ActionView/Helpers/RecordTagHelper.html","","",null,1],["ActionView::Helpers::RenderingHelper","","Rails/classes/ActionView/Helpers/RenderingHelper.html","","<p>Action View Rendering\n<p>Implements methods that allow rendering from a view context. In order to\nuse this …\n",null,1],["ActionView::Helpers::SanitizeHelper","","Rails/classes/ActionView/Helpers/SanitizeHelper.html","","<p>The SanitizeHelper module provides a set of methods for scrubbing text of\nundesired HTML elements. These …\n",null,1],["ActionView::Helpers::TagHelper","","Rails/classes/ActionView/Helpers/TagHelper.html","","<p>Provides methods to generate HTML tags programmatically when you can&#39;t\nuse a Builder. By default, …\n",null,1],["ActionView::Helpers::TextHelper","","Rails/classes/ActionView/Helpers/TextHelper.html","","<p>The TextHelper module provides a set of methods for filtering, formatting\nand transforming strings, which …\n",null,1],["ActionView::Helpers::TranslationHelper","","Rails/classes/ActionView/Helpers/TranslationHelper.html","","",null,1],["ActionView::Helpers::UrlHelper","","Rails/classes/ActionView/Helpers/UrlHelper.html","","<p>Provides a set of methods for making links and getting URLs that depend on\nthe routing subsystem (see …\n",null,1],["ActionView::LogSubscriber","","Rails/classes/ActionView/LogSubscriber.html","","<p>Action View Log Subscriber\n<p>Provides functionality so that Rails can output logs from Action View.\n",null,1],["ActionView::LookupContext","","Rails/classes/ActionView/LookupContext.html","","",null,1],["ActionView::LookupContext::DetailsCache","","Rails/classes/ActionView/LookupContext/DetailsCache.html","","<p>Add caching behavior on top of Details.\n",null,1],["ActionView::LookupContext::ViewPaths","","Rails/classes/ActionView/LookupContext/ViewPaths.html","","<p>Helpers related to template lookup using the lookup context information.\n",null,1],["ActionView::NullResolver","","Rails/classes/ActionView/NullResolver.html","","",null,1],["ActionView::PartialRenderer","","Rails/classes/ActionView/PartialRenderer.html","","<p>Action View Partials\n<p>There&#39;s also a convenience method for rendering sub templates within\nthe current …\n",null,1],["ActionView::Railtie","","Rails/classes/ActionView/Railtie.html","","<p>Action View Railtie\n",null,1],["ActionView::Renderer","","Rails/classes/ActionView/Renderer.html","","<p>This is the main entry point for rendering. It basically delegates to other\nobjects like TemplateRenderer …\n",null,1],["ActionView::Resolver","","Rails/classes/ActionView/Resolver.html","","<p>Action View Resolver\n",null,1],["ActionView::Resolver::Path","","Rails/classes/ActionView/Resolver/Path.html","","<p>Keeps all information about view path and builds virtual path.\n",null,1],["ActionView::Template","","Rails/classes/ActionView/Template.html","","<p>Action View Template Handlers\n<p>Action View Text Template\n<p>Action View Template\n",null,1],["ActionView::Template::Handlers","","Rails/classes/ActionView/Template/Handlers.html","","",null,1],["ActionView::Template::Handlers::Builder","","Rails/classes/ActionView/Template/Handlers/Builder.html","","",null,1],["ActionView::Template::Handlers::ERB","","Rails/classes/ActionView/Template/Handlers/ERB.html","","",null,1],["ActionView::Template::Handlers::Erubis","","Rails/classes/ActionView/Template/Handlers/Erubis.html","","",null,1],["ActionView::TestCase","","Rails/classes/ActionView/TestCase.html","","<p>Action View Test Case\n",null,1],["ActionView::TestCase::Behavior","","Rails/classes/ActionView/TestCase/Behavior.html","","",null,1],["ActionView::TestCase::Behavior::ClassMethods","","Rails/classes/ActionView/TestCase/Behavior/ClassMethods.html","","",null,1],["ActionView::TestCase::Behavior::Locals","","Rails/classes/ActionView/TestCase/Behavior/Locals.html","","",null,1],["ActionView::TestCase::TestController","","Rails/classes/ActionView/TestCase/TestController.html","","",null,1],["ActiveModel","","Rails/classes/ActiveModel.html","","",null,1],["ActiveModel::AttributeMethods","","Rails/classes/ActiveModel/AttributeMethods.html","","<p>Active Model Attribute Methods\n<p><code>ActiveModel::AttributeMethods</code> provides a way to add prefixes\nand suffixes …\n",null,1],["ActiveModel::AttributeMethods::ClassMethods","","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html","","",null,1],["ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","","Rails/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html","","",null,1],["ActiveModel::BlockValidator","","Rails/classes/ActiveModel/BlockValidator.html","","<p><code>BlockValidator</code> is a special <code>EachValidator</code> which\nreceives a block on initialization and call this block …\n",null,1],["ActiveModel::Callbacks","","Rails/classes/ActiveModel/Callbacks.html","","<p>Active Model Callbacks\n<p>Provides an interface for any class to have Active Record like callbacks.\n<p>Like the …\n",null,1],["ActiveModel::Conversion","","Rails/classes/ActiveModel/Conversion.html","","<p>Active Model Conversions\n<p>Handles default conversions: to_model, to_key, to_param, and\nto_partial_path. …\n",null,1],["ActiveModel::Dirty","","Rails/classes/ActiveModel/Dirty.html","","<p>Active Model Dirty\n<p>Provides a way to track changes in your object in the same way as Active\nRecord does. …\n",null,1],["ActiveModel::EachValidator","","Rails/classes/ActiveModel/EachValidator.html","","<p><code>EachValidator</code> is a validator which iterates through the\nattributes given in the options hash invoking …\n",null,1],["ActiveModel::Errors","","Rails/classes/ActiveModel/Errors.html","","<p>Active Model Errors\n<p>Provides a modified <code>OrderedHash</code> that you can include in your\nobject for handling error …\n",null,1],["ActiveModel::Lint","","Rails/classes/ActiveModel/Lint.html","","",null,1],["ActiveModel::Lint::Tests","","Rails/classes/ActiveModel/Lint/Tests.html","","<p>Active Model Lint Tests\n<p>You can test whether an object is compliant with the Active Model API by\nincluding …\n",null,1],["ActiveModel::MassAssignmentSecurity","","Rails/classes/ActiveModel/MassAssignmentSecurity.html","","<p>Active Model Mass-Assignment Security\n",null,1],["ActiveModel::MassAssignmentSecurity::BlackList","","Rails/classes/ActiveModel/MassAssignmentSecurity/BlackList.html","","",null,1],["ActiveModel::MassAssignmentSecurity::ClassMethods","","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html","","<p>Mass assignment security provides an interface for protecting attributes\nfrom end-user assignment. For …\n",null,1],["ActiveModel::MassAssignmentSecurity::Error","","Rails/classes/ActiveModel/MassAssignmentSecurity/Error.html","","",null,1],["ActiveModel::MassAssignmentSecurity::LoggerSanitizer","","Rails/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html","","",null,1],["ActiveModel::MassAssignmentSecurity::PermissionSet","","Rails/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html","","",null,1],["ActiveModel::MassAssignmentSecurity::Sanitizer","","Rails/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html","","",null,1],["ActiveModel::MassAssignmentSecurity::StrictSanitizer","","Rails/classes/ActiveModel/MassAssignmentSecurity/StrictSanitizer.html","","",null,1],["ActiveModel::MassAssignmentSecurity::WhiteList","","Rails/classes/ActiveModel/MassAssignmentSecurity/WhiteList.html","","",null,1],["ActiveModel::MissingAttributeError","","Rails/classes/ActiveModel/MissingAttributeError.html","","",null,1],["ActiveModel::Name","","Rails/classes/ActiveModel/Name.html","","",null,1],["ActiveModel::Naming","","Rails/classes/ActiveModel/Naming.html","","<p>Active Model Naming\n<p>Creates a <code>model_name</code> method on your object.\n<p>To implement, just extend ActiveModel::Naming …\n",null,1],["ActiveModel::Observer","","Rails/classes/ActiveModel/Observer.html","","<p>Active Model Observers\n<p>Observer classes respond to life cycle callbacks to implement trigger-like\nbehavior …\n",null,1],["ActiveModel::ObserverArray","","Rails/classes/ActiveModel/ObserverArray.html","","<p>Stores the enabled/disabled state of individual observers for a particular\nmodel class.\n",null,1],["ActiveModel::Observing","","Rails/classes/ActiveModel/Observing.html","","",null,1],["ActiveModel::Observing::ClassMethods","","Rails/classes/ActiveModel/Observing/ClassMethods.html","","",null,1],["ActiveModel::SecurePassword","","Rails/classes/ActiveModel/SecurePassword.html","","",null,1],["ActiveModel::SecurePassword::ClassMethods","","Rails/classes/ActiveModel/SecurePassword/ClassMethods.html","","",null,1],["ActiveModel::SecurePassword::InstanceMethodsOnActivation","","Rails/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html","","",null,1],["ActiveModel::Serialization","","Rails/classes/ActiveModel/Serialization.html","","<p>Active Model Serialization\n<p>Provides a basic serialization to a serializable_hash for your object.\n<p>A minimal …\n",null,1],["ActiveModel::Serializers","","Rails/classes/ActiveModel/Serializers.html","","",null,1],["ActiveModel::Serializers::JSON","","Rails/classes/ActiveModel/Serializers/JSON.html","","<p>Active Model JSON Serializer\n",null,1],["ActiveModel::Serializers::Xml","","Rails/classes/ActiveModel/Serializers/Xml.html","","<p>Active Model XML Serializer\n",null,1],["ActiveModel::StrictValidationFailed","","Rails/classes/ActiveModel/StrictValidationFailed.html","","",null,1],["ActiveModel::Translation","","Rails/classes/ActiveModel/Translation.html","","<p>Active Model Translation\n<p>Provides integration between your object and the Rails internationalization\n(i18n) …\n",null,1],["ActiveModel::Validations","","Rails/classes/ActiveModel/Validations.html","","<p>Active Model Acceptance Validator\n<p>Active Model Confirmation Validator\n<p>Active Model Exclusion Validator …\n",null,1],["ActiveModel::Validations::AcceptanceValidator","","Rails/classes/ActiveModel/Validations/AcceptanceValidator.html","","",null,1],["ActiveModel::Validations::Callbacks","","Rails/classes/ActiveModel/Validations/Callbacks.html","","",null,1],["ActiveModel::Validations::Callbacks::ClassMethods","","Rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html","","",null,1],["ActiveModel::Validations::ClassMethods","","Rails/classes/ActiveModel/Validations/ClassMethods.html","","",null,1],["ActiveModel::Validations::ConfirmationValidator","","Rails/classes/ActiveModel/Validations/ConfirmationValidator.html","","",null,1],["ActiveModel::Validations::ExclusionValidator","","Rails/classes/ActiveModel/Validations/ExclusionValidator.html","","",null,1],["ActiveModel::Validations::FormatValidator","","Rails/classes/ActiveModel/Validations/FormatValidator.html","","",null,1],["ActiveModel::Validations::HelperMethods","","Rails/classes/ActiveModel/Validations/HelperMethods.html","","",null,1],["ActiveModel::Validations::InclusionValidator","","Rails/classes/ActiveModel/Validations/InclusionValidator.html","","",null,1],["ActiveModel::Validations::LengthValidator","","Rails/classes/ActiveModel/Validations/LengthValidator.html","","",null,1],["ActiveModel::Validations::NumericalityValidator","","Rails/classes/ActiveModel/Validations/NumericalityValidator.html","","",null,1],["ActiveModel::Validations::PresenceValidator","","Rails/classes/ActiveModel/Validations/PresenceValidator.html","","",null,1],["ActiveModel::Validations::WithValidator","","Rails/classes/ActiveModel/Validations/WithValidator.html","","",null,1],["ActiveModel::Validator","","Rails/classes/ActiveModel/Validator.html","","<p>Active Model Validator\n<p>A simple base class that can be used along with\nActiveModel::Validations::ClassMethods.validates_with …\n",null,1],["ActiveRecord","","Rails/classes/ActiveRecord.html","","",null,1],["ActiveRecord::ActiveRecordError","","Rails/classes/ActiveRecord/ActiveRecordError.html","","<p>Active Record Errors\n<p>Generic Active Record exception class.\n",null,1],["ActiveRecord::AdapterNotFound","","Rails/classes/ActiveRecord/AdapterNotFound.html","","<p>Raised when Active Record cannot find database adapter specified in\n<code>config/database.yml</code> or programmatically. …\n",null,1],["ActiveRecord::AdapterNotSpecified","","Rails/classes/ActiveRecord/AdapterNotSpecified.html","","<p>Raised when adapter not specified on connection (or configuration file\n<code>config/database.yml</code> misses adapter …\n",null,1],["ActiveRecord::Aggregations","","Rails/classes/ActiveRecord/Aggregations.html","","",null,1],["ActiveRecord::Aggregations::ClassMethods","","Rails/classes/ActiveRecord/Aggregations/ClassMethods.html","","<p>Active Record implements aggregation through a macro-like class method\ncalled <code>composed_of</code> for representing …\n",null,1],["ActiveRecord::AssociationTypeMismatch","","Rails/classes/ActiveRecord/AssociationTypeMismatch.html","","<p>Raised when an object assigned to an association has an incorrect type.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Ticket</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveRecord::Associations","","Rails/classes/ActiveRecord/Associations.html","","<p>Active Record Belongs To Associations\n<p>Active Record Belongs To Polymorphic Association\n<p>Active Record Has …\n",null,1],["ActiveRecord::Associations::ClassMethods","","Rails/classes/ActiveRecord/Associations/ClassMethods.html","","<p>Associations are a set of macro-like class methods for tying objects\ntogether through foreign keys.  …\n",null,1],["ActiveRecord::AttributeAssignment","","Rails/classes/ActiveRecord/AttributeAssignment.html","","",null,1],["ActiveRecord::AttributeAssignment::ClassMethods","","Rails/classes/ActiveRecord/AttributeAssignment/ClassMethods.html","","",null,1],["ActiveRecord::AttributeAssignmentError","","Rails/classes/ActiveRecord/AttributeAssignmentError.html","","<p>Raised when an error occurred while doing a mass assignment to an attribute\nthrough the <code>attributes=</code> method. …\n",null,1],["ActiveRecord::AttributeMethods","","Rails/classes/ActiveRecord/AttributeMethods.html","","",null,1],["ActiveRecord::AttributeMethods::BeforeTypeCast","","Rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html","","",null,1],["ActiveRecord::AttributeMethods::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead","","Rails/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead.html","","",null,1],["ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Dirty","","Rails/classes/ActiveRecord/AttributeMethods/Dirty.html","","",null,1],["ActiveRecord::AttributeMethods::PrimaryKey","","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html","","",null,1],["ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Query","","Rails/classes/ActiveRecord/AttributeMethods/Query.html","","",null,1],["ActiveRecord::AttributeMethods::Read","","Rails/classes/ActiveRecord/AttributeMethods/Read.html","","",null,1],["ActiveRecord::AttributeMethods::Read::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Serialization","","Rails/classes/ActiveRecord/AttributeMethods/Serialization.html","","",null,1],["ActiveRecord::AttributeMethods::Serialization::Attribute","","Rails/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html","","",null,1],["ActiveRecord::AttributeMethods::Serialization::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::TimeZoneConversion","","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion.html","","",null,1],["ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html","","",null,1],["ActiveRecord::AttributeMethods::Write","","Rails/classes/ActiveRecord/AttributeMethods/Write.html","","",null,1],["ActiveRecord::AttributeMethods::Write::ClassMethods","","Rails/classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html","","",null,1],["ActiveRecord::AutosaveAssociation","","Rails/classes/ActiveRecord/AutosaveAssociation.html","","<p>Active Record Autosave Association\n<p><code>AutosaveAssociation</code> is a module that takes care of\nautomatically saving …\n",null,1],["ActiveRecord::AutosaveAssociation::ClassMethods","","Rails/classes/ActiveRecord/AutosaveAssociation/ClassMethods.html","","",null,1],["ActiveRecord::Base","","Rails/classes/ActiveRecord/Base.html","","<p>Active Record\n<p>Active Record objects don&#39;t specify their attributes directly, but\nrather infer them …\n",null,1],["ActiveRecord::Batches","","Rails/classes/ActiveRecord/Batches.html","","",null,1],["ActiveRecord::Calculations","","Rails/classes/ActiveRecord/Calculations.html","","",null,1],["ActiveRecord::Callbacks","","Rails/classes/ActiveRecord/Callbacks.html","","<p>Active Record Callbacks\n<p>Callbacks are hooks into the life cycle of an Active Record object that\nallow …\n",null,1],["ActiveRecord::Coders","","Rails/classes/ActiveRecord/Coders.html","","",null,1],["ActiveRecord::Coders::YAMLColumn","","Rails/classes/ActiveRecord/Coders/YAMLColumn.html","","",null,1],["ActiveRecord::ConfigurationError","","Rails/classes/ActiveRecord/ConfigurationError.html","","<p>Raised when association is being configured improperly or user tries to use\noffset and limit together …\n",null,1],["ActiveRecord::ConnectionAdapters","","Rails/classes/ActiveRecord/ConnectionAdapters.html","","",null,1],["ActiveRecord::ConnectionAdapters::AbstractAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html","","<p>Active Record supports multiple database systems. AbstractAdapter and\nrelated classes form the abstraction …\n",null,1],["ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html","","",null,1],["ActiveRecord::ConnectionAdapters::Column","","Rails/classes/ActiveRecord/ConnectionAdapters/Column.html","","",null,1],["ActiveRecord::ConnectionAdapters::Column::Format","","Rails/classes/ActiveRecord/ConnectionAdapters/Column/Format.html","","",null,1],["ActiveRecord::ConnectionAdapters::ConnectionHandler","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html","","<p>ConnectionHandler is a collection of ConnectionPool objects. It is used for\nkeeping separate connection …\n",null,1],["ActiveRecord::ConnectionAdapters::ConnectionManagement","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html","","",null,1],["ActiveRecord::ConnectionAdapters::ConnectionPool","","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html","","<p>Connection pool base class for managing Active Record database connections.\n<p>Introduction\n<p>A connection pool …\n",null,1],["ActiveRecord::ConnectionAdapters::DatabaseLimits","","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html","","",null,1],["ActiveRecord::ConnectionAdapters::DatabaseStatements","","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html","","",null,1],["ActiveRecord::ConnectionAdapters::Mysql2Adapter","","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html","","",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html","","<p>The MySQL adapter will work with both Ruby/MySQL, which is a Ruby-based\nMySQL adapter that comes bundled …\n",null,1],["ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html","","<p>The PostgreSQL adapter works both with the native C\n(ruby.scripting.ca/postgres/) and the pure Ruby (available …\n",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Utils.html","","",null,1],["ActiveRecord::ConnectionAdapters::PostgreSQLColumn","","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLColumn.html","","",null,1],["ActiveRecord::ConnectionAdapters::QueryCache","","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html","","",null,1],["ActiveRecord::ConnectionAdapters::Quoting","","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html","","",null,1],["ActiveRecord::ConnectionAdapters::SQLiteAdapter","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html","","<p>The SQLite adapter works with both the 2.x and 3.x series of SQLite with\nthe sqlite-ruby drivers (available …\n",null,1],["ActiveRecord::ConnectionAdapters::SQLiteAdapter::ExplainPrettyPrinter","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/ExplainPrettyPrinter.html","","",null,1],["ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html","","",null,1],["ActiveRecord::ConnectionAdapters::SchemaCache","","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html","","",null,1],["ActiveRecord::ConnectionAdapters::SchemaStatements","","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html","","",null,1],["ActiveRecord::ConnectionAdapters::StatementPool","","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html","","",null,1],["ActiveRecord::ConnectionAdapters::Table","","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html","","<p>Represents an SQL table in an abstract way for updating a table. Also see\nTableDefinition and SchemaStatements#create_table …\n",null,1],["ActiveRecord::ConnectionAdapters::TableDefinition","","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html","","<p>Represents the schema of an SQL table in an abstract way. This class\nprovides methods for manipulating …\n",null,1],["ActiveRecord::ConnectionNotEstablished","","Rails/classes/ActiveRecord/ConnectionNotEstablished.html","","<p>Raised when connection to the database could not been established (for\nexample when <code>connection=</code> is given …\n",null,1],["ActiveRecord::ConnectionTimeoutError","","Rails/classes/ActiveRecord/ConnectionTimeoutError.html","","<p>Raised when a connection could not be obtained within the connection\nacquisition timeout period.\n",null,1],["ActiveRecord::CounterCache","","Rails/classes/ActiveRecord/CounterCache.html","","<p>Active Record Counter Cache\n",null,1],["ActiveRecord::DangerousAttributeError","","Rails/classes/ActiveRecord/DangerousAttributeError.html","","<p>Raised when attribute has a name reserved by Active Record (when attribute\nhas name of one of Active …\n",null,1],["ActiveRecord::Delegation","","Rails/classes/ActiveRecord/Delegation.html","","",null,1],["ActiveRecord::DynamicFinderMatch","","Rails/classes/ActiveRecord/DynamicFinderMatch.html","","<p>Active Record Dynamic Finder Match\n<p>Refer to ActiveRecord::Base documentation for Dynamic attribute-based …\n",null,1],["ActiveRecord::DynamicMatchers","","Rails/classes/ActiveRecord/DynamicMatchers.html","","",null,1],["ActiveRecord::DynamicScopeMatch","","Rails/classes/ActiveRecord/DynamicScopeMatch.html","","<p>Active Record Dynamic Scope Match\n<p>Provides dynamic attribute-based scopes such as\n<code>scoped_by_price(4.99</code> …\n",null,1],["ActiveRecord::Explain","","Rails/classes/ActiveRecord/Explain.html","","",null,1],["ActiveRecord::FinderMethods","","Rails/classes/ActiveRecord/FinderMethods.html","","",null,1],["ActiveRecord::Fixtures","","Rails/classes/ActiveRecord/Fixtures.html","","<p>Fixtures are a way of organizing data that you want to test against; in\nshort, sample data.\n<p>They are stored …\n",null,1],["ActiveRecord::Fixtures::File","","Rails/classes/ActiveRecord/Fixtures/File.html","","",null,1],["ActiveRecord::Generators","","Rails/classes/ActiveRecord/Generators.html","","",null,1],["ActiveRecord::Generators::Migration","","Rails/classes/ActiveRecord/Generators/Migration.html","","",null,1],["ActiveRecord::Generators::MigrationGenerator","","Rails/classes/ActiveRecord/Generators/MigrationGenerator.html","","",null,1],["ActiveRecord::Generators::ModelGenerator","","Rails/classes/ActiveRecord/Generators/ModelGenerator.html","","",null,1],["ActiveRecord::Generators::ObserverGenerator","","Rails/classes/ActiveRecord/Generators/ObserverGenerator.html","","",null,1],["ActiveRecord::Generators::SessionMigrationGenerator","","Rails/classes/ActiveRecord/Generators/SessionMigrationGenerator.html","","",null,1],["ActiveRecord::IdentityMap","","Rails/classes/ActiveRecord/IdentityMap.html","","<p>Active Record Identity Map\n<p>Ensures that each object gets loaded only once by keeping every loaded\nobject …\n",null,1],["ActiveRecord::IdentityMap::Middleware","","Rails/classes/ActiveRecord/IdentityMap/Middleware.html","","",null,1],["ActiveRecord::Inheritance","","Rails/classes/ActiveRecord/Inheritance.html","","",null,1],["ActiveRecord::Inheritance::ClassMethods","","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html","","",null,1],["ActiveRecord::Integration","","Rails/classes/ActiveRecord/Integration.html","","",null,1],["ActiveRecord::InvalidForeignKey","","Rails/classes/ActiveRecord/InvalidForeignKey.html","","<p>Raised when a record cannot be inserted or updated because it references a\nnon-existent record.\n",null,1],["ActiveRecord::IrreversibleMigration","","Rails/classes/ActiveRecord/IrreversibleMigration.html","","<p>Exception that can be raised to stop migrations from going backwards.\n",null,1],["ActiveRecord::Locking","","Rails/classes/ActiveRecord/Locking.html","","",null,1],["ActiveRecord::Locking::Optimistic","","Rails/classes/ActiveRecord/Locking/Optimistic.html","","<p>What is Optimistic Locking\n<p>Optimistic locking allows multiple users to access the same record for\nedits, …\n",null,1],["ActiveRecord::Locking::Optimistic::ClassMethods","","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html","","",null,1],["ActiveRecord::Locking::Pessimistic","","Rails/classes/ActiveRecord/Locking/Pessimistic.html","","<p>Locking::Pessimistic provides support for row-level locking using SELECT …\nFOR UPDATE and other lock …\n",null,1],["ActiveRecord::LogSubscriber","","Rails/classes/ActiveRecord/LogSubscriber.html","","",null,1],["ActiveRecord::Migration","","Rails/classes/ActiveRecord/Migration.html","","<p>Active Record Migrations\n<p>Migrations can manage the evolution of a schema used by several physical\ndatabases. …\n",null,1],["ActiveRecord::Migration::CommandRecorder","","Rails/classes/ActiveRecord/Migration/CommandRecorder.html","","<p><code>ActiveRecord::Migration::CommandRecorder</code> records commands done\nduring a migration and knows how to reverse …\n",null,1],["ActiveRecord::MigrationProxy","","Rails/classes/ActiveRecord/MigrationProxy.html","","<p>MigrationProxy is used to defer loading of the actual migration classes\nuntil they are needed\n",null,1],["ActiveRecord::ModelSchema","","Rails/classes/ActiveRecord/ModelSchema.html","","",null,1],["ActiveRecord::ModelSchema::ClassMethods","","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html","","",null,1],["ActiveRecord::MultiparameterAssignmentErrors","","Rails/classes/ActiveRecord/MultiparameterAssignmentErrors.html","","<p>Raised when there are multiple errors while doing a mass assignment through\nthe <code>attributes</code> method. The …\n",null,1],["ActiveRecord::NestedAttributes","","Rails/classes/ActiveRecord/NestedAttributes.html","","",null,1],["ActiveRecord::NestedAttributes::ClassMethods","","Rails/classes/ActiveRecord/NestedAttributes/ClassMethods.html","","<p>Active Record Nested Attributes\n<p>Nested attributes allow you to save attributes on associated records\nthrough …\n",null,1],["ActiveRecord::NestedAttributes::TooManyRecords","","Rails/classes/ActiveRecord/NestedAttributes/TooManyRecords.html","","",null,1],["ActiveRecord::Observer","","Rails/classes/ActiveRecord/Observer.html","","<p>Active Record Observer\n<p>Observer classes respond to life cycle callbacks to implement trigger-like\nbehavior …\n",null,1],["ActiveRecord::Persistence","","Rails/classes/ActiveRecord/Persistence.html","","<p>Active Record Persistence\n",null,1],["ActiveRecord::Persistence::ClassMethods","","Rails/classes/ActiveRecord/Persistence/ClassMethods.html","","",null,1],["ActiveRecord::PreparedStatementInvalid","","Rails/classes/ActiveRecord/PreparedStatementInvalid.html","","<p>Raised when number of bind variables in statement given to\n<code>:condition</code> key (for example, when using <code>find</code> …\n",null,1],["ActiveRecord::QueryCache","","Rails/classes/ActiveRecord/QueryCache.html","","<p>Active Record Query Cache\n",null,1],["ActiveRecord::QueryCache::ClassMethods","","Rails/classes/ActiveRecord/QueryCache/ClassMethods.html","","",null,1],["ActiveRecord::QueryMethods","","Rails/classes/ActiveRecord/QueryMethods.html","","",null,1],["ActiveRecord::Querying","","Rails/classes/ActiveRecord/Querying.html","","",null,1],["ActiveRecord::Railtie","","Rails/classes/ActiveRecord/Railtie.html","","<p>Active Record Railtie\n",null,1],["ActiveRecord::Railties","","Rails/classes/ActiveRecord/Railties.html","","",null,1],["ActiveRecord::Railties::ControllerRuntime","","Rails/classes/ActiveRecord/Railties/ControllerRuntime.html","","",null,1],["ActiveRecord::Railties::ControllerRuntime::ClassMethods","","Rails/classes/ActiveRecord/Railties/ControllerRuntime/ClassMethods.html","","",null,1],["ActiveRecord::ReadOnlyRecord","","Rails/classes/ActiveRecord/ReadOnlyRecord.html","","<p>Raised on attempt to update record that is instantiated as read only.\n",null,1],["ActiveRecord::ReadonlyAttributes","","Rails/classes/ActiveRecord/ReadonlyAttributes.html","","",null,1],["ActiveRecord::ReadonlyAttributes::ClassMethods","","Rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html","","",null,1],["ActiveRecord::RecordInvalid","","Rails/classes/ActiveRecord/RecordInvalid.html","","<p>Active Record RecordInvalid\n<p>Raised by <code>save!</code> and <code>create!</code> when the record is\ninvalid. Use the <code>record</code> method …\n",null,1],["ActiveRecord::RecordNotFound","","Rails/classes/ActiveRecord/RecordNotFound.html","","<p>Raised when Active Record cannot find record by given id or set of ids.\n",null,1],["ActiveRecord::RecordNotSaved","","Rails/classes/ActiveRecord/RecordNotSaved.html","","<p>Raised by ActiveRecord::Base.save! and ActiveRecord::Base.create! methods\nwhen record cannot be saved …\n",null,1],["ActiveRecord::RecordNotUnique","","Rails/classes/ActiveRecord/RecordNotUnique.html","","<p>Raised when a record cannot be inserted because it would violate a\nuniqueness constraint.\n",null,1],["ActiveRecord::Reflection","","Rails/classes/ActiveRecord/Reflection.html","","",null,1],["ActiveRecord::Reflection::ClassMethods","","Rails/classes/ActiveRecord/Reflection/ClassMethods.html","","<p>Reflection enables to interrogate Active Record classes and objects about\ntheir associations and aggregations. …\n",null,1],["ActiveRecord::Reflection::MacroReflection","","Rails/classes/ActiveRecord/Reflection/MacroReflection.html","","<p>Abstract base class for AggregateReflection and AssociationReflection.\nObjects of AggregateReflection …\n",null,1],["ActiveRecord::Relation","","Rails/classes/ActiveRecord/Relation.html","","<p>Active Record Relation\n",null,1],["ActiveRecord::Result","","Rails/classes/ActiveRecord/Result.html","","<p>This class encapsulates a Result returned from calling\n<code>exec_query</code> on any database connection adapter. …\n",null,1],["ActiveRecord::Rollback","","Rails/classes/ActiveRecord/Rollback.html","","<p>ActiveRecord::Transactions::ClassMethods.transaction uses this exception to\ndistinguish a deliberate …\n",null,1],["ActiveRecord::Sanitization","","Rails/classes/ActiveRecord/Sanitization.html","","",null,1],["ActiveRecord::Sanitization::ClassMethods","","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html","","",null,1],["ActiveRecord::Schema","","Rails/classes/ActiveRecord/Schema.html","","<p>Active Record Schema\n<p>Allows programmers to programmatically define a schema in a portable DSL.\nThis means …\n",null,1],["ActiveRecord::Scoping","","Rails/classes/ActiveRecord/Scoping.html","","<p>Active Record Named Scopes\n",null,1],["ActiveRecord::Scoping::ClassMethods","","Rails/classes/ActiveRecord/Scoping/ClassMethods.html","","",null,1],["ActiveRecord::Scoping::Default","","Rails/classes/ActiveRecord/Scoping/Default.html","","",null,1],["ActiveRecord::Scoping::Default::ClassMethods","","Rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html","","",null,1],["ActiveRecord::Scoping::Named","","Rails/classes/ActiveRecord/Scoping/Named.html","","",null,1],["ActiveRecord::Scoping::Named::ClassMethods","","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html","","",null,1],["ActiveRecord::Serialization","","Rails/classes/ActiveRecord/Serialization.html","","<p>Active Record Serialization\n",null,1],["ActiveRecord::SerializationTypeMismatch","","Rails/classes/ActiveRecord/SerializationTypeMismatch.html","","<p>Raised when unserialized object&#39;s type mismatches one specified for\nserializable field.\n",null,1],["ActiveRecord::SessionStore","","Rails/classes/ActiveRecord/SessionStore.html","","<p>Active Record Session Store\n<p>A session store backed by an Active Record class. A default class is\nprovided, …\n",null,1],["ActiveRecord::SessionStore::Session","","Rails/classes/ActiveRecord/SessionStore/Session.html","","<p>The default Active Record class.\n",null,1],["ActiveRecord::SessionStore::SqlBypass","","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html","","<p>A barebones session store which duck-types with the default session store\nbut bypasses Active Record …\n",null,1],["ActiveRecord::SpawnMethods","","Rails/classes/ActiveRecord/SpawnMethods.html","","",null,1],["ActiveRecord::StaleObjectError","","Rails/classes/ActiveRecord/StaleObjectError.html","","<p>Raised on attempt to save stale record. Record is stale when it&#39;s being\nsaved in another query after …\n",null,1],["ActiveRecord::StatementInvalid","","Rails/classes/ActiveRecord/StatementInvalid.html","","<p>Raised when SQL statement cannot be executed by the database (for example,\nit&#39;s often the case for …\n",null,1],["ActiveRecord::Store","","Rails/classes/ActiveRecord/Store.html","","<p>Store gives you a thin wrapper around serialize for the purpose of storing\nhashes in a single column. …\n",null,1],["ActiveRecord::Store::ClassMethods","","Rails/classes/ActiveRecord/Store/ClassMethods.html","","",null,1],["ActiveRecord::TestFixtures","","Rails/classes/ActiveRecord/TestFixtures.html","","",null,1],["ActiveRecord::TestFixtures::ClassMethods","","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html","","",null,1],["ActiveRecord::ThrowResult","","Rails/classes/ActiveRecord/ThrowResult.html","","<p>Raised when SQL statement is invalid and the application gets a blank\nresult.\n",null,1],["ActiveRecord::Timestamp","","Rails/classes/ActiveRecord/Timestamp.html","","<p>Active Record Timestamp\n<p>Active Record automatically timestamps create and update operations if the\ntable …\n",null,1],["ActiveRecord::Transactions","","Rails/classes/ActiveRecord/Transactions.html","","<p>See ActiveRecord::Transactions::ClassMethods for documentation.\n",null,1],["ActiveRecord::Transactions::ClassMethods","","Rails/classes/ActiveRecord/Transactions/ClassMethods.html","","<p>Active Record Transactions\n<p>Transactions are protective blocks where SQL statements are only permanent\n…\n",null,1],["ActiveRecord::Translation","","Rails/classes/ActiveRecord/Translation.html","","",null,1],["ActiveRecord::UnknownAttributeError","","Rails/classes/ActiveRecord/UnknownAttributeError.html","","<p>Raised when unknown attributes are supplied via mass assignment.\n",null,1],["ActiveRecord::UnknownPrimaryKey","","Rails/classes/ActiveRecord/UnknownPrimaryKey.html","","<p>Raised when a primary key is needed, but there is not one specified in the\nschema or model.\n",null,1],["ActiveRecord::Validations","","Rails/classes/ActiveRecord/Validations.html","","<p>Active Record Validations\n<p>Active Record includes the majority of its validations from\n<code>ActiveModel::Validations</code> …\n",null,1],["ActiveRecord::Validations::AssociatedValidator","","Rails/classes/ActiveRecord/Validations/AssociatedValidator.html","","",null,1],["ActiveRecord::Validations::ClassMethods","","Rails/classes/ActiveRecord/Validations/ClassMethods.html","","",null,1],["ActiveRecord::Validations::UniquenessValidator","","Rails/classes/ActiveRecord/Validations/UniquenessValidator.html","","",null,1],["ActiveRecord::WrappedDatabaseException","","Rails/classes/ActiveRecord/WrappedDatabaseException.html","","<p>Parent class for all specific exceptions which wrap database driver\nexceptions provides access to the …\n",null,1],["ActiveResource","","Rails/classes/ActiveResource.html","","",null,1],["ActiveResource::Base","","Rails/classes/ActiveResource/Base.html","","<p>ActiveResource::Base is the main class for mapping RESTful resources as\nmodels in a Rails application. …\n",null,1],["ActiveResource::Connection","","Rails/classes/ActiveResource/Connection.html","","<p>Class to handle connections to remote web services. This class is used by\nActiveResource::Base to interface …\n",null,1],["ActiveResource::CustomMethods","","Rails/classes/ActiveResource/CustomMethods.html","","<p>A module to support custom REST methods and sub-resources, allowing you to\nbreak out of the “default” …\n",null,1],["ActiveResource::CustomMethods::ClassMethods","","Rails/classes/ActiveResource/CustomMethods/ClassMethods.html","","",null,1],["ActiveResource::Errors","","Rails/classes/ActiveResource/Errors.html","","<p>Active Resource validation is reported to and from this object, which is\nused by Base#save to determine …\n",null,1],["ActiveResource::Formats","","Rails/classes/ActiveResource/Formats.html","","",null,1],["ActiveResource::Formats::JsonFormat","","Rails/classes/ActiveResource/Formats/JsonFormat.html","","",null,1],["ActiveResource::Formats::XmlFormat","","Rails/classes/ActiveResource/Formats/XmlFormat.html","","",null,1],["ActiveResource::HttpMock","","Rails/classes/ActiveResource/HttpMock.html","","<p>One thing that has always been a pain with remote web services is testing. \nThe HttpMock class makes …\n",null,1],["ActiveResource::InvalidRequestError","","Rails/classes/ActiveResource/InvalidRequestError.html","","",null,1],["ActiveResource::LogSubscriber","","Rails/classes/ActiveResource/LogSubscriber.html","","",null,1],["ActiveResource::Observing","","Rails/classes/ActiveResource/Observing.html","","",null,1],["ActiveResource::Railtie","","Rails/classes/ActiveResource/Railtie.html","","",null,1],["ActiveResource::Request","","Rails/classes/ActiveResource/Request.html","","",null,1],["ActiveResource::Response","","Rails/classes/ActiveResource/Response.html","","",null,1],["ActiveResource::SSLError","","Rails/classes/ActiveResource/SSLError.html","","<p>Raised when a OpenSSL::SSL::SSLError occurs.\n",null,1],["ActiveResource::TimeoutError","","Rails/classes/ActiveResource/TimeoutError.html","","<p>Raised when a Timeout::Error occurs.\n",null,1],["ActiveResource::Validations","","Rails/classes/ActiveResource/Validations.html","","<p>Module to support validation and errors with Active Resource objects. The\nmodule overrides Base#save …\n",null,1],["ActiveSupport","","Rails/classes/ActiveSupport.html","","<p>This class has dubious semantics and we only have it so that people can\nwrite <code>params[:key]</code> instead of …\n",null,1],["ActiveSupport::Autoload","","Rails/classes/ActiveSupport/Autoload.html","","",null,1],["ActiveSupport::BacktraceCleaner","","Rails/classes/ActiveSupport/BacktraceCleaner.html","","<p>Backtraces often include many lines that are not relevant for the context\nunder review. This makes it …\n",null,1],["ActiveSupport::Base64","","Rails/classes/ActiveSupport/Base64.html","","",null,1],["ActiveSupport::BasicObject","","Rails/classes/ActiveSupport/BasicObject.html","","<p>A class with no predefined methods that behaves similarly to Builder&#39;s\nBlankSlate. Used for proxy …\n",null,1],["ActiveSupport::Benchmarkable","","Rails/classes/ActiveSupport/Benchmarkable.html","","",null,1],["ActiveSupport::BufferedLogger","","Rails/classes/ActiveSupport/BufferedLogger.html","","<p>Inspired by the buffered logger idea by Ezra\n",null,1],["ActiveSupport::BufferedLogger::Severity","","Rails/classes/ActiveSupport/BufferedLogger/Severity.html","","",null,1],["ActiveSupport::Cache","","Rails/classes/ActiveSupport/Cache.html","","<p>See ActiveSupport::Cache::Store for documentation.\n",null,1],["ActiveSupport::Cache::Entry","","Rails/classes/ActiveSupport/Cache/Entry.html","","<p>Entry that is put into caches. It supports expiration time on entries and\ncan compress values to save …\n",null,1],["ActiveSupport::Cache::FileStore","","Rails/classes/ActiveSupport/Cache/FileStore.html","","<p>A cache store implementation which stores everything on the filesystem.\n<p>FileStore implements the Strategy::LocalCache …\n",null,1],["ActiveSupport::Cache::MemCacheStore","","Rails/classes/ActiveSupport/Cache/MemCacheStore.html","","<p>A cache store implementation which stores data in Memcached: memcached.org/\n<p>This is currently the most …\n",null,1],["ActiveSupport::Cache::MemoryStore","","Rails/classes/ActiveSupport/Cache/MemoryStore.html","","<p>A cache store implementation which stores everything into memory in the\nsame process. If you&#39;re running …\n",null,1],["ActiveSupport::Cache::NullStore","","Rails/classes/ActiveSupport/Cache/NullStore.html","","<p>A cache store implementation which doesn&#39;t actually store anything.\nUseful in development and test …\n",null,1],["ActiveSupport::Cache::Store","","Rails/classes/ActiveSupport/Cache/Store.html","","<p>An abstract cache store class. There are multiple cache store\nimplementations, each having its own additional …\n",null,1],["ActiveSupport::Cache::Strategy","","Rails/classes/ActiveSupport/Cache/Strategy.html","","",null,1],["ActiveSupport::Cache::Strategy::LocalCache","","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html","","<p>Caches that implement LocalCache will be backed by an in-memory cache for\nthe duration of a block. Repeated …\n",null,1],["ActiveSupport::Cache::Strategy::LocalCache::LocalStore","","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html","","<p>Simple memory backed cache. This cache is not thread safe and is intended\nonly for serving as a temporary …\n",null,1],["ActiveSupport::Callbacks","","Rails/classes/ActiveSupport/Callbacks.html","","<p>Callbacks are code hooks that are run at key points in an object&#39;s\nlifecycle. The typical use case …\n",null,1],["ActiveSupport::Callbacks::ClassMethods","","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html","","",null,1],["ActiveSupport::Concern","","Rails/classes/ActiveSupport/Concern.html","","<p>A typical module looks like this:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">included</span>(<span class=\"ruby-identifier\">base</span>)\n    <span class=\"ruby-identifier\">base</span>.<span class=\"ruby-identifier\">extend</span> <span class=\"ruby-constant\">ClassMethods</span>\n    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["ActiveSupport::Configurable","","Rails/classes/ActiveSupport/Configurable.html","","<p>Configurable provides a <code>config</code> method to store and retrieve\nconfiguration options as an <code>OrderedHash</code>. …\n",null,1],["ActiveSupport::Configurable::ClassMethods","","Rails/classes/ActiveSupport/Configurable/ClassMethods.html","","",null,1],["ActiveSupport::Configurable::Configuration","","Rails/classes/ActiveSupport/Configurable/Configuration.html","","",null,1],["ActiveSupport::Dependencies","","Rails/classes/ActiveSupport/Dependencies.html","","",null,1],["ActiveSupport::Dependencies::ClassCache","","Rails/classes/ActiveSupport/Dependencies/ClassCache.html","","",null,1],["ActiveSupport::Dependencies::WatchStack","","Rails/classes/ActiveSupport/Dependencies/WatchStack.html","","<p>The WatchStack keeps a stack of the modules being watched as files are\nloaded. If a file in the process …\n",null,1],["ActiveSupport::Deprecation","","Rails/classes/ActiveSupport/Deprecation.html","","",null,1],["ActiveSupport::DescendantsTracker","","Rails/classes/ActiveSupport/DescendantsTracker.html","","<p>This module provides an internal implementation to track descendants which\nis faster than iterating through …\n",null,1],["ActiveSupport::Duration","","Rails/classes/ActiveSupport/Duration.html","","<p>Provides accurate date and time measurements using Date#advance and\nTime#advance, respectively. It mainly …\n",null,1],["ActiveSupport::FileUpdateChecker","","Rails/classes/ActiveSupport/FileUpdateChecker.html","","<p>FileUpdateChecker specifies the API used by Rails to watch files and\ncontrol reloading. The API depends …\n",null,1],["ActiveSupport::FileWatcher","","Rails/classes/ActiveSupport/FileWatcher.html","","",null,1],["ActiveSupport::FileWatcher::Backend","","Rails/classes/ActiveSupport/FileWatcher/Backend.html","","",null,1],["ActiveSupport::Gzip","","Rails/classes/ActiveSupport/Gzip.html","","<p>A convenient wrapper for the zlib standard library that allows\ncompression/decompression of strings with …\n",null,1],["ActiveSupport::Gzip::Stream","","Rails/classes/ActiveSupport/Gzip/Stream.html","","",null,1],["ActiveSupport::HashWithIndifferentAccess","","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html","","",null,1],["ActiveSupport::Inflector","","Rails/classes/ActiveSupport/Inflector.html","","<p>The Inflector transforms words from singular to plural, class names to\ntable names, modularized class …\n",null,1],["ActiveSupport::Inflector::Inflections","","Rails/classes/ActiveSupport/Inflector/Inflections.html","","<p>A singleton instance of this class is yielded by Inflector.inflections,\nwhich can then be used to specify …\n",null,1],["ActiveSupport::InheritableOptions","","Rails/classes/ActiveSupport/InheritableOptions.html","","",null,1],["ActiveSupport::JSON","","Rails/classes/ActiveSupport/JSON.html","","",null,1],["ActiveSupport::JSON::Encoding","","Rails/classes/ActiveSupport/JSON/Encoding.html","","",null,1],["ActiveSupport::JSON::Encoding::CircularReferenceError","","Rails/classes/ActiveSupport/JSON/Encoding/CircularReferenceError.html","","",null,1],["ActiveSupport::JSON::Encoding::Encoder","","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html","","",null,1],["ActiveSupport::JSON::Variable","","Rails/classes/ActiveSupport/JSON/Variable.html","","<p>A string that returns itself as its JSON-encoded form.\n",null,1],["ActiveSupport::LogSubscriber","","Rails/classes/ActiveSupport/LogSubscriber.html","","<p>ActiveSupport::LogSubscriber is an object set to consume\nActiveSupport::Notifications with the sole purpose …\n",null,1],["ActiveSupport::LogSubscriber::TestHelper","","Rails/classes/ActiveSupport/LogSubscriber/TestHelper.html","","<p>Provides some helpers to deal with testing log subscribers by setting up\nnotifications. Take for instance …\n",null,1],["ActiveSupport::LogSubscriber::TestHelper::MockLogger","","Rails/classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html","","",null,1],["ActiveSupport::Memoizable","","Rails/classes/ActiveSupport/Memoizable.html","","",null,1],["ActiveSupport::Memoizable::InstanceMethods","","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html","","",null,1],["ActiveSupport::MessageEncryptor","","Rails/classes/ActiveSupport/MessageEncryptor.html","","<p>MessageEncryptor is a simple way to encrypt values which get stored\nsomewhere you don&#39;t trust.\n<p>The …\n",null,1],["ActiveSupport::MessageEncryptor::InvalidMessage","","Rails/classes/ActiveSupport/MessageEncryptor/InvalidMessage.html","","",null,1],["ActiveSupport::MessageVerifier","","Rails/classes/ActiveSupport/MessageVerifier.html","","<p><code>MessageVerifier</code> makes it easy to generate and verify messages\nwhich are signed to prevent tampering. …\n",null,1],["ActiveSupport::MessageVerifier::InvalidSignature","","Rails/classes/ActiveSupport/MessageVerifier/InvalidSignature.html","","",null,1],["ActiveSupport::Multibyte","","Rails/classes/ActiveSupport/Multibyte.html","","",null,1],["ActiveSupport::Multibyte::Chars","","Rails/classes/ActiveSupport/Multibyte/Chars.html","","<p>Chars enables you to work transparently with UTF-8 encoding in the Ruby\nString class without having extensive …\n",null,1],["ActiveSupport::Multibyte::EncodingError","","Rails/classes/ActiveSupport/Multibyte/EncodingError.html","","<p>Raised when a problem with the encoding was found.\n",null,1],["ActiveSupport::Multibyte::Unicode","","Rails/classes/ActiveSupport/Multibyte/Unicode.html","","",null,1],["ActiveSupport::Multibyte::Unicode::Codepoint","","Rails/classes/ActiveSupport/Multibyte/Unicode/Codepoint.html","","<p>Holds data about a codepoint in the Unicode database\n",null,1],["ActiveSupport::Multibyte::Unicode::DatabaseGenerator","","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html","","",null,1],["ActiveSupport::Multibyte::Unicode::UnicodeDatabase","","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html","","<p>Holds static data from the Unicode database\n",null,1],["ActiveSupport::Notifications","","Rails/classes/ActiveSupport/Notifications.html","","<p>Notifications\n<p>+ActiveSupport::Notifications+ provides an instrumentation API for Ruby.\n<p>Instrumenters\n",null,1],["ActiveSupport::Notifications::Event","","Rails/classes/ActiveSupport/Notifications/Event.html","","",null,1],["ActiveSupport::Notifications::Fanout","","Rails/classes/ActiveSupport/Notifications/Fanout.html","","<p>This is a default queue implementation that ships with Notifications. It\njust pushes events to all registered …\n",null,1],["ActiveSupport::Notifications::Instrumenter","","Rails/classes/ActiveSupport/Notifications/Instrumenter.html","","",null,1],["ActiveSupport::OrderedHash","","Rails/classes/ActiveSupport/OrderedHash.html","","<p>The order of iteration over hashes in Ruby 1.8 is undefined. For example,\nyou do not know the order in …\n",null,1],["ActiveSupport::OrderedOptions","","Rails/classes/ActiveSupport/OrderedOptions.html","","",null,1],["ActiveSupport::Railtie","","Rails/classes/ActiveSupport/Railtie.html","","",null,1],["ActiveSupport::Rescuable","","Rails/classes/ActiveSupport/Rescuable.html","","<p>Rescuable module adds support for easier exception handling.\n",null,1],["ActiveSupport::Rescuable::ClassMethods","","Rails/classes/ActiveSupport/Rescuable/ClassMethods.html","","",null,1],["ActiveSupport::SafeBuffer","","Rails/classes/ActiveSupport/SafeBuffer.html","","",null,1],["ActiveSupport::SafeBuffer::SafeConcatError","","Rails/classes/ActiveSupport/SafeBuffer/SafeConcatError.html","","",null,1],["ActiveSupport::StringInquirer","","Rails/classes/ActiveSupport/StringInquirer.html","","<p>Wrapping a string in this class gives you a prettier way to test for\nequality. The value returned by …\n",null,1],["ActiveSupport::TaggedLogging","","Rails/classes/ActiveSupport/TaggedLogging.html","","<p>Wraps any standard Logger class to provide tagging capabilities. Examples:\n\n<pre>Logger = ActiveSupport::TaggedLogging.new(Logger.new(STDOUT)) ...</pre>\n",null,1],["ActiveSupport::TestCase","","Rails/classes/ActiveSupport/TestCase.html","","",null,1],["ActiveSupport::Testing","","Rails/classes/ActiveSupport/Testing.html","","",null,1],["ActiveSupport::Testing::Assertions","","Rails/classes/ActiveSupport/Testing/Assertions.html","","",null,1],["ActiveSupport::Testing::Declarative","","Rails/classes/ActiveSupport/Testing/Declarative.html","","",null,1],["ActiveSupport::Testing::Isolation","","Rails/classes/ActiveSupport/Testing/Isolation.html","","",null,1],["ActiveSupport::Testing::Isolation::Forking","","Rails/classes/ActiveSupport/Testing/Isolation/Forking.html","","",null,1],["ActiveSupport::Testing::Isolation::MiniTest","","Rails/classes/ActiveSupport/Testing/Isolation/MiniTest.html","","",null,1],["ActiveSupport::Testing::Isolation::Subprocess","","Rails/classes/ActiveSupport/Testing/Isolation/Subprocess.html","","",null,1],["ActiveSupport::Testing::Isolation::TestUnit","","Rails/classes/ActiveSupport/Testing/Isolation/TestUnit.html","","",null,1],["ActiveSupport::Testing::Pending","","Rails/classes/ActiveSupport/Testing/Pending.html","","",null,1],["ActiveSupport::Testing::Performance","","Rails/classes/ActiveSupport/Testing/Performance.html","","",null,1],["ActiveSupport::Testing::Performance::Benchmarker","","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html","","",null,1],["ActiveSupport::Testing::Performance::ForClassicTestUnit","","Rails/classes/ActiveSupport/Testing/Performance/ForClassicTestUnit.html","","",null,1],["ActiveSupport::Testing::Performance::ForMiniTest","","Rails/classes/ActiveSupport/Testing/Performance/ForMiniTest.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics","","Rails/classes/ActiveSupport/Testing/Performance/Metrics.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::Amount","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Amount.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::Base","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::CpuTime","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::DigitalInformationUnit","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/DigitalInformationUnit.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::GcRuns","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::GcTime","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::Memory","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Memory.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::Objects","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Objects.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::ProcessTime","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/ProcessTime.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::Time","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Time.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::UserTime","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/UserTime.html","","",null,1],["ActiveSupport::Testing::Performance::Metrics::WallTime","","Rails/classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html","","",null,1],["ActiveSupport::Testing::Performance::Performer","","Rails/classes/ActiveSupport/Testing/Performance/Performer.html","","",null,1],["ActiveSupport::Testing::Performance::Profiler","","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html","","<p>overridden by each implementation\n",null,1],["ActiveSupport::Testing::ProxyTestResult","","Rails/classes/ActiveSupport/Testing/ProxyTestResult.html","","",null,1],["ActiveSupport::Testing::RemoteError","","Rails/classes/ActiveSupport/Testing/RemoteError.html","","",null,1],["ActiveSupport::Testing::SetupAndTeardown","","Rails/classes/ActiveSupport/Testing/SetupAndTeardown.html","","",null,1],["ActiveSupport::Testing::SetupAndTeardown::ClassMethods","","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ClassMethods.html","","",null,1],["ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ForClassicTestUnit.html","","",null,1],["ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ForMiniTest.html","","",null,1],["ActiveSupport::TimeWithZone","","Rails/classes/ActiveSupport/TimeWithZone.html","","<p>A Time-like class that can represent a time in any time zone. Necessary\nbecause standard Ruby Time instances …\n",null,1],["ActiveSupport::TimeZone","","Rails/classes/ActiveSupport/TimeZone.html","","",null,1],["ActiveSupport::XmlMini","","Rails/classes/ActiveSupport/XmlMini.html","","<p>XmlMini\n<p>To use the much faster libxml parser:\n\n<pre>gem &#39;libxml-ruby&#39;, &#39;=0.9.7&#39;\nXmlMini.backend = &#39;LibXML&#39;</pre>\n",null,1],["ActiveSupport::XmlMini_LibXMLSAX","","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX.html","","",null,1],["ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using\nSAX events.\n",null,1],["ActiveSupport::XmlMini_NokogiriSAX","","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX.html","","",null,1],["ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html","","<p>Class that will build the hash while the XML document is being parsed using\nSAX events.\n",null,1],["ApplicationController","","Rails/classes/ApplicationController.html","","",null,1],["ApplicationHelper","","Rails/classes/ApplicationHelper.html","","",null,1],["ArJdbcMySQL","","Rails/classes/ArJdbcMySQL.html","","",null,1],["ArJdbcMySQL::Error","","Rails/classes/ArJdbcMySQL/Error.html","","",null,1],["ArgumentError","","Ruby/classes/ArgumentError.html","","<p>Raised when the arguments are wrong and there isn&#39;t a more specific\nException class.\n<p>Ex: passing the …\n",null,0],["Array","","Ruby/classes/Array.html","","<p>Arrays are ordered, integer-indexed collections of any object. Array\nindexing starts at 0, as in C or …\n",null,0],["Array","Kernel","Ruby/classes/Kernel.html#method-i-Array","(p1)","<p>Returns <em>arg</em> as an <code>Array</code>. First tries to call\n<em>arg</em><code>.to_ary</code>, then <em>arg</em><code>.to_a</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Array</span>(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>)   <span class=\"ruby-comment\">#=&gt; [1, 2, 3, 4, ...</span>\n</pre>\n",null,0],["Array","","Rails/classes/Array.html","","",null,1],["Base64","","Rails/classes/Base64.html","","<p>The Base64 module isn&#39;t available in earlier versions of Ruby 1.9.\n",null,1],["BasicObject","","Ruby/classes/BasicObject.html","","<p>BasicObject is the parent class of all classes in Ruby.  It&#39;s an\nexplicit blank class.\n<p>BasicObject …\n",null,0],["Benchmark","","Rails/classes/Benchmark.html","","",null,1],["BigDecimal","","Rails/classes/BigDecimal.html","","",null,1],["Bignum","","Ruby/classes/Bignum.html","","<p>Bignum objects hold integers outside the range of Fixnum. Bignum objects\nare created automatically when …\n",null,0],["Binding","","Ruby/classes/Binding.html","","<p>Objects of class <code>Binding</code> encapsulate the execution context at\nsome particular place in the code and retain …\n",null,0],["Class","","Ruby/classes/Class.html","","<p>Classes in Ruby are first-class objects—each is an instance of class\n<code>Class</code>.\n<p>When a new class is created …\n",null,0],["Class","","Rails/classes/Class.html","","<p>Extends the class object with class and instance accessors for class\nattributes, just like the native …\n",null,1],["Comparable","","Ruby/classes/Comparable.html","","<p>The <code>Comparable</code> mixin is used by classes whose objects may be\nordered. The class must define the <code>&lt;=&gt;</code> …\n",null,0],["Complex","","Ruby/classes/Complex.html","","<p>A complex number can be represented as a paired real number with imaginary\nunit; a+bi.  Where a is real …\n",null,0],["Complex","Kernel","Ruby/classes/Kernel.html#method-i-Complex","(*args)","<p>Returns x+i*y;\n",null,0],["Continuation","","Ruby/classes/Continuation.html","","<p>Continuation objects are generated by <code>Kernel#callcc</code>, after\nhaving <code>require</code>d <em>continuation</em>. They hold a …\n",null,0],["Css","","Rails/classes/Css.html","","",null,1],["Css::Generators","","Rails/classes/Css/Generators.html","","",null,1],["Css::Generators::AssetsGenerator","","Rails/classes/Css/Generators/AssetsGenerator.html","","",null,1],["Css::Generators::ScaffoldGenerator","","Rails/classes/Css/Generators/ScaffoldGenerator.html","","",null,1],["DEBUG","Thread","Ruby/classes/Thread.html#method-c-DEBUG","()","<p>Returns the thread debug level.  Available only if compiled with\nTHREAD_DEBUG=-1.\n",null,0],["DEBUG=","Thread","Ruby/classes/Thread.html#method-c-DEBUG-3D","(p1)","<p>Sets the thread debug level.  Available only if compiled with\nTHREAD_DEBUG=-1.\n",null,0],["Data","","Ruby/classes/Data.html","","",null,0],["Date","","Rails/classes/Date.html","","",null,1],["DateTime","","Rails/classes/DateTime.html","","",null,1],["Dir","","Ruby/classes/Dir.html","","<p>Objects of class <code>Dir</code> are directory streams representing\ndirectories in the underlying file system. They …\n",null,0],["ENV","","Ruby/classes/ENV.html","","<p>ENV is a hash-like accessor for environment variables.\n",null,0],["EOFError","","Ruby/classes/EOFError.html","","<p>Raised by some IO operations when reaching the end of file. Many IO methods\nexist in two forms,\n<p>one that …\n",null,0],["ERB","","Rails/classes/ERB.html","","",null,1],["ERB::Util","","Rails/classes/ERB/Util.html","","",null,1],["Encoding","","Ruby/classes/Encoding.html","","",null,0],["Encoding::CompatibilityError","","Ruby/classes/Encoding/CompatibilityError.html","","<p>Raised by Encoding and String methods when the source encoding is\nincompatible with the target encoding. …\n",null,0],["Encoding::Converter","","Ruby/classes/Encoding/Converter.html","","",null,0],["Encoding::ConverterNotFoundError","","Ruby/classes/Encoding/ConverterNotFoundError.html","","<p>Raised by transcoding methods when a named encoding does not correspond\nwith a known converter.\n",null,0],["Encoding::InvalidByteSequenceError","","Ruby/classes/Encoding/InvalidByteSequenceError.html","","<p>Raised by Encoding and String methods when the string being transcoded\ncontains a byte invalid for the …\n",null,0],["Encoding::UndefinedConversionError","","Ruby/classes/Encoding/UndefinedConversionError.html","","<p>Raised by Encoding and String methods when a transcoding operation fails.\n",null,0],["EncodingError","","Ruby/classes/EncodingError.html","","<p>EncodingError is the base class for encoding errors.\n",null,0],["Enumerable","","Ruby/classes/Enumerable.html","","<p>The <code>Enumerable</code> mixin provides collection classes with several\ntraversal and searching methods, and with …\n",null,0],["Enumerable","","Rails/classes/Enumerable.html","","",null,1],["Enumerator","","Ruby/classes/Enumerator.html","","<p>A class which allows both internal and external iteration.\n<p>An Enumerator can be created by the following …\n",null,0],["Enumerator::Generator","","Ruby/classes/Enumerator/Generator.html","","<p>Generator\n",null,0],["Enumerator::Yielder","","Ruby/classes/Enumerator/Yielder.html","","<p>Generator\n",null,0],["Erb","","Rails/classes/Erb.html","","",null,1],["Erb::Generators","","Rails/classes/Erb/Generators.html","","",null,1],["Erb::Generators::ControllerGenerator","","Rails/classes/Erb/Generators/ControllerGenerator.html","","",null,1],["Erb::Generators::MailerGenerator","","Rails/classes/Erb/Generators/MailerGenerator.html","","",null,1],["Erb::Generators::ScaffoldGenerator","","Rails/classes/Erb/Generators/ScaffoldGenerator.html","","",null,1],["Errno","","Ruby/classes/Errno.html","","<p>Ruby exception objects are subclasses of <code>Exception</code>. However,\noperating systems typically report errors …\n",null,0],["Exception","","Ruby/classes/Exception.html","","<p>Descendants of class <code>Exception</code> are used to communicate between\n<code>raise</code> methods and <code>rescue</code> statements in …\n",null,0],["FalseClass","","Ruby/classes/FalseClass.html","","<p>The global value <code>false</code> is the only instance of class\n<code>FalseClass</code> and represents a logically false value …\n",null,0],["FalseClass","","Rails/classes/FalseClass.html","","",null,1],["Fiber","","Ruby/classes/Fiber.html","","<p>Fibers are primitives for implementing light weight cooperative concurrency\nin Ruby. Basically they are …\n",null,0],["FiberError","","Ruby/classes/FiberError.html","","<p>Raised when an invalid operation is attempted on a Fiber, in particular\nwhen attempting to call/resume …\n",null,0],["File","","Ruby/classes/File.html","","<p>A <code>File</code> is an abstraction of any file object accessible by the\nprogram and is closely associated with …\n",null,0],["File","","Rails/classes/File.html","","",null,1],["File::Constants","","Ruby/classes/File/Constants.html","","",null,0],["File::Stat","","Ruby/classes/File/Stat.html","","<p>Objects of class <code>File::Stat</code> encapsulate common status\ninformation for <code>File</code> objects. The information is …\n",null,0],["FileTest","","Ruby/classes/FileTest.html","","<p><code>FileTest</code> implements file test operations similar to those used\nin <code>File::Stat</code>. It exists as a standalone …\n",null,0],["Fixnum","","Ruby/classes/Fixnum.html","","<p>A <code>Fixnum</code> holds <code>Integer</code> values that can be\nrepresented in a native machine word (minus 1 bit). If any …\n",null,0],["Float","","Ruby/classes/Float.html","","<p><code>Float</code> objects represent inexact real numbers using the native\narchitecture&#39;s double-precision floating …\n",null,0],["Float","Kernel","Ruby/classes/Kernel.html#method-i-Float","(p1)","<p>Returns <em>arg</em> converted to a float. Numeric types are converted\ndirectly, the rest are converted using …\n",null,0],["Float","","Rails/classes/Float.html","","",null,1],["FloatDomainError","","Ruby/classes/FloatDomainError.html","","<p>Raised when attempting to convert special float values (in particular\ninfinite or NaN) to numerical classes …\n",null,0],["GC","","Ruby/classes/GC.html","","<p>The <code>GC</code> module provides an interface to Ruby&#39;s mark and\nsweep garbage collection mechanism. Some of …\n",null,0],["GC::Profiler","","Ruby/classes/GC/Profiler.html","","<p>The GC profiler provides access to information on GC runs including time,\nlength and object space size. …\n",null,0],["GET","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-GET","()","<p>Override Rack&#39;s GET method to support indifferent access\n",null,1],["Gemfile","","Rails/files/rails/Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>gemspec\n<p>if ENV\n",null,1],["Gemfile","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/Gemfile.html","","<p>source “rubygems.org”\n<p># Declare your gem&#39;s dependencies in &lt;%= name %&gt;.gemspec. # …\n",null,1],["Gemfile","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/Gemfile.html","","<p>source &#39;rubygems.org&#39;\n<p>&lt;%= rails_gemfile_entry -%&gt;\n<p>&lt;%= database_gemfile_entry -%&gt;\n",null,1],["HTML","","Rails/classes/HTML.html","","",null,1],["HTML::FullSanitizer","","Rails/classes/HTML/FullSanitizer.html","","",null,1],["HTML::LinkSanitizer","","Rails/classes/HTML/LinkSanitizer.html","","",null,1],["HTML::Sanitizer","","Rails/classes/HTML/Sanitizer.html","","",null,1],["HTML::Selector","","Rails/classes/HTML/Selector.html","","<p>Selects HTML elements using CSS 2 selectors.\n<p>The <code>Selector</code> class uses CSS selector expressions to match …\n",null,1],["HTML::Tag","","Rails/classes/HTML/Tag.html","","",null,1],["HTML::WhiteListSanitizer","","Rails/classes/HTML/WhiteListSanitizer.html","","",null,1],["Hash","","Ruby/classes/Hash.html","","<p>A <code>Hash</code> is a collection of key-value pairs. It is similar to an\n<code>Array</code>, except that indexing is done via …\n",null,0],["Hash","","Rails/classes/Hash.html","","",null,1],["I18n","","Rails/classes/I18n.html","","",null,1],["I18n::ExceptionHandler","","Rails/classes/I18n/ExceptionHandler.html","","",null,1],["I18n::Railtie","","Rails/classes/I18n/Railtie.html","","",null,1],["IO","","Ruby/classes/IO.html","","<p>Class <code>IO</code> is the basis for all input and output in Ruby. An I/O\nstream may be <em>duplexed</em> (that is, bidirectional), …\n",null,0],["IO","","Rails/classes/IO.html","","",null,1],["IO::WaitReadable","","Ruby/classes/IO/WaitReadable.html","","",null,0],["IO::WaitWritable","","Ruby/classes/IO/WaitWritable.html","","",null,0],["IOError","","Ruby/classes/IOError.html","","<p>Raised when an IO operation fails.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/etc/hosts&quot;</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">f</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">f</span> <span class=\"ruby-operator\">&lt;&lt;</span> <span class=\"ruby-string\">&quot;example&quot;</span>}\n  <span class=\"ruby-comment\">#=&gt; IOError: not opened ...</span>\n</pre>\n",null,0],["IndexError","","Ruby/classes/IndexError.html","","<p>Raised when the given index is invalid.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [:<span class=\"ruby-identifier\">foo</span>, :<span class=\"ruby-identifier\">bar</span>]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">fetch</span>(<span class=\"ruby-value\">0</span>)   <span class=\"ruby-comment\">#=&gt; :foo</span>\n<span class=\"ruby-identifier\">a</span>[<span class=\"ruby-value\">4</span>]         <span class=\"ruby-comment\">#=&gt; nil</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">fetch</span>(<span class=\"ruby-value\">4</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["Integer","","Ruby/classes/Integer.html","","<p><code>Integer</code> is the basis for the two concrete classes that hold\nwhole numbers, <code>Bignum</code> and <code>Fixnum</code>.\n",null,0],["Integer","Kernel","Ruby/classes/Kernel.html#method-i-Integer","(p1, p2 = v2)","<p>Converts <em>arg</em> to a <code>Fixnum</code> or <code>Bignum</code>.\nNumeric types are converted directly (with floating point numbers …\n",null,0],["Integer","","Rails/classes/Integer.html","","",null,1],["Interrupt","","Ruby/classes/Interrupt.html","","<p>Raised with the interrupt signal is received, typically because the user\npressed on Control-C (on most …\n",null,0],["Js","","Rails/classes/Js.html","","",null,1],["Js::Generators","","Rails/classes/Js/Generators.html","","",null,1],["Js::Generators::AssetsGenerator","","Rails/classes/Js/Generators/AssetsGenerator.html","","",null,1],["Kernel","","Ruby/classes/Kernel.html","","",null,0],["Kernel","","Rails/classes/Kernel.html","","",null,1],["KeyError","","Ruby/classes/KeyError.html","","<p>Raised when the specified key is not found. It is a subclass of IndexError.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = {<span class=\"ruby-string\">&quot;foo&quot;</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">bar</span>}\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">fetch</span>(<span class=\"ruby-string\">&quot;foo&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["LoadError","","Ruby/classes/LoadError.html","","<p>Raised when a file required (a Ruby script, extension library, …) fails to\nload.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;this/file/does/not/exist&#39;</span>\n</pre>\n",null,0],["LoadError","","Rails/classes/LoadError.html","","",null,1],["LocalJumpError","","Ruby/classes/LocalJumpError.html","","<p>Raised when Ruby can&#39;t yield as requested.\n<p>A typical scenario is attempting to yield when no block …\n",null,0],["Logger","","Rails/classes/Logger.html","","",null,1],["Logger::SimpleFormatter","","Rails/classes/Logger/SimpleFormatter.html","","<p>Simple formatter which only displays the message.\n",null,1],["MIT-LICENSE","","Rails/files/rails/actionmailer/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/railties/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/actionpack/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/activemodel/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/activerecord/MIT-LICENSE.html","","<p>Copyright © 2004-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/activeresource/MIT-LICENSE.html","","<p>Copyright © 2006-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/activesupport/MIT-LICENSE.html","","<p>Copyright © 2005-2011 David Heinemeier Hansson\n<p>Permission is hereby granted, free of charge, to any …\n",null,1],["MIT-LICENSE","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/MIT-LICENSE.html","","<p>Copyright &lt;%= Date.today.year %&gt; YOURNAME\n<p>Permission is hereby granted, free of charge, to any person …\n",null,1],["Marshal","","Ruby/classes/Marshal.html","","<p>The marshaling library converts collections of Ruby objects into a byte\nstream, allowing them to be stored …\n",null,0],["MatchData","","Ruby/classes/MatchData.html","","<p><code>MatchData</code> is the type of the special variable <code>$~</code>,\nand is the type of the object returned by <code>Regexp#match</code> …\n",null,0],["Math","","Ruby/classes/Math.html","","<p>The <code>Math</code> module contains module functions for basic\ntrigonometric and transcendental functions. See class …\n",null,0],["Math::DomainError","","Ruby/classes/Math/DomainError.html","","<p>Raised when a mathematical function is evaluated outside of its domain of\ndefinition.\n<p>For example, since …\n",null,0],["Method","","Ruby/classes/Method.html","","<p>Proc\n",null,0],["Mime","","Rails/classes/Mime.html","","",null,1],["Mime::Mimes","","Rails/classes/Mime/Mimes.html","","",null,1],["Mime::Type","","Rails/classes/Mime/Type.html","","<p>Encapsulates the notion of a mime type. Can be used at render time, for\nexample, with:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">PostsController</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["Module","","Ruby/classes/Module.html","","<p>A <code>Module</code> is a collection of methods and constants. The methods\nin a module may be instance methods or …\n",null,0],["Module","","Rails/classes/Module.html","","<p>Extends the API for constants to be able to deal with qualified names.\nArguments are assumed to be relative …\n",null,1],["Mutex","","Ruby/classes/Mutex.html","","<p>Mutex implements a simple semaphore that can be used to coordinate access\nto shared data from multiple …\n",null,0],["Mysql","","Rails/classes/Mysql.html","","",null,1],["Mysql::Result","","Rails/classes/Mysql/Result.html","","",null,1],["Mysql::Stmt","","Rails/classes/Mysql/Stmt.html","","",null,1],["Mysql::Time","","Rails/classes/Mysql/Time.html","","",null,1],["NameError","","Ruby/classes/NameError.html","","<p>Raised when a given name is invalid or undefined.\n\n<pre>puts foo</pre>\n<p><em>raises the exception:</em>\n",null,0],["NameError","","Rails/classes/NameError.html","","",null,1],["NilClass","","Ruby/classes/NilClass.html","","<p>The class of the singleton object <code>nil</code>.\n",null,0],["NilClass","","Rails/classes/NilClass.html","","<p>Extensions to <code>nil</code> which allow for more helpful error messages\nfor people who are new to Rails.\n<p>NilClass#id …\n",null,1],["NoMemoryError","","Ruby/classes/NoMemoryError.html","","<p>Raised when memory allocation fails.\n",null,0],["NoMethodError","","Ruby/classes/NoMethodError.html","","<p>Raised when a method is called on a receiver which doesn&#39;t have it\ndefined and also fails to respond …\n",null,0],["NotImplementedError","","Ruby/classes/NotImplementedError.html","","<p>Raised when a feature is not implemented on the current platform. For\nexample, methods depending on the …\n",null,0],["Numeric","","Ruby/classes/Numeric.html","","<p>Document-class: FloatDomainError\n<p>Raised when attempting to convert special float values (in particular …\n",null,0],["Numeric","","Rails/classes/Numeric.html","","",null,1],["Object","","Ruby/classes/Object.html","","<p>Object is the root of Ruby&#39;s class hierarchy.  Its methods are\navailable to all classes unless explicitly …\n",null,0],["Object","","Rails/classes/Object.html","","",null,1],["Object::HashWithIndifferentAccess","","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html","","",null,1],["Object::MissingSourceFile","","Rails/classes/LoadError.html","","",null,1],["ObjectSpace","","Ruby/classes/ObjectSpace.html","","<p>The <code>ObjectSpace</code> module contains a number of routines that\ninteract with the garbage collection facility …\n",null,0],["POST","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-POST","()","<p>Override Rack&#39;s POST method to support indifferent access\n",null,1],["Plugin","","Rails/classes/Plugin.html","","",null,1],["Proc","","Ruby/classes/Proc.html","","<p><code>Proc</code> objects are blocks of code that have been bound to a set\nof local variables. Once bound, the code …\n",null,0],["Process","","Ruby/classes/Process.html","","<p>The <code>Process</code> module is a collection of methods used to\nmanipulate processes.\n",null,0],["Process","","Rails/classes/Process.html","","",null,1],["Process::GID","","Ruby/classes/Process/GID.html","","<p>The <code>Process::GID</code> module contains a collection of module\nfunctions which can be used to portably get, …\n",null,0],["Process::Status","","Ruby/classes/Process/Status.html","","<p><code>Process::Status</code> encapsulates the information on the status of\na running or terminated system process. …\n",null,0],["Process::Sys","","Ruby/classes/Process/Sys.html","","<p>The <code>Process::Sys</code> module contains UID and GID functions which\nprovide direct bindings to the system calls …\n",null,0],["Process::UID","","Ruby/classes/Process/UID.html","","<p>The <code>Process::UID</code> module contains a collection of module\nfunctions which can be used to portably get, …\n",null,0],["QualifiedConstUtils","","Rails/classes/QualifiedConstUtils.html","","",null,1],["RAILS_VERSION","","Rails/files/rails/RAILS_VERSION.html","","<p>3.2.12\n",null,1],["README","","Rails/files/rails/railties/README_rdoc.html","","<p>Railties – Gluing the Engine to the Rails\n<p>Railties is responsible for gluing all frameworks together. …\n",null,1],["README","","Rails/files/rails/activerecord/README_rdoc.html","","<p>Active Record – Object-relational mapping put on rails\n<p>Active Record connects classes to relational database …\n",null,1],["README","","Rails/files/rails/activemodel/README_rdoc.html","","<p>Active Model – model interfaces for Rails\n<p>Active Model provides a known set of interfaces for usage in …\n",null,1],["README","","Rails/files/rails/activeresource/README_rdoc.html","","<p>Active Resource\n<p>Active Resource (ARes) connects business objects and Representational State\nTransfer ( …\n",null,1],["README","","Rails/files/rails/README_rdoc.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n",null,1],["README","","Rails/files/rails/actionmailer/README_rdoc.html","","<p>Action Mailer – Easy email delivery and testing\n<p>Action Mailer is a framework for designing email-service …\n",null,1],["README","","Rails/files/rails/activesupport/README_rdoc.html","","<p>Active Support – Utility classes and Ruby extensions from Rails\n<p>Active Support is a collection of utility …\n",null,1],["README","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/README.html","","<p>Welcome to Rails\n<p>Rails is a web-application framework that includes everything needed to\ncreate database-backed …\n",null,1],["README","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/README_rdoc.html","","<p>&lt;%= camelized %&gt;\n<p>This project rocks and uses MIT-LICENSE.\n",null,1],["README","","Rails/files/rails/actionpack/README_rdoc.html","","<p>Action Pack – From request to response\n<p>Action Pack is a framework for handling and responding to web …\n",null,1],["README_FOR_APP","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/doc/README_FOR_APP.html","","<p>Use this README file to introduce your application and point to useful\nplaces in the API for learning …\n",null,1],["RELEASING_RAILS","","Rails/files/rails/RELEASING_RAILS_rdoc.html","","<p>Releasing Rails\n<p>In this document, we&#39;ll cover the steps necessary to release Rails. \nEach section …\n",null,1],["RUNNING_UNIT_TESTS","","Rails/files/rails/activerecord/RUNNING_UNIT_TESTS.html","","<p>Configure databases\n<p>Copy test/config.example.yml to test/config.yml and edit as needed. Or just\nrun the …\n",null,1],["RUNNING_UNIT_TESTS","","Rails/files/rails/actionpack/RUNNING_UNIT_TESTS.html","","<p>Running with Rake\n<p>The easiest way to run the unit tests is through Rake. The default task\nruns the entire …\n",null,1],["Rack","","Rails/classes/Rack.html","","",null,1],["Rails","","Rails/classes/Rails.html","","",null,1],["Rails::ActionMethods","","Rails/classes/Rails/ActionMethods.html","","",null,1],["Rails::AppBuilder","","Rails/classes/Rails/AppBuilder.html","","<p>The application builder allows you to override elements of the application\ngenerator without being forced …\n",null,1],["Rails::Application","","Rails/classes/Rails/Application.html","","<p>In Rails 3.0, a Rails::Application object was introduced which is nothing\nmore than an Engine but with …\n",null,1],["Rails::Application::Bootstrap","","Rails/classes/Rails/Application/Bootstrap.html","","",null,1],["Rails::Application::Configuration","","Rails/classes/Rails/Application/Configuration.html","","",null,1],["Rails::Application::Finisher","","Rails/classes/Rails/Application/Finisher.html","","",null,1],["Rails::Application::Railties","","Rails/classes/Rails/Application/Railties.html","","",null,1],["Rails::Application::RoutesReloader","","Rails/classes/Rails/Application/RoutesReloader.html","","",null,1],["Rails::BacktraceCleaner","","Rails/classes/Rails/BacktraceCleaner.html","","",null,1],["Rails::Commands","","Rails/classes/Rails/Commands.html","","",null,1],["Rails::Commands::Info","","Rails/classes/Rails/Commands/Info.html","","",null,1],["Rails::Commands::Install","","Rails/classes/Rails/Commands/Install.html","","",null,1],["Rails::Commands::Plugin","","Rails/classes/Rails/Commands/Plugin.html","","",null,1],["Rails::Commands::Remove","","Rails/classes/Rails/Commands/Remove.html","","",null,1],["Rails::Configuration","","Rails/classes/Rails/Configuration.html","","",null,1],["Rails::Console","","Rails/classes/Rails/Console.html","","",null,1],["Rails::ConsoleMethods","","Rails/classes/Rails/ConsoleMethods.html","","",null,1],["Rails::DBConsole","","Rails/classes/Rails/DBConsole.html","","",null,1],["Rails::Engine","","Rails/classes/Rails/Engine.html","","<p><code>Rails::Engine</code> allows you to wrap a specific Rails application\nor subset of functionality and share it …\n",null,1],["Rails::Engine::Configuration","","Rails/classes/Rails/Engine/Configuration.html","","",null,1],["Rails::Engine::Railties","","Rails/classes/Rails/Engine/Railties.html","","",null,1],["Rails::Generators","","Rails/classes/Rails/Generators.html","","",null,1],["Rails::Generators::Actions","","Rails/classes/Rails/Generators/Actions.html","","",null,1],["Rails::Generators::ActiveModel","","Rails/classes/Rails/Generators/ActiveModel.html","","<p>ActiveModel is a class to be implemented by each ORM to allow Rails to\ngenerate customized controller …\n",null,1],["Rails::Generators::AppBase","","Rails/classes/Rails/Generators/AppBase.html","","",null,1],["Rails::Generators::AppGenerator","","Rails/classes/Rails/Generators/AppGenerator.html","","",null,1],["Rails::Generators::AssetsGenerator","","Rails/classes/Rails/Generators/AssetsGenerator.html","","",null,1],["Rails::Generators::Base","","Rails/classes/Rails/Generators/Base.html","","",null,1],["Rails::Generators::ControllerGenerator","","Rails/classes/Rails/Generators/ControllerGenerator.html","","",null,1],["Rails::Generators::Error","","Rails/classes/Rails/Generators/Error.html","","",null,1],["Rails::Generators::GeneratedAttribute","","Rails/classes/Rails/Generators/GeneratedAttribute.html","","",null,1],["Rails::Generators::GeneratorGenerator","","Rails/classes/Rails/Generators/GeneratorGenerator.html","","",null,1],["Rails::Generators::HelperGenerator","","Rails/classes/Rails/Generators/HelperGenerator.html","","",null,1],["Rails::Generators::MailerGenerator","","Rails/classes/Rails/Generators/MailerGenerator.html","","",null,1],["Rails::Generators::Migration","","Rails/classes/Rails/Generators/Migration.html","","<p>Holds common methods for migrations. It assumes that migrations has the\n[0-9]*_name format and can be …\n",null,1],["Rails::Generators::Migration::ClassMethods","","Rails/classes/Rails/Generators/Migration/ClassMethods.html","","",null,1],["Rails::Generators::MigrationGenerator","","Rails/classes/Rails/Generators/MigrationGenerator.html","","",null,1],["Rails::Generators::ModelGenerator","","Rails/classes/Rails/Generators/ModelGenerator.html","","",null,1],["Rails::Generators::NamedBase","","Rails/classes/Rails/Generators/NamedBase.html","","",null,1],["Rails::Generators::ObserverGenerator","","Rails/classes/Rails/Generators/ObserverGenerator.html","","",null,1],["Rails::Generators::PluginNewGenerator","","Rails/classes/Rails/Generators/PluginNewGenerator.html","","",null,1],["Rails::Generators::ResourceGenerator","","Rails/classes/Rails/Generators/ResourceGenerator.html","","",null,1],["Rails::Generators::ResourceHelpers","","Rails/classes/Rails/Generators/ResourceHelpers.html","","<p>Deal with controller names on scaffold and add some helpers to deal with\nActiveModel.\n",null,1],["Rails::Generators::ResourceRouteGenerator","","Rails/classes/Rails/Generators/ResourceRouteGenerator.html","","",null,1],["Rails::Generators::ScaffoldControllerGenerator","","Rails/classes/Rails/Generators/ScaffoldControllerGenerator.html","","",null,1],["Rails::Generators::ScaffoldGenerator","","Rails/classes/Rails/Generators/ScaffoldGenerator.html","","",null,1],["Rails::Generators::SessionMigrationGenerator","","Rails/classes/Rails/Generators/SessionMigrationGenerator.html","","",null,1],["Rails::Generators::TaskGenerator","","Rails/classes/Rails/Generators/TaskGenerator.html","","",null,1],["Rails::Generators::TestCase","","Rails/classes/Rails/Generators/TestCase.html","","<p>This class provides a TestCase for testing generators. To setup, you need\njust to configure the destination …\n",null,1],["Rails::Info","","Rails/classes/Rails/Info.html","","",null,1],["Rails::InfoController","","Rails/classes/Rails/InfoController.html","","",null,1],["Rails::Initializable","","Rails/classes/Rails/Initializable.html","","",null,1],["Rails::Initializable::ClassMethods","","Rails/classes/Rails/Initializable/ClassMethods.html","","",null,1],["Rails::Initializable::Collection","","Rails/classes/Rails/Initializable/Collection.html","","",null,1],["Rails::Initializable::Initializer","","Rails/classes/Rails/Initializable/Initializer.html","","",null,1],["Rails::Paths","","Rails/classes/Rails/Paths.html","","",null,1],["Rails::Paths::Path","","Rails/classes/Rails/Paths/Path.html","","",null,1],["Rails::Paths::Root","","Rails/classes/Rails/Paths/Root.html","","<p>This object is an extended hash that behaves as root of the\n<code>Rails::Paths</code> system. It allows you to collect …\n",null,1],["Rails::Plugin","","Rails/classes/Rails/Plugin.html","","<p>Rails::Plugin is nothing more than a Rails::Engine, but since it&#39;s\nloaded too late in the boot process, …\n",null,1],["Rails::PluginBuilder","","Rails/classes/Rails/PluginBuilder.html","","",null,1],["Rails::Rack","","Rails/classes/Rails/Rack.html","","",null,1],["Rails::Rack::Debugger","","Rails/classes/Rails/Rack/Debugger.html","","",null,1],["Rails::Rack::LogTailer","","Rails/classes/Rails/Rack/LogTailer.html","","",null,1],["Rails::Rack::Logger","","Rails/classes/Rails/Rack/Logger.html","","<p>Sets log tags, logs the request, calls the app, and flushes the logs.\n",null,1],["Rails::Railtie","","Rails/classes/Rails/Railtie.html","","<p>Railtie is the core of the Rails framework and provides several hooks to\nextend Rails and/or modify the …\n",null,1],["Rails::Railtie::Configurable","","Rails/classes/Rails/Railtie/Configurable.html","","",null,1],["Rails::Railtie::Configurable::ClassMethods","","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html","","",null,1],["Rails::Railtie::Configuration","","Rails/classes/Rails/Railtie/Configuration.html","","",null,1],["Rails::ScriptRailsLoader","","Rails/classes/Rails/ScriptRailsLoader.html","","",null,1],["Rails::Server","","Rails/classes/Rails/Server.html","","",null,1],["Rails::Server::Options","","Rails/classes/Rails/Server/Options.html","","",null,1],["Rails::SubTestTask","","Rails/classes/Rails/SubTestTask.html","","<p>Silence the default description to cut down on `rake -T` noise.\n",null,1],["Rails::TestUnitRailtie","","Rails/classes/Rails/TestUnitRailtie.html","","",null,1],["RailsEnvironment","","Rails/classes/RailsEnvironment.html","","",null,1],["Rakefile","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/Rakefile.html","","<p>#!/usr/bin/env rake begin\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;bundler/setup&#39;</span>\n</pre>\n<p>rescue LoadError\n",null,1],["Rakefile","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/Rakefile.html","","<p>#!/usr/bin/env rake # Add your own tasks in files placed in lib/tasks\nending in .rake, # for example …\n",null,1],["Rakefile","","Rails/files/rails/activeresource/Rakefile.html","","<p>#!/usr/bin/env rake require &#39;rake/testtask&#39; require\n&#39;rake/packagetask&#39; require &#39; …\n",null,1],["Rakefile","","Rails/files/rails/Rakefile.html","","<p>#!/usr/bin/env rake\n<p>require &#39;rdoc/task&#39; require &#39;sdoc&#39; require\n&#39;net/http&#39;\n<p>$:.unshift …\n",null,1],["Rakefile","","Rails/files/rails/activerecord/Rakefile.html","","<p>#!/usr/bin/env rake require &#39;rake/testtask&#39; require\n&#39;rake/packagetask&#39; require &#39; …\n",null,1],["Rakefile","","Rails/files/rails/actionmailer/Rakefile.html","","<p>#!/usr/bin/env rake require &#39;rake/testtask&#39; require\n&#39;rake/packagetask&#39; require &#39; …\n",null,1],["Rakefile","","Rails/files/rails/activemodel/Rakefile.html","","<p>dir = File.dirname(__FILE__)\n<p>require &#39;rake/testtask&#39;\n<p>task :default =&gt; :test\n",null,1],["Rakefile","","Rails/files/rails/actionpack/Rakefile.html","","<p>#!/usr/bin/env rake require &#39;rake/testtask&#39; require\n&#39;rake/packagetask&#39; require &#39; …\n",null,1],["Rakefile","","Rails/files/rails/activesupport/Rakefile.html","","<p>require &#39;rake/testtask&#39; require &#39;rubygems/package_task&#39;\n<p>task :default =&gt; :test Rake::TestTask.new …\n",null,1],["Rakefile","","Rails/files/rails/railties/Rakefile.html","","<p>#!/usr/bin/env rake require &#39;rake/testtask&#39; require\n&#39;rubygems/package_task&#39;\n<p>require &#39;date&#39; …\n",null,1],["Random","","Ruby/classes/Random.html","","",null,0],["Range","","Ruby/classes/Range.html","","<p>A <code>Range</code> represents an interval—a set of values with a start\nand an end. Ranges may be constructed using …\n",null,0],["Range","","Rails/classes/Range.html","","",null,1],["RangeError","","Ruby/classes/RangeError.html","","<p>Raised when a given numerical value is out of range.\n\n<pre>[1, 2, 3].drop(1 &lt;&lt; 100)</pre>\n<p><em>raises the exception:</em>\n",null,0],["Rational","","Ruby/classes/Rational.html","","<p>A rational number can be represented as a paired integer number; a/b\n(b&gt;0).  Where a is numerator …\n",null,0],["Rational","Kernel","Ruby/classes/Kernel.html#method-i-Rational","(*args)","<p>Returns x/y;\n",null,0],["RecursiveHTTPFetcher","","Rails/classes/RecursiveHTTPFetcher.html","","",null,1],["Regexp","","Ruby/classes/Regexp.html","","<p>A <code>Regexp</code> holds a regular expression, used to match a pattern\nagainst strings. Regexps are created using …\n",null,0],["Regexp","","Rails/classes/Regexp.html","","",null,1],["RegexpError","","Ruby/classes/RegexpError.html","","<p>Raised when given an invalid regexp expression.\n\n<pre>Regexp.new(&quot;?&quot;)</pre>\n<p><em>raises the exception:</em>\n",null,0],["RubyVM","","Ruby/classes/RubyVM.html","","<p>::VM\n",null,0],["RubyVM::Env","","Ruby/classes/RubyVM/Env.html","","<p>::VM::Env\n",null,0],["RubyVM::InstructionSequence","","Ruby/classes/RubyVM/InstructionSequence.html","","<p>declare ::RubyVM::InstructionSequence\n",null,0],["RuntimeError","","Ruby/classes/RuntimeError.html","","<p>A generic error class raised when an invalid operation is attempted.\n\n<pre>[1, 2, 3].freeze &lt;&lt; 4</pre>\n<p><em>raises the exception:</em> …\n",null,0],["ScriptError","","Ruby/classes/ScriptError.html","","<p>ScriptError is the superclass for errors raised when a script can not be\nexecuted because of a <code>LoadError</code> …\n",null,0],["SecurityError","","Ruby/classes/SecurityError.html","","<p>Raised when attempting a potential unsafe operation, typically when the\n$SAFE level is raised above 0. …\n",null,0],["Signal","","Ruby/classes/Signal.html","","<p>Many operating systems allow signals to be sent to running processes. Some\nsignals have a defined effect …\n",null,0],["SignalException","","Ruby/classes/SignalException.html","","<p>Raised when a signal is received.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">begin</span>\n  <span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">kill</span>(<span class=\"ruby-string\">&#39;HUP&#39;</span>,<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">pid</span>)\n<span class=\"ruby-keyword\">rescue</span> <span class=\"ruby-constant\">SignalException</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">e</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["SourceAnnotationExtractor","","Rails/classes/SourceAnnotationExtractor.html","","<p>Implements the logic behind the rake tasks for annotations like\n\n<pre>rake notes\nrake notes:optimize</pre>\n<p>and friends. …\n",null,1],["SourceAnnotationExtractor::Annotation","","Rails/classes/SourceAnnotationExtractor/Annotation.html","","",null,1],["Sprockets","","Rails/classes/Sprockets.html","","",null,1],["Sprockets::Bootstrap","","Rails/classes/Sprockets/Bootstrap.html","","",null,1],["Sprockets::Compressors","","Rails/classes/Sprockets/Compressors.html","","",null,1],["Sprockets::Helpers","","Rails/classes/Sprockets/Helpers.html","","",null,1],["Sprockets::Helpers::IsolatedHelper","","Rails/classes/Sprockets/Helpers/IsolatedHelper.html","","",null,1],["Sprockets::Helpers::RailsHelper","","Rails/classes/Sprockets/Helpers/RailsHelper.html","","",null,1],["Sprockets::Helpers::RailsHelper::AssetPaths","","Rails/classes/Sprockets/Helpers/RailsHelper/AssetPaths.html","","",null,1],["Sprockets::Helpers::RailsHelper::AssetPaths::AssetNotPrecompiledError","","Rails/classes/Sprockets/Helpers/RailsHelper/AssetPaths/AssetNotPrecompiledError.html","","",null,1],["Sprockets::Railtie","","Rails/classes/Sprockets/Railtie.html","","<p>TODO: Get rid of config.assets.enabled\n",null,1],["Sprockets::StaticCompiler","","Rails/classes/Sprockets/StaticCompiler.html","","",null,1],["StandardError","","Ruby/classes/StandardError.html","","<p>The most standard error types are subclasses of StandardError. A rescue\nclause without an explicit Exception …\n",null,0],["StopIteration","","Ruby/classes/StopIteration.html","","<p>Raised to stop the iteration, in particular by Enumerator#next. It is\nrescued by Kernel#loop.\n\n<pre>loop do ...</pre>\n",null,0],["String","","Ruby/classes/String.html","","<p>A <code>String</code> object holds and manipulates an arbitrary sequence of\nbytes, typically representing characters. …\n",null,0],["String","Kernel","Ruby/classes/Kernel.html#method-i-String","(p1)","<p>Converts <em>arg</em> to a <code>String</code> by calling its\n<code>to_s</code> method.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">String</span>(<span class=\"ruby-keyword\">self</span>)        <span class=\"ruby-comment\">#=&gt; &quot;main&quot;</span>\n<span class=\"ruby-constant\">String</span>(<span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">class</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["String","","Rails/classes/String.html","","<p>String inflections define new methods on the String class to transform\nnames for different purposes. …\n",null,1],["Struct","","Ruby/classes/Struct.html","","<p>A <code>Struct</code> is a convenient way to bundle a number of attributes\ntogether, using accessor methods, without …\n",null,0],["Symbol","","Ruby/classes/Symbol.html","","<p><code>Symbol</code> objects represent names and some strings inside the\nRuby interpreter. They are generated using …\n",null,0],["Symbol","","Rails/classes/Symbol.html","","",null,1],["SyntaxError","","Ruby/classes/SyntaxError.html","","<p>Raised when encountering Ruby code with an invalid syntax.\n\n<pre>eval(&quot;1+1=2&quot;)</pre>\n<p><em>raises the exception:</em>\n",null,0],["SystemCallError","","Ruby/classes/SystemCallError.html","","<p>SystemCallError is the base class for all low-level platform-dependent\nerrors.\n<p>The errors available on …\n",null,0],["SystemExit","","Ruby/classes/SystemExit.html","","<p>Raised by <code>exit</code> to initiate the termination of the script.\n",null,0],["SystemStackError","","Ruby/classes/SystemStackError.html","","<p>Raised in case of a stack overflow.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">me_myself_and_i</span>\n  <span class=\"ruby-identifier\">me_myself_and_i</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-identifier\">me_myself_and_i</span>\n</pre>\n<p><em>raises the</em> …\n",null,0],["Test","","Rails/classes/Test.html","","",null,1],["Test::Unit","","Rails/classes/Test/Unit.html","","",null,1],["Test::Unit::Collector","","Rails/classes/Test/Unit/Collector.html","","",null,1],["Test::Unit::Collector::ObjectSpace","","Rails/classes/Test/Unit/Collector/ObjectSpace.html","","",null,1],["TestUnit","","Rails/classes/TestUnit.html","","",null,1],["TestUnit::Generators","","Rails/classes/TestUnit/Generators.html","","",null,1],["TestUnit::Generators::ControllerGenerator","","Rails/classes/TestUnit/Generators/ControllerGenerator.html","","",null,1],["TestUnit::Generators::HelperGenerator","","Rails/classes/TestUnit/Generators/HelperGenerator.html","","",null,1],["TestUnit::Generators::IntegrationGenerator","","Rails/classes/TestUnit/Generators/IntegrationGenerator.html","","",null,1],["TestUnit::Generators::MailerGenerator","","Rails/classes/TestUnit/Generators/MailerGenerator.html","","",null,1],["TestUnit::Generators::ModelGenerator","","Rails/classes/TestUnit/Generators/ModelGenerator.html","","",null,1],["TestUnit::Generators::ObserverGenerator","","Rails/classes/TestUnit/Generators/ObserverGenerator.html","","",null,1],["TestUnit::Generators::PerformanceGenerator","","Rails/classes/TestUnit/Generators/PerformanceGenerator.html","","",null,1],["TestUnit::Generators::PluginGenerator","","Rails/classes/TestUnit/Generators/PluginGenerator.html","","",null,1],["TestUnit::Generators::ScaffoldGenerator","","Rails/classes/TestUnit/Generators/ScaffoldGenerator.html","","",null,1],["Thread","","Ruby/classes/Thread.html","","<p>::VM\n",null,0],["ThreadError","","Ruby/classes/ThreadError.html","","<p>Raised when an invalid operation is attempted on a thread.\n<p>For example, when no other thread has been …\n",null,0],["ThreadGroup","","Ruby/classes/ThreadGroup.html","","<p><code>ThreadGroup</code> provides a means of keeping track of a number of\nthreads as a group. A <code>Thread</code> can belong …\n",null,0],["Time","","Ruby/classes/Time.html","","<p><code>Time</code> is an abstraction of dates and times. Time is stored\ninternally as the number of seconds with fraction …\n",null,0],["Time","","Rails/classes/Time.html","","",null,1],["TrueClass","","Ruby/classes/TrueClass.html","","<p>The global value <code>true</code> is the only instance of class\n<code>TrueClass</code> and represents a logically true value in …\n",null,0],["TrueClass","","Rails/classes/TrueClass.html","","",null,1],["TypeError","","Ruby/classes/TypeError.html","","<p>Raised when encountering an object that is not of the expected type.\n\n<pre>[1, 2, 3].first(&quot;two&quot;)</pre>\n<p><em>raises the</em> …\n",null,0],["URI","","Rails/classes/URI.html","","",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/resource/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new resource including an empty model and controller suitable\nfor a restful, ...</pre>\n",null,1],["USAGE","","Rails/files/rails/actionmailer/lib/rails/generators/mailer/USAGE.html","","<p>Description:\n<p>\n\n<pre>Stubs out a new mailer and its views. Pass the mailer name, either\nCamelCased or under_scored, ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/app/USAGE.html","","<p>Description:\n\n<pre>The &#39;rails new&#39; command creates a new Rails application with a default\ndirectory structure ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/assets/USAGE.html","","<p>Description:\n\n<pre>Stubs out new asset placeholders. Pass the asset name, either CamelCased\nor under_scored. ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/controller/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new controller and its views. Pass the controller name, either\nCamelCased or ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/generator/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new generator at lib/generators. Pass the generator name as an argument,\neither ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/helper/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new helper. Pass the helper name, either CamelCased\nor under_scored.\n\nTo create ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/migration/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new database migration. Pass the migration name, either\nCamelCased or under_scored, ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/model/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new model. Pass the model name, either CamelCased or\nunder_scored, and an optional ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/observer/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new observer. Pass the observer name, either CamelCased or\nunder_scored, as an ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/USAGE.html","","<p>Description:\n\n<pre>The &#39;rails plugin new&#39; command creates a skeleton for developing any\nkind of Rails extension ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/session_migration/USAGE.html","","<p>Description:\n\n<pre>Creates a migration to add the sessions table used by the ORM session store.\nPass the migration ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/scaffold_controller/USAGE.html","","<p>Description:\n\n<pre>Stubs out a scaffolded controller, its seven RESTful actions and related\nviews. Pass the ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/scaffold/USAGE.html","","<p>Description:\n\n<pre>Scaffolds an entire resource, from model and migration to controller and\nviews, along with ...</pre>\n",null,1],["USAGE","","Rails/files/rails/railties/lib/rails/generators/rails/task/USAGE.html","","<p>Description:\n\n<pre>Stubs out a new Rake task. Pass the namespace name, and a list of tasks as arguments.\n\nThis ...</pre>\n",null,1],["UnboundMethod","","Ruby/classes/UnboundMethod.html","","<p>Ruby supports two forms of objectified methods. Class <code>Method</code>\nis used to represent methods that are associated …\n",null,0],["ZeroDivisionError","","Ruby/classes/ZeroDivisionError.html","","<p>Raised when attempting to divide an integer by 0.\n\n<pre>42 / 0</pre>\n<p><em>raises the exception:</em>\n",null,0],["[]","Array","Ruby/classes/Array.html#method-i-5B-5D","(p1, p2 = v2)","<p>Element Reference—Returns the element at <em>index</em>, or returns a\nsubarray starting at <em>start</em> and continuing …\n",null,0],["[]","Array","Ruby/classes/Array.html#method-c-5B-5D","(*args)","<p>Returns a new array populated with the given objects.\n\n<pre>Array.[]( 1, &#39;a&#39;, /^A/ )\nArray[ 1, &#39;a&#39;, /^A/ ]\n[ ...</pre>\n",null,0],["[]","Bignum","Ruby/classes/Bignum.html#method-i-5B-5D","(p1)","<p>Bit Reference—Returns the <em>n</em>th bit in the (assumed) binary\nrepresentation of <em>big</em>, where <em>big</em> is the least …\n",null,0],["[]","Continuation","Ruby/classes/Continuation.html#method-i-5B-5D","(*args)","<p>Invokes the continuation. The program continues from the end of the\n<code>callcc</code> block. If no arguments are …\n",null,0],["[]","Dir","Ruby/classes/Dir.html#method-c-5B-5D","(*args)","<p>Equivalent to calling <code>Dir.glob(</code><em>array,</em><code>0)</code>\nand <code>Dir.glob([string,...],0)</code>.\n",null,0],["[]","ENV","Ruby/classes/ENV.html#method-c-5B-5D","(p1)","<p>Retrieves the <code>value</code> for environment variable <code>name</code>\nas a String.  Returns <code>nil</code> if the named variable does …\n",null,0],["[]","Fixnum","Ruby/classes/Fixnum.html#method-i-5B-5D","(p1)","<p>Bit Reference—Returns the <em>n</em>th bit in the binary representation of\n<em>fix</em>, where <em>fix</em> is the least significant …\n",null,0],["[]","Hash","Ruby/classes/Hash.html#method-c-5B-5D","(*args)","<p>Creates a new hash populated with the given objects. Equivalent to the\nliteral <code>{ <em>key</em> =&gt; <em>value</em>, ...</code> …\n",null,0],["[]","Hash","Ruby/classes/Hash.html#method-i-5B-5D","(p1)","<p>Element Reference—Retrieves the <em>value</em> object corresponding to the\n<em>key</em> object. If not found, returns …\n",null,0],["[]","MatchData","Ruby/classes/MatchData.html#method-i-5B-5D","(p1, p2 = v2)","<p>Match Reference—<code>MatchData</code> acts as an array, and may be\naccessed using the normal array indexing techniques. …\n",null,0],["[]","Method","Ruby/classes/Method.html#method-i-5B-5D","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the\nmethod&#39;s return value.\n\n<pre>m = 12.method(&quot;+&quot;) ...</pre>\n",null,0],["[]","Proc","Ruby/classes/Proc.html#method-i-5B-5D","(*args)","<p>Invokes the block, setting the block&#39;s parameters to the values in\n<em>params</em> using something close to …\n",null,0],["[]","String","Ruby/classes/String.html#method-i-5B-5D","(*args)","<p>Element Reference—If passed a single <code>Fixnum</code>, returns a\nsubstring of one character at that position. …\n",null,0],["[]","Struct","Ruby/classes/Struct.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of the instance variable named by\n<em>symbol</em>, or indexed (0..length-1 …\n",null,0],["[]","Symbol","Ruby/classes/Symbol.html#method-i-5B-5D","(*args)","<p>Returns <code>sym.to_s[]</code>.\n",null,0],["[]","Thread","Ruby/classes/Thread.html#method-i-5B-5D","(p1)","<p>Attribute Reference—Returns the value of a thread-local variable, using\neither a symbol or a string …\n",null,0],["[]","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-5B-5D","(k)","",null,1],["[]","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-i-5B-5D","(header_name)","",null,1],["[]","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-5B-5D","(i)","",null,1],["[]","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-5B-5D","(attribute)","<p>When passed a symbol or a name of a method, returns an array of errors for\nthe method.\n\n<pre>p.errors[:name] ...</pre>\n",null,1],["[]","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-5B-5D","(name)","<p>Returns a ColumnDefinition for the column with name <code>name</code>.\n",null,1],["[]","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-i-5B-5D","(x)","",null,1],["[]","ActiveResource::Formats","Rails/classes/ActiveResource/Formats.html#method-c-5B-5D","(mime_type_reference)","<p>Lookup the format class from a mime type reference symbol. Example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ActiveResource</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Formats</span>[:<span class=\"ruby-identifier\">xml</span>]  <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["[]","ActiveResource::Response","Rails/classes/ActiveResource/Response.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-5B-5D","(*args)","",null,1],["[]","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-c-5B-5D","(*args)","",null,1],["[]","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D","(key)","",null,1],["[]","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-5B-5D","(*args)","",null,1],["[]","ActiveSupport::Testing::Performance::Metrics","Rails/classes/ActiveSupport/Testing/Performance/Metrics.html#method-c-5B-5D","(name)","",null,1],["[]","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-5B-5D","(arg)","<p>Locate a specific time zone object. If the argument is a string, it is\ninterpreted to mean the name of …\n",null,1],["[]","Mime","Rails/classes/Mime.html#method-c-5B-5D","(type)","",null,1],["[]=","Array","Ruby/classes/Array.html#method-i-5B-5D-3D","(*args)","<p>Element Assignment—Sets the element at <em>index</em>, or replaces a\nsubarray starting at <em>start</em> and continuing …\n",null,0],["[]=","ENV","Ruby/classes/ENV.html#method-c-5B-5D-3D","(p1, p2)","<p>Sets the environment variable <code>name</code> to <code>value</code>.  If\nthe value given is <code>nil</code> the environment variable is deleted. …\n",null,0],["[]=","Hash","Ruby/classes/Hash.html#method-i-5B-5D-3D","(p1, p2)","<p>Element Assignment—Associates the value given by <em>value</em> with the\nkey given by <em>key</em>. <em>key</em> should not have …\n",null,0],["[]=","String","Ruby/classes/String.html#method-i-5B-5D-3D","(*args)","<p>Element Assignment—Replaces some or all of the content of <em>str</em>. The\nportion of the string affected is …\n",null,0],["[]=","Struct","Ruby/classes/Struct.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Assigns to the instance variable named by\n<em>symbol</em> or <em>fixnum</em> the value <em>obj</em> and returns …\n",null,0],["[]=","Thread","Ruby/classes/Thread.html#method-i-5B-5D-3D","(p1, p2)","<p>Attribute Assignment—Sets or creates the value of a thread-local variable,\nusing either a symbol or …\n",null,0],["[]=","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-5B-5D-3D","(attribute, error)","<p>Adds to the supplied attribute the supplied error message.\n\n<pre>p.errors[:name] = &quot;must be set&quot;\np.errors[:name] ...</pre>\n",null,1],["[]=","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-5B-5D-3D","(sql, key)","",null,1],["[]=","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-i-5B-5D-3D","(k,v)","",null,1],["[]=","ActiveResource::Response","Rails/classes/ActiveResource/Response.html#method-i-5B-5D-3D","(key, value)","",null,1],["[]=","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:key] = &quot;value&quot;</pre>\n",null,1],["[]=","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-5B-5D-3D","(key, value)","<p>Assigns a new value to the hash:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:key] = &quot;value&quot;</pre>\n",null,1],["[]=","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-5B-5D-3D","(*args)","<p>Like <code>String#[]=</code>, except instead of byte offsets you specify\ncharacter offsets.\n<p>Example:\n\n<pre>s = &quot;Müller&quot;\ns.mb_chars[2] ...</pre>\n",null,1],["[]=","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-5B-5D-3D","(key, value)","",null,1],["[]=","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-5B-5D-3D","(key, value)","",null,1],["[]=","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-5B-5D-3D","(path, value)","",null,1],["^","Bignum","Ruby/classes/Bignum.html#method-i-5E","(p1)","<p>Performs bitwise +exclusive or+ between <em>big</em> and <em>numeric</em>.\n",null,0],["^","FalseClass","Ruby/classes/FalseClass.html#method-i-5E","(p1)","<p>Exclusive Or—If <em>obj</em> is <code>nil</code> or <code>false</code>,\nreturns <code>false</code>; otherwise, returns <code>true</code>.\n",null,0],["^","Fixnum","Ruby/classes/Fixnum.html#method-i-5E","(p1)","<p>Bitwise EXCLUSIVE OR.\n",null,0],["^","NilClass","Ruby/classes/NilClass.html#method-i-5E","(p1)","<p>Exclusive Or—If <em>obj</em> is <code>nil</code> or <code>false</code>,\nreturns <code>false</code>; otherwise, returns <code>true</code>.\n",null,0],["^","TrueClass","Ruby/classes/TrueClass.html#method-i-5E","(p1)","<p>Exclusive Or—Returns <code>true</code> if <em>obj</em> is <code>nil</code>\nor <code>false</code>, <code>false</code> otherwise.\n",null,0],["__callback_runner_name","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__callback_runner_name","(key, kind)","",null,1],["__callee__","Kernel","Ruby/classes/Kernel.html#method-i-__callee__","()","<p>Returns the name of the current method as a Symbol. If called outside of a\nmethod, it returns <code>nil</code>.\n",null,0],["__id__","BasicObject","Ruby/classes/BasicObject.html#method-i-__id__","()","<p>Returns an integer identifier for <em>obj</em>. The same number will be\nreturned on all calls to <code>id</code> for a given …\n",null,0],["__method__","Kernel","Ruby/classes/Kernel.html#method-i-__method__","()","<p>Returns the name of the current method as a Symbol. If called outside of a\nmethod, it returns <code>nil</code>.\n",null,0],["__replay__","ActiveSupport::Testing::ProxyTestResult","Rails/classes/ActiveSupport/Testing/ProxyTestResult.html#method-i-__replay__","(result)","",null,1],["__reset_runner","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-__reset_runner","(symbol)","",null,1],["__send__","BasicObject","Ruby/classes/BasicObject.html#method-i-__send__","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. You can use <code>__send__</code> if …\n",null,0],["_all_autoload_once_paths","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-_all_autoload_once_paths","()","",null,1],["_all_autoload_paths","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-_all_autoload_paths","()","",null,1],["_all_load_paths","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-_all_load_paths","()","",null,1],["_attribute","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead","Rails/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead.html#method-i-_attribute","(attr_name)","",null,1],["_dasherize","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-_dasherize","(key)","",null,1],["_dump","Time","Ruby/classes/Time.html#method-i-_dump","(p1 = v1)","<p>Dump <em>time</em> for marshaling.\n",null,0],["_dump","Time","Rails/classes/Time.html#method-i-_dump","(*args)","",null,1],["_dump_without_utc_flag","Time","Rails/classes/Time.html#method-i-_dump_without_utc_flag","(*args)","",null,1],["_dump_without_zone","Time","Rails/classes/Time.html#method-i-_dump_without_zone","(*args)","",null,1],["_get","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-_get","(key)","",null,1],["_handle_method_missing","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-_handle_method_missing","()","",null,1],["_handle_render_options","ActionController::Renderers","Rails/classes/ActionController/Renderers.html#method-i-_handle_render_options","(options)","",null,1],["_id2ref","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-_id2ref","(p1)","<p>Converts an object id to a reference to the object. May not be called on an\nobject id passed as a parameter …\n",null,0],["_implied_layout_name","AbstractController::Layouts::ClassMethods","Rails/classes/AbstractController/Layouts/ClassMethods.html#method-i-_implied_layout_name","()","<p>If no layout is supplied, look for a template named the return value of\nthis method.\n<p>Returns\n<p><code>String</code> -  …\n",null,1],["_insert_callbacks","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_insert_callbacks","(callbacks, block)","<p>Take callback names and an optional callback proc, normalize them, then\ncall the block with each callback. …\n",null,1],["_layout_for","ActionView::Context","Rails/classes/ActionView/Context.html#method-i-_layout_for","(name=nil)","<p>Encapsulates the interaction with the view flow so it returns the correct\nbuffer on yield. This is usually …\n",null,1],["_layout_for","ActionView::Helpers::RenderingHelper","Rails/classes/ActionView/Helpers/RenderingHelper.html#method-i-_layout_for","(*args, &block)","<p>Overwrites _layout_for in the context object so it supports the case a\nblock is passed to a partial. …\n",null,1],["_load","Time","Ruby/classes/Time.html#method-c-_load","(p1)","<p>Unmarshal a dumped <code>Time</code> object.\n",null,0],["_load","Time","Rails/classes/Time.html#method-c-_load","(marshaled_time)","",null,1],["_load_without_utc_flag","Time","Rails/classes/Time.html#method-c-_load_without_utc_flag","(marshaled_time)","",null,1],["_load_without_zone","Time","Rails/classes/Time.html#method-c-_load_without_zone","(marshaled_time)","",null,1],["_normalize_callback_options","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-_normalize_callback_options","(options)","<p>If :only or :except are used, convert the options into the primitive form\n(:per_key) used by ActiveSupport::Callbacks …\n",null,1],["_normalize_options","AbstractController::Layouts","Rails/classes/AbstractController/Layouts.html#method-i-_normalize_options","(options)","",null,1],["_normalize_options","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-_normalize_options","(options)","",null,1],["_original_to_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-_original_to_s","(format = DEFAULT_STRING_FORMAT)","",null,1],["_parse_file","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-_parse_file","(file, entity)","",null,1],["_prefixes","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-_prefixes","()","<p>The prefixes used in render “foo” shortcuts.\n",null,1],["_prepare_context","ActionView::Context","Rails/classes/ActionView/Context.html#method-i-_prepare_context","()","<p>Prepares the context by setting the appropriate instance variables. :api:\nplugin\n",null,1],["_routes","AbstractController::UrlFor","Rails/classes/AbstractController/UrlFor.html#method-i-_routes","()","",null,1],["_routes","AbstractController::UrlFor::ClassMethods","Rails/classes/AbstractController/UrlFor/ClassMethods.html#method-i-_routes","()","",null,1],["_routes_context","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-_routes_context","()","",null,1],["_routes_context","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-_routes_context","()","",null,1],["_run_class_setup","ActiveSupport::Testing::Isolation","Rails/classes/ActiveSupport/Testing/Isolation.html#method-i-_run_class_setup","()","",null,1],["_save_fragment","ActionController::Caching::Actions","Rails/classes/ActionController/Caching/Actions.html#method-i-_save_fragment","(name, options)","",null,1],["_set_detail","ActionView::LookupContext::DetailsCache","Rails/classes/ActionView/LookupContext/DetailsCache.html#method-i-_set_detail","(key, value)","",null,1],["_set_wrapper_defaults","ActionController::ParamsWrapper::ClassMethods","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-_set_wrapper_defaults","(options, model=nil)","",null,1],["_to_partial_path","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-c-_to_partial_path","()","",null,1],["_validates_default_keys","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-_validates_default_keys","()","<p>When creating custom validators, it might be useful to be able to specify\nadditional default keys. This …\n",null,1],["_with_routes","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-_with_routes","(routes)","",null,1],["_write_layout_method","AbstractController::Layouts::ClassMethods","Rails/classes/AbstractController/Layouts/ClassMethods.html#method-i-_write_layout_method","()","<p>Creates a _layout method to be called by _default_layout .\n<p>If a layout is not explicitly mentioned then …\n",null,1],["`","Kernel","Ruby/classes/Kernel.html#method-i-60","(p1)","<p>Returns the standard output of running <em>cmd</em> in a subshell. The\nbuilt-in syntax <code>%x{...}</code> uses this method. …\n",null,0],["abort","Kernel","Ruby/classes/Kernel.html#method-i-abort","(p1)","<p>Terminate execution immediately, effectively by calling\n<code>Kernel.exit(false)</code>. If <em>msg</em> is given, it is written …\n",null,0],["abort","Process","Ruby/classes/Process.html#method-c-abort","(p1)","<p>Terminate execution immediately, effectively by calling\n<code>Kernel.exit(false)</code>. If <em>msg</em> is given, it is written …\n",null,0],["abort_on_exception","Thread","Ruby/classes/Thread.html#method-i-abort_on_exception","()","<p>Returns the status of the thread-local “abort on exception&#39;&#39;\ncondition for <em>thr</em>. The default …\n",null,0],["abort_on_exception","Thread","Ruby/classes/Thread.html#method-c-abort_on_exception","()","<p>Returns the status of the global “abort on exception&#39;&#39; condition. \nThe default is <code>false</code>. When …\n",null,0],["abort_on_exception=","Thread","Ruby/classes/Thread.html#method-i-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, causes all threads (including the main\nprogram) to abort if an exception is raised …\n",null,0],["abort_on_exception=","Thread","Ruby/classes/Thread.html#method-c-abort_on_exception-3D","(p1)","<p>When set to <code>true</code>, all threads will abort if an exception is\nraised. Returns the new state.\n\n<pre>Thread.abort_on_exception ...</pre>\n",null,0],["abs","Bignum","Ruby/classes/Bignum.html#method-i-abs","()","<p>Returns the absolute value of <em>big</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 1234567890987654321</span>\n</pre>\n",null,0],["abs","Complex","Ruby/classes/Complex.html#method-i-abs","()","<p>Returns the absolute part of its polar form.\n",null,0],["abs","Fixnum","Ruby/classes/Fixnum.html#method-i-abs","()","<p>Returns the absolute value of <em>fix</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-12345</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 12345</span>\n<span class=\"ruby-value\">12345</span>.<span class=\"ruby-identifier\">abs</span>    <span class=\"ruby-comment\">#=&gt; 12345</span>\n</pre>\n",null,0],["abs","Float","Ruby/classes/Float.html#method-i-abs","()","<p>Returns the absolute value of <em>flt</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,0],["abs","Numeric","Ruby/classes/Numeric.html#method-i-abs","()","<p>Returns the absolute value of <em>num</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">12</span>.<span class=\"ruby-identifier\">abs</span>         <span class=\"ruby-comment\">#=&gt; 12</span>\n(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,0],["abs2","Complex","Ruby/classes/Complex.html#method-i-abs2","()","<p>Returns square of the absolute value.\n",null,0],["abs2","Numeric","Ruby/classes/Numeric.html#method-i-abs2","()","<p>Returns square of self.\n",null,0],["absolute_path","File","Ruby/classes/File.html#method-c-absolute_path","(p1, p2 = v2)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced\nfrom the current working directory …\n",null,0],["abstract!","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-abstract-21","()","<p>Define a controller as abstract. See internal_methods for more details.\n",null,1],["abstract_class?","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-abstract_class-3F","()","<p>Returns whether this class is an abstract class or not.\n",null,1],["abstract_railtie?","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-abstract_railtie-3F","()","",null,1],["accept=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-accept-3D","(mime_types)","",null,1],["accepts","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-accepts","()","<p>Returns the accepted MIME type for the request.\n",null,1],["accepts_nested_attributes_for","ActiveRecord::NestedAttributes::ClassMethods","Rails/classes/ActiveRecord/NestedAttributes/ClassMethods.html#method-i-accepts_nested_attributes_for","(*attr_names)","<p>Defines an attributes writer for the specified association(s). If you are\nusing <code>attr_protected</code> or <code>attr_accessible</code> …\n",null,1],["accessible_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-accessible_attributes","(role = :default)","",null,1],["accessible_attributes","ActiveRecord::Generators::ModelGenerator","Rails/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-accessible_attributes","()","",null,1],["acos","Math","Ruby/classes/Math.html#method-c-acos","(p1)","<p>Computes the arc cosine of <em>x</em>. Returns 0..PI.\n",null,0],["acosh","Math","Ruby/classes/Math.html#method-c-acosh","(p1)","<p>Computes the inverse hyperbolic cosine of <em>x</em>.\n",null,0],["acronym","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-acronym","(word)","<p>Specifies a new acronym. An acronym must be specified as it will appear in\na camelized string.  An underscore …\n",null,1],["action","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-action","(name, klass = ActionDispatch::Request)","<p>Return a rack endpoint for the given action. Memoize the endpoint, so\nmultiple calls into MyController.action …\n",null,1],["action=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-action-3D","(action_name)","",null,1],["action_has_layout?","AbstractController::Layouts","Rails/classes/AbstractController/Layouts.html#method-i-action_has_layout-3F","()","",null,1],["action_methods","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-action_methods","()","",null,1],["action_methods","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-action_methods","()","<p>A list of method names that should be considered actions. This includes all\npublic instance methods on …\n",null,1],["action_methods","AbstractController::UrlFor::ClassMethods","Rails/classes/AbstractController/UrlFor/ClassMethods.html#method-i-action_methods","()","",null,1],["action_methods","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-action_methods","()","<p>Overrides AbstractController::Base#action_methods to remove any methods\nthat are listed as hidden methods. …\n",null,1],["active?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-active-3F","()","<p>Checks whether the connection to the database is still active. This\nincludes checking whether the database …\n",null,1],["active?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-active-3F","()","<p>CONNECTION MANAGEMENT ====================================\n",null,1],["active?","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-active-3F","()","<p>CONNECTION MANAGEMENT ====================================\n",null,1],["active?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-active-3F","()","<p>Is this connection alive and ready for queries?\n",null,1],["active_authorizer","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-active_authorizer","()","",null,1],["active_authorizers","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-active_authorizers","()","",null,1],["active_connection?","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-active_connection-3F","()","<p>Is there an open connection that is being used for the current thread?\n",null,1],["active_connections?","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-active_connections-3F","()","<p>Returns true if there are any active connections among the connection pools\nthat the ConnectionHandler …\n",null,1],["acts_like?","Object","Rails/classes/Object.html#method-i-acts_like-3F","(duck)","<p>A duck-type assistant method. For example, Active Support extends Date to\ndefine an acts_like_date? method, …\n",null,1],["acts_like_date?","Date","Rails/classes/Date.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,1],["acts_like_date?","DateTime","Rails/classes/DateTime.html#method-i-acts_like_date-3F","()","<p>Duck-types as a Date-like class. See Object#acts_like?.\n",null,1],["acts_like_string?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-acts_like_string-3F","()","<p>Enable more predictable duck-typing on String-like classes. See\nObject#acts_like?.\n",null,1],["acts_like_string?","String","Rails/classes/String.html#method-i-acts_like_string-3F","()","<p>Enable more predictable duck-typing on String-like classes. See\n<code>Object#acts_like?</code>.\n",null,1],["acts_like_time?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-acts_like_time-3F","()","<p>So that <code>self</code> <code>acts_like?(:time)</code>.\n",null,1],["acts_like_time?","DateTime","Rails/classes/DateTime.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,1],["acts_like_time?","Time","Rails/classes/Time.html#method-i-acts_like_time-3F","()","<p>Duck-types as a Time-like class. See Object#acts_like?.\n",null,1],["adapter_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-adapter_name","()","<p>Returns the human-readable name of the adapter. Use mixed case - one can\nalways use downcase if needed. …\n",null,1],["adapter_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-adapter_name","()","<p>Returns &#39;PostgreSQL&#39; as adapter name for identification purposes.\n",null,1],["add","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-add","(p1)","<p>Adds the given <em>thread</em> to this group, removing it from any other\ngroup to which it may have previously …\n",null,0],["add","ActionController::Renderers","Rails/classes/ActionController/Renderers.html#method-c-add","(key, &block)","<p>Adds a new renderer to call within controller actions. A renderer is\ninvoked by passing its name as an …\n",null,1],["add","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-add","(attribute, message = nil, options = {})","<p>Adds <code>message</code> to the error messages on <code>attribute</code>.\nMore than one error can be added to the same <code>attribute</code> …\n",null,1],["add","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-add","(record)","",null,1],["add","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-add","(severity, message = nil, progname = nil, &block)","",null,1],["add","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-add","(severity, message = nil, progname = nil, &block)","",null,1],["add","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-add","(path, options={})","",null,1],["add_column","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column","(table_name, column_name, type, options = {})","",null,1],["add_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-add_column","(table_name, column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,1],["add_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_column","(table_name, column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,1],["add_column_position!","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column_position-21","(sql, options)","",null,1],["add_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_column_sql","(table_name, column_name, type, options = {})","",null,1],["add_delivery_method","ActionMailer::DeliveryMethods::ClassMethods","Rails/classes/ActionMailer/DeliveryMethods/ClassMethods.html#method-i-add_delivery_method","(symbol, klass, default_options={})","<p>Adds a new delivery method through the given class using the given symbol\nas alias and the default options …\n",null,1],["add_error","ActiveSupport::Testing::ProxyTestResult","Rails/classes/ActiveSupport/Testing/ProxyTestResult.html#method-i-add_error","(e)","",null,1],["add_expr_escaped","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr_escaped","(src, code)","",null,1],["add_expr_literal","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_expr_literal","(src, code)","",null,1],["add_filter","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_filter","(&block)","<p>Adds a filter from the block provided. Each line in the backtrace will be\nmapped against this filter. …\n",null,1],["add_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index","(table_name, column_name, options = {})","<p>Adds a new index to the table. <code>column_name</code> can be a single\nSymbol, or an Array of Symbols.\n<p>The index will …\n",null,1],["add_index_length","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_index_length","(option_strings, column_names, options = {})","",null,1],["add_index_options","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index_options","(table_name, column_name, options = {})","",null,1],["add_index_sort_order","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_index_sort_order","(option_strings, column_names, options = {})","",null,1],["add_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_index_sql","(table_name, column_name, options = {})","",null,1],["add_observer","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-add_observer","(observer)","<p>Add a new observer to the pool. The new observer needs to respond to\n&#39;update&#39;, otherwise it raises …\n",null,1],["add_observer!","ActiveRecord::Observer","Rails/classes/ActiveRecord/Observer.html#method-i-add_observer-21","(klass)","",null,1],["add_on_blank","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-add_on_blank","(attributes, options = {})","<p>Will add an error message to each of the attributes in\n<code>attributes</code> that is blank (using Object#blank? …\n",null,1],["add_on_empty","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-add_on_empty","(attributes, options = {})","<p>Will add an error message to each of the attributes in\n<code>attributes</code> that is empty.\n",null,1],["add_postamble","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_postamble","(src)","",null,1],["add_preamble","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_preamble","(src)","",null,1],["add_renderer","ActionController","Rails/classes/ActionController.html#method-c-add_renderer","(key, &block)","<p>See <code>Renderers.add</code>\n",null,1],["add_resource_route","Rails::Generators::ResourceRouteGenerator","Rails/classes/Rails/Generators/ResourceRouteGenerator.html#method-i-add_resource_route","()","<p>Properly nests namespaces passed into a generator\n\n<pre>$ rails generate resource admin/users/products</pre>\n<p>should …\n",null,1],["add_routes","Rails::Generators::ControllerGenerator","Rails/classes/Rails/Generators/ControllerGenerator.html#method-i-add_routes","()","",null,1],["add_shared_options_for","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-c-add_shared_options_for","(name)","",null,1],["add_shebang_option!","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-add_shebang_option-21","()","<p>Small macro to add ruby as an option to the generator with proper default\nvalue plus an instance helper …\n",null,1],["add_silencer","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-add_silencer","(&block)","<p>Adds a silencer from the block provided. If the silencer returns true for a\ngiven line, it will be excluded …\n",null,1],["add_source","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-add_source","(source, options={})","<p>Add the given source to Gemfile\n<p>Example\n\n<pre>add_source &quot;http://gems.github.com/&quot;</pre>\n",null,1],["add_text","ActionView::Template::Handlers::Erubis","Rails/classes/ActionView/Template/Handlers/Erubis.html#method-i-add_text","(src, text)","",null,1],["add_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-add_timestamps","(table_name)","<p>Adds timestamps (created_at and updated_at) columns to the named table.\n<p>Examples\n\n<pre>add_timestamps(:suppliers)</pre>\n",null,1],["add_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-add_timestamps_sql","(table_name)","",null,1],["add_to_transaction","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-add_to_transaction","()","<p>Add the record to the current transaction so that the :after_rollback and\n:after_commit callbacks can …\n",null,1],["add_trace_func","Thread","Ruby/classes/Thread.html#method-i-add_trace_func","(p1)","<p>Adds <em>proc</em> as a handler for tracing. See\n<code>Thread#set_trace_func</code> and <code>set_trace_func</code>.\n",null,0],["add_transaction_record","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-add_transaction_record","(record)","<p>Register a record with the current transaction so that its after_commit and\nafter_rollback callbacks …\n",null,1],["add_whiner","NilClass","Rails/classes/NilClass.html#method-c-add_whiner","(klass)","",null,1],["added?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-added-3F","(attribute, message = nil, options = {})","<p>Returns true if an error on the attribute with the given message is\npresent, false otherwise. <code>message</code> …\n",null,1],["advance","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-advance","(options)","",null,1],["advance","Date","Rails/classes/Date.html#method-i-advance","(options)","<p>Provides precise Date calculations for years, months, and days. The\n<code>options</code> parameter takes a hash with …\n",null,1],["advance","DateTime","Rails/classes/DateTime.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days.\nThe <code>options</code> parameter takes …\n",null,1],["advance","Time","Rails/classes/Time.html#method-i-advance","(options)","<p>Uses Date to provide precise Time calculations for years, months, and days.\nThe <code>options</code> parameter takes …\n",null,1],["advise","IO","Ruby/classes/IO.html#method-i-advise","(p1, p2 = v2, p3 = v3)","\n<pre>Announce an intention to access data from the current file in a\nspecific pattern. On platforms that do ...</pre>\n",null,0],["after","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-c-after","(*args, &block)","",null,1],["after","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-after","()","",null,1],["after_commit","ActiveRecord::Transactions::ClassMethods","Rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_commit","(*args, &block)","<p>This callback is called after a record has been created, updated, or\ndestroyed.\n<p>You can specify that the …\n",null,1],["after_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-after_filter","","<p>Append an after filter. See _insert_callbacks for parameter details.\n",null,1],["after_initialize","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-after_initialize","(&block)","<p>Last configurable block to run. Called after frameworks initialize.\n",null,1],["after_rollback","ActiveRecord::Transactions::ClassMethods","Rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-after_rollback","(*args, &block)","<p>This callback is called after a create, update, or destroy are rolled back.\n<p>Please check the documentation …\n",null,1],["after_validation","ActiveModel::Validations::Callbacks::ClassMethods","Rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-after_validation","(*args, &block)","",null,1],["ago","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-ago","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the past as this Duration\nrepresents.\n",null,1],["ago","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-ago","(other)","",null,1],["ago","Date","Rails/classes/Date.html#method-i-ago","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,1],["ago","DateTime","Rails/classes/DateTime.html#method-i-ago","(seconds)","<p>Returns a new DateTime representing the time a number of seconds ago Do not\nuse this method in combination …\n",null,1],["ago","Numeric","Rails/classes/Numeric.html#method-i-ago","(time = ::Time.current)","<p>Reads best without arguments:  10.minutes.ago\n",null,1],["ago","Time","Rails/classes/Time.html#method-i-ago","(seconds)","<p>Returns a new Time representing the time a number of seconds ago, this is\nbasically a wrapper around …\n",null,1],["alert","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert","()","<p>Convenience accessor for flash\n",null,1],["alert=","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-alert-3D","(message)","<p>Convenience accessor for flash=\n",null,1],["alias_attribute","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-alias_attribute","(new_name, old_name)","",null,1],["alias_attribute","Module","Rails/classes/Module.html#method-i-alias_attribute","(new_name, old_name)","<p>Allows you to make aliases for attributes, which includes getter, setter,\nand query methods.\n<p>Example: …\n",null,1],["alias_method_chain","Module","Rails/classes/Module.html#method-i-alias_method_chain","(target, feature)","<p>Encapsulates the common pattern of:\n\n<pre>alias_method :foo_without_feature, :foo\nalias_method :foo, :foo_with_feature</pre>\n",null,1],["aliased_path_for","Sprockets::StaticCompiler","Rails/classes/Sprockets/StaticCompiler.html#method-i-aliased_path_for","(logical_path)","",null,1],["aliases","Encoding","Ruby/classes/Encoding.html#method-c-aliases","()","<p>Returns the hash of available encoding alias and original encoding name.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span>.<span class=\"ruby-identifier\">aliases</span>\n<span class=\"ruby-comment\">#=&gt; {&quot;BINARY&quot;=&gt;&quot;ASCII-8BIT&quot;, ...</span>\n</pre>\n",null,0],["alive?","Fiber","Ruby/classes/Fiber.html#method-i-alive-3F","()","<p>Returns true if the fiber can still be resumed (or transferred to). After\nfinishing execution of the …\n",null,0],["alive?","Thread","Ruby/classes/Thread.html#method-i-alive-3F","()","<p>Returns <code>true</code> if <em>thr</em> is running or sleeping.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">thr</span> = <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">new</span> { }\n<span class=\"ruby-identifier\">thr</span>.<span class=\"ruby-identifier\">join</span>                <span class=\"ruby-comment\">#=&gt; #&lt;Thread:0x401b3fb0 ...</span>\n</pre>\n",null,0],["all","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-i-all","(*args, &block)","",null,1],["all","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-all","(*args)","<p>A convenience wrapper for <code>find(:all, *args)</code>. You can pass in\nall the same arguments to this method as …\n",null,1],["all","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-all","(*args)","<p>This is an alias for find(:all).  You can pass in all the same arguments to\nthis method as you can to …\n",null,1],["all","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-all","()","<p>Return an array of all TimeZone objects. There are multiple TimeZone\nobjects per time zone, in many cases, …\n",null,1],["all","Rails::Application::Railties","Rails/classes/Rails/Application/Railties.html#method-i-all","(&block)","",null,1],["all","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-i-all","(&block)","",null,1],["all","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-all","(klass)","<p>GET index\n",null,1],["all","Rails::Plugin","Rails/classes/Rails/Plugin.html#method-c-all","(list, paths)","",null,1],["all?","Enumerable","Ruby/classes/Enumerable.html#method-i-all-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block never …\n",null,0],["all_day","Time","Rails/classes/Time.html#method-i-all_day","()","<p>Returns a Range representing the whole day of the current time.\n",null,1],["all_helpers_from_path","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-all_helpers_from_path","(path)","",null,1],["all_month","Time","Rails/classes/Time.html#method-i-all_month","()","<p>Returns a Range representing the whole month of the current time.\n",null,1],["all_paths","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-all_paths","()","",null,1],["all_quarter","Time","Rails/classes/Time.html#method-i-all_quarter","()","<p>Returns a Range representing the whole quarter of the current time.\n",null,1],["all_symbols","Symbol","Ruby/classes/Symbol.html#method-c-all_symbols","()","<p>Returns an array of all the symbols currently in Ruby&#39;s symbol table.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Symbol</span>.<span class=\"ruby-identifier\">all_symbols</span>.<span class=\"ruby-identifier\">size</span>    <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["all_week","Time","Rails/classes/Time.html#method-i-all_week","(start_day = :monday)","<p>Returns a Range representing the whole week of the current time. Week\nstarts on start_day (default is …\n",null,1],["all_year","Time","Rails/classes/Time.html#method-i-all_year","()","<p>Returns a Range representing the whole year of the current time.\n",null,1],["allocate","Class","Ruby/classes/Class.html#method-i-allocate","()","<p>Allocates space for a new object of <em>class</em>&#39;s class and does not\ncall initialize on the new instance. …\n",null,0],["ancestors","Module","Ruby/classes/Module.html#method-i-ancestors","()","<p>Returns a list of modules included in <em>mod</em> (including <em>mod</em>\nitself).\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Mod</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">Math</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["angle","Complex","Ruby/classes/Complex.html#method-i-angle","()","<p>Returns the angle part of its polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-constant\">Math</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PI</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">arg</span> <span class=\"ruby-comment\">#=&gt; 1.5707963267948966</span>\n</pre>\n",null,0],["angle","Float","Ruby/classes/Float.html#method-i-angle","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["angle","Numeric","Ruby/classes/Numeric.html#method-i-angle","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["announce","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-announce","(message)","",null,1],["anonymous?","Module","Rails/classes/Module.html#method-i-anonymous-3F","()","<p>A module may or may not have a name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>; <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">M</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &quot;M&quot;</span>\n\n<span class=\"ruby-identifier\">m</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">new</span>\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &quot;&quot;</span>\n</pre>\n<p>A module …\n",null,1],["any","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-i-any","(*args, &block)","",null,1],["any?","Enumerable","Ruby/classes/Enumerable.html#method-i-any-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block ever returns …\n",null,0],["any?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-any-3F","()","",null,1],["api_behavior","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-api_behavior","(error)","<p>This is the common behavior for formats associated with APIs, such as :xml\nand :json.\n",null,1],["api_location","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-api_location","()","",null,1],["app","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-app","()","",null,1],["app","ActionDispatch::IntegrationTest","Rails/classes/ActionDispatch/IntegrationTest.html#method-i-app","()","",null,1],["app","ActionDispatch::IntegrationTest","Rails/classes/ActionDispatch/IntegrationTest.html#method-c-app","()","",null,1],["app","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-app","()","",null,1],["app","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-app","(create=false)","<p>reference the global “app” instance, created on demand. To recreate the\ninstance, pass a non-false …\n",null,1],["app","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-app","()","",null,1],["app","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-app","()","",null,1],["app","Rails::Server","Rails/classes/Rails/Server.html#method-i-app","()","",null,1],["app=","ActionDispatch::IntegrationTest","Rails/classes/ActionDispatch/IntegrationTest.html#method-c-app-3D","(app)","",null,1],["app_const","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-app_const","()","",null,1],["app_const_base","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-app_const_base","()","",null,1],["app_generators","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-app_generators","()","<p>This allows you to modify application&#39;s generators from Railties.\n<p>Values set on app_generators will …\n",null,1],["app_middleware","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-app_middleware","()","<p>This allows you to modify the application&#39;s middlewares from Engines.\n<p>All operations you run on the …\n",null,1],["app_name","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-app_name","()","",null,1],["app_secret","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-app_secret","()","",null,1],["app_templates_dir","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-app_templates_dir","()","",null,1],["append_after_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_after_filter","","<p>Append an after filter. See _insert_callbacks for parameter details.\n",null,1],["append_around_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_around_filter","","<p>Append an around filter. See _insert_callbacks for parameter details.\n",null,1],["append_before_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-append_before_filter","","<p>Append a before filter. See _insert_callbacks for parameter details.\n",null,1],["append_features","ActiveSupport::Concern","Rails/classes/ActiveSupport/Concern.html#method-i-append_features","(base)","",null,1],["append_view_path","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-append_view_path","(path)","",null,1],["append_view_path","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-append_view_path","(path)","<p>Append a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, …\n",null,1],["application","Rails","Rails/classes/Rails.html#method-c-application","()","",null,1],["application","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-application","(data=nil, options={}, &block)","",null,1],["application=","Rails","Rails/classes/Rails.html#method-c-application-3D","(application)","",null,1],["application_definition","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-application_definition","()","",null,1],["application_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-application_name","()","<p>Tries to retrieve the application name or simple return application.\n",null,1],["application_trace","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-application_trace","()","",null,1],["apply_finder_options","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-apply_finder_options","(options)","",null,1],["apply_join_dependency","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-apply_join_dependency","(relation, join_dependency)","",null,1],["apply_rails_template","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-apply_rails_template","()","",null,1],["arel","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-arel","()","",null,1],["arel_engine","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-arel_engine","()","",null,1],["arel_table","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-arel_table","()","",null,1],["arg","Complex","Ruby/classes/Complex.html#method-i-arg","()","<p>Returns the angle part of its polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-constant\">Math</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PI</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">arg</span> <span class=\"ruby-comment\">#=&gt; 1.5707963267948966</span>\n</pre>\n",null,0],["arg","Float","Ruby/classes/Float.html#method-i-arg","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["arg","Numeric","Ruby/classes/Numeric.html#method-i-arg","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["args","NoMethodError","Ruby/classes/NoMethodError.html#method-i-args","()","<p>Return the arguments passed in as the third parameter to the constructor.\n",null,0],["arguments","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-c-arguments","(array)","<p>Sets default arguments on generator invocation. This can be overwritten\nwhen invoking it.\n\n<pre>arguments %w(app_name ...</pre>\n",null,1],["argv","ARGF","Ruby/classes/ARGF.html#method-i-argv","()","<p>Returns the <code>ARGV</code> array, which contains the arguments passed to\nyour script, one per element.\n<p>For example: …\n",null,0],["arity","Method","Ruby/classes/Method.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method.\nReturns a nonnegative integer …\n",null,0],["arity","Proc","Ruby/classes/Proc.html#method-i-arity","()","<p>Returns the number of arguments that would not be ignored. If the block is\ndeclared to take no arguments, …\n",null,0],["arity","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-arity","()","<p>Returns an indication of the number of arguments accepted by a method.\nReturns a nonnegative integer …\n",null,0],["around_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-around_filter","","<p>Append an around filter. See _insert_callbacks for parameter details.\n",null,1],["as_json","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-as_json","(options=nil)","<p>Returns an ActiveSupport::OrderedHash that can be used as the JSON\nrepresentation for this object.\n",null,1],["as_json","ActiveModel::Serializers::JSON","Rails/classes/ActiveModel/Serializers/JSON.html#method-i-as_json","(options = nil)","<p>Returns a hash representing the model. Some configuration can be passed\nthrough <code>options</code>.\n<p>The option <code>include_root_in_json</code> …\n",null,1],["as_json","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-as_json","(value, use_options = true)","<p>like encode, but only calls as_json, without encoding to string\n",null,1],["as_json","ActiveSupport::JSON::Variable","Rails/classes/ActiveSupport/JSON/Variable.html#method-i-as_json","(options = nil)","",null,1],["as_json","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-as_json","(options = nil)","<p>Coerces time to a string for JSON encoding. The default format is ISO 8601.\nYou can get %Y/%m/%d %H:%M:% …\n",null,1],["as_json","BigDecimal","Rails/classes/BigDecimal.html#method-i-as_json","(options = nil)","<p>A BigDecimal would be naturally represented as a JSON number. Most\nlibraries, however, parse non-integer …\n",null,1],["as_json","FalseClass","Rails/classes/FalseClass.html#method-i-as_json","(options = nil)","",null,1],["as_json","NilClass","Rails/classes/NilClass.html#method-i-as_json","(options = nil)","",null,1],["as_json","Numeric","Rails/classes/Numeric.html#method-i-as_json","(options = nil)","",null,1],["as_json","Regexp","Rails/classes/Regexp.html#method-i-as_json","(options = nil)","",null,1],["as_json","String","Rails/classes/String.html#method-i-as_json","(options = nil)","",null,1],["as_json","Symbol","Rails/classes/Symbol.html#method-i-as_json","(options = nil)","",null,1],["as_json","TrueClass","Rails/classes/TrueClass.html#method-i-as_json","(options = nil)","",null,1],["ascii_compatible?","Encoding","Ruby/classes/Encoding.html#method-i-ascii_compatible-3F","()","<p>Returns whether ASCII-compatible or not.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">ascii_compatible?</span>     <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_16BE</span>.<span class=\"ruby-identifier\">ascii_compatible?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["ascii_only?","String","Ruby/classes/String.html#method-i-ascii_only-3F","()","<p>Returns true for a string which has only ASCII characters.\n\n<pre>&quot;abc&quot;.force_encoding(&quot;UTF-8&quot;).ascii_only?  ...</pre>\n",null,0],["asciicompat_encoding","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-c-asciicompat_encoding","(p1)","<p>Returns the corresponding ASCII compatible encoding.\n<p>Returns nil if the argument is an ASCII compatible …\n",null,0],["asctime","Time","Ruby/classes/Time.html#method-i-asctime","()","<p>Returns a canonical string representation of <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>.<span class=\"ruby-identifier\">asctime</span>   <span class=\"ruby-comment\">#=&gt; &quot;Wed Apr  9 08:56:03 2003&quot;</span>\n</pre>\n",null,0],["asin","Math","Ruby/classes/Math.html#method-c-asin","(p1)","<p>Computes the arc sine of <em>x</em>. Returns -{PI/2} .. {PI/2}.\n",null,0],["asinh","Math","Ruby/classes/Math.html#method-c-asinh","(p1)","<p>Computes the inverse hyperbolic sine of <em>x</em>.\n",null,0],["assert_blank","ActiveSupport::Testing::Assertions","Rails/classes/ActiveSupport/Testing/Assertions.html#method-i-assert_blank","(object, message=nil)","<p>Test if an expression is blank. Passes if object.blank? is true.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">assert_blank</span> [] <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,1],["assert_class_method","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_class_method","(method, content, &block)","<p>Asserts the given class method exists in the given content. This method\ndoes not detect class methods …\n",null,1],["assert_difference","ActiveSupport::Testing::Assertions","Rails/classes/ActiveSupport/Testing/Assertions.html#method-i-assert_difference","(expression, difference = 1, message = nil, &block)","<p>Test numeric difference between the return value of an expression as a\nresult of what is evaluated in …\n",null,1],["assert_directory","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_directory","(relative, *contents)","",null,1],["assert_dom_equal","ActionDispatch::Assertions::DomAssertions","Rails/classes/ActionDispatch/Assertions/DomAssertions.html#method-i-assert_dom_equal","(expected, actual, message = \"\")","<p>Test two HTML strings for equivalency (e.g., identical up to reordering of\nattributes)\n<p>Examples\n\n<pre># assert ...</pre>\n",null,1],["assert_dom_not_equal","ActionDispatch::Assertions::DomAssertions","Rails/classes/ActionDispatch/Assertions/DomAssertions.html#method-i-assert_dom_not_equal","(expected, actual, message = \"\")","<p>The negated form of <code>assert_dom_equivalent</code>.\n<p>Examples\n\n<pre># assert that the referenced method does not generate ...</pre>\n",null,1],["assert_emails","ActionMailer::TestHelper","Rails/classes/ActionMailer/TestHelper.html#method-i-assert_emails","(number)","<p>Asserts that the number of emails sent matches the given number.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">test_emails</span>\n  <span class=\"ruby-identifier\">assert_emails</span> <span class=\"ruby-value\">0</span>\n  <span class=\"ruby-constant\">ContactMailer</span>.<span class=\"ruby-identifier\">deliver_contact</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["assert_field_default_value","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_field_default_value","(attribute_type, value)","<p>Asserts the given attribute type gets a proper default value:\n\n<pre>assert_field_default_value :string, &quot;MyString&quot;</pre>\n",null,1],["assert_field_type","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_field_type","(attribute_type, field_type)","<p>Asserts the given attribute type gets translated to a field type properly:\n\n<pre>assert_field_type :date, :date_select</pre>\n",null,1],["assert_file","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_file","(relative, *contents)","<p>Asserts a given file exists. You need to supply an absolute path or a path\nrelative to the configured …\n",null,1],["assert_generates","ActionDispatch::Assertions::RoutingAssertions","Rails/classes/ActionDispatch/Assertions/RoutingAssertions.html#method-i-assert_generates","(expected_path, options, defaults={}, extras = {}, message=nil)","<p>Asserts that the provided options can be used to generate the provided\npath. This is the inverse of  …\n",null,1],["assert_index","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-assert_index","(index, where)","",null,1],["assert_instance_method","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_instance_method","(method, content)","<p>Asserts the given method exists in the given content. When a block is\ngiven, it yields the content of …\n",null,1],["assert_method","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_method","(method, content)","",null,1],["assert_migration","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_migration","(relative, *contents, &block)","<p>Asserts a given migration exists. You need to supply an absolute path or a\npath relative to the configured …\n",null,1],["assert_no_difference","ActiveSupport::Testing::Assertions","Rails/classes/ActiveSupport/Testing/Assertions.html#method-i-assert_no_difference","(expression, message = nil, &block)","<p>Assertion that the numeric result of evaluating an expression is not\nchanged before and after invoking …\n",null,1],["assert_no_directory","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_no_directory","(relative)","",null,1],["assert_no_emails","ActionMailer::TestHelper","Rails/classes/ActionMailer/TestHelper.html#method-i-assert_no_emails","(&block)","<p>Assert that no emails have been sent.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">test_emails</span>\n  <span class=\"ruby-identifier\">assert_no_emails</span>\n  <span class=\"ruby-constant\">ContactMailer</span>.<span class=\"ruby-identifier\">deliver_contact</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["assert_no_file","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_no_file","(relative)","<p>Asserts a given file does not exist. You need to supply an absolute path or\na path relative to the configured …\n",null,1],["assert_no_migration","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-assert_no_migration","(relative)","<p>Asserts a given migration does not exist. You need to supply an absolute\npath or a path relative to the …\n",null,1],["assert_no_tag","ActionDispatch::Assertions::TagAssertions","Rails/classes/ActionDispatch/Assertions/TagAssertions.html#method-i-assert_no_tag","(*opts)","<p>Identical to <code>assert_tag</code>, but asserts that a matching tag does\n<em>not</em> exist. (See <code>assert_tag</code> for a full discussion …\n",null,1],["assert_present","ActiveSupport::Testing::Assertions","Rails/classes/ActiveSupport/Testing/Assertions.html#method-i-assert_present","(object, message=nil)","<p>Test if an expression is not blank. Passes if object.present? is true.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">assert_present</span> {:<span class=\"ruby-identifier\">data</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;x&#39;</span> } <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["assert_recognizes","ActionDispatch::Assertions::RoutingAssertions","Rails/classes/ActionDispatch/Assertions/RoutingAssertions.html#method-i-assert_recognizes","(expected_options, path, extras={}, message=nil)","<p>Asserts that the routing of the given <code>path</code> was handled\ncorrectly and that the parsed options (given in …\n",null,1],["assert_redirected_to","ActionDispatch::Assertions::ResponseAssertions","Rails/classes/ActionDispatch/Assertions/ResponseAssertions.html#method-i-assert_redirected_to","(options = {}, message=nil)","<p>Assert that the redirection options passed in match those of the redirect\ncalled in the latest action. …\n",null,1],["assert_response","ActionDispatch::Assertions::ResponseAssertions","Rails/classes/ActionDispatch/Assertions/ResponseAssertions.html#method-i-assert_response","(type, message = nil)","<p>Asserts that the response is one of the following types:\n<p><code>:success</code>   - Status code was 200\n<p><code>:redirect</code>  - …\n",null,1],["assert_routing","ActionDispatch::Assertions::RoutingAssertions","Rails/classes/ActionDispatch/Assertions/RoutingAssertions.html#method-i-assert_routing","(path, options, defaults={}, extras={}, message=nil)","<p>Asserts that path and options match both ways; in other words, it verifies\nthat <code>path</code> generates <code>options</code> …\n",null,1],["assert_select","ActionDispatch::Assertions::SelectorAssertions","Rails/classes/ActionDispatch/Assertions/SelectorAssertions.html#method-i-assert_select","(*args, &block)","<p>An assertion that selects elements and makes one or more equality tests.\n<p>If the first argument is an element, …\n",null,1],["assert_select_email","ActionDispatch::Assertions::SelectorAssertions","Rails/classes/ActionDispatch/Assertions/SelectorAssertions.html#method-i-assert_select_email","(&block)","<p>Extracts the body of an email and runs nested assertions on it.\n<p>You must enable deliveries for this assertion …\n",null,1],["assert_select_encoded","ActionDispatch::Assertions::SelectorAssertions","Rails/classes/ActionDispatch/Assertions/SelectorAssertions.html#method-i-assert_select_encoded","(element = nil, &block)","<p>Extracts the content of an element, treats it as encoded HTML and runs\nnested assertion on it.\n<p>You typically …\n",null,1],["assert_tag","ActionDispatch::Assertions::TagAssertions","Rails/classes/ActionDispatch/Assertions/TagAssertions.html#method-i-assert_tag","(*opts)","<p>Asserts that there is a tag/node/element in the body of the response that\nmeets all of the given conditions. …\n",null,1],["assert_template","ActionController::TemplateAssertions","Rails/classes/ActionController/TemplateAssertions.html#method-i-assert_template","(options = {}, message = nil)","<p>Asserts that the request was rendered with the appropriate template file or\npartials.\n<p>Examples\n\n<pre># assert ...</pre>\n",null,1],["assert_valid_keys","Hash","Rails/classes/Hash.html#method-i-assert_valid_keys","(*valid_keys)","<p>Validate all keys in a hash match *valid keys, raising ArgumentError on a\nmismatch. Note that keys are …\n",null,1],["asset_name","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-asset_name","()","",null,1],["asset_name","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-asset_name","()","",null,1],["asset_name","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-asset_name","()","",null,1],["asset_name","Rails::Generators::AssetsGenerator","Rails/classes/Rails/Generators/AssetsGenerator.html#method-i-asset_name","()","",null,1],["asset_path","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-asset_path","(source, options = {})","",null,1],["asset_paths","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-asset_paths","()","",null,1],["asset_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-asset_tag","(source, options)","",null,1],["asset_tag","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-asset_tag","(source, options)","",null,1],["asset_tag","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-asset_tag","(source, options)","",null,1],["assets_gemfile_entry","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-assets_gemfile_entry","()","",null,1],["assign_attributes","ActiveRecord::AttributeAssignment","Rails/classes/ActiveRecord/AttributeAssignment.html#method-i-assign_attributes","(new_attributes, options = {})","<p>Allows you to set all the attributes for a particular mass-assignment\nsecurity role by passing in a hash …\n",null,1],["assign_shortcuts","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-assign_shortcuts","(*)","",null,1],["assigns","ActionDispatch::TestProcess","Rails/classes/ActionDispatch/TestProcess.html#method-i-assigns","(key = nil)","",null,1],["assoc","Array","Ruby/classes/Array.html#method-i-assoc","(p1)","<p>Searches through an array whose elements are also arrays comparing\n<em>obj</em> with the first element of each …\n",null,0],["assoc","ENV","Ruby/classes/ENV.html#method-c-assoc","(p1)","<p>Returns an Array of the name and value of the environment variable with\n<code>name</code> or <code>nil</code> if the name cannot …\n",null,0],["assoc","Hash","Ruby/classes/Hash.html#method-i-assoc","(p1)","<p>Searches through the hash comparing <em>obj</em> with the key using\n<code>==</code>. Returns the key-value pair (two elements …\n",null,0],["assume_migrated_upto_version","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-assume_migrated_upto_version","(version, migrations_paths = ActiveRecord::Migrator.migrations_paths)","",null,1],["at","Array","Ruby/classes/Array.html#method-i-at","(p1)","<p>Returns the element at <em>index</em>. A negative index counts from the end\nof <code>self</code>.  Returns <code>nil</code> if the index …\n",null,0],["at","Time","Ruby/classes/Time.html#method-c-at","(p1, p2 = v2)","<p>Creates a new time object with the value given by <em>time</em>, the given\nnumber of <em>seconds_with_frac</em>, or <em>seconds</em> …\n",null,0],["at","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-at","(secs)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from number of seconds …\n",null,1],["at","String","Rails/classes/String.html#method-i-at","(position)","<p>Returns the character at the <code>position</code> treating the string as\nan array (where 0 is the first character). …\n",null,1],["at_beginning_of_day","Date","Rails/classes/Date.html#method-i-at_beginning_of_day","()","",null,1],["at_beginning_of_day","DateTime","Rails/classes/DateTime.html#method-i-at_beginning_of_day","()","",null,1],["at_beginning_of_day","Time","Rails/classes/Time.html#method-i-at_beginning_of_day","()","",null,1],["at_beginning_of_hour","DateTime","Rails/classes/DateTime.html#method-i-at_beginning_of_hour","()","",null,1],["at_beginning_of_hour","Time","Rails/classes/Time.html#method-i-at_beginning_of_hour","()","",null,1],["at_beginning_of_month","Date","Rails/classes/Date.html#method-i-at_beginning_of_month","()","",null,1],["at_beginning_of_month","Time","Rails/classes/Time.html#method-i-at_beginning_of_month","()","",null,1],["at_beginning_of_quarter","Date","Rails/classes/Date.html#method-i-at_beginning_of_quarter","()","",null,1],["at_beginning_of_quarter","Time","Rails/classes/Time.html#method-i-at_beginning_of_quarter","()","",null,1],["at_beginning_of_week","Date","Rails/classes/Date.html#method-i-at_beginning_of_week","(start_day = :monday)","",null,1],["at_beginning_of_week","Time","Rails/classes/Time.html#method-i-at_beginning_of_week","(start_day = :monday)","",null,1],["at_beginning_of_year","Date","Rails/classes/Date.html#method-i-at_beginning_of_year","()","",null,1],["at_beginning_of_year","Time","Rails/classes/Time.html#method-i-at_beginning_of_year","()","",null,1],["at_end_of_month","Date","Rails/classes/Date.html#method-i-at_end_of_month","()","",null,1],["at_end_of_month","Time","Rails/classes/Time.html#method-i-at_end_of_month","()","",null,1],["at_end_of_quarter","Date","Rails/classes/Date.html#method-i-at_end_of_quarter","()","",null,1],["at_end_of_quarter","Time","Rails/classes/Time.html#method-i-at_end_of_quarter","()","",null,1],["at_end_of_week","Date","Rails/classes/Date.html#method-i-at_end_of_week","(start_day = :monday)","",null,1],["at_end_of_week","Time","Rails/classes/Time.html#method-i-at_end_of_week","(start_day = :monday)","",null,1],["at_end_of_year","Date","Rails/classes/Date.html#method-i-at_end_of_year","()","",null,1],["at_end_of_year","Time","Rails/classes/Time.html#method-i-at_end_of_year","()","",null,1],["at_exit","Kernel","Ruby/classes/Kernel.html#method-i-at_exit","()","<p>Converts <em>block</em> to a <code>Proc</code> object (and therefore binds\nit at the point of call) and registers it for execution …\n",null,0],["at_midnight","Date","Rails/classes/Date.html#method-i-at_midnight","()","",null,1],["at_midnight","DateTime","Rails/classes/DateTime.html#method-i-at_midnight","()","",null,1],["at_midnight","Time","Rails/classes/Time.html#method-i-at_midnight","()","",null,1],["atan","Math","Ruby/classes/Math.html#method-c-atan","(p1)","<p>Computes the arc tangent of <em>x</em>. Returns -{PI/2} .. {PI/2}.\n",null,0],["atan2","Math","Ruby/classes/Math.html#method-c-atan2","(p1, p2)","<p>Computes the arc tangent given <em>y</em> and <em>x</em>. Returns -PI..PI.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">atan2</span>(<span class=\"ruby-value\">-0.0</span>, <span class=\"ruby-value\">-1.0</span>) <span class=\"ruby-comment\">#=&gt; -3.141592653589793 ...</span>\n</pre>\n",null,0],["atanh","Math","Ruby/classes/Math.html#method-c-atanh","(p1)","<p>Computes the inverse hyperbolic tangent of <em>x</em>.\n",null,0],["atime","File","Ruby/classes/File.html#method-c-atime","(p1)","<p>Returns the last access time for the named file as a Time object).\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">atime</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)   <span class=\"ruby-comment\">#=&gt; Wed Apr ...</span>\n</pre>\n",null,0],["atime","File","Ruby/classes/File.html#method-i-atime","()","<p>Returns the last access time (a <code>Time</code> object)\n\n<pre>for &lt;i&gt;file&lt;/i&gt;, or epoch if &lt;i&gt;file&lt;/i&gt; has not been accessed. ...</pre>\n",null,0],["atime","File::Stat","Ruby/classes/File/Stat.html#method-i-atime","()","<p>Returns the last access time for this file as an object of class\n<code>Time</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">atime</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["atom_feed","ActionView::Helpers::AtomFeedHelper","Rails/classes/ActionView/Helpers/AtomFeedHelper.html#method-i-atom_feed","(options = {}, &block)","<p>Adds easy defaults to writing Atom feeds with the Builder template engine\n(this does not work on ERB …\n",null,1],["atomic_write","File","Rails/classes/File.html#method-c-atomic_write","(file_name, temp_dir = Dir.tmpdir)","<p>Write to a file atomically. Useful for situations where you don&#39;t want\nother processes or threads …\n",null,1],["attach_to","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-attach_to","(namespace, log_subscriber=new, notifier=ActiveSupport::Notifications)","",null,1],["attachments","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-attachments","()","<p>Allows you to add attachments to an email, like so:\n\n<pre>mail.attachments[&#39;filename.jpg&#39;] = File.read(&#39;/path/to/filename.jpg&#39;)</pre>\n",null,1],["attachments","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-attachments","()","<p>Access the message attachments list.\n",null,1],["attr_accessible","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-attr_accessible","(*args)","<p>Specifies a white list of model attributes that can be set via\nmass-assignment.\n<p>Like <code>attr_protected</code>, a …\n",null,1],["attr_internal","Module","Rails/classes/Module.html#method-i-attr_internal","(*attrs)","",null,1],["attr_internal_accessor","Module","Rails/classes/Module.html#method-i-attr_internal_accessor","(*attrs)","<p>Declares an attribute reader and writer backed by an internally-named\ninstance variable.\n",null,1],["attr_internal_reader","Module","Rails/classes/Module.html#method-i-attr_internal_reader","(*attrs)","<p>Declares an attribute reader backed by an internally-named instance\nvariable.\n",null,1],["attr_internal_writer","Module","Rails/classes/Module.html#method-i-attr_internal_writer","(*attrs)","<p>Declares an attribute writer backed by an internally-named instance\nvariable.\n",null,1],["attr_protected","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-attr_protected","(*args)","<p>Attributes named in this macro are protected from mass-assignment whenever\nattributes are sanitized before …\n",null,1],["attr_readonly","ActiveRecord::ReadonlyAttributes::ClassMethods","Rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-attr_readonly","(*attributes)","<p>Attributes listed as readonly will be used to create a new record but\nupdate operations will ignore these …\n",null,1],["attribute_cast_code","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#method-i-attribute_cast_code","(attr_name)","<p>The enhanced read method automatically converts the UTC time stored in the\ndatabase to the time zone …\n",null,1],["attribute_match","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-attribute_match","(equality, value)","<p>Create a regular expression to match an attribute value based on the\nequality operator (=, ^=, |=, etc). …\n",null,1],["attribute_method?","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-attribute_method-3F","(attr_name)","",null,1],["attribute_method?","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-attribute_method-3F","(attribute)","<p>Check if method is an attribute method or not.\n",null,1],["attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_method-3F","(attribute)","",null,1],["attribute_method_affix","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_affix","(*affixes)","<p>Declares a method available for all attributes with the given prefix and\nsuffix. Uses <code>method_missing</code> …\n",null,1],["attribute_method_prefix","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_prefix","(*prefixes)","<p>Declares a method available for all attributes with the given prefix. Uses\n<code>method_missing</code> and <code>respond_to</code> …\n",null,1],["attribute_method_suffix","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-attribute_method_suffix","(*suffixes)","<p>Declares a method available for all attributes with the given suffix. Uses\n<code>method_missing</code> and <code>respond_to</code> …\n",null,1],["attribute_methods_generated?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_methods_generated-3F","()","",null,1],["attribute_missing","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-attribute_missing","(match, *args, &block)","<p>attribute_missing is like method_missing, but for attributes. When\nmethod_missing is called we check …\n",null,1],["attribute_names","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-attribute_names","()","<p>Returns an array of column names as strings if it&#39;s not an abstract\nclass and table exists. Otherwise …\n",null,1],["attributes=","ActiveRecord::AttributeAssignment","Rails/classes/ActiveRecord/AttributeAssignment.html#method-i-attributes-3D","(new_attributes)","<p>Allows you to set all the attributes at once by passing in a hash with keys\nmatching the attribute names …\n",null,1],["attributes_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","Rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-attributes_before_type_cast","()","<p>Returns a hash of attributes before typecasting and deserialization.\n",null,1],["attributes_protected_by_default","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-attributes_protected_by_default","()","",null,1],["attributes_protected_by_default","ActiveModel::SecurePassword::ClassMethods","Rails/classes/ActiveModel/SecurePassword/ClassMethods.html#method-c-attributes_protected_by_default","()","",null,1],["attributes_with_index","ActiveRecord::Generators::ModelGenerator","Rails/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-attributes_with_index","()","",null,1],["audio_path","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_path","(source)","<p>Computes the path to an audio asset in the public audios directory. Full\npaths from the document root …\n",null,1],["audio_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-audio_tag","(source, options = {})","<p>Returns an html audio tag for the <code>source</code>. The\n<code>source</code> can be full path or file that exists in your public …\n",null,1],["auth_type","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-auth_type","()","",null,1],["auth_type=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-auth_type-3D","(auth_type)","",null,1],["auth_type=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-auth_type-3D","(auth_type)","<p>Sets the auth type for remote service.\n",null,1],["authenticate","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-authenticate","(request, &login_procedure)","",null,1],["authenticate","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authenticate","(request, realm, &password_procedure)","<p>Returns false on a valid response, true otherwise\n",null,1],["authenticate","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-authenticate","(controller, &login_procedure)","<p>If token Authorization header is present, call the login procedure with the\npresent token and options. …\n",null,1],["authenticate","ActiveModel::SecurePassword::InstanceMethodsOnActivation","Rails/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#method-i-authenticate","(unencrypted_password)","<p>Returns self if the password is correct, otherwise false.\n",null,1],["authenticate_or_request_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_or_request_with_http_basic","(realm = \"Application\", &login_procedure)","",null,1],["authenticate_or_request_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_or_request_with_http_digest","(realm = \"Application\", &password_procedure)","",null,1],["authenticate_or_request_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_or_request_with_http_token","(realm = \"Application\", &login_procedure)","",null,1],["authenticate_with_http_basic","ActionController::HttpAuthentication::Basic::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-authenticate_with_http_basic","(&login_procedure)","",null,1],["authenticate_with_http_digest","ActionController::HttpAuthentication::Digest::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-authenticate_with_http_digest","(realm = \"Application\", &password_procedure)","<p>Authenticate with HTTP Digest, returns true or false\n",null,1],["authenticate_with_http_token","ActionController::HttpAuthentication::Token::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-authenticate_with_http_token","(&login_procedure)","",null,1],["authentication_header","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_header","(controller, realm)","",null,1],["authentication_request","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-authentication_request","(controller, realm)","",null,1],["authentication_request","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-authentication_request","(controller, realm, message = nil)","",null,1],["authentication_request","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-authentication_request","(controller, realm)","<p>Sets a WWW-Authenticate to let the client know a token is desired.\n<p>controller - ActionController::Base …\n",null,1],["authorization","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-authorization","()","<p>Returns the authorization header regardless of whether it was specified\ndirectly or through one of the …\n",null,1],["auto_discovery_link_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-auto_discovery_link_tag","(type = :rss, url_options = {}, tag_options = {})","<p>Returns a link tag that browsers and news readers can use to auto-detect an\nRSS or ATOM feed. The <code>type</code> …\n",null,1],["auto_flushing=","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-auto_flushing-3D","(period)","<p>Set the auto-flush period. Set to true to flush after every log message, to\nan integer to flush every …\n",null,1],["autoclose=","IO","Ruby/classes/IO.html#method-i-autoclose-3D","(p1)","<p>Sets auto-close flag.\n\n<pre>f = open(&quot;/dev/null&quot;)\nIO.for_fd(f.fileno)\n# ...\nf.gets # may cause IOError\n\nf = ...</pre>\n",null,0],["autoclose?","IO","Ruby/classes/IO.html#method-i-autoclose-3F","()","<p>Returns <code>true</code> if the underlying file descriptor of <em>ios</em>\nwill be closed automatically at its finalization, …\n",null,0],["autoload","Kernel","Ruby/classes/Kernel.html#method-i-autoload","(p1, p2)","<p>Registers <em>filename</em> to be loaded (using\n<code>Kernel::require</code>) the first time that <em>module</em> (which\nmay be a <code>String</code> …\n",null,0],["autoload","Module","Ruby/classes/Module.html#method-i-autoload","(p1, p2)","<p>Registers <em>filename</em> to be loaded (using\n<code>Kernel::require</code>) the first time that <em>module</em> (which\nmay be a <code>String</code> …\n",null,0],["autoload","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoload","(const_name, path = @@at_path)","",null,1],["autoload?","Kernel","Ruby/classes/Kernel.html#method-i-autoload-3F","(p1)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as\n<code>autoload</code>.\n\n<pre>autoload(:B, &quot;b&quot;)\nautoload?(:B)      ...</pre>\n",null,0],["autoload?","Module","Ruby/classes/Module.html#method-i-autoload-3F","(p1)","<p>Returns <em>filename</em> to be loaded if <em>name</em> is registered as\n<code>autoload</code> in the namespace of <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">A</span>\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["autoload_at","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoload_at","(path)","",null,1],["autoload_once","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-autoload_once","()","",null,1],["autoload_once_paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-autoload_once_paths","()","",null,1],["autoload_paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-autoload_paths","()","",null,1],["autoload_paths","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-autoload_paths","()","",null,1],["autoload_under","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoload_under","(path)","",null,1],["autoloads","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-autoloads","()","",null,1],["available_action?","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-available_action-3F","(action_name)","<p>Returns true if a method for the action is available and can be dispatched,\nfalse otherwise.\n<p>Notice that …\n",null,1],["available_views","Erb::Generators::ScaffoldGenerator","Rails/classes/Erb/Generators/ScaffoldGenerator.html#method-i-available_views","()","",null,1],["average","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-average","(column_name, options = {})","<p>Calculates the average value on a given column. Returns <code>nil</code> if\nthere&#39;s no row. See <code>calculate</code> for …\n",null,1],["backend","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-backend","()","",null,1],["backend=","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-backend-3D","(name)","",null,1],["backend=","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-backend-3D","(name)","",null,1],["backtrace","Exception","Ruby/classes/Exception.html#method-i-backtrace","()","<p>Returns any backtrace associated with the exception. The backtrace is an\narray of strings, each containing …\n",null,0],["backtrace","Thread","Ruby/classes/Thread.html#method-i-backtrace","()","<p>Returns the current back trace of the <em>thr</em>.\n",null,0],["backtrace_cleaner","Rails","Rails/classes/Rails.html#method-c-backtrace_cleaner","()","",null,1],["bang?","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-i-bang-3F","()","",null,1],["banner","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-c-banner","()","",null,1],["banner","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-banner","()","<p>Use Rails default banner.\n",null,1],["banner","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-c-banner","()","",null,1],["base_class","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-base_class","()","<p>Returns the base AR subclass that this class descends from. If A extends\nAR::Base, A.base_class will …\n",null,1],["base_name","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-base_name","()","<p>Sets the base_name taking into account the current class namespace.\n",null,1],["base_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-base_root","()","<p>Returns the base root for a common set of generators. This is used to\ndynamically guess the default source …\n",null,1],["basename","File","Ruby/classes/File.html#method-c-basename","(p1, p2 = v2)","<p>Returns the last component of the filename given in <em>file_name</em>,\nwhich must be formed using forward slashes …\n",null,0],["basename","ActiveRecord::MigrationProxy","Rails/classes/ActiveRecord/MigrationProxy.html#method-i-basename","()","",null,1],["becomes","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-becomes","(klass)","<p>Returns an instance of the specified <code>klass</code> with the attributes\nof the current record. This is mostly …\n",null,1],["before","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-c-before","(*args, &block)","",null,1],["before","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-before","()","",null,1],["before_configuration","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-before_configuration","(&block)","<p>First configurable block to run. Called before any initializers are run.\n",null,1],["before_eager_load","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-before_eager_load","(&block)","<p>Third configurable block to run. Does not run if config.cache_classes set\nto false.\n",null,1],["before_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-before_filter","","<p>Append a before filter. See _insert_callbacks for parameter details.\n",null,1],["before_filters","ActionController::Testing::ClassMethods","Rails/classes/ActionController/Testing/ClassMethods.html#method-i-before_filters","()","",null,1],["before_initialize","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-before_initialize","(&block)","<p>Second configurable block to run. Called before frameworks initialize.\n",null,1],["before_validation","ActiveModel::Validations::Callbacks::ClassMethods","Rails/classes/ActiveModel/Validations/Callbacks/ClassMethods.html#method-i-before_validation","(*args, &block)","",null,1],["begin","MatchData","Ruby/classes/MatchData.html#method-i-begin","(p1)","<p>Returns the offset of the start of the <em>n</em>th element of the match\narray in the string. <em>n</em> can be a string …\n",null,0],["begin","Range","Ruby/classes/Range.html#method-i-begin","()","<p>Returns the first object in <em>rng</em>.\n",null,0],["begin_db_transaction","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-begin_db_transaction","()","",null,1],["begin_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-begin_db_transaction","()","<p>Begins the transaction (and turns off auto-committing).\n",null,1],["begin_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-begin_db_transaction","()","<p>Begins a transaction.\n",null,1],["beginning_of_day","Date","Rails/classes/Date.html#method-i-beginning_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,1],["beginning_of_day","DateTime","Rails/classes/DateTime.html#method-i-beginning_of_day","()","<p>Returns a new DateTime representing the start of the day (0:00)\n",null,1],["beginning_of_day","Time","Rails/classes/Time.html#method-i-beginning_of_day","()","<p>Returns a new Time representing the start of the day (0:00)\n",null,1],["beginning_of_hour","DateTime","Rails/classes/DateTime.html#method-i-beginning_of_hour","()","<p>Returns a new DateTime representing the start of the hour (hh:00:00)\n",null,1],["beginning_of_hour","Time","Rails/classes/Time.html#method-i-beginning_of_hour","()","<p>Returns a new Time representing the start of the hour (x:00)\n",null,1],["beginning_of_month","Date","Rails/classes/Date.html#method-i-beginning_of_month","()","<p>Returns a new ; DateTime objects will have time set to 0:00DateTime\nrepresenting the start of the month …\n",null,1],["beginning_of_month","Time","Rails/classes/Time.html#method-i-beginning_of_month","()","<p>Returns a new Time representing the start of the month (1st of the month,\n0:00)\n",null,1],["beginning_of_quarter","Date","Rails/classes/Date.html#method-i-beginning_of_quarter","()","<p>Returns a new Date/DateTime representing the start of the quarter (1st of\njanuary, april, july, october; …\n",null,1],["beginning_of_quarter","Time","Rails/classes/Time.html#method-i-beginning_of_quarter","()","<p>Returns  a new Time representing the start of the quarter (1st of january,\napril, july, october, 0:00) …\n",null,1],["beginning_of_week","Date","Rails/classes/Date.html#method-i-beginning_of_week","(start_day = :monday)","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\nstart of this week. Week is assumed to start on <code>start_day</code> …\n",null,1],["beginning_of_week","Time","Rails/classes/Time.html#method-i-beginning_of_week","(start_day = :monday)","<p>Returns a new Time representing the “start” of this week, week starts on\nstart_day (default …\n",null,1],["beginning_of_year","Date","Rails/classes/Date.html#method-i-beginning_of_year","()","<p>Returns a new Date/DateTime representing the start of the year (1st of\njanuary; DateTime objects will …\n",null,1],["beginning_of_year","Time","Rails/classes/Time.html#method-i-beginning_of_year","()","<p>Returns a new Time representing the start of the year (1st of january,\n0:00)\n",null,1],["behavior","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-behavior","()","<p>Returns the set behavior or if one isn&#39;t set, defaults to\n<code>:stderr</code>\n",null,1],["behavior=","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-behavior-3D","(behavior)","<p>Sets the behavior to the specified value. Can be a single value or an\narray.\n<p>Examples\n\n<pre>ActiveSupport::Deprecation.behavior ...</pre>\n",null,1],["belongs_to","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-belongs_to","(name, options = {})","<p>Specifies a one-to-one association with another class. This method should\nonly be used if this class …\n",null,1],["belongs_to","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-belongs_to","(*args)","",null,1],["belongs_to","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-belongs_to","(*args)","",null,1],["belongs_to?","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-belongs_to-3F","(group)","",null,1],["benchmark","ActiveSupport::Benchmarkable","Rails/classes/ActiveSupport/Benchmarkable.html#method-i-benchmark","(message = \"Benchmarking\", options = {})","<p>Allows you to measure the execution time of a block in a template and\nrecords the result to the log. …\n",null,1],["benchmark","ActiveSupport::Testing::Performance::Metrics::Base","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html#method-i-benchmark","()","",null,1],["best_install_method","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-best_install_method","()","",null,1],["between?","Comparable","Ruby/classes/Comparable.html#method-i-between-3F","(p1, p2)","<p>Returns <code>false</code> if <em>obj</em> <code>&lt;=&gt;</code>\n<em>min</em> is less than zero or if <em>anObject</em>\n<code>&lt;=&gt;</code> <em>max</em> is greater than zero, …\n",null,0],["between?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-between-3F","(min, max)","",null,1],["bind","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-bind","(p1)","<p>Bind <em>umeth</em> to <em>obj</em>. If <code>Klass</code> was the class\nfrom which <em>umeth</em> was obtained, <code>obj.kind_of?(Klass)</code>\nmust be …\n",null,0],["bind","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-bind","(value)","",null,1],["bind","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-bind","(context)","",null,1],["binding","Kernel","Ruby/classes/Kernel.html#method-i-binding","()","<p>Returns a <code>Binding</code> object, describing the variable and method\nbindings at the point of call. This object …\n",null,0],["binding","Proc","Ruby/classes/Proc.html#method-i-binding","()","<p>Returns the binding associated with <em>prc</em>. Note that\n<code>Kernel#eval</code> accepts either a <code>Proc</code> or a\n<code>Binding</code> object …\n",null,0],["binmode","ARGF","Ruby/classes/ARGF.html#method-i-binmode","()","<p>Puts <code>ARGF</code> into binary mode. Once a stream is in binary mode,\nit cannot be reset to non-binary mode.  …\n",null,0],["binmode","IO","Ruby/classes/IO.html#method-i-binmode","()","<p>Puts <em>ios</em> into binary mode. Once a stream is in binary mode, it\ncannot be reset to nonbinary mode.\n<p>newline …\n",null,0],["binmode?","ARGF","Ruby/classes/ARGF.html#method-i-binmode-3F","()","\n<pre>Returns true if +ARGF+ is being read in binary mode; false otherwise. (To\nenable binary mode use +ARGF.binmode+.</pre>\n",null,0],["binmode?","IO","Ruby/classes/IO.html#method-i-binmode-3F","()","<p>Returns <code>true</code> if <em>ios</em> is binmode.\n",null,0],["binread","IO","Ruby/classes/IO.html#method-c-binread","(p1, p2 = v2, p3 = v3)","<p>Opens the file, optionally seeks to the given <em>offset</em>, then returns\n<em>length</em> bytes (defaulting to the rest …\n",null,0],["binwrite","IO","Ruby/classes/IO.html#method-c-binwrite","(*args)","<p>Opens the file, optionally seeks to the given <em>offset</em>, writes\n<em>string</em> then returns the length written. …\n",null,0],["blank?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-blank-3F","()","",null,1],["blank?","FalseClass","Rails/classes/FalseClass.html#method-i-blank-3F","()","<p><code>false</code> is blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,1],["blank?","NilClass","Rails/classes/NilClass.html#method-i-blank-3F","()","<p><code>nil</code> is blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; true</span>\n</pre>\n",null,1],["blank?","Object","Rails/classes/Object.html#method-i-blank-3F","()","<p>An object is blank if it&#39;s false, empty, or a whitespace string. For\nexample, “”, “ …\n",null,1],["blank?","String","Rails/classes/String.html#method-i-blank-3F","()","<p>A string is blank if it&#39;s empty or contains whitespaces only:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;&quot;</span>.<span class=\"ruby-identifier\">blank?</span>                 <span class=\"ruby-comment\"># =&gt; true ...</span>\n</pre>\n",null,1],["blank?","TrueClass","Rails/classes/TrueClass.html#method-i-blank-3F","()","<p><code>true</code> is not blank:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">blank?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n</pre>\n",null,1],["blksize","File::Stat","Ruby/classes/File/Stat.html#method-i-blksize","()","<p>Returns the native file system&#39;s block size. Will return\n<code>nil</code> on platforms that don&#39;t support …\n",null,0],["block_format","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-block_format","(text)","<p>Uses Text::Format to take the text and format it, indented two spaces for\neach line, and wrapped at 72 …\n",null,1],["block_given?","Kernel","Ruby/classes/Kernel.html#method-i-block_given-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in\nthe current context. The <code>iterator?</code> form is mildly deprecated.\n…\n",null,0],["blockdev?","File","Ruby/classes/File.html#method-c-blockdev-3F","(p1)","<p>Returns <code>true</code> if the named file is a block device.\n",null,0],["blockdev?","File::Stat","Ruby/classes/File/Stat.html#method-i-blockdev-3F","()","<p>Returns <code>true</code> if the file is a block device, <code>false</code>\nif it isn&#39;t or if the operating system doesn&#39;t …\n",null,0],["blockdev?","FileTest","Ruby/classes/FileTest.html#method-i-blockdev-3F","(p1)","<p>Returns <code>true</code> if the named file is a block device.\n",null,0],["blocks","File::Stat","Ruby/classes/File/Stat.html#method-i-blocks","()","<p>Returns the number of native file system blocks allocated for this file, or\n<code>nil</code> if the operating system …\n",null,0],["body","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-body","()","<p>The request body is an IO input stream. If the RAW_POST_DATA environment\nvariable is already set, wrap …\n",null,1],["body","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-body","()","",null,1],["body=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-body-3D","(body)","",null,1],["body_parts","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-body_parts","()","",null,1],["breakpoint","Kernel","Rails/classes/Kernel.html#method-i-breakpoint","()","",null,1],["build","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-c-build","(app)","",null,1],["build","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-build","(app = nil, &block)","",null,1],["build","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-build","(app)","",null,1],["build","ActionView::Resolver::Path","Rails/classes/ActionView/Resolver/Path.html#method-c-build","(name, prefix, partial)","",null,1],["build","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-build","(*args, &block)","",null,1],["build","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-build","(attributes = {})","<p>Builds a new, unsaved record using the default values from the remote\nserver so that it can be used with …\n",null,1],["build","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-build","(klass, params=nil)","<p>GET new POST create\n",null,1],["build","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-build","(meth, *args)","",null,1],["build_arel","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-build_arel","()","",null,1],["build_mem_cache","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-build_mem_cache","(*addresses)","",null,1],["build_original_fullpath","Rails::Application","Rails/classes/Rails/Application.html#method-i-build_original_fullpath","(env)","",null,1],["builder","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-builder","()","",null,1],["bundle_command","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-bundle_command","(command)","",null,1],["button","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-button","(value=nil, options={})","<p>Add the submit button for the given form. When no value is given, it checks\nif the object is a new resource …\n",null,1],["button_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-button_tag","(content_or_options = nil, options = nil, &block)","<p>Creates a button element that defines a <code>submit</code> button,\n<code>reset</code>button or a generic button which can be used …\n",null,1],["button_to","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-button_to","(name, options = {}, html_options = {})","<p>Generates a form containing a single button that submits to the URL created\nby the set of <code>options</code>. This …\n",null,1],["button_to_function","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-button_to_function","(name, function=nil, html_options={})","<p>Returns a button whose <code>onclick</code> handler triggers the passed\nJavaScript.\n<p>The helper receives a name, JavaScript …\n",null,1],["byte","Numeric","Rails/classes/Numeric.html#method-i-byte","()","",null,1],["bytes","ARGF","Ruby/classes/ARGF.html#method-i-bytes","()","\n<pre>Iterates over each byte of each file in +ARGV+.\nA byte is returned as a +Fixnum+ in the range 0..255. ...</pre>\n",null,0],["bytes","IO","Ruby/classes/IO.html#method-i-bytes","()","<p>Calls the given block once for each byte (0..255) in <em>ios</em>, passing\nthe byte as an argument. The stream …\n",null,0],["bytes","Random","Ruby/classes/Random.html#method-i-bytes","(p1)","<p>Returns a random binary string.  The argument size specified the length of\nthe result string.\n",null,0],["bytes","String","Ruby/classes/String.html#method-i-bytes","()","<p>Passes each byte in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_byte ...</pre>\n",null,0],["bytes","Numeric","Rails/classes/Numeric.html#method-i-bytes","()","<p>Enables the use of byte calculations and declarations, like 45.bytes +\n2.6.megabytes\n",null,1],["bytesize","String","Ruby/classes/String.html#method-i-bytesize","()","<p>Returns the length of <em>str</em> in bytes.\n",null,0],["byteslice","String","Ruby/classes/String.html#method-i-byteslice","(*args)","<p>Byte Reference—If passed a single <code>Fixnum</code>, returns a substring\nof one byte at that position. If passed …\n",null,0],["cache","ActionController::Caching","Rails/classes/ActionController/Caching.html#method-i-cache","(key, options = {}, &block)","<p>Convenience accessor\n",null,1],["cache","ActionView::Helpers::CacheHelper","Rails/classes/ActionView/Helpers/CacheHelper.html#method-i-cache","(name = {}, options = nil, &block)","<p>This helper exposes a method for caching fragments of a view  rather than\nan entire action or page.  …\n",null,1],["cache","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-cache","()","<p>Enable the query cache within the block.\n",null,1],["cache","ActiveRecord::QueryCache::ClassMethods","Rails/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-cache","(&block)","<p>Enable the query cache within the block if Active Record is configured.\n",null,1],["cache","Rails","Rails/classes/Rails.html#method-c-cache","()","",null,1],["cache_attribute?","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cache_attribute-3F","(attr_name)","<p>Returns <code>true</code> if the provided attribute is being cached.\n",null,1],["cache_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cache_attributes","(*attribute_names)","<p><code>cache_attributes</code> allows you to declare which converted\nattribute values should be cached. Usually caching …\n",null,1],["cache_fixtures","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-cache_fixtures","(connection, fixtures_map)","",null,1],["cache_for_connection","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-cache_for_connection","(connection)","",null,1],["cache_key","ActiveRecord::Integration","Rails/classes/ActiveRecord/Integration.html#method-i-cache_key","()","<p>Returns a cache key that can be used to identify this record.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Product</span>.<span class=\"ruby-identifier\">new</span>.<span class=\"ruby-identifier\">cache_key</span>     <span class=\"ruby-comment\"># =&gt; &quot;products/new&quot; ...</span>\n</pre>\n",null,1],["cache_page","ActionController::Caching::Pages","Rails/classes/ActionController/Caching/Pages.html#method-i-cache_page","(content = nil, options = nil, gzip = Zlib::BEST_COMPRESSION)","<p>Manually cache the <code>content</code> in the key determined by\n<code>options</code>. If no content is provided, the contents …\n",null,1],["cache_page","ActionController::Caching::Pages::ClassMethods","Rails/classes/ActionController/Caching/Pages/ClassMethods.html#method-i-cache_page","(content, path, extension = nil, gzip = Zlib::BEST_COMPRESSION)","<p>Manually cache the <code>content</code> in the key determined by\n<code>path</code>. Example:\n\n<pre>cache_page &quot;I&#39;m the cached content&quot;, ...</pre>\n",null,1],["cache_store","ActionController::Caching::ConfigMethods","Rails/classes/ActionController/Caching/ConfigMethods.html#method-i-cache_store","()","",null,1],["cache_store=","ActionController::Caching::ConfigMethods","Rails/classes/ActionController/Caching/ConfigMethods.html#method-i-cache_store-3D","(store)","",null,1],["cache_template_loading","ActionView::Base","Rails/classes/ActionView/Base.html#method-c-cache_template_loading","()","",null,1],["cache_template_loading=","ActionView::Base","Rails/classes/ActionView/Base.html#method-c-cache_template_loading-3D","(value)","",null,1],["cached_attributes","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-cached_attributes","()","<p>Returns the attributes which are cached. By default time related columns\nwith datatype <code>:datetime, :timestamp,</code> …\n",null,1],["cached_fixtures","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-cached_fixtures","(connection, keys_to_fetch = nil)","",null,1],["caches_action","ActionController::Caching::Actions::ClassMethods","Rails/classes/ActionController/Caching/Actions/ClassMethods.html#method-i-caches_action","(*actions)","<p>Declares that <code>actions</code> should be cached. See\nActionController::Caching::Actions for details.\n",null,1],["caches_page","ActionController::Caching::Pages::ClassMethods","Rails/classes/ActionController/Caching/Pages/ClassMethods.html#method-i-caches_page","(*actions)","<p>Caches the <code>actions</code> using the page-caching approach that&#39;ll\nstore the cache in a path within the  …\n",null,1],["caching_allowed?","ActionController::Caching","Rails/classes/ActionController/Caching.html#method-i-caching_allowed-3F","()","",null,1],["calculate","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-calculate","(operation, column_name, options = {})","<p>This calculates aggregate values in the given column. Methods for count,\nsum, average, minimum, and maximum …\n",null,1],["calculate_ip","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-calculate_ip","()","<p>Determines originating IP address. REMOTE_ADDR is the standard but will be\nwrong if the user is behind …\n",null,1],["call","Continuation","Ruby/classes/Continuation.html#method-i-call","(*args)","<p>Invokes the continuation. The program continues from the end of the\n<code>callcc</code> block. If no arguments are …\n",null,0],["call","Method","Ruby/classes/Method.html#method-i-call","(*args)","<p>Invokes the <em>meth</em> with the specified arguments, returning the\nmethod&#39;s return value.\n\n<pre>m = 12.method(&quot;+&quot;) ...</pre>\n",null,0],["call","Proc","Ruby/classes/Proc.html#method-i-call","(*args)","<p>Invokes the block, setting the block&#39;s parameters to the values in\n<em>params</em> using something close to …\n",null,0],["call","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-call","(env)","<p>Makes the controller a rack endpoint that points to the action in the given\nenv&#39;s action_dispatch.request.path_parameters …\n",null,1],["call","ActionController::Middleware::ActionMiddleware","Rails/classes/ActionController/Middleware/ActionMiddleware.html#method-i-call","(env)","",null,1],["call","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-c-call","(*args)","<p>Initializes a new responder an invoke the proper format. If the format is\nnot defined, call to_format. …\n",null,1],["call","ActionDispatch::BestStandardsSupport","Rails/classes/ActionDispatch/BestStandardsSupport.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Cookies","Rails/classes/ActionDispatch/Cookies.html#method-i-call","(env)","",null,1],["call","ActionDispatch::DebugExceptions","Rails/classes/ActionDispatch/DebugExceptions.html#method-i-call","(env)","",null,1],["call","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Flash","Rails/classes/ActionDispatch/Flash.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Head","Rails/classes/ActionDispatch/Head.html#method-i-call","(env)","",null,1],["call","ActionDispatch::ParamsParser","Rails/classes/ActionDispatch/ParamsParser.html#method-i-call","(env)","",null,1],["call","ActionDispatch::PublicExceptions","Rails/classes/ActionDispatch/PublicExceptions.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-i-call","(env)","",null,1],["call","ActionDispatch::RemoteIp","Rails/classes/ActionDispatch/RemoteIp.html#method-i-call","(env)","",null,1],["call","ActionDispatch::RequestId","Rails/classes/ActionDispatch/RequestId.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Rescue","Rails/classes/ActionDispatch/Rescue.html#method-i-call","(env)","",null,1],["call","ActionDispatch::ShowExceptions","Rails/classes/ActionDispatch/ShowExceptions.html#method-i-call","(env)","",null,1],["call","ActionDispatch::Static","Rails/classes/ActionDispatch/Static.html#method-i-call","(env)","",null,1],["call","ActionView::Template::Handlers::Builder","Rails/classes/ActionView/Template/Handlers/Builder.html#method-i-call","(template)","",null,1],["call","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-c-call","(template)","",null,1],["call","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-i-call","(template)","",null,1],["call","ActiveRecord::ConnectionAdapters::ConnectionManagement","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#method-i-call","(env)","",null,1],["call","ActiveRecord::IdentityMap::Middleware","Rails/classes/ActiveRecord/IdentityMap/Middleware.html#method-i-call","(env)","",null,1],["call","ActiveRecord::QueryCache","Rails/classes/ActiveRecord/QueryCache.html#method-i-call","(env)","",null,1],["call","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-i-call","(message, *args)","",null,1],["call","I18n::ExceptionHandler","Rails/classes/I18n/ExceptionHandler.html#method-i-call","(exception, locale, key, options)","",null,1],["call","Logger::SimpleFormatter","Rails/classes/Logger/SimpleFormatter.html#method-i-call","(severity, timestamp, progname, msg)","<p>This method is invoked when a log event occurs\n",null,1],["call","Rails::Application","Rails/classes/Rails/Application.html#method-i-call","(env)","",null,1],["call","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-call","(env)","",null,1],["call","Rails::Rack::Debugger","Rails/classes/Rails/Rack/Debugger.html#method-i-call","(env)","",null,1],["call","Rails::Rack::LogTailer","Rails/classes/Rails/Rack/LogTailer.html#method-i-call","(env)","",null,1],["call","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-call","(env)","",null,1],["call_app","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-call_app","(request, env)","",null,1],["callcc","Kernel","Ruby/classes/Kernel.html#method-i-callcc","()","<p>Generates a <code>Continuation</code> object, which it passes to the\nassociated block. You need to <code>require &#39;continuation&#39;</code> …\n",null,0],["caller","Kernel","Ruby/classes/Kernel.html#method-i-caller","(p1 = v1)","<p>Returns the current execution stack—an array containing strings in the form\n“<em>file:line</em>&#39;&#39; or …\n",null,0],["camelcase","String","Rails/classes/String.html#method-i-camelcase","(first_letter = :upper)","",null,1],["camelize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-camelize","(term, uppercase_first_letter = true)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If\nthe argument to <code>camelize</code> is set to <code>:lower</code> …\n",null,1],["camelize","String","Rails/classes/String.html#method-i-camelize","(first_letter = :upper)","<p>By default, <code>camelize</code> converts strings to UpperCamelCase. If\nthe argument to camelize is set to <code>:lower</code> …\n",null,1],["camelized","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-camelized","()","",null,1],["camelized","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-camelized","()","",null,1],["capify!","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-capify-21","()","<p>Just run the capify command in root\n<p>Example\n\n<pre>capify!</pre>\n",null,1],["capitalize","String","Ruby/classes/String.html#method-i-capitalize","()","<p>Returns a copy of <em>str</em> with the first character converted to\nuppercase and the remainder to lowercase. …\n",null,0],["capitalize","Symbol","Ruby/classes/Symbol.html#method-i-capitalize","()","<p>Same as <code>sym.to_s.capitalize.intern</code>.\n",null,0],["capitalize","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-capitalize","()","<p>Converts the first character to uppercase and the remainder to lowercase.\n<p>Example:\n\n<pre>&#39;über&#39;.mb_chars.capitalize.to_s ...</pre>\n",null,1],["capitalize!","String","Ruby/classes/String.html#method-i-capitalize-21","()","<p>Modifies <em>str</em> by converting the first character to uppercase and\nthe remainder to lowercase. Returns  …\n",null,0],["capture","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-capture","(*args)","<p>The capture method allows you to extract part of a template into a\nvariable. You can then use this variable …\n",null,1],["capture","Kernel","Rails/classes/Kernel.html#method-i-capture","(stream)","<p>Captures the given stream and returns it:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">stream</span> = <span class=\"ruby-identifier\">capture</span>(:<span class=\"ruby-identifier\">stdout</span>) { <span class=\"ruby-identifier\">puts</span> <span class=\"ruby-string\">&quot;Cool&quot;</span> }\n<span class=\"ruby-identifier\">stream</span> <span class=\"ruby-comment\"># =&gt; &quot;Cool\\n&quot;</span>\n</pre>\n",null,1],["captures","MatchData","Ruby/classes/MatchData.html#method-i-captures","()","<p>Returns the array of captures; equivalent to <code>mtch.to_a[1..-1]</code>.\n\n<pre>f1,f2,f3,f4 = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;).captures ...</pre>\n",null,0],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-case_insensitive_comparison","(table, attribute, column, value)","",null,1],["case_insensitive_comparison","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-case_insensitive_comparison","(table, attribute, column, value)","",null,1],["case_sensitive_equality_operator","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-case_sensitive_equality_operator","()","",null,1],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-case_sensitive_modifier","(node)","",null,1],["case_sensitive_modifier","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-case_sensitive_modifier","(node)","",null,1],["casecmp","String","Ruby/classes/String.html#method-i-casecmp","(p1)","<p>Case-insensitive version of <code>String#&lt;=&gt;</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;abcdef&quot;</span>.<span class=\"ruby-identifier\">casecmp</span>(<span class=\"ruby-string\">&quot;abcde&quot;</span>)     <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-string\">&quot;aBcDeF&quot;</span>.<span class=\"ruby-identifier\">casecmp</span>(<span class=\"ruby-string\">&quot;abcdef&quot;</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["casecmp","Symbol","Ruby/classes/Symbol.html#method-i-casecmp","(p1)","<p>Case-insensitive version of <code>Symbol#&lt;=&gt;</code>.\n",null,0],["casefold?","Regexp","Ruby/classes/Regexp.html#method-i-casefold-3F","()","<p>Returns the value of the case-insensitive flag.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/a/</span>.<span class=\"ruby-identifier\">casefold?</span>           <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-regexp\">/a/</span>.<span class=\"ruby-identifier\">casefold?</span>      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["catch","Kernel","Ruby/classes/Kernel.html#method-i-catch","(p1 = v1)","<p><code>catch</code> executes its block. If a <code>throw</code> is executed,\nRuby searches up its stack for a <code>catch</code> block with a …\n",null,0],["cattr_accessor","Class","Rails/classes/Class.html#method-i-cattr_accessor","(*syms, &blk)","<p>Defines both class and instance accessors for class attributes.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">cattr_accessor</span> :<span class=\"ruby-identifier\">hair_colors</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["cattr_reader","Class","Rails/classes/Class.html#method-i-cattr_reader","(*syms)","<p>Defines a class attribute if it&#39;s not defined and creates a reader\nmethod that returns the attribute …\n",null,1],["cattr_writer","Class","Rails/classes/Class.html#method-i-cattr_writer","(*syms)","<p>Defines a class attribute if it&#39;s not defined and creates a writer\nmethod to allow assignment to …\n",null,1],["cbrt","Math","Ruby/classes/Math.html#method-c-cbrt","(p1)","<p>Returns the cube root of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-9</span>.<span class=\"ruby-identifier\">upto</span>(<span class=\"ruby-value\">9</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">p</span> [<span class=\"ruby-identifier\">x</span>, <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">cbrt</span>(<span class=\"ruby-identifier\">x</span>), <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">cbrt</span>(<span class=\"ruby-identifier\">x</span>)<span class=\"ruby-operator\">**</span><span class=\"ruby-value\">3</span>]\n}\n<span class=\"ruby-comment\">#=&gt;</span>\n[<span class=\"ruby-value\">-9</span>, <span class=\"ruby-value\">-2.0800838230519</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["cdata_block","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-cdata_block","(string)","",null,1],["cdata_section","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-cdata_section","(content)","<p>Returns a CDATA section with the given <code>content</code>. CDATA sections\nare used to escape blocks of text containing …\n",null,1],["ceil","Float","Ruby/classes/Float.html#method-i-ceil","()","<p>Returns the smallest <code>Integer</code> greater than or equal to\n<em>flt</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1.2</span>.<span class=\"ruby-identifier\">ceil</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n<span class=\"ruby-value\">2.0</span>.<span class=\"ruby-identifier\">ceil</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1.2</span>).<span class=\"ruby-identifier\">ceil</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["ceil","Integer","Ruby/classes/Integer.html#method-i-ceil","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["ceil","Numeric","Ruby/classes/Numeric.html#method-i-ceil","()","<p>Returns the smallest <code>Integer</code> greater than or equal to\n<em>num</em>. Class <code>Numeric</code> achieves this by converting …\n",null,0],["ceil","Rational","Ruby/classes/Rational.html#method-i-ceil","(*args)","<p>Returns the truncated value (toward positive infinity).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">ceil</span>      <span class=\"ruby-comment\">#=&gt; 3</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["center","String","Ruby/classes/String.html#method-i-center","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em>\ncentered …\n",null,0],["center","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-center","(integer, padstr=' ')","<p>Works just like <code>String#center</code>, only integer specifies\ncharacters instead of bytes.\n<p>Example:\n\n<pre>&quot;¾ cup&quot;.mb_chars.center(8).to_s ...</pre>\n",null,1],["change","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change","(column_name, type, options = {})","<p>Changes the column&#39;s definition according to the new options. See\nTableDefinition#column for details …\n",null,1],["change","Date","Rails/classes/Date.html#method-i-change","(options)","<p>Returns a new Date where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,1],["change","DateTime","Rails/classes/DateTime.html#method-i-change","(options)","<p>Returns a new DateTime where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,1],["change","Time","Rails/classes/Time.html#method-i-change","(options)","<p>Returns a new Time where one or more of the elements have been changed\naccording to the <code>options</code> parameter. …\n",null,1],["change_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-change_column","(table_name, column_name, type, options = {})","<p>Changes the column of a table.\n",null,1],["change_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column","(table_name, column_name, type, options = {})","<p>Changes the column&#39;s definition according to the new options. See\nTableDefinition#column for details …\n",null,1],["change_column_default","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_default","(table_name, column_name, default)","",null,1],["change_column_default","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-change_column_default","(table_name, column_name, default)","<p>Changes the default value of a table column.\n",null,1],["change_column_default","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_column_default","(table_name, column_name, default)","<p>Sets a new default value for a column.\n<p>Examples\n\n<pre>change_column_default(:suppliers, :qualification, &#39;new&#39;) ...</pre>\n",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,1],["change_column_null","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-change_column_null","(table_name, column_name, null, default = nil)","",null,1],["change_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-change_column_sql","(table_name, column_name, type, options = {})","",null,1],["change_default","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-change_default","(column_name, default)","<p>Sets a new default value for a column. See\nSchemaStatements#change_column_default\n<p>Examples\n\n<pre>t.change_default(:qualification, ...</pre>\n",null,1],["change_privilege","Process::GID","Ruby/classes/Process/GID.html#method-c-change_privilege","(p1)","<p>Change the current process&#39;s real and effective group ID to that\nspecified by <em>integer</em>. Returns the …\n",null,0],["change_privilege","Process::UID","Ruby/classes/Process/UID.html#method-c-change_privilege","(p1)","<p>Change the current process&#39;s real and effective user ID to that\nspecified by <em>integer</em>. Returns the …\n",null,0],["change_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-change_table","(table_name, options = {})","<p>A block for changing columns in <code>table</code>.\n<p>Example\n\n<pre># change_table() yields a Table instance\nchange_table(:suppliers) ...</pre>\n",null,1],["changed","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changed","()","<p>List of attributes with unsaved changes.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed</span> <span class=\"ruby-comment\"># =&gt; []</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> = <span class=\"ruby-string\">&#39;bob&#39;</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed</span> <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["changed?","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changed-3F","()","<p>Returns true if any attribute have unsaved changes, false otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changed?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["changed_attributes","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changed_attributes","()","<p>Map of change <code>attr =&gt; original value</code>.\n",null,1],["changed_for_autosave?","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-changed_for_autosave-3F","()","<p>Returns whether or not this record has been changed in any way (including\nwhether any of its nested autosave …\n",null,1],["changes","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-changes","()","<p>Map of changed attrs =&gt; [original value, new value].\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changes</span> <span class=\"ruby-comment\"># =&gt; {}</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> = <span class=\"ruby-string\">&#39;bob&#39;</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">changes</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["characters","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-characters","(string)","",null,1],["chardev?","File","Ruby/classes/File.html#method-c-chardev-3F","(p1)","<p>Returns <code>true</code> if the named file is a character device.\n",null,0],["chardev?","File::Stat","Ruby/classes/File/Stat.html#method-i-chardev-3F","()","<p>Returns <code>true</code> if the file is a character device,\n<code>false</code> if it isn&#39;t or if the operating system doesn&#39;t …\n",null,0],["chardev?","FileTest","Ruby/classes/FileTest.html#method-i-chardev-3F","(p1)","<p>Returns <code>true</code> if the named file is a character device.\n",null,0],["chars","ARGF","Ruby/classes/ARGF.html#method-i-chars","()","<p>Iterates over each character of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,0],["chars","IO","Ruby/classes/IO.html#method-i-chars","()","<p>Calls the given block once for each character in <em>ios</em>, passing the\ncharacter as an argument. The stream …\n",null,0],["chars","String","Ruby/classes/String.html#method-i-chars","()","<p>Passes each character in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_char ...</pre>\n",null,0],["charset","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-charset","()","<p>Returns the database character set.\n",null,1],["chdir","Dir","Ruby/classes/Dir.html#method-c-chdir","(p1 = v1)","<p>Changes the current working directory of the process to the given string.\nWhen called without an argument, …\n",null,0],["check_box","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-check_box","(method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","",null,1],["check_box","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-check_box","(object_name, method, options = {}, checked_value = \"1\", unchecked_value = \"0\")","<p>Returns a checkbox tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an object …\n",null,1],["check_box_checked?","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-c-check_box_checked-3F","(value, checked_value)","",null,1],["check_box_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-check_box_tag","(name, value = \"1\", checked = false, options = {})","<p>Creates a check box form input tag.\n<p>Options\n<p><code>:disabled</code> - If set to true, the user will not be able to use …\n",null,1],["check_class_collision","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-c-check_class_collision","(options={})","<p>Add a class collisions name to be checked on class initialization. You can\nsupply a hash with a :prefix …\n",null,1],["check_validity!","ActiveModel::EachValidator","Rails/classes/ActiveModel/EachValidator.html#method-i-check_validity-21","()","<p>Hook method that gets called by the initializer allowing verification that\nthe arguments supplied are …\n",null,1],["check_validity!","ActiveModel::Validations::ExclusionValidator","Rails/classes/ActiveModel/Validations/ExclusionValidator.html#method-i-check_validity-21","()","",null,1],["check_validity!","ActiveModel::Validations::FormatValidator","Rails/classes/ActiveModel/Validations/FormatValidator.html#method-i-check_validity-21","()","",null,1],["check_validity!","ActiveModel::Validations::InclusionValidator","Rails/classes/ActiveModel/Validations/InclusionValidator.html#method-i-check_validity-21","()","",null,1],["check_validity!","ActiveModel::Validations::LengthValidator","Rails/classes/ActiveModel/Validations/LengthValidator.html#method-i-check_validity-21","()","",null,1],["check_validity!","ActiveModel::Validations::NumericalityValidator","Rails/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-check_validity-21","()","",null,1],["checkin","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkin","(conn)","<p>Check-in a database connection back into the pool, indicating that you no\nlonger need this connection. …\n",null,1],["checkout","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-checkout","()","<p>Check-out a database connection from the pool, indicating that you want to\nuse it. You should call #checkin …\n",null,1],["children","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-children","()","",null,1],["chmod","File","Ruby/classes/File.html#method-c-chmod","(p1, *args)","<p>Changes permission bits on the named file(s) to the bit pattern represented\nby <em>mode_int</em>. Actual effects …\n",null,0],["chmod","File","Ruby/classes/File.html#method-i-chmod","(p1)","<p>Changes permission bits on <em>file</em> to the bit pattern represented by\n<em>mode_int</em>. Actual effects are platform …\n",null,0],["chomp","Kernel","Ruby/classes/Kernel.html#method-i-chomp","(*args)","<p>Equivalent to <code>$_ = $_.chomp(<em>string</em>)</code>. See\n<code>String#chomp</code>. Available only when -p/-n command line option …\n",null,0],["chomp","String","Ruby/classes/String.html#method-i-chomp","(*args)","<p>Returns a new <code>String</code> with the given record separator removed\nfrom the end of <em>str</em> (if present). If <code>$/</code> …\n",null,0],["chomp!","String","Ruby/classes/String.html#method-i-chomp-21","(p1 = v1)","<p>Modifies <em>str</em> in place as described for <code>String#chomp</code>,\nreturning <em>str</em>, or <code>nil</code> if no modifications were made.\n…\n",null,0],["chop","Kernel","Ruby/classes/Kernel.html#method-i-chop","()","<p>Equivalent to <code>($_.dup).chop!</code>, except <code>nil</code> is never\nreturned. See <code>String#chop!</code>. Available only when -p/-n …\n",null,0],["chop","String","Ruby/classes/String.html#method-i-chop","()","<p>Returns a new <code>String</code> with the last character removed.  If the\nstring ends with <code>\\r\\n</code>, both characters …\n",null,0],["chop!","String","Ruby/classes/String.html#method-i-chop-21","()","<p>Processes <em>str</em> as for <code>String#chop</code>, returning\n<em>str</em>, or <code>nil</code> if <em>str</em> is the empty string.  See\nalso <code>String#chomp!</code> …\n",null,0],["chown","File","Ruby/classes/File.html#method-i-chown","(p1, p2)","<p>Changes the owner and group of <em>file</em> to the given numeric owner and\ngroup id&#39;s. Only a process with …\n",null,0],["chown","File","Ruby/classes/File.html#method-c-chown","(p1, p2, *args)","<p>Changes the owner and group of the named file(s) to the given numeric owner\nand group id&#39;s. Only …\n",null,0],["chr","Integer","Ruby/classes/Integer.html#method-i-chr","(*args)","<p>Returns a string containing the character represented by the receiver&#39;s\nvalue according to <code>encoding</code> …\n",null,0],["chr","String","Ruby/classes/String.html#method-i-chr","()","<p>Returns a one-character string at the beginning of the string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-string\">&quot;abcde&quot;</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">chr</span>    <span class=\"ruby-comment\">#=&gt; &quot;a&quot;</span>\n</pre>\n",null,0],["chroot","Dir","Ruby/classes/Dir.html#method-c-chroot","(p1)","<p>Changes this process&#39;s idea of the file system root. Only a privileged\nprocess may make this call. …\n",null,0],["chunk","Enumerable","Ruby/classes/Enumerable.html#method-i-chunk","(p1 = v1)","<p>Creates an enumerator for each chunked elements. The consecutive elements\nwhich have same block value …\n",null,0],["civil_from_format","DateTime","Rails/classes/DateTime.html#method-c-civil_from_format","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0)","",null,1],["class","Object","Ruby/classes/Object.html#method-i-class","()","<p>Returns the class of <em>obj</em>. This method must always be called with\nan explicit receiver, as <code>class</code> is also …\n",null,0],["class_attribute","Class","Rails/classes/Class.html#method-i-class_attribute","(*attrs)","<p>Declare a class-level attribute whose value is inheritable by subclasses.\nSubclasses can change their …\n",null,1],["class_eval","Module","Ruby/classes/Module.html#method-i-class_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>. This can be\nused to add methods to a class. <code>module_eval</code> …\n",null,0],["class_eval","Kernel","Rails/classes/Kernel.html#method-i-class_eval","(*args, &block)","<p>class_eval on an object acts like singleton_class.class_eval.\n",null,1],["class_exec","Module","Ruby/classes/Module.html#method-i-class_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method\ndefined in the block will belong …\n",null,0],["class_name","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-class_name","()","<p>Returns the class name for the macro.\n<p><code>composed_of :balance, :class_name =&gt; &#39;Money&#39;</code>\nreturns …\n",null,1],["class_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-class_name","()","",null,1],["class_of_active_record_descendant","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-class_of_active_record_descendant","(klass)","<p>Returns the class descending directly from ActiveRecord::Base or an\nabstract class, if any, in the inheritance …\n",null,1],["class_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-class_path","()","",null,1],["class_variable_defined?","Module","Ruby/classes/Module.html#method-i-class_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given class variable is defined in\n<em>obj</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-identifier\">@@foo</span> = <span class=\"ruby-value\">99</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">Fred</span>.<span class=\"ruby-identifier\">class_variable_defined?</span>(:<span class=\"ruby-identifier\">@@foo</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["class_variable_get","Module","Ruby/classes/Module.html#method-i-class_variable_get","(p1)","<p>Returns the value of the given class variable (or throws a\n<code>NameError</code> exception). The <code>@@</code> part of the variable\n…\n",null,0],["class_variable_set","Module","Ruby/classes/Module.html#method-i-class_variable_set","(p1, p2)","<p>Sets the class variable names by <em>symbol</em> to <em>object</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-identifier\">@@foo</span> = <span class=\"ruby-value\">99</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">foo</span>\n    <span class=\"ruby-identifier\">@@foo</span>\n  <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">end</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["class_variables","Module","Ruby/classes/Module.html#method-i-class_variables","()","<p>Returns an array of the names of class variables in <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">One</span>\n  <span class=\"ruby-identifier\">@@var1</span> = <span class=\"ruby-value\">1</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Two</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">One</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["classify","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-classify","(table_name)","<p>Create a class name from a plural table name like Rails does for table\nnames to models. Note that this …\n",null,1],["classify","String","Rails/classes/String.html#method-i-classify","()","<p>Create a class name from a plural table name like Rails does for table\nnames to models. Note that this …\n",null,1],["clean","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-clean","(backtrace, kind = :silent)","<p>Returns the backtrace after all filters and silencers have been run against\nit. Filters run first, then …\n",null,1],["cleanup","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-cleanup","(options = nil)","",null,1],["cleanup","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-cleanup","(options = nil)","",null,1],["cleanup","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-cleanup","(options = nil)","",null,1],["cleanup","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-cleanup","(options = nil)","<p>Cleanup the cache by removing expired entries.\n<p>Options are passed to the underlying cache implementation. …\n",null,1],["cleanup!","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-cleanup-21","()","<p>Execute all cleanup callbacks.\n",null,1],["clear","Array","Ruby/classes/Array.html#method-i-clear","()","<p>Removes all elements from <code>self</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span>, <span class=\"ruby-string\">&quot;d&quot;</span>, <span class=\"ruby-string\">&quot;e&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">clear</span>    <span class=\"ruby-comment\">#=&gt; [ ]</span>\n</pre>\n",null,0],["clear","ENV","Ruby/classes/ENV.html#method-c-clear","()","<p>Removes every environment variable.\n",null,0],["clear","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-clear","()","<p>Clears the GC profiler data.\n",null,0],["clear","Hash","Ruby/classes/Hash.html#method-i-clear","()","<p>Removes all key-value pairs from <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }   <span class=\"ruby-comment\">#=&gt; {&quot;a&quot;=&gt;100, &quot;b&quot;=&gt;200}</span>\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">clear</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["clear","String","Ruby/classes/String.html#method-i-clear","()","<p>Makes string empty.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-string\">&quot;abcde&quot;</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">clear</span>    <span class=\"ruby-comment\">#=&gt; &quot;&quot;</span>\n</pre>\n",null,0],["clear","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-clear","()","",null,1],["clear","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-clear","()","<p>Clear the messages\n",null,1],["clear","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-clear","()","",null,1],["clear","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-clear","()","",null,1],["clear","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-clear","(options = nil)","<p>Clear the entire cache on all memcached servers. This method should be used\nwith care when shared cache …\n",null,1],["clear","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-clear","(options = nil)","<p>Clear the entire cache. Be careful with this method since it could affect\nother processes if shared cache …\n",null,1],["clear","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-clear","(options = nil)","",null,1],["clear","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-clear","()","",null,1],["clear","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-clear","(scope = :all)","<p>Clears the loaded inflections within a given scope (default is\n<code>:all</code>). Give the scope as a symbol of the …\n",null,1],["clear","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-clear","()","",null,1],["clear!","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear-21","()","<p>Clears out internal caches\n",null,1],["clear!","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-clear-21","()","",null,1],["clear_action_methods!","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-clear_action_methods-21","()","<p>action_methods are cached and there is sometimes need to refresh them.\nclear_action_methods! allows you …\n",null,1],["clear_active_connections!","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-clear_active_connections-21","()","",null,1],["clear_active_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_active_connections-21","()","<p>Returns any connections in use by the current thread back to the pool.\n",null,1],["clear_all_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_all_connections-21","()","",null,1],["clear_cache","ActionView::Resolver","Rails/classes/ActionView/Resolver.html#method-i-clear_cache","()","",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-clear_cache-21","()","<p>Clear any caching the database adapter may be doing, for example clearing\nthe prepared statement cache. …\n",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_cache-21","()","",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,1],["clear_cache!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-clear_cache-21","()","<p>Clears the prepared statements cache.\n",null,1],["clear_helpers","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-clear_helpers","()","<p>Clears up all existing helpers in this class, only keeping the helper with\nthe same name as this class. …\n",null,1],["clear_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-clear_query_cache","()","<p>Clears the query cache.\n<p>One reason you may wish to call this method explicitly is between queries\nthat …\n",null,1],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n",null,1],["clear_reloadable_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_reloadable_connections-21","()","<p>Clears the cache which maps classes.\n",null,1],["clear_respond_to","ActionController::MimeResponds::ClassMethods","Rails/classes/ActionController/MimeResponds/ClassMethods.html#method-i-clear_respond_to","()","<p>Clear all mime types in <code>respond_to</code>.\n",null,1],["clear_stale_cached_connections!","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-clear_stale_cached_connections-21","()","<p>Return any checked-out connections back to the pool by threads that are no\nlonger alive.\n",null,1],["clear_table_cache!","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-clear_table_cache-21","(table_name)","<p>Clear out internal caches for table with <code>table_name</code>.\n",null,1],["clear_tags!","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-clear_tags-21","()","",null,1],["client_encoding","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-client_encoding","()","<p>Get the client encoding for this database\n",null,1],["client_min_messages","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-client_min_messages","()","<p>Returns the current client message level.\n",null,1],["client_min_messages=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-client_min_messages-3D","(level)","<p>Set the client message level.\n",null,1],["clone","Method","Ruby/classes/Method.html#method-i-clone","()","<p>MISSING: documentation\n",null,0],["clone","Object","Ruby/classes/Object.html#method-i-clone","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of\n<em>obj</em> are copied, but not the objects they reference. …\n",null,0],["clone","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-clone","()","<p>MISSING: documentation\n",null,0],["clone","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-clone","()","<p>Returns a clone of the resource that hasn&#39;t been assigned an\n<code>id</code> yet and is treated as a new resource. …\n",null,1],["clone_empty","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-clone_empty","()","",null,1],["close","ARGF","Ruby/classes/ARGF.html#method-i-close","()","\n<pre>Closes the current file and skips to the next in the stream. Trying to\nclose a file that has already ...</pre>\n",null,0],["close","Dir","Ruby/classes/Dir.html#method-i-close","()","<p>Closes the directory stream. Any further attempts to access <em>dir</em>\nwill raise an <code>IOError</code>.\n\n<pre>d = Dir.new(&quot;testdir&quot;) ...</pre>\n",null,0],["close","IO","Ruby/classes/IO.html#method-i-close","()","<p>Closes <em>ios</em> and flushes any pending writes to the operating system.\nThe stream is unavailable for any …\n",null,0],["close","ActionDispatch::BodyProxy","Rails/classes/ActionDispatch/BodyProxy.html#method-i-close","()","",null,1],["close","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-close","()","",null,1],["close","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-close","()","<p>Check the connection back in to the connection pool\n",null,1],["close","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-close","()","",null,1],["close","ActiveSupport::Gzip::Stream","Rails/classes/ActiveSupport/Gzip/Stream.html#method-i-close","()","",null,1],["close_on_exec=","IO","Ruby/classes/IO.html#method-i-close_on_exec-3D","(p1)","<p>Sets a close-on-exec flag.\n\n<pre>f = open(&quot;/dev/null&quot;)\nf.close_on_exec = true\nsystem(&quot;cat&quot;, &quot;/proc/self/fd/#{f.fileno}&quot;) ...</pre>\n",null,0],["close_on_exec?","IO","Ruby/classes/IO.html#method-i-close_on_exec-3F","()","<p>Returns <code>true</code> if <em>ios</em> will be closed on exec.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;/dev/null&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">close_on_exec?</span>                 <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["close_read","IO","Ruby/classes/IO.html#method-i-close_read","()","<p>Closes the read end of a duplex I/O stream (i.e., one that contains both a\nread and a write stream, such …\n",null,0],["close_write","IO","Ruby/classes/IO.html#method-i-close_write","()","<p>Closes the write end of a duplex I/O stream (i.e., one that contains both a\nread and a write stream, …\n",null,0],["closed?","ARGF","Ruby/classes/ARGF.html#method-i-closed-3F","()","<p>Returns <em>true</em> if the current file has been closed; <em>false</em>\notherwise. Use <code>ARGF.close</code> to actually close the …\n",null,0],["closed?","IO","Ruby/classes/IO.html#method-i-closed-3F","()","<p>Returns <code>true</code> if <em>ios</em> is completely closed (for duplex\nstreams, both reader and writer), <code>false</code> otherwise. …\n",null,0],["closed?","ActionDispatch::BodyProxy","Rails/classes/ActionDispatch/BodyProxy.html#method-i-closed-3F","()","",null,1],["code","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-code","()","<p>Returns a String to ensure compatibility with Net::HTTPResponse\n",null,1],["codepoints","ARGF","Ruby/classes/ARGF.html#method-i-codepoints","()","<p>Iterates over each codepoint of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,0],["codepoints","IO","Ruby/classes/IO.html#method-i-codepoints","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>ios</em>,\npassing the codepoint as an argument. The stream …\n",null,0],["codepoints","String","Ruby/classes/String.html#method-i-codepoints","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>str</em>,\nalso known as a <em>codepoint</em> when applied to Unicode …\n",null,0],["coerce","Bignum","Ruby/classes/Bignum.html#method-i-coerce","(p1)","<p>MISSING: documentation\n",null,0],["coerce","Float","Ruby/classes/Float.html#method-i-coerce","(p1)","<p>Returns an array with both <em>aNumeric</em> and <em>flt</em> represented\nas <code>Float</code> objects. This is achieved by converting …\n",null,0],["coerce","Numeric","Ruby/classes/Numeric.html#method-i-coerce","(p1)","<p>If <em>aNumeric</em> is the same type as <em>num</em>, returns an array\ncontaining <em>aNumeric</em> and <em>num</em>. Otherwise, returns …\n",null,0],["collation","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-collation","()","<p>Returns the database collation strategy.\n",null,1],["collect","Array","Ruby/classes/Array.html#method-i-collect","()","<p>Invokes <em>block</em> once for each element of <code>self</code>. Creates\na new array containing the values returned by the …\n",null,0],["collect","Enumerable","Ruby/classes/Enumerable.html#method-i-collect","()","<p>Returns a new array with the results of running <em>block</em> once for\nevery element in <em>enum</em>.\n<p>If no block is given, …\n",null,0],["collect!","Array","Ruby/classes/Array.html#method-i-collect-21","()","<p>Invokes the block once for each element of <code>self</code>, replacing the\nelement with the value returned by <em>block</em> …\n",null,0],["collect_concat","Enumerable","Ruby/classes/Enumerable.html#method-i-collect_concat","()","<p>Returns a new array with the concatenated results of running <em>block</em>\nonce for every element in <em>enum</em>.\n<p>If …\n",null,0],["collection","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-collection","()","<p>To add a route to the collection:\n\n<pre>resources :photos do\n  collection do\n    get &#39;search&#39;\n  end\nend</pre>\n<p>This …\n",null,1],["collection_name","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-collection_name","()","",null,1],["collection_path","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-collection_path","(options = nil)","",null,1],["collection_path","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-collection_path","(prefix_options = {}, query_options = nil)","<p>Gets the collection path for the REST resources.  If the\n<code>query_options</code> parameter is omitted, Rails will …\n",null,1],["collection_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-collection_select","(method, collection, value_method, text_method, options = {}, html_options = {})","",null,1],["collection_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-collection_select","(object, method, collection, value_method, text_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code> and <code>&lt;option&gt;</code> tags\nfor the collection of existing return values of <code>method</code> …\n",null,1],["color","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-i-color","(text, color, bold=false)","<p>Set color by using a string or one of the defined constants. If a third\noption is set to true, it also …\n",null,1],["colorize_logging","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-colorize_logging","()","",null,1],["colorize_logging=","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-colorize_logging-3D","(val)","",null,1],["column","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column","(column_name, type, options = {})","<p>Adds a new column to the named table. See TableDefinition#column for\ndetails of the options you can use. …\n",null,1],["column","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-column","(name, type, options = {})","<p>Instantiates a new column for the table. The <code>type</code> parameter is\nnormally one of the migrations native …\n",null,1],["column_defaults","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_defaults","()","<p>Returns a hash where the keys are column names and the values are default\nvalues when instantiating the …\n",null,1],["column_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-column_exists-3F","(table_name, column_name, type = nil, options = {})","<p>Checks to see if a column exists in a given table.\n<p>Examples\n\n<pre># Check a column exists\ncolumn_exists?(:suppliers, ...</pre>\n",null,1],["column_exists?","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-column_exists-3F","(column_name, type = nil, options = {})","<p>Checks to see if a column exists. See SchemaStatements#column_exists?\n",null,1],["column_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-column_name_length","()","<p>Returns the maximum length of a column name.\n",null,1],["column_names","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-column_names","()","<p>Returns an array of column names as strings.\n",null,1],["columns","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-columns","()","",null,1],["columns","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-columns","(table_name, name = nil)","<p>Returns the list of all column definitions for a table.\n",null,1],["columns","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns","(table_name, name = nil)","<p>Returns an array of Column objects for the table specified by\n<code>table_name</code>. See the concrete implementation …\n",null,1],["columns","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns","()","<p>Returns an array of column objects for the table associated with this\nclass.\n",null,1],["columns_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-columns_for_remove","(table_name, *column_names)","",null,1],["columns_hash","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-columns_hash","()","",null,1],["columns_hash","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-columns_hash","()","<p>Returns a hash of column objects for the table associated with this class.\n",null,1],["columns_per_multicolumn_index","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-columns_per_multicolumn_index","()","<p>Returns the maximum number of columns in a multicolumn index.\n",null,1],["columns_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-columns_per_table","()","<p>Returns the maximum number of columns per table.\n",null,1],["combination","Array","Ruby/classes/Array.html#method-i-combination","(p1)","<p>When invoked with a block, yields all combinations of length <em>n</em> of\nelements from <em>ary</em> and then returns …\n",null,0],["comment_if","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-comment_if","(value)","",null,1],["commit_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-commit_db_transaction","()","<p>Commits the transaction (and turns on auto-committing).\n",null,1],["commit_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-commit_db_transaction","()","<p>Commits a transaction.\n",null,1],["commit_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-commit_transaction_records","()","<p>Send a commit message to all records after they have been committed.\n",null,1],["compact","Array","Ruby/classes/Array.html#method-i-compact","()","<p>Returns a copy of <code>self</code> with all <code>nil</code> elements\nremoved.\n\n<pre>[ &quot;a&quot;, nil, &quot;b&quot;, nil, &quot;c&quot;, nil ].compact\n       ...</pre>\n",null,0],["compact!","Array","Ruby/classes/Array.html#method-i-compact-21","()","<p>Removes <code>nil</code> elements from the array. Returns <code>nil</code>\nif no changes were made, otherwise returns <em>ary</em>.\n\n<pre>[ &quot;a&quot;, ...</pre>\n",null,0],["comparable_time","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-comparable_time","()","",null,1],["compare_by_identity","Hash","Ruby/classes/Hash.html#method-i-compare_by_identity","()","<p>Makes <em>hsh</em> compare its keys by their identity, i.e. it will\nconsider exact same objects as same keys. …\n",null,0],["compare_by_identity?","Hash","Ruby/classes/Hash.html#method-i-compare_by_identity-3F","()","<p>Returns <code>true</code> if <em>hsh</em> will compare its keys by their\nidentity.  Also see <code>Hash#compare_by_identity</code>.\n",null,0],["compare_with_coercion","Time","Rails/classes/Time.html#method-i-compare_with_coercion","(other)","<p>Layers additional behavior on Time#&lt;=&gt; so that DateTime and\nActiveSupport::TimeWithZone instances …\n",null,1],["compare_without_coercion","Time","Rails/classes/Time.html#method-i-compare_without_coercion","(other)","",null,1],["compatible?","Encoding","Ruby/classes/Encoding.html#method-c-compatible-3F","(p1, p2)","<p>Checks the compatibility of two objects.\n<p>If the objects are both strings they are compatible when they …\n",null,0],["compile","Regexp","Ruby/classes/Regexp.html#method-c-compile","(*args)","<p>Synonym for <code>Regexp.new</code>\n",null,0],["compile","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = v5)","",null,0],["compile","Sprockets::StaticCompiler","Rails/classes/Sprockets/StaticCompiler.html#method-i-compile","()","",null,1],["compile_file","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_file","(p1, p2 = v2)","",null,0],["compile_methods!","ActiveSupport::Configurable::Configuration","Rails/classes/ActiveSupport/Configurable/Configuration.html#method-c-compile_methods-21","(keys)","<p>compiles reader methods so we don&#39;t have to go through method_missing\n",null,1],["compile_methods!","ActiveSupport::Configurable::Configuration","Rails/classes/ActiveSupport/Configurable/Configuration.html#method-i-compile_methods-21","()","",null,1],["compile_option","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_option","()","",null,0],["compile_option=","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-compile_option-3D","(p1)","",null,0],["compiled_asset_path","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-compiled_asset_path","()","",null,1],["compose","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-compose","()","<p>Performs composition on all the characters.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">length</span>                       <span class=\"ruby-comment\"># =&gt; 3</span>\n<span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">compose</span>.<span class=\"ruby-identifier\">to_s</span>.<span class=\"ruby-identifier\">length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["compose_codepoints","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-compose_codepoints","(codepoints)","<p>Compose decomposed characters to the composed form.\n",null,1],["composed_of","ActiveRecord::Aggregations::ClassMethods","Rails/classes/ActiveRecord/Aggregations/ClassMethods.html#method-i-composed_of","(part_id, options = {})","<p>Adds reader and writer methods for manipulating a value object:\n<code>composed_of :address</code> adds <code>address</code> and …\n",null,1],["compress","ActiveSupport::Gzip","Rails/classes/ActiveSupport/Gzip.html#method-c-compress","(source)","<p>Compresses a string using gzip.\n",null,1],["compressed?","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-compressed-3F","()","",null,1],["compute_tags","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-compute_tags","(request)","",null,1],["compute_type","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-compute_type","(type_name)","<p>Returns the class type of the record using the current module as a prefix.\nSo descendants of MyApp::Business::Account …\n",null,1],["concat","Array","Ruby/classes/Array.html#method-i-concat","(p1)","<p>Appends the elements of <em>other_ary</em> to <code>self</code>.\n\n<pre class=\"ruby\">[ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span> ].<span class=\"ruby-identifier\">concat</span>( [<span class=\"ruby-string\">&quot;c&quot;</span>, <span class=\"ruby-string\">&quot;d&quot;</span>] ) <span class=\"ruby-comment\">#=&gt; [ &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ...</span>\n</pre>\n",null,0],["concat","String","Ruby/classes/String.html#method-i-concat","(p1)","<p>Append—Concatenates the given object to <em>str</em>. If the object is a\n<code>Integer</code>, it is considered as a codepoint, …\n",null,0],["concat","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-concat","(string)","<p>The preferred method of outputting text in your views is to use the &lt;%=\n“text” %&gt; eRuby …\n",null,1],["concat","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-concat","(value)","",null,1],["conditional_layout?","AbstractController::Layouts","Rails/classes/AbstractController/Layouts.html#method-i-conditional_layout-3F","()","",null,1],["conditional_layout?","AbstractController::Layouts::ClassMethods::LayoutConditions","Rails/classes/AbstractController/Layouts/ClassMethods/LayoutConditions.html#method-i-conditional_layout-3F","()","<p>Determines whether the current action has a layout by checking the action\nname against the :only and …\n",null,1],["config","ActionView::TestCase::Behavior","Rails/classes/ActionView/TestCase/Behavior.html#method-i-config","()","",null,1],["config","ActiveSupport::Configurable","Rails/classes/ActiveSupport/Configurable.html#method-i-config","()","<p>Reads and writes attributes from a configuration <code>OrderedHash</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">require</span> <span class=\"ruby-string\">&#39;active_support/configurable&#39;</span>\n\n<span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["config","ActiveSupport::Configurable::ClassMethods","Rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config","()","",null,1],["config","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-config","()","",null,1],["config","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-config","()","",null,1],["config","Rails::Plugin","Rails/classes/Rails/Plugin.html#method-i-config","()","",null,1],["config","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-config","()","",null,1],["config","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-config","()","",null,1],["config","Sprockets::Helpers::IsolatedHelper","Rails/classes/Sprockets/Helpers/IsolatedHelper.html#method-i-config","()","",null,1],["config_accessor","ActiveSupport::Configurable::ClassMethods","Rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-config_accessor","(*names)","<p>Allows you to add shortcut so that you don&#39;t have to refer to attribute\nthrough config. Also look …\n",null,1],["configru","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-configru","()","",null,1],["configuration","Rails","Rails/classes/Rails.html#method-c-configuration","()","<p>The Configuration instance used to configure the Rails environment\n",null,1],["configurations","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-configurations","","<p>Contains the database configuration - as is typically stored in\nconfig/database.yml - as a Hash.\n<p>For example, …\n",null,1],["configure","ActiveSupport::Configurable::ClassMethods","Rails/classes/ActiveSupport/Configurable/ClassMethods.html#method-i-configure","()","",null,1],["configure","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-configure","(&block)","",null,1],["conj","Complex","Ruby/classes/Complex.html#method-i-conj","()","<p>Returns the complex conjugate.\n",null,0],["conj","Numeric","Ruby/classes/Numeric.html#method-i-conj","()","<p>Returns self.\n",null,0],["conjugate","Complex","Ruby/classes/Complex.html#method-i-conjugate","()","<p>Returns the complex conjugate.\n",null,0],["conjugate","Numeric","Ruby/classes/Numeric.html#method-i-conjugate","()","<p>Returns self.\n",null,0],["connected?","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connected-3F","()","<p>Returns true if Active Record is connected.\n",null,1],["connected?","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-connected-3F","(klass)","<p>Returns true if a connection that&#39;s accessible to this class has\nalready been opened.\n",null,1],["connected?","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connected-3F","()","<p>Returns true if a connection has already been opened.\n",null,1],["connection","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n",null,1],["connection","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connection","()","<p>Returns the connection currently associated with the class. This can also\nbe used to “borrow” …\n",null,1],["connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-connection","()","<p>Retrieve the connection associated with the current thread, or call\n#checkout to obtain one if necessary. …\n",null,1],["connection","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-connection","()","",null,1],["connection","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-connection","()","",null,1],["connection","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-connection","(refresh = false)","",null,1],["connection","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-connection","(refresh = false)","<p>An instance of ActiveResource::Connection that is the base connection to\nthe remote service. The <code>refresh</code> …\n",null,1],["connection_config","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connection_config","()","<p>Returns the configuration of the associated connection as a hash:\n\n<pre>ActiveRecord::Base.connection_config ...</pre>\n",null,1],["connection_handler","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connection_handler","","<p>The connection handler\n",null,1],["connection_id","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connection_id","()","",null,1],["connection_id=","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connection_id-3D","(connection_id)","",null,1],["connection_pool","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-connection_pool","()","",null,1],["connection_pool","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-connection_pool","()","",null,1],["consider_all_requests_local?","Rails::InfoController","Rails/classes/Rails/InfoController.html#method-i-consider_all_requests_local-3F","()","",null,1],["console","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-console","(&blk)","",null,1],["const_defined?","Module","Ruby/classes/Module.html#method-i-const_defined-3F","(p1, p2 = v2)","<p>Checks for a constant with the given name in <em>mod</em> If\n<code>inherit</code> is set, the lookup will also search the ancestors …\n",null,0],["const_get","Module","Ruby/classes/Module.html#method-i-const_get","(p1, p2 = v2)","<p>Checks for a constant with the given name in <em>mod</em> If\n<code>inherit</code> is set, the lookup will also search the ancestors …\n",null,0],["const_missing","Module","Ruby/classes/Module.html#method-i-const_missing","(p1)","<p>Invoked when a reference is made to an undefined constant in <em>mod</em>.\nIt is passed a symbol for the undefined …\n",null,0],["const_set","Module","Ruby/classes/Module.html#method-i-const_set","(p1, p2)","<p>Sets the named constant to the given object, returning that object. Creates\na new constant if no constant …\n",null,0],["constantize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;Module&quot;</span>.<span class=\"ruby-identifier\">constantize</span>     <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["constantize","String","Rails/classes/String.html#method-i-constantize","()","<p><code>constantize</code> tries to find a declared constant with the name\nspecified in the string. It raises a NameError …\n",null,1],["constants","Module","Ruby/classes/Module.html#method-c-constants","(*args)","<p>In the first form, returns an array of the names of all constants\naccessible from the point of call. …\n",null,0],["constants","Module","Ruby/classes/Module.html#method-i-constants","(p1 = v1)","<p>Returns an array of the names of the constants accessible in <em>mod</em>.\nThis includes the names of constants …\n",null,0],["constraints","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-constraints","(constraints = {})","<p>Parameter Restriction\n<p>Allows you to constrain the nested routes based on a set of rules. For\ninstance, …\n",null,1],["construct_join_dependency_for_association_find","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_join_dependency_for_association_find","()","",null,1],["construct_limited_ids_condition","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_limited_ids_condition","(relation)","",null,1],["construct_relation_for_association_calculations","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_relation_for_association_calculations","()","",null,1],["construct_relation_for_association_find","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-construct_relation_for_association_find","(join_dependency)","",null,1],["consumes?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-c-consumes-3F","(string)","<p>Returns <code>true</code> when the proxy class can handle the string.\nReturns <code>false</code> otherwise.\n",null,1],["contains_bad_protocols?","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-contains_bad_protocols-3F","(attr_name, value)","",null,1],["content_columns","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-content_columns","()","<p>Returns an array of column objects where the primary id, all columns ending\nin “_id” or “_count”, …\n",null,1],["content_for","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for","(name, content = nil, &block)","<p>Calling content_for stores a block of markup in an identifier for later\nuse. You can make subsequent …\n",null,1],["content_for?","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-content_for-3F","(name)","<p>content_for? simply checks whether any content has been captured yet using\ncontent_for Useful to render …\n",null,1],["content_length","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-content_length","()","<p>Returns the content length of the request as an integer.\n",null,1],["content_mime_type","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_mime_type","()","<p>The MIME type of the HTTP request, such as Mime::XML.\n<p>For backward compatibility, the post format is extracted …\n",null,1],["content_tag","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag","(name, content_or_options_with_block = nil, options = nil, escape = true, &block)","<p>Returns an HTML block tag of type <code>name</code> surrounding the\n<code>content</code>. Add HTML attributes by passing an attributes …\n",null,1],["content_tag_for","ActionView::Helpers::RecordTagHelper","Rails/classes/ActionView/Helpers/RecordTagHelper.html#method-i-content_tag_for","(tag_name, single_or_multiple_records, prefix = nil, options = nil, &block)","<p>content_tag_for creates an HTML element with id and class parameters that\nrelate to the specified Active …\n",null,1],["content_type","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-content_type","()","",null,1],["content_type","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-content_type","()","",null,1],["content_type=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-content_type-3D","(type)","<p>Basic implementations for content_type=, location=, and headers are\nprovided to reduce the dependency …\n",null,1],["controller","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-controller","(controller, options={})","<p>Scopes routes to a specific controller\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">controller</span> <span class=\"ruby-string\">&quot;food&quot;</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-identifier\">match</span> <span class=\"ruby-string\">&quot;bacon&quot;</span>, :<span class=\"ruby-identifier\">action</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;bacon&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["controller","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-controller","()","",null,1],["controller","Sprockets::Helpers::IsolatedHelper","Rails/classes/Sprockets/Helpers/IsolatedHelper.html#method-i-controller","()","",null,1],["controller_class","ActionController::TestCase::Behavior::ClassMethods","Rails/classes/ActionController/TestCase/Behavior/ClassMethods.html#method-i-controller_class","()","",null,1],["controller_class=","ActionController::TestCase::Behavior::ClassMethods","Rails/classes/ActionController/TestCase/Behavior/ClassMethods.html#method-i-controller_class-3D","(new_class)","",null,1],["controller_class_name","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_class_name","()","",null,1],["controller_class_path","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_class_path","()","",null,1],["controller_file_name","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_file_name","()","",null,1],["controller_file_path","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_file_path","()","",null,1],["controller_i18n_scope","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-controller_i18n_scope","()","",null,1],["controller_name","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-controller_name","()","<p>Returns the last part of the controller&#39;s name, underscored, without\nthe ending <code>Controller</code>. For instance, …\n",null,1],["controller_name","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-controller_name","()","<p>Delegates to the class&#39; <code>controller_name</code>\n",null,1],["controller_path","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-controller_path","()","<p>Returns the full controller name, underscored, without the ending\nController. For instance, MyApp::MyPostsController …\n",null,1],["controller_path","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-controller_path","()","<p>Delegates to the class&#39; #controller_path\n",null,1],["controller_path","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-controller_path","()","",null,1],["controller_path=","ActionView::TestCase::TestController","Rails/classes/ActionView/TestCase/TestController.html#method-i-controller_path-3D","(path)","",null,1],["convert","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-convert","(p1)","<p>Convert source_string and return destination_string.\n<p>source_string is assumed as a part of source. i.e. …\n",null,0],["convert_database_option_for_jruby","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-convert_database_option_for_jruby","()","",null,1],["convert_key","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_key","(key)","",null,1],["convert_key","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_key","(key)","",null,1],["convert_to_model","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-convert_to_model","(object)","<p>Converts the given object to an ActiveModel compliant one.\n",null,1],["convert_value","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_value","(value)","",null,1],["convert_value","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-convert_value","(value)","",null,1],["convpath","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-convpath","()","<p>Returns the conversion path of ec.\n<p>The result is an array of conversions.\n\n<pre>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...</pre>\n",null,0],["cookie_jar","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-cookie_jar","()","",null,1],["cookies","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-i-cookies","()","<p>A map of the cookies returned by the last response, and which will be sent\nwith the next request.\n",null,1],["cookies","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-cookies","()","<p>Returns the response cookies, converted to a Hash of (name =&gt; value)\npairs\n\n<pre>assert_equal &#39;AuthorOfNewPage&#39;, ...</pre>\n",null,1],["cookies","ActionDispatch::TestProcess","Rails/classes/ActionDispatch/TestProcess.html#method-i-cookies","()","",null,1],["cookies","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-cookies","()","",null,1],["copy","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-copy","(destination, sources, options = {})","",null,1],["copy_javascript","Js::Generators::AssetsGenerator","Rails/classes/Js/Generators/AssetsGenerator.html#method-i-copy_javascript","()","",null,1],["copy_stream","IO","Ruby/classes/IO.html#method-c-copy_stream","(p1, p2, p3 = v3, p4 = v4)","<p>IO.copy_stream copies <em>src</em> to <em>dst</em>. <em>src</em> and\n<em>dst</em> is either a filename or an IO.\n<p>This method returns the number …\n",null,0],["copy_stylesheet","Css::Generators::AssetsGenerator","Rails/classes/Css/Generators/AssetsGenerator.html#method-i-copy_stylesheet","()","",null,1],["copy_stylesheet","Css::Generators::ScaffoldGenerator","Rails/classes/Css/Generators/ScaffoldGenerator.html#method-i-copy_stylesheet","()","<p>In order to allow the Sass generators to pick up the default Rails CSS and\ntransform it, we leave it …\n",null,1],["copy_view_files","Erb::Generators::ControllerGenerator","Rails/classes/Erb/Generators/ControllerGenerator.html#method-i-copy_view_files","()","",null,1],["copy_view_files","Erb::Generators::ScaffoldGenerator","Rails/classes/Erb/Generators/ScaffoldGenerator.html#method-i-copy_view_files","()","",null,1],["coredump?","Process::Status","Ruby/classes/Process/Status.html#method-i-coredump-3F","()","<p>Returns <code>true</code> if <em>stat</em> generated a coredump when it\nterminated. Not available on all platforms.\n",null,0],["cos","Math","Ruby/classes/Math.html#method-c-cos","(p1)","<p>Computes the cosine of <em>x</em> (expressed in radians). Returns -1..1.\n",null,0],["cosh","Math","Ruby/classes/Math.html#method-c-cosh","(p1)","<p>Computes the hyperbolic cosine of <em>x</em> (expressed in radians).\n",null,0],["count","Array","Ruby/classes/Array.html#method-i-count","(p1)","<p>Returns the number of elements.  If an argument is given, counts the number\nof elements which equals …\n",null,0],["count","Enumerable","Ruby/classes/Enumerable.html#method-i-count","(p1)","<p>Returns the number of items in <em>enum</em>, where #size is called if it\nresponds to it, otherwise the items …\n",null,0],["count","GC","Ruby/classes/GC.html#method-c-count","()","<p>The number of times GC occurred.\n<p>It returns the number of times GC occurred since the process started. …\n",null,0],["count","String","Ruby/classes/String.html#method-i-count","(*args)","<p>Each <em>other_str</em> parameter defines a set of characters to count. \nThe intersection of these sets defines …\n",null,0],["count","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-count","()","<p>Returns the number of error messages.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&quot;can&#39;t be blank&quot;</span>)\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">count</span> <span class=\"ruby-comment\"># =&gt; 1</span>\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["count","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-count","(column_name = nil, options = {})","<p>Count operates using three different approaches.\n<p>Count all: By not passing any parameters to count, it …\n",null,1],["count_by_sql","ActiveRecord::Querying","Rails/classes/ActiveRecord/Querying.html#method-i-count_by_sql","(sql)","<p>Returns the result of an SQL statement that should only include a COUNT(*)\nin the SELECT part. The use …\n",null,1],["count_objects","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-count_objects","(p1 = v1)","<p>Counts objects for each type.\n<p>It returns a hash as: {:TOTAL=&gt;10000, :FREE=&gt;3011, :T_OBJECT=&gt;6, …\n",null,0],["count_observers","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-count_observers","()","<p>Total number of observers.\n",null,1],["cover?","Range","Ruby/classes/Range.html#method-i-cover-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is between beg and end, i.e\n<code>beg &lt;= obj &lt;= end</code> (or <em>end</em> exclusive when\n<code>exclude_end</code> …\n",null,0],["create","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-create","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",null,1],["create","ActiveRecord::Persistence::ClassMethods","Rails/classes/ActiveRecord/Persistence/ClassMethods.html#method-i-create","(attributes = nil, options = {}, &block)","<p>Creates an object (or multiple objects) and saves it to the database, if\nvalidations pass. The resulting …\n",null,1],["create","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-create","(*args, &block)","",null,1],["create","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-create","()","<p>Create (i.e., save to the remote service) the new resource.\n",null,1],["create","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-create","(attributes = {})","<p>Creates a new resource instance and makes a request to the remote service\nthat it be saved, making it …\n",null,1],["create","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-c-create","(raw_value, created_at, options = {})","<p>Create an entry with internal attributes set. This method is intended to be\nused by implementations that …\n",null,1],["create","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-create","(name, utc_offset = nil, tzinfo = nil)","",null,1],["create!","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-create-21","(*args, &block)","",null,1],["create!","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-create-21","(attributes = nil, options = {}, &block)","<p>Creates an object just like Base.create but calls <code>save!</code>\ninstead of <code>save</code> so an exception is raised if …\n",null,1],["create_active_record_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_active_record_files","()","",null,1],["create_app_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_app_files","()","",null,1],["create_app_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_app_files","()","",null,1],["create_boot_file","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_boot_file","()","",null,1],["create_composition_map","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-create_composition_map","()","",null,1],["create_config_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_config_files","()","",null,1],["create_config_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_config_files","()","",null,1],["create_controller_files","Rails::Generators::ControllerGenerator","Rails/classes/Rails/Generators/ControllerGenerator.html#method-i-create_controller_files","()","",null,1],["create_controller_files","Rails::Generators::ScaffoldControllerGenerator","Rails/classes/Rails/Generators/ScaffoldControllerGenerator.html#method-i-create_controller_files","()","",null,1],["create_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_database","(name, options = {})","<p>Create a new MySQL database with optional <code>:charset</code> and\n<code>:collation</code>. Charset defaults to utf8.\n<p>Example: …\n",null,1],["create_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-create_database","(name, options = {})","<p>Create a new PostgreSQL database. Options include <code>:owner</code>,\n<code>:template</code>, <code>:encoding</code>, <code>:tablespace</code>,\nand <code>:connection_limit</code> …\n",null,1],["create_db_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_db_files","()","",null,1],["create_doc_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_doc_files","()","",null,1],["create_dummy_app","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_dummy_app","(path = nil)","",null,1],["create_fixture_file","TestUnit::Generators::ModelGenerator","Rails/classes/TestUnit/Generators/ModelGenerator.html#method-i-create_fixture_file","()","",null,1],["create_fixtures","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-create_fixtures","(fixtures_directory, table_names, class_names = {})","",null,1],["create_fixtures","Object","Rails/classes/Object.html#method-i-create_fixtures","(*table_names, &block)","",null,1],["create_generated_attribute","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-create_generated_attribute","(attribute_type, name = 'test', index = nil)","<p>Create a Rails::Generators::GeneratedAttribute by supplying the attribute\ntype and, optionally, the attribute …\n",null,1],["create_generator_files","Rails::Generators::GeneratorGenerator","Rails/classes/Rails/Generators/GeneratorGenerator.html#method-i-create_generator_files","()","",null,1],["create_helper_files","Rails::Generators::HelperGenerator","Rails/classes/Rails/Generators/HelperGenerator.html#method-i-create_helper_files","()","",null,1],["create_helper_files","TestUnit::Generators::HelperGenerator","Rails/classes/TestUnit/Generators/HelperGenerator.html#method-i-create_helper_files","()","",null,1],["create_images_directory","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_images_directory","()","",null,1],["create_javascript_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_javascript_files","()","",null,1],["create_lib_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_lib_files","()","",null,1],["create_lib_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_lib_files","()","",null,1],["create_log_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_log_files","()","",null,1],["create_mailer_file","Rails::Generators::MailerGenerator","Rails/classes/Rails/Generators/MailerGenerator.html#method-i-create_mailer_file","()","",null,1],["create_migration_file","ActiveRecord::Generators::MigrationGenerator","Rails/classes/ActiveRecord/Generators/MigrationGenerator.html#method-i-create_migration_file","()","",null,1],["create_migration_file","ActiveRecord::Generators::ModelGenerator","Rails/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-create_migration_file","()","",null,1],["create_migration_file","ActiveRecord::Generators::SessionMigrationGenerator","Rails/classes/ActiveRecord/Generators/SessionMigrationGenerator.html#method-i-create_migration_file","()","",null,1],["create_model_file","ActiveRecord::Generators::ModelGenerator","Rails/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-create_model_file","()","",null,1],["create_module_file","ActiveRecord::Generators::ModelGenerator","Rails/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-create_module_file","()","",null,1],["create_observer_file","ActiveRecord::Generators::ObserverGenerator","Rails/classes/ActiveRecord/Generators/ObserverGenerator.html#method-i-create_observer_file","()","",null,1],["create_path_and_open_file","ActiveSupport::Testing::Performance::Profiler","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html#method-i-create_path_and_open_file","(printer_name)","",null,1],["create_public_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_public_files","()","",null,1],["create_public_stylesheets_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_public_stylesheets_files","()","",null,1],["create_reflection","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-create_reflection","(macro, name, options, active_record)","",null,1],["create_root","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-create_root","()","",null,1],["create_root_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_root_files","()","",null,1],["create_root_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_root_files","()","",null,1],["create_root_folder","Erb::Generators::ScaffoldGenerator","Rails/classes/Erb/Generators/ScaffoldGenerator.html#method-i-create_root_folder","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-create_savepoint","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-create_savepoint","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-create_savepoint","()","",null,1],["create_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-create_savepoint","()","",null,1],["create_script_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_script_files","()","",null,1],["create_script_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_script_files","()","",null,1],["create_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-create_table","(table_name, options = {})","<p>Creates a new table with the name <code>table_name</code>.\n<code>table_name</code> may either be a String or a Symbol.\n<p>There are …\n",null,1],["create_task_files","Rails::Generators::TaskGenerator","Rails/classes/Rails/Generators/TaskGenerator.html#method-i-create_task_files","()","",null,1],["create_test_dummy_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_test_dummy_files","()","",null,1],["create_test_file","TestUnit::Generators::ModelGenerator","Rails/classes/TestUnit/Generators/ModelGenerator.html#method-i-create_test_file","()","",null,1],["create_test_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::ControllerGenerator","Rails/classes/TestUnit/Generators/ControllerGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::IntegrationGenerator","Rails/classes/TestUnit/Generators/IntegrationGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::MailerGenerator","Rails/classes/TestUnit/Generators/MailerGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::ObserverGenerator","Rails/classes/TestUnit/Generators/ObserverGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::PerformanceGenerator","Rails/classes/TestUnit/Generators/PerformanceGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::PluginGenerator","Rails/classes/TestUnit/Generators/PluginGenerator.html#method-i-create_test_files","()","",null,1],["create_test_files","TestUnit::Generators::ScaffoldGenerator","Rails/classes/TestUnit/Generators/ScaffoldGenerator.html#method-i-create_test_files","()","",null,1],["create_tmp_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_tmp_files","()","",null,1],["create_vendor_files","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-create_vendor_files","()","",null,1],["create_with","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-create_with","(value)","",null,1],["creator?","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-i-creator-3F","()","",null,1],["crypt","String","Ruby/classes/String.html#method-i-crypt","(p1)","<p>Applies a one-way cryptographic hash to <em>str</em> by invoking the\nstandard library function <code>crypt</code>. The argument …\n",null,0],["csrf_meta_tag","ActionView::Helpers::CsrfHelper","Rails/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tag","()","<p>For backwards compatibility.\n",null,1],["csrf_meta_tags","ActionView::Helpers::CsrfHelper","Rails/classes/ActionView/Helpers/CsrfHelper.html#method-i-csrf_meta_tags","()","<p>Returns meta tags “csrf-param” and “csrf-token” with the name of the\ncross-site request …\n",null,1],["css_select","ActionDispatch::Assertions::SelectorAssertions","Rails/classes/ActionDispatch/Assertions/SelectorAssertions.html#method-i-css_select","(*args)","<p>Select and return all matching elements.\n<p>If called with a single argument, uses that argument as a selector …\n",null,1],["ctime","File","Ruby/classes/File.html#method-c-ctime","(p1)","<p>Returns the change time for the named file (the time at which directory\ninformation about the file was …\n",null,0],["ctime","File","Ruby/classes/File.html#method-i-ctime","()","<p>Returns the change time for <em>file</em> (that is, the time directory\ninformation about the file was changed, …\n",null,0],["ctime","File::Stat","Ruby/classes/File/Stat.html#method-i-ctime","()","<p>Returns the change time for <em>stat</em> (that is, the time directory\ninformation about the file was changed, …\n",null,0],["ctime","Time","Ruby/classes/Time.html#method-i-ctime","()","<p>Returns a canonical string representation of <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>.<span class=\"ruby-identifier\">asctime</span>   <span class=\"ruby-comment\">#=&gt; &quot;Wed Apr  9 08:56:03 2003&quot;</span>\n</pre>\n",null,0],["current","Fiber","Ruby/classes/Fiber.html#method-c-current","()","<p>Returns the current fiber. You need to <code>require &#39;fiber&#39;</code>\nbefore using this method. If you are not …\n",null,0],["current","Thread","Ruby/classes/Thread.html#method-c-current","()","<p>Returns the currently executing thread.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">current</span>   <span class=\"ruby-comment\">#=&gt; #&lt;Thread:0x401bdf4c run&gt;</span>\n</pre>\n",null,0],["current","Date","Rails/classes/Date.html#method-c-current","()","<p>Returns Time.zone.today when <code>Time.zone</code> or\n<code>config.time_zone</code> are set, otherwise just returns Date.today …\n",null,1],["current","DateTime","Rails/classes/DateTime.html#method-c-current","()","<p>Returns <code>Time.zone.now.to_datetime</code> when <code>Time.zone</code>\nor <code>config.time_zone</code> are set, otherwise returns\n<code>Time.now</code> …\n",null,1],["current","Time","Rails/classes/Time.html#method-c-current","()","<p>Returns <code>Time.zone.now</code> when <code>Time.zone</code> or\n<code>config.time_zone</code> are set, otherwise just returns\n<code>Time.now</code>.\n",null,1],["current_cycle","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-current_cycle","(name = \"default\")","<p>Returns the current cycle string after a cycle has been started. Useful for\ncomplex table highlighting …\n",null,1],["current_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-current_database","()","",null,1],["current_database","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-current_database","()","<p>Returns the current database name.\n",null,1],["current_hash","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-current_hash","()","",null,1],["current_hash","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-current_hash","()","",null,1],["current_page?","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-current_page-3F","(options)","<p>True if the current request URI was generated by the given\n<code>options</code>.\n<p>Examples\n<p>Let&#39;s say we&#39;re in …\n",null,1],["current_savepoint_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-current_savepoint_name","()","",null,1],["current_schema","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-current_schema","()","<p>Returns the current schema name.\n",null,1],["curry","Proc","Ruby/classes/Proc.html#method-i-curry","(p1 = v1)","<p>Returns a curried proc. If the optional <em>arity</em> argument is given,\nit determines the number of arguments. …\n",null,0],["custom","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-i-custom","(mime, options={})","",null,1],["custom_dir","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-custom_dir","()","",null,1],["custom_dir","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-custom_dir","()","",null,1],["custom_dir","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-custom_dir","()","",null,1],["custom_method_collection_url","ActiveResource::CustomMethods::ClassMethods","Rails/classes/ActiveResource/CustomMethods/ClassMethods.html#method-i-custom_method_collection_url","(method_name, options = {})","",null,1],["cycle","Array","Ruby/classes/Array.html#method-i-cycle","(p1 = v1)","<p>Calls <em>block</em> for each element repeatedly <em>n</em> times or\nforever if none or <code>nil</code> is given.  If a non-positive …\n",null,0],["cycle","Enumerable","Ruby/classes/Enumerable.html#method-i-cycle","(p1 = v1)","<p>Calls <em>block</em> for each element of <em>enum</em> repeatedly\n<em>n</em> times or forever if none or <code>nil</code> is given.  If a\nnon-positive …\n",null,0],["cycle","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-cycle","(first_value, *values)","<p>Creates a Cycle object whose <em>to_s</em> method cycles through elements\nof an array every time it is called. …\n",null,1],["daemon","Process","Ruby/classes/Process.html#method-c-daemon","(p1 = v1, p2 = v2)","<p>Detach the process from controlling terminal and run in the background as\nsystem daemon.  Unless the …\n",null,0],["daemon","Process","Rails/classes/Process.html#method-c-daemon","(nochdir = nil, noclose = nil)","",null,1],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-dangerous_attribute_method-3F","(name)","<p>A method name is &#39;dangerous&#39; if it is already defined by Active\nRecord, but not by any ancestors. …\n",null,1],["dangerous_attribute_method?","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-dangerous_attribute_method-3F","(method_name)","",null,1],["dasherize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-dasherize","(underscored_word)","<p>Replaces underscores with dashes in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;puni_puni&quot;</span> <span class=\"ruby-comment\"># =&gt; &quot;puni-puni&quot;</span>\n</pre>\n",null,1],["dasherize","String","Rails/classes/String.html#method-i-dasherize","()","<p>Replaces underscores with dashes in the string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;puni_puni&quot;</span> <span class=\"ruby-comment\"># =&gt; &quot;puni-puni&quot;</span>\n</pre>\n",null,1],["data","ActiveRecord::SessionStore::Session","Rails/classes/ActiveRecord/SessionStore/Session.html#method-i-data","()","<p>Lazy-unmarshal session state.\n",null,1],["data","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-data","()","<p>Lazy-unmarshal session state.\n",null,1],["data_column","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-data_column","","<p>The data field defaults to &#39;data&#39;.\n",null,1],["data_column_name","ActiveRecord::SessionStore::Session","Rails/classes/ActiveRecord/SessionStore/Session.html#method-c-data_column_name","","<p>Customizable data column name. Defaults to &#39;data&#39;.\n",null,1],["data_column_name","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-data_column_name","","",null,1],["data_column_size_limit","ActiveRecord::SessionStore::Session","Rails/classes/ActiveRecord/SessionStore/Session.html#method-c-data_column_size_limit","()","",null,1],["database_configuration","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-database_configuration","()","<p>Loads and returns the contents of the #database_configuration_file. The\ncontents of the file are processed …\n",null,1],["database_gemfile_entry","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-database_gemfile_entry","()","",null,1],["database_yml","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-database_yml","()","",null,1],["date_select","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-date_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, and day) pre-selected\nfor accessing a specified date-based …\n",null,1],["date_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-date_select","(method, options = {}, html_options = {})","",null,1],["datetime_select","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-datetime_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for year, month, day, hour, and minute)\npre-selected for accessing …\n",null,1],["datetime_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-datetime_select","(method, options = {}, html_options = {})","",null,1],["day","Time","Ruby/classes/Time.html#method-i-day","()","<p>Returns the day of the month (1..n) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:03 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">day</span>      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["day","Numeric","Rails/classes/Numeric.html#method-i-day","()","",null,1],["days","Numeric","Rails/classes/Numeric.html#method-i-days","()","",null,1],["days_in_month","Time","Rails/classes/Time.html#method-c-days_in_month","(month, year = now.year)","<p>Return the number of days in the given month. If no year is specified, it\nwill use the current year. …\n",null,1],["days_to_week_start","Date","Rails/classes/Date.html#method-i-days_to_week_start","(start_day = :monday)","<p>Returns number of days to start of this week. Week is assumed to start on\n<code>start_day</code>, default is <code>:monday</code> …\n",null,1],["days_to_week_start","Time","Rails/classes/Time.html#method-i-days_to_week_start","(start_day = :monday)","<p>Returns number of days to start of this week, week starts on start_day\n(default is :monday).\n",null,1],["db","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-db","()","",null,1],["debug","ActionView::Helpers::DebugHelper","Rails/classes/ActionView/Helpers/DebugHelper.html#method-i-debug","(object)","<p>Returns a YAML representation of <code>object</code> wrapped with\n&lt;pre&gt; and &lt;/pre&gt;. If the object cannot …\n",null,1],["debug_protected_attribute_removal","ActiveModel::MassAssignmentSecurity::Sanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-i-debug_protected_attribute_removal","(attributes, sanitized_attributes)","",null,1],["debugger","Kernel","Rails/classes/Kernel.html#method-i-debugger","()","<p>Starts a debugging session if ruby-debug has been loaded (call rails server\n–debugger to do load it). …\n",null,1],["decode","ActiveResource::Formats::JsonFormat","Rails/classes/ActiveResource/Formats/JsonFormat.html#method-i-decode","(json)","",null,1],["decode","ActiveResource::Formats::XmlFormat","Rails/classes/ActiveResource/Formats/XmlFormat.html#method-i-decode","(xml)","",null,1],["decode","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-decode","(json, options ={})","",null,1],["decode64","ActiveSupport::Base64","Rails/classes/ActiveSupport/Base64.html#method-c-decode64","(value)","",null,1],["decode64","Base64","Rails/classes/Base64.html#method-c-decode64","(data)","<p>Decodes a base 64 encoded string to its original representation.\n\n<pre>ActiveSupport::Base64.decode64(&quot;T3JpZ2luYWwgdW5lbmNvZGVkIHN0cmluZw==&quot;) ...</pre>\n",null,1],["decode_credentials","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-decode_credentials","(request)","",null,1],["decode_credentials","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials","(header)","",null,1],["decode_credentials_header","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-decode_credentials_header","(request)","",null,1],["decompose","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-decompose","()","<p>Performs canonical decomposition on all the characters.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;é&#39;</span>.<span class=\"ruby-identifier\">length</span>                         <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["decompose_codepoints","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-decompose_codepoints","(type, codepoints)","<p>Decompose composed characters to the decomposed form.\n",null,1],["decompress","ActiveSupport::Gzip","Rails/classes/ActiveSupport/Gzip.html#method-c-decompress","(source)","<p>Decompresses a gzipped string.\n",null,1],["deconstantize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-deconstantize","(path)","<p>Removes the rightmost segment from the constant expression in the string:\n\n<pre>&quot;Net::HTTP&quot;.deconstantize   ...</pre>\n",null,1],["deconstantize","String","Rails/classes/String.html#method-i-deconstantize","()","<p>Removes the rightmost segment from the constant expression in the string.\n\n<pre>&quot;Net::HTTP&quot;.deconstantize   ...</pre>\n",null,1],["decrement","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-decrement","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and\nsubtracts the value passed as <code>by</code> (default is 1). The decrement\n…\n",null,1],["decrement","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,1],["decrement","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Decrement an integer value in the cache.\n",null,1],["decrement","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-decrement","(name, amount = 1, options = nil)","",null,1],["decrement","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-decrement","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>All …\n",null,1],["decrement!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-decrement-21","(attribute, by = 1)","<p>Wrapper around <code>decrement</code> that saves the record. This method\ndiffers from its non-bang version in that …\n",null,1],["decrement_counter","ActiveRecord::CounterCache","Rails/classes/ActiveRecord/CounterCache.html#method-i-decrement_counter","(counter_name, id)","<p>Decrement a number field by one, usually representing a count.\n<p>This works the same as increment_counter …\n",null,1],["decrement_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-decrement_open_transactions","()","",null,1],["decrypt","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-i-decrypt","(value)","",null,1],["decrypt_and_verify","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-i-decrypt_and_verify","(value)","<p>Decrypt and verify a message. We need to verify the message in order to\navoid padding attacks. Reference: …\n",null,1],["deep_dup","Hash","Rails/classes/Hash.html#method-i-deep_dup","()","<p>Returns a deep copy of hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hash</span> = { :<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> { :<span class=\"ruby-identifier\">b</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;b&#39;</span> } }\n<span class=\"ruby-identifier\">dup</span>  = <span class=\"ruby-identifier\">hash</span>.<span class=\"ruby-identifier\">deep_dup</span>\n<span class=\"ruby-identifier\">dup</span>[:<span class=\"ruby-identifier\">a</span>][:<span class=\"ruby-identifier\">c</span>] = <span class=\"ruby-string\">&#39;c&#39;</span>\n\n<span class=\"ruby-identifier\">hash</span>[:<span class=\"ruby-identifier\">a</span>][:<span class=\"ruby-identifier\">c</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["deep_merge","Hash","Rails/classes/Hash.html#method-i-deep_merge","(other_hash)","<p>Returns a new hash with <code>self</code> and <code>other_hash</code>\nmerged recursively.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h1</span> = {:<span class=\"ruby-identifier\">x</span> =<span class=\"ruby-operator\">&gt;</span> {:<span class=\"ruby-identifier\">y</span> =<span class=\"ruby-operator\">&gt;</span> [<span class=\"ruby-value\">4</span>,<span class=\"ruby-value\">5</span>,<span class=\"ruby-value\">6</span>]}, :<span class=\"ruby-identifier\">z</span> =<span class=\"ruby-operator\">&gt;</span> [<span class=\"ruby-value\">7</span>,<span class=\"ruby-value\">8</span>,<span class=\"ruby-value\">9</span>]} <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["deep_merge!","Hash","Rails/classes/Hash.html#method-i-deep_merge-21","(other_hash)","<p>Same as <code>deep_merge</code>, but modifies <code>self</code>.\n",null,1],["deep_munge","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-deep_munge","(hash)","<p>Remove nils from the params hash\n",null,1],["default","Hash","Ruby/classes/Hash.html#method-i-default","(p1 = v1)","<p>Returns the default value, the value that would be returned by <em>hsh</em>\nif <em>key</em> did not exist in <em>hsh</em>. See also …\n",null,0],["default","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-default","(value = nil)","",null,1],["default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(key = nil)","",null,1],["default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-default","(key = nil)","",null,1],["default","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-default","()","",null,1],["default","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-c-default","()","",null,1],["default=","Hash","Ruby/classes/Hash.html#method-i-default-3D","(p1)","<p>Sets the default value, the value returned for a key that does not exist in\nthe hash. It is not possible …\n",null,0],["default=","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-c-default-3D","(rails_env)","",null,1],["default_action","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-default_action","()","<p>By default, render the <code>:edit</code> action for HTML requests with\nfailure, unless the verb is POST.\n",null,1],["default_aliases_for_option","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_aliases_for_option","(name, options)","<p>Return default aliases for the option name given doing a lookup in\nRails::Generators.aliases.\n",null,1],["default_charset=","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-c-default_charset-3D","(new_charset)","",null,1],["default_external","Encoding","Ruby/classes/Encoding.html#method-c-default_external","()","<p>Returns default external encoding.\n<p>The default external encoding is used by default for strings created …\n",null,0],["default_external=","Encoding","Ruby/classes/Encoding.html#method-c-default_external-3D","(p1)","<p>Sets default external encoding.  You should not set\nEncoding::default_external in ruby code as strings …\n",null,0],["default_for_option","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_for_option","(config, name, options, default)","<p>Return default for the option name given doing a lookup in config.\n",null,1],["default_generator_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_generator_root","()","",null,1],["default_inspect","Date","Rails/classes/Date.html#method-i-default_inspect","()","",null,1],["default_inspect","DateTime","Rails/classes/DateTime.html#method-i-default_inspect","()","",null,1],["default_internal","Encoding","Ruby/classes/Encoding.html#method-c-default_internal","()","<p>Returns default internal encoding.  Strings will be transcoded to the\ndefault internal encoding in the …\n",null,0],["default_internal=","Encoding","Ruby/classes/Encoding.html#method-c-default_internal-3D","(p1)","<p>Sets default internal encoding or removes default internal encoding when\npassed nil.  You should not …\n",null,0],["default_middleware_stack","Rails::Application","Rails/classes/Rails/Application.html#method-i-default_middleware_stack","()","",null,1],["default_middleware_stack","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-default_middleware_stack","()","",null,1],["default_options","Rails::Server","Rails/classes/Rails/Server.html#method-i-default_options","()","",null,1],["default_primary_key_type","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-default_primary_key_type","()","",null,1],["default_proc","Hash","Ruby/classes/Hash.html#method-i-default_proc","()","<p>If <code>Hash::new</code> was invoked with a block, return that block,\notherwise return <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = <span class=\"ruby-constant\">Hash</span>.<span class=\"ruby-identifier\">new</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">h</span>,<span class=\"ruby-identifier\">k</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">h</span>[<span class=\"ruby-identifier\">k</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["default_proc=","Hash","Ruby/classes/Hash.html#method-i-default_proc-3D","(p1)","<p>Sets the default proc to be executed on each key lookup.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">default_proc</span> = <span class=\"ruby-identifier\">proc</span> <span class=\"ruby-keyword\">do</span> <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">hash</span>, <span class=\"ruby-identifier\">key</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">hash</span>[<span class=\"ruby-identifier\">key</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["default_render","ActionController::ImplicitRender","Rails/classes/ActionController/ImplicitRender.html#method-i-default_render","(*args)","",null,1],["default_render","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-default_render","()","<p>If a response block was given, use it, otherwise call render on controller.\n",null,1],["default_scope","ActiveRecord::Scoping::Default::ClassMethods","Rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-default_scope","(scope = {})","<p>Use this macro in your model to set a default scope for all operations on\nthe model.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Article</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["default_sequence_name","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-default_sequence_name","(table, column)","",null,1],["default_source_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_source_root","()","<p>Returns the default source root for a given generator. This is used\ninternally by rails to set its generators …\n",null,1],["default_timezone","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-default_timezone","","<p>Determines whether to use Time.local (using :local) or Time.utc (using\n:utc) when pulling dates and times …\n",null,1],["default_url_options","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-default_url_options","()","",null,1],["default_url_options","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options","(options)","",null,1],["default_url_options=","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-default_url_options-3D","(options)","",null,1],["default_url_options=","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-default_url_options-3D","(options)","",null,1],["default_value_for_option","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-default_value_for_option","(name, options)","<p>Return the default value for the option name given doing a lookup in\nRails::Generators.options.\n",null,1],["defaults","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-defaults","(defaults = {})","<p>Allows you to set default parameters for a route, such as this:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">defaults</span> :<span class=\"ruby-identifier\">id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;home&#39;</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-identifier\">match</span> <span class=\"ruby-string\">&#39;scoped_pages/(:id)&#39;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["define","ActiveRecord::Schema","Rails/classes/ActiveRecord/Schema.html#method-c-define","(info={}, &block)","<p>Eval the given block. All methods available to the current connection\nadapter are available within the …\n",null,1],["define_attribute_method","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_method","(attr_name)","",null,1],["define_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods","(attr_names)","<p>Declares the attributes that should be prefixed and suffixed by\nActiveModel::AttributeMethods.\n<p>To use, …\n",null,1],["define_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-define_attribute_methods","()","<p>Generates all the attribute related methods for columns in the database\naccessors, mutators and query …\n",null,1],["define_callbacks","ActiveRecord::Observer","Rails/classes/ActiveRecord/Observer.html#method-i-define_callbacks","(klass)","",null,1],["define_callbacks","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-define_callbacks","(*callbacks)","<p>Define sets of events in the object lifecycle that support callbacks.\n\n<pre>define_callbacks :validate\ndefine_callbacks ...</pre>\n",null,1],["define_finalizer","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-define_finalizer","(p1, p2 = v2)","<p>Adds <em>aProc</em> as a finalizer, to be called after <em>obj</em> was\ndestroyed.\n",null,0],["define_method__attribute","ActiveRecord::AttributeMethods::DeprecatedUnderscoreRead::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/DeprecatedUnderscoreRead/ClassMethods.html#method-i-define_method__attribute","(attr_name)","",null,1],["define_method_attribute","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-define_method_attribute","(attr_name)","",null,1],["define_method_attribute","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-define_method_attribute","(attr_name)","<p>We want to generate the methods via module_eval rather than define_method,\nbecause define_method is slower …\n",null,1],["define_method_attribute=","ActiveRecord::AttributeMethods::TimeZoneConversion::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/TimeZoneConversion/ClassMethods.html#method-i-define_method_attribute-3D","(attr_name)","<p>Defined for all <code>datetime</code> and <code>timestamp</code> attributes\nwhen <code>time_zone_aware_attributes</code> are enabled. This enhanced …\n",null,1],["define_method_attribute=","ActiveRecord::AttributeMethods::Write::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Write/ClassMethods.html#method-i-define_method_attribute-3D","(attr_name)","",null,1],["define_model_callbacks","ActiveModel::Callbacks","Rails/classes/ActiveModel/Callbacks.html#method-i-define_model_callbacks","(*callbacks)","<p>define_model_callbacks accepts the same options define_callbacks does, in\ncase you want to overwrite …\n",null,1],["define_singleton_method","Object","Ruby/classes/Object.html#method-i-define_singleton_method","(*args)","<p>Defines a singleton method in the receiver. The <em>method</em> parameter\ncan be a <code>Proc</code>, a <code>Method</code> or an\n<code>UnboundMethod</code> …\n",null,0],["defined_app_const_base","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-defined_app_const_base","()","",null,1],["defined_app_const_base?","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-defined_app_const_base-3F","()","",null,1],["defined_app_name","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-defined_app_name","()","",null,1],["delegate","Module","Rails/classes/Module.html#method-i-delegate","(*methods)","<p>Provides a delegate class method to easily expose contained objects&#39;\nmethods as your own. Pass one …\n",null,1],["delegate_to_scoped_klass","ActiveRecord::Delegation","Rails/classes/ActiveRecord/Delegation.html#method-c-delegate_to_scoped_klass","(method)","",null,1],["delete","Array","Ruby/classes/Array.html#method-i-delete","(p1)","<p>Deletes items from <code>self</code> that are equal to <em>obj</em>. If any\nitems are found, returns <em>obj</em>.   If the item is …\n",null,0],["delete","Dir","Ruby/classes/Dir.html#method-c-delete","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn&#39;t empty.\n",null,0],["delete","ENV","Ruby/classes/ENV.html#method-c-delete","(p1)","<p>Deletes the environment variable with <code>name</code> and returns the\nvalue of the variable.  If a block is given …\n",null,0],["delete","File","Ruby/classes/File.html#method-c-delete","(*args)","<p>Deletes the named files, returning the number of names passed as arguments.\nRaises an exception on any …\n",null,0],["delete","Hash","Ruby/classes/Hash.html#method-i-delete","(p1)","<p>Deletes and returns a key-value pair from <em>hsh</em> whose key is equal\nto <em>key</em>. If the key is not found, returns …\n",null,0],["delete","String","Ruby/classes/String.html#method-i-delete","(*args)","<p>Returns a copy of <em>str</em> with all characters in the intersection of\nits arguments deleted. Uses the same …\n",null,0],["delete","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-delete","(action, parameters = nil, session = nil, flash = nil)","<p>Executes a request simulating DELETE HTTP method and set/volley the\nresponse\n",null,1],["delete","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-delete","(key)","",null,1],["delete","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-delete","(path, parameters = nil, headers = nil)","<p>Performs a DELETE request with the given parameters. See <code>#get</code>\nfor more details.\n",null,1],["delete","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-delete","(target)","",null,1],["delete","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-delete","(*args, &block)","<p>Define a route that only recognizes HTTP PUT. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>delete …\n",null,1],["delete","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-delete","(key)","<p>Delete messages for <code>key</code>\n",null,1],["delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete","(arel, name = nil, binds = [])","<p>Executes the delete statement and returns the number of rows affected.\n",null,1],["delete","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-delete","(key)","",null,1],["delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-delete","(sql_key)","",null,1],["delete","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-delete","(key)","",null,1],["delete","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-delete","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,1],["delete","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-delete","(id_or_array)","<p>Deletes the row with a primary key matching the <code>id</code> argument,\nusing a SQL <code>DELETE</code> statement, and returns …\n",null,1],["delete","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-delete","(id, options = {})","<p>Deletes the resources with the ID in the <code>id</code> parameter.\n<p>Options\n<p>All options specify prefix and query parameters. …\n",null,1],["delete","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-delete","(path, headers = {})","<p>Executes a DELETE request (see HTTP protocol documentation if unfamiliar).\nUsed to delete resources. …\n",null,1],["delete","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-c-delete","(custom_method_name, options = {})","",null,1],["delete","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-i-delete","(method_name, options = {})","",null,1],["delete","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-delete","(name, options = nil)","<p>Deletes an entry in the cache. Returns <code>true</code> if an entry is\ndeleted.\n<p>Options are passed to the underlying …\n",null,1],["delete","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes a specified key from the hash.\n",null,1],["delete","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-delete","(key)","<p>Removes a specified key from the hash.\n",null,1],["delete","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-delete","(key)","",null,1],["delete!","String","Ruby/classes/String.html#method-i-delete-21","(*args)","<p>Performs a <code>delete</code> operation in place, returning <em>str</em>,\nor <code>nil</code> if <em>str</em> was not modified.\n",null,0],["delete?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-delete-3F","()","<p>Is this a DELETE request? Equivalent to <code>request.request_method_symbol\n== :delete</code>.\n",null,1],["delete_all","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-delete_all","(conditions = nil)","<p>Deletes the records matching <code>conditions</code> without instantiating\nthe records first, and hence not calling …\n",null,1],["delete_at","Array","Ruby/classes/Array.html#method-i-delete_at","(p1)","<p>Deletes the element at the specified index, returning that element, or\n<code>nil</code> if the index is out of range. …\n",null,0],["delete_cookie","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-delete_cookie","(key, value={})","",null,1],["delete_entry","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_entry","(key, options)","",null,1],["delete_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-delete_entry","(key, options)","",null,1],["delete_if","Array","Ruby/classes/Array.html#method-i-delete_if","()","<p>Deletes every element of <code>self</code> for which <em>block</em>\nevaluates to true. The array is changed instantly every …\n",null,0],["delete_if","ENV","Ruby/classes/ENV.html#method-c-delete_if","()","<p>Deletes every environment variable for which the block evaluates to\n<code>true</code>.\n<p>If no block is given an enumerator …\n",null,0],["delete_if","Hash","Ruby/classes/Hash.html#method-i-delete_if","()","<p>Deletes every key-value pair from <em>hsh</em> for which <em>block</em>\nevaluates to <code>true</code>.\n<p>If no block is given, an enumerator …\n",null,0],["delete_if","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-delete_if","()","",null,1],["delete_matched","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-delete_matched","(matcher, options = nil)","",null,1],["delete_matched","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-delete_matched","(matcher, options = nil)","",null,1],["delete_matched","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-delete_matched","(matcher, options = nil)","",null,1],["delete_matched","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-delete_matched","(matcher, options = nil)","<p>Delete all entries with keys matching the pattern.\n<p>Options are passed to the underlying cache implementation. …\n",null,1],["delete_responses_to_replace","ActiveResource::HttpMock","Rails/classes/ActiveResource/HttpMock.html#method-c-delete_responses_to_replace","(new_responses)","",null,1],["delete_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-delete_sql","(sql, name = nil)","<p>Executes the delete statement and returns the number of rows affected.\n",null,1],["delete_via_redirect","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-delete_via_redirect","(path, parameters = nil, headers = nil)","<p>Performs a DELETE request, following any subsequent redirect. See\n<code>request_via_redirect</code> for more information. …\n",null,1],["deliver","ActionMailer::LogSubscriber","Rails/classes/ActionMailer/LogSubscriber.html#method-i-deliver","(event)","",null,1],["demodulize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-demodulize","(path)","<p>Removes the module part from the expression in the string:\n\n<pre>&quot;ActiveRecord::CoreExtensions::String::Inflections&quot;.demodulize ...</pre>\n",null,1],["demodulize","String","Rails/classes/String.html#method-i-demodulize","()","<p>Removes the module part from the constant expression in the string.\n\n<pre>&quot;ActiveRecord::CoreExtensions::String::Inflections&quot;.demodulize ...</pre>\n",null,1],["denominator","Complex","Ruby/classes/Complex.html#method-i-denominator","()","<p>Returns the denominator (lcm of both denominator - real and imag).\n<p>See numerator.\n",null,0],["denominator","Float","Ruby/classes/Float.html#method-i-denominator","()","<p>Returns the denominator (always positive).  The result is machine\ndependent.\n<p>See numerator.\n",null,0],["denominator","Integer","Ruby/classes/Integer.html#method-i-denominator","()","<p>Returns 1.\n",null,0],["denominator","Numeric","Ruby/classes/Numeric.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n",null,0],["denominator","Rational","Ruby/classes/Rational.html#method-i-denominator","()","<p>Returns the denominator (always positive).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">denominator</span>             <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["deny?","ActiveModel::MassAssignmentSecurity::BlackList","Rails/classes/ActiveModel/MassAssignmentSecurity/BlackList.html#method-i-deny-3F","(key)","",null,1],["deny?","ActiveModel::MassAssignmentSecurity::PermissionSet","Rails/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-deny-3F","(key)","",null,1],["deny?","ActiveModel::MassAssignmentSecurity::WhiteList","Rails/classes/ActiveModel/MassAssignmentSecurity/WhiteList.html#method-i-deny-3F","(key)","",null,1],["deprecate","Module","Rails/classes/Module.html#method-i-deprecate","(*method_names)","<p>Declare that a method has been deprecated.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">deprecate</span> :<span class=\"ruby-identifier\">foo</span>\n<span class=\"ruby-identifier\">deprecate</span> :<span class=\"ruby-identifier\">bar</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;message&#39;</span>\n<span class=\"ruby-identifier\">deprecate</span> :<span class=\"ruby-identifier\">foo</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["deprecate_methods","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-deprecate_methods","(target_module, *method_names)","<p>Declare that a method has been deprecated.\n",null,1],["deprecated_method_warning","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-deprecated_method_warning","(method_name, message = nil)","",null,1],["desc","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-desc","(description=nil)","<p>Tries to get the description from a USAGE file one folder above the source\nroot otherwise uses a default …\n",null,1],["desc","Rails::SubTestTask","Rails/classes/Rails/SubTestTask.html#method-i-desc","(string)","",null,1],["descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-i-descendants","()","",null,1],["descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-descendants","(klass)","",null,1],["descends_from_active_record?","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-descends_from_active_record-3F","()","<p>True if this isn&#39;t a concrete subclass needing a STI type condition.\n",null,1],["describe","ActiveSupport::Testing::Declarative","Rails/classes/ActiveSupport/Testing/Declarative.html#method-c-describe","(text)","",null,1],["destination","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-c-destination","(path)","<p>Sets the destination of generator files:\n\n<pre>destination File.expand_path(&quot;../tmp&quot;, File.dirname(__FILE__))</pre>\n",null,1],["destination_encoding","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an Encoding object.\n",null,0],["destination_encoding","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,0],["destination_encoding","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding","()","<p>Returns the destination encoding as an encoding object.\n",null,0],["destination_encoding_name","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,0],["destination_encoding_name","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-destination_encoding_name","()","<p>Returns the destination encoding name as a string.\n",null,0],["destroy","ActionDispatch::Session::DestroyableSession","Rails/classes/ActionDispatch/Session/DestroyableSession.html#method-i-destroy","()","",null,1],["destroy","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-destroy","()","<p>Deletes the record in the database and freezes this instance to reflect\nthat no changes should be made …\n",null,1],["destroy","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-destroy","(id)","<p>Destroy an object (or multiple objects) that has the given id, the object\nis instantiated first, therefore …\n",null,1],["destroy","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-destroy","()","",null,1],["destroy","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-destroy","()","<p>Deletes the resource from the remote service.\n<p>Examples\n\n<pre>my_id = 3\nmy_person = Person.find(my_id)\nmy_person.destroy ...</pre>\n",null,1],["destroy","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-destroy","()","<p>DELETE destroy\n",null,1],["destroy_all","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-destroy_all","(conditions = nil)","<p>Destroys the records matching <code>conditions</code> by instantiating each\nrecord and calling its <code>destroy</code> method. …\n",null,1],["destroy_session","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-i-destroy_session","(env, sid, options)","<p>Remove a session from the cache.\n",null,1],["destroyed?","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-destroyed-3F","()","<p>Returns true if this object has been destroyed, otherwise returns false.\n",null,1],["detach","Process","Ruby/classes/Process.html#method-c-detach","(p1)","<p>Some operating systems retain the status of terminated child processes\nuntil the parent collects that …\n",null,0],["detail_args_for","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-detail_args_for","(options)","<p>Compute details hash and key according to user options (e.g. passed from\n#render).\n",null,1],["details_for_lookup","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-details_for_lookup","()","",null,1],["detect","Enumerable","Ruby/classes/Enumerable.html#method-i-detect","(p1 = v1)","<p>Passes each entry in <em>enum</em> to <em>block</em>. Returns the first for\nwhich <em>block</em> is not false.  If no object matches, …\n",null,0],["determine_default_controller_class","ActionController::TestCase::Behavior::ClassMethods","Rails/classes/ActionController/TestCase/Behavior/ClassMethods.html#method-i-determine_default_controller_class","(name)","",null,1],["determine_default_helper_class","ActionView::TestCase::Behavior::ClassMethods","Rails/classes/ActionView/TestCase/Behavior/ClassMethods.html#method-i-determine_default_helper_class","(name)","",null,1],["determine_default_mailer","ActionMailer::TestCase::Behavior::ClassMethods","Rails/classes/ActionMailer/TestCase/Behavior/ClassMethods.html#method-i-determine_default_mailer","(name)","",null,1],["determine_install_method","Rails::Commands::Install","Rails/classes/Rails/Commands/Install.html#method-i-determine_install_method","()","",null,1],["dev","File::Stat","Ruby/classes/File/Stat.html#method-i-dev","()","<p>Returns an integer representing the device on which <em>stat</em> resides.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">dev</span>   <span class=\"ruby-comment\">#=&gt; 774</span>\n</pre>\n",null,0],["dev_major","File::Stat","Ruby/classes/File/Stat.html#method-i-dev_major","()","<p>Returns the major part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">dev_major</span>   <span class=\"ruby-comment\">#=&gt; 2</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">dev_major</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["dev_minor","File::Stat","Ruby/classes/File/Stat.html#method-i-dev_minor","()","<p>Returns the minor part of <code>File_Stat#dev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">dev_minor</span>   <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">dev_minor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["diff","Hash","Rails/classes/Hash.html#method-i-diff","(h2)","<p>Returns a hash that represents the difference between two hashes.\n<p>Examples:\n\n<pre class=\"ruby\">{<span class=\"ruby-value\">1</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>}.<span class=\"ruby-identifier\">diff</span>(<span class=\"ruby-value\">1</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>)      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["direct_descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-i-direct_descendants","()","",null,1],["direct_descendants","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-c-direct_descendants","(klass)","",null,1],["directory?","File","Ruby/classes/File.html#method-c-directory-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["directory?","File::Stat","Ruby/classes/File/Stat.html#method-i-directory-3F","()","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["directory?","FileTest","Ruby/classes/FileTest.html#method-i-directory-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["dirname","File","Ruby/classes/File.html#method-c-dirname","(p1)","<p>Returns all components of the filename given in <em>file_name</em> except\nthe last one. The filename must be formed …\n",null,0],["dirname","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-dirname","()","<p>Returns the directory in which the data files are stored\n",null,1],["dirties_query_cache","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-dirties_query_cache","(base, *method_names)","",null,1],["disable","GC","Ruby/classes/GC.html#method-c-disable","()","<p>Disables garbage collection, returning <code>true</code> if garbage\ncollection was already disabled.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">GC</span>.<span class=\"ruby-identifier\">disable</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["disable","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-disable","()","<p>Stops the GC profiler.\n",null,0],["disable","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-disable","(*observers, &block)","<p>Disables one or more observers. This supports multiple forms:\n\n<pre>ORM.observers.disable :user_observer\n  # ...</pre>\n",null,1],["disable_cache","ActionView::LookupContext::DetailsCache","Rails/classes/ActionView/LookupContext/DetailsCache.html#method-i-disable_cache","()","<p>Temporary skip passing the details_key forward.\n",null,1],["disable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-disable_query_cache-21","()","",null,1],["disable_referential_integrity","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disable_referential_integrity","()","<p>Override to turn off referential integrity while executing\n<code>&amp;block</code>.\n",null,1],["disabled_for?","ActiveModel::Observer","Rails/classes/ActiveModel/Observer.html#method-i-disabled_for-3F","(object)","",null,1],["disabled_for?","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-disabled_for-3F","(observer)","<p>Returns true if the given observer is disabled for the model class.\n",null,1],["disabled_observer_stack","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-disabled_observer_stack","()","",null,1],["disabled_observers","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-disabled_observers","()","",null,1],["disasm","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-disasm","(p1)","",null,0],["disasm","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-disasm","()","",null,0],["disassemble","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-disassemble","(p1)","",null,0],["disassemble","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-disassemble","()","",null,0],["discard","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-discard","(k = nil)","<p>Marks the entire flash or a single flash entry to be discarded by the end\nof the current action:\n\n<pre>flash.discard ...</pre>\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-disconnect-21","()","<p>Disconnects all connections in the pool, and clears the pool.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["disconnect!","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-disconnect-21","()","<p>Disconnects from the database if already connected. Otherwise, this method\ndoes nothing.\n",null,1],["dispatch","ActionController::RackDelegation","Rails/classes/ActionController/RackDelegation.html#method-i-dispatch","(action, request, response = ActionDispatch::Response.new)","",null,1],["display","Object","Ruby/classes/Object.html#method-i-display","(p1 = v1)","<p>Prints <em>obj</em> on the given port (default <code>$&gt;</code>).\nEquivalent to:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">display</span>(<span class=\"ruby-identifier\">port</span>=<span class=\"ruby-identifier\">$&gt;</span>)\n  <span class=\"ruby-identifier\">port</span>.<span class=\"ruby-identifier\">write</span> <span class=\"ruby-keyword\">self</span>\n<span class=\"ruby-keyword\">end</span>\n</pre>\n",null,0],["display","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-display","(resource, given_options={})","<p>Display is just a shortcut to render a resource with the current format.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">display</span> <span class=\"ruby-ivar\">@user</span>, :<span class=\"ruby-identifier\">status</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">ok</span>\n</pre>\n",null,1],["display","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-display","(results, options={})","<p>Prints the mapping from filenames to annotations in <code>results</code>\nordered by filename. The <code>options</code> hash is …\n",null,1],["display_errors","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-display_errors","()","",null,1],["distance_of_time_in_words","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words","(from_time, to_time = 0, include_seconds = false, options = {})","<p>Reports the approximate distance in time between two Time, Date or DateTime\nobjects or integers as seconds. …\n",null,1],["distance_of_time_in_words_to_now","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-distance_of_time_in_words_to_now","(from_time, include_seconds = false)","",null,1],["distinct","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-distinct","(columns, order_by)","<p>SELECT DISTINCT clause for a given set of columns and a given ORDER BY\nclause. Both PostgreSQL and Oracle …\n",null,1],["div","Bignum","Ruby/classes/Bignum.html#method-i-div","(p1)","<p>Performs integer division: returns integer value.\n",null,0],["div","Fixnum","Ruby/classes/Fixnum.html#method-i-div","(p1)","<p>Performs integer division: returns integer value.\n",null,0],["div","Numeric","Ruby/classes/Numeric.html#method-i-div","(p1)","<p>Uses <code>/</code> to perform division, then converts the result to an\ninteger. <code>numeric</code> does not define the <code>/</code> operator;\n…\n",null,0],["div_for","ActionView::Helpers::RecordTagHelper","Rails/classes/ActionView/Helpers/RecordTagHelper.html#method-i-div_for","(record, *args, &block)","<p>Produces a wrapper DIV element with id and class parameters that relate to\nthe specified Active Record …\n",null,1],["divmod","Bignum","Ruby/classes/Bignum.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,0],["divmod","Fixnum","Ruby/classes/Fixnum.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,0],["divmod","Float","Ruby/classes/Float.html#method-i-divmod","(p1)","<p>See <code>Numeric#divmod</code>.\n",null,0],["divmod","Numeric","Ruby/classes/Numeric.html#method-i-divmod","(p1)","<p>Returns an array containing the quotient and modulus obtained by dividing\n<em>num</em> by <em>numeric</em>. If <code>q, r = </code> …\n",null,0],["doc","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-doc","()","",null,1],["dom_class","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-i-dom_class","(record_or_class, prefix = nil)","<p>The DOM class convention is to use the singular form of an object or class.\nExamples:\n\n<pre>dom_class(post) ...</pre>\n",null,1],["dom_id","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-i-dom_id","(record, prefix = nil)","<p>The DOM id convention is to use the singular form of an object or class\nwith the id following an underscore. …\n",null,1],["domain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-domain","(tld_length = @@tld_length)","<p>Returns the domain part of a host, such as “rubyonrails.org” in\n“www.rubyonrails.org”. …\n",null,1],["down","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-down","()","",null,1],["downcase","String","Ruby/classes/String.html#method-i-downcase","()","<p>Returns a copy of <em>str</em> with all uppercase letters replaced with\ntheir lowercase counterparts. The operation …\n",null,0],["downcase","Symbol","Ruby/classes/Symbol.html#method-i-downcase","()","<p>Same as <code>sym.to_s.downcase.intern</code>.\n",null,0],["downcase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-downcase","()","<p>Convert characters in the string to lowercase.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;VĚDA A VÝZKUM&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">downcase</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; &quot;věda ...</span>\n</pre>\n",null,1],["downcase!","String","Ruby/classes/String.html#method-i-downcase-21","()","<p>Downcases the contents of <em>str</em>, returning <code>nil</code> if no\nchanges were made. Note: case replacement is effective …\n",null,0],["download","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-download","(link)","",null,1],["downto","Integer","Ruby/classes/Integer.html#method-i-downto","(p1)","<p>Iterates <em>block</em>, passing decreasing values from <em>int</em> down\nto and including <em>limit</em>.\n<p>If no block is given, …\n",null,0],["drop","Array","Ruby/classes/Array.html#method-i-drop","(p1)","<p>Drops first n elements from <code>ary</code> and returns the rest of the\nelements in an array.\n\n<pre>a = [1, 2, 3, 4, 5, ...</pre>\n",null,0],["drop","Enumerable","Ruby/classes/Enumerable.html#method-i-drop","(p1)","<p>Drops first n elements from <em>enum</em>, and returns rest elements in an\narray.\n\n<pre>a = [1, 2, 3, 4, 5, 0]\na.drop(3) ...</pre>\n",null,0],["drop_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-drop_table","(table_name, options = {})","<p>Drops a table from the database.\n",null,1],["drop_while","Array","Ruby/classes/Array.html#method-i-drop_while","()","<p>Drops elements up to, but not including, the first element for which the\nblock returns <code>nil</code> or <code>false</code> and …\n",null,0],["drop_while","Enumerable","Ruby/classes/Enumerable.html#method-i-drop_while","()","<p>Drops elements up to, but not including, the first element for which the\nblock returns <code>nil</code> or <code>false</code> and …\n",null,0],["dst?","Time","Ruby/classes/Time.html#method-i-dst-3F","()","<p>Returns <code>true</code> if <em>time</em> occurs during Daylight Saving\nTime in its time zone.\n\n<pre># CST6CDT:\n  Time.local(2000, ...</pre>\n",null,0],["dst?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-dst-3F","()","",null,1],["dummy?","Encoding","Ruby/classes/Encoding.html#method-i-dummy-3F","()","<p>Returns true for dummy encodings. A dummy encoding is an encoding for which\ncharacter handling is not …\n",null,0],["dummy_path","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-dummy_path","(path = nil)","",null,1],["dump","Marshal","Ruby/classes/Marshal.html#method-c-dump","(p1, p2 = v2, p3 = v3)","<p>Serializes obj and all descendant objects. If anIO is specified, the\nserialized data will be written …\n",null,0],["dump","String","Ruby/classes/String.html#method-i-dump","()","<p>Produces a version of <em>str</em> with all nonprinting characters replaced\nby <code>\\nnn</code> notation and all special characters …\n",null,0],["dump_to","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-dump_to","(filename)","",null,1],["dup","Object","Ruby/classes/Object.html#method-i-dup","()","<p>Produces a shallow copy of <em>obj</em>—the instance variables of\n<em>obj</em> are copied, but not the objects they reference. …\n",null,0],["dup","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-dup","()","<p>Duplicates the current resource without saving it.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my_invoice</span> = <span class=\"ruby-constant\">Invoice</span>.<span class=\"ruby-identifier\">create</span>(:<span class=\"ruby-identifier\">customer</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;That ...\n</span></pre>\n",null,1],["dup","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns an exact copy of the hash.\n",null,1],["dup","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-dup","()","<p>Returns an exact copy of the hash.\n",null,1],["duplicable?","BigDecimal","Rails/classes/BigDecimal.html#method-i-duplicable-3F","()","",null,1],["duplicable?","Class","Rails/classes/Class.html#method-i-duplicable-3F","()","<p>Classes are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">c</span> = <span class=\"ruby-constant\">Class</span>.<span class=\"ruby-identifier\">new</span> <span class=\"ruby-comment\"># =&gt; #&lt;Class:0x10328fd80&gt;</span>\n<span class=\"ruby-identifier\">c</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; #&lt;Class:0x10328fd80&gt;</span>\n</pre>\n",null,1],["duplicable?","FalseClass","Rails/classes/FalseClass.html#method-i-duplicable-3F","()","<p><code>false</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">false</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup FalseClass</span>\n</pre>\n",null,1],["duplicable?","Module","Rails/classes/Module.html#method-i-duplicable-3F","()","<p>Modules are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">new</span> <span class=\"ruby-comment\"># =&gt; #&lt;Module:0x10328b6e0&gt;</span>\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">dup</span>          <span class=\"ruby-comment\"># =&gt; #&lt;Module:0x10328b6e0&gt;</span>\n</pre>\n",null,1],["duplicable?","NilClass","Rails/classes/NilClass.html#method-i-duplicable-3F","()","<p><code>nil</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup NilClass</span>\n</pre>\n",null,1],["duplicable?","Numeric","Rails/classes/Numeric.html#method-i-duplicable-3F","()","<p>Numbers are not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">3</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-value\">3</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup Fixnum</span>\n</pre>\n",null,1],["duplicable?","Object","Rails/classes/Object.html#method-i-duplicable-3F","()","<p>Can you safely dup this object?\n<p>False for <code>nil</code>, <code>false</code>, <code>true</code>, symbols,\nnumbers, class and module objects; …\n",null,1],["duplicable?","Symbol","Rails/classes/Symbol.html#method-i-duplicable-3F","()","<p>Symbols are not duplicable:\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">my_symbol</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n:<span class=\"ruby-identifier\">my_symbol</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t ...</span>\n</pre>\n",null,1],["duplicable?","TrueClass","Rails/classes/TrueClass.html#method-i-duplicable-3F","()","<p><code>true</code> is not duplicable:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">duplicable?</span> <span class=\"ruby-comment\"># =&gt; false</span>\n<span class=\"ruby-keyword\">true</span>.<span class=\"ruby-identifier\">dup</span>         <span class=\"ruby-comment\"># =&gt; TypeError: can&#39;t dup TrueClass</span>\n</pre>\n",null,1],["each","ARGF","Ruby/classes/ARGF.html#method-i-each","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform&#39;s …\n",null,0],["each","Array","Ruby/classes/Array.html#method-i-each","()","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as a parameter.\n<p>If no block is given, …\n",null,0],["each","Dir","Ruby/classes/Dir.html#method-i-each","()","<p>Calls the block once for each entry in this directory, passing the filename\nof each entry as a parameter …\n",null,0],["each","ENV","Ruby/classes/ENV.html#method-c-each","()","<p>Yields each environment variable <code>name</code> and <code>value</code>.\n<p>If no block is given an Enumerator is returned.\n",null,0],["each","Enumerator","Ruby/classes/Enumerator.html#method-i-each","()","<p>Iterates over the block according to how this Enumerable was constructed.\nIf no block is given, returns …\n",null,0],["each","Hash","Ruby/classes/Hash.html#method-i-each","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the\nkey-value pair as parameters.\n<p>If no block is given, …\n",null,0],["each","IO","Ruby/classes/IO.html#method-i-each","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,0],["each","Range","Ruby/classes/Range.html#method-i-each","()","<p>Iterates over the elements <em>rng</em>, passing each in turn to the block.\nYou can only iterate if the start …\n",null,0],["each","Struct","Ruby/classes/Struct.html#method-i-each","()","<p>Calls <em>block</em> once for each instance variable, passing the value as\na parameter.\n<p>If no block is given, an …\n",null,0],["each","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-each","(&block)","",null,1],["each","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-each","()","",null,1],["each","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-each","()","<p>Iterates through each error key, value pair in the error messages hash.\nYields the attribute and the …\n",null,1],["each","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-each","()","",null,1],["each","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::Fixtures::File","Rails/classes/ActiveRecord/Fixtures/File.html#method-i-each","(&block)","",null,1],["each","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-each","()","",null,1],["each","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-each","(&block)","",null,1],["each","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-each","()","",null,1],["each_byte","ARGF","Ruby/classes/ARGF.html#method-i-each_byte","()","\n<pre>Iterates over each byte of each file in +ARGV+.\nA byte is returned as a +Fixnum+ in the range 0..255. ...</pre>\n",null,0],["each_byte","IO","Ruby/classes/IO.html#method-i-each_byte","()","<p>Calls the given block once for each byte (0..255) in <em>ios</em>, passing\nthe byte as an argument. The stream …\n",null,0],["each_byte","String","Ruby/classes/String.html#method-i-each_byte","()","<p>Passes each byte in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_byte ...</pre>\n",null,0],["each_char","ARGF","Ruby/classes/ARGF.html#method-i-each_char","()","<p>Iterates over each character of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,0],["each_char","IO","Ruby/classes/IO.html#method-i-each_char","()","<p>Calls the given block once for each character in <em>ios</em>, passing the\ncharacter as an argument. The stream …\n",null,0],["each_char","String","Ruby/classes/String.html#method-i-each_char","()","<p>Passes each character in <em>str</em> to the given block, or returns an\nenumerator if no block is given.\n\n<pre>&quot;hello&quot;.each_char ...</pre>\n",null,0],["each_codepoint","ARGF","Ruby/classes/ARGF.html#method-i-each_codepoint","()","<p>Iterates over each codepoint of each file in <code>ARGF</code>.\n<p>This method allows you to treat the files supplied …\n",null,0],["each_codepoint","IO","Ruby/classes/IO.html#method-i-each_codepoint","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>ios</em>,\npassing the codepoint as an argument. The stream …\n",null,0],["each_codepoint","String","Ruby/classes/String.html#method-i-each_codepoint","()","<p>Passes the <code>Integer</code> ordinal of each character in <em>str</em>,\nalso known as a <em>codepoint</em> when applied to Unicode …\n",null,0],["each_cons","Enumerable","Ruby/classes/Enumerable.html#method-i-each_cons","(p1)","<p>Iterates the given block for each array of consecutive &lt;n&gt; elements. \nIf no block is given, returns …\n",null,0],["each_entry","Enumerable","Ruby/classes/Enumerable.html#method-i-each_entry","(*args)","<p>Calls <em>block</em> once for each element in <code>self</code>, passing\nthat element as a parameter, converting multiple values …\n",null,0],["each_index","Array","Ruby/classes/Array.html#method-i-each_index","()","<p>Same as <code>Array#each</code>, but passes the index of the element\ninstead of the element itself.\n<p>If no block is …\n",null,0],["each_key","ENV","Ruby/classes/ENV.html#method-c-each_key","()","<p>Yields each environment variable name.\n<p>An Enumerator is returned if no block is given.\n",null,0],["each_key","Hash","Ruby/classes/Hash.html#method-i-each_key","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the key as\na parameter.\n<p>If no block is given, an enumerator …\n",null,0],["each_key","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-each_key","()","",null,1],["each_line","ARGF","Ruby/classes/ARGF.html#method-i-each_line","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform&#39;s …\n",null,0],["each_line","IO","Ruby/classes/IO.html#method-i-each_line","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,0],["each_line","String","Ruby/classes/String.html#method-i-each_line","(p1 = v1)","<p>Splits <em>str</em> using the supplied parameter as the record separator\n(<code>$/</code> by default), passing each substring …\n",null,0],["each_object","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-each_object","(p1 = v1)","<p>Calls the block once for each living, nonimmediate object in this Ruby\nprocess. If <em>module</em> is specified, …\n",null,0],["each_pair","ENV","Ruby/classes/ENV.html#method-c-each_pair","()","<p>Yields each environment variable <code>name</code> and <code>value</code>.\n<p>If no block is given an Enumerator is returned.\n",null,0],["each_pair","Hash","Ruby/classes/Hash.html#method-i-each_pair","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the\nkey-value pair as parameters.\n<p>If no block is given, …\n",null,0],["each_pair","Struct","Ruby/classes/Struct.html#method-i-each_pair","()","<p>Calls <em>block</em> once for each instance variable, passing the name (as\na symbol) and the value as parameters. …\n",null,0],["each_pair","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-each_pair","()","",null,1],["each_slice","Enumerable","Ruby/classes/Enumerable.html#method-i-each_slice","(p1)","<p>Iterates the given block for each slice of &lt;n&gt; elements.  If no block\nis given, returns an enumerator. …\n",null,0],["each_subclass_array","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-each_subclass_array","()","",null,1],["each_value","ENV","Ruby/classes/ENV.html#method-c-each_value","()","<p>Yields each environment variable <code>value</code>.\n<p>An Enumerator is returned if no block was given.\n",null,0],["each_value","Hash","Ruby/classes/Hash.html#method-i-each_value","()","<p>Calls <em>block</em> once for each key in <em>hsh</em>, passing the value\nas a parameter.\n<p>If no block is given, an enumerator …\n",null,0],["each_value","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-each_value","()","",null,1],["each_with_index","Enumerable","Ruby/classes/Enumerable.html#method-i-each_with_index","(*args)","<p>Calls <em>block</em> with two arguments, the item and its index, for each\nitem in <em>enum</em>.  Given arguments are passed …\n",null,0],["each_with_index","Enumerator","Ruby/classes/Enumerator.html#method-i-each_with_index","()","<p>Same as Enumerator#with_index(0), i.e. there is no starting offset.\n<p>If no block is given, a new Enumerator …\n",null,0],["each_with_object","Enumerable","Ruby/classes/Enumerable.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object given,\nand returns the initially given …\n",null,0],["each_with_object","Enumerator","Ruby/classes/Enumerator.html#method-i-each_with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object,\n<code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,0],["each_with_object","Enumerable","Rails/classes/Enumerable.html#method-i-each_with_object","(memo)","<p>Iterates over a collection, passing the current element\n<strong>and</strong> the <code>memo</code> to the block. Handy for building\n…\n",null,1],["eager_autoload","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-i-eager_autoload","()","",null,1],["eager_autoload!","ActiveSupport::Autoload","Rails/classes/ActiveSupport/Autoload.html#method-c-eager_autoload-21","()","",null,1],["eager_load","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-eager_load","(*args)","",null,1],["eager_load","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-eager_load","()","",null,1],["eager_load!","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-eager_load-21","()","",null,1],["eager_load!","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-eager_load-21","()","",null,1],["eager_load_paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-eager_load_paths","()","",null,1],["eager_loading?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-eager_loading-3F","()","",null,1],["egid","Process","Ruby/classes/Process.html#method-c-egid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">egid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["egid=","Process","Ruby/classes/Process.html#method-c-egid-3D","(p1)","<p>Sets the effective group ID for this process. Not available on all\nplatforms.\n",null,0],["eid","Process::GID","Ruby/classes/Process/GID.html#method-c-eid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">egid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["eid","Process::UID","Ruby/classes/Process/UID.html#method-c-eid","()","<p>Returns the effective user ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">euid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["element_name","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-element_name","()","",null,1],["element_path","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-element_path","(options = nil)","",null,1],["element_path","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-element_path","(id, prefix_options = {}, query_options = nil)","<p>Gets the element path for the given ID in <code>id</code>.  If the\n<code>query_options</code> parameter is omitted, Rails will …\n",null,1],["email_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-email_field","(object_name, method, options = {})","<p>Returns a text_field of type “email”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">email_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;address&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_address&quot; ...</span>\n</pre>\n",null,1],["email_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-email_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “email”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["emitted_hidden_id?","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-emitted_hidden_id-3F","()","",null,1],["empty?","Array","Ruby/classes/Array.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <code>self</code> contains no elements.\n\n<pre class=\"ruby\">[].<span class=\"ruby-identifier\">empty?</span>   <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,0],["empty?","ENV","Ruby/classes/ENV.html#method-c-empty-3F","()","<p>Returns true when there are no environment variables\n",null,0],["empty?","Hash","Ruby/classes/Hash.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <em>hsh</em> contains no key-value pairs.\n\n<pre class=\"ruby\">{}.<span class=\"ruby-identifier\">empty?</span>   <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,0],["empty?","String","Ruby/classes/String.html#method-i-empty-3F","()","<p>Returns <code>true</code> if <em>str</em> has a length of zero.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">empty?</span>   <span class=\"ruby-comment\">#=&gt; false</span>\n<span class=\"ruby-string\">&quot;&quot;</span>.<span class=\"ruby-identifier\">empty?</span>        <span class=\"ruby-comment\">#=&gt; true</span>\n</pre>\n",null,0],["empty?","Symbol","Ruby/classes/Symbol.html#method-i-empty-3F","()","<p>Returns that <em>sym</em> is :“” or not.\n",null,0],["empty?","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-empty-3F","()","",null,1],["empty?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-empty-3F","()","<p>Returns true if no errors are found, false otherwise. If the error message\nis a string it can be empty. …\n",null,1],["empty?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-empty-3F","()","<p>Returns true if there are no records.\n",null,1],["empty?","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-empty-3F","()","",null,1],["empty_directory_with_gitkeep","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-empty_directory_with_gitkeep","(destination, config = {})","",null,1],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-empty_insert_statement_value","()","",null,1],["empty_insert_statement_value","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-empty_insert_statement_value","()","",null,1],["emulate_booleans","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-emulate_booleans","","<p>By default, the MysqlAdapter will consider all columns of type\n<code>tinyint(1)</code> as boolean. If you wish to …\n",null,1],["enable","GC","Ruby/classes/GC.html#method-c-enable","()","<p>Enables garbage collection, returning <code>true</code> if garbage\ncollection was previously disabled.\n\n<pre>GC.disable  ...</pre>\n",null,0],["enable","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-enable","()","<p>Starts the GC profiler.\n",null,0],["enable","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-enable","(*observers, &block)","<p>Enables one or more observers. This supports multiple forms:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ORM</span>.<span class=\"ruby-identifier\">observers</span>.<span class=\"ruby-identifier\">enable</span> :<span class=\"ruby-identifier\">user_observer</span>\n  <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["enable_query_cache!","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-enable_query_cache-21","()","",null,1],["enable_warnings","Kernel","Rails/classes/Kernel.html#method-i-enable_warnings","()","<p>Sets $VERBOSE to true for the duration of the block and back to its\noriginal value afterwards.\n",null,1],["enabled","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-enabled","()","",null,1],["enabled=","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-enabled-3D","(flag)","",null,1],["enabled?","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-enabled-3F","()","<p>The current status of GC profile mode.\n",null,0],["enabled?","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-enabled-3F","()","",null,1],["enclose","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-enclose","()","<p>Prevents threads from being added to or removed from the receiving\n<code>ThreadGroup</code>. New threads can still …\n",null,0],["enclosed?","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-enclosed-3F","()","<p>Returns <code>true</code> if <em>thgrp</em> is enclosed. See also\nThreadGroup#enclose.\n",null,0],["encode","String","Ruby/classes/String.html#method-i-encode","(*args)","<p>The first form returns a copy of <code>str</code> transcoded to encoding\n<code>encoding</code>. The second form returns a copy …\n",null,0],["encode","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-encode","(options={})","<p>Returns the serialized string representation of the resource in the\nconfigured serialization format specified …\n",null,1],["encode","ActiveResource::Formats::JsonFormat","Rails/classes/ActiveResource/Formats/JsonFormat.html#method-i-encode","(hash, options = nil)","",null,1],["encode","ActiveResource::Formats::XmlFormat","Rails/classes/ActiveResource/Formats/XmlFormat.html#method-i-encode","(hash, options={})","",null,1],["encode","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-encode","(value, options = nil)","<p>Dumps object in JSON (JavaScript Object Notation). See www.json.org for\nmore info.\n",null,1],["encode","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-encode","(value, use_options = true)","",null,1],["encode!","String","Ruby/classes/String.html#method-i-encode-21","(*args)","<p>The first form transcodes the contents of <em>str</em> from str.encoding to\n<code>encoding</code>. The second form transcodes …\n",null,0],["encode!","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-encode-21","()","<p>This method is responsible for properly setting the encoding of the source.\nUntil this point, we assume …\n",null,1],["encode64","ActiveSupport::Base64","Rails/classes/ActiveSupport/Base64.html#method-c-encode64","(value)","",null,1],["encode64","Base64","Rails/classes/Base64.html#method-c-encode64","(data)","<p>Encodes a string to its base 64 representation. Each 60 characters of\noutput is separated by a newline …\n",null,1],["encode64s","ActiveSupport::Base64","Rails/classes/ActiveSupport/Base64.html#method-c-encode64s","(value)","",null,1],["encode_credentials","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-encode_credentials","(user_name, password)","",null,1],["encode_credentials","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-encode_credentials","(http_method, credentials, password, password_is_ha1)","",null,1],["encode_credentials","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-encode_credentials","(token, options = {})","<p>Encodes the given token and options into an Authorization header value.\n<p>token   - String token. options …\n",null,1],["encode_json","ActiveSupport::JSON::Variable","Rails/classes/ActiveSupport/JSON/Variable.html#method-i-encode_json","(encoder)","",null,1],["encode_json","FalseClass","Rails/classes/FalseClass.html#method-i-encode_json","(encoder)","",null,1],["encode_json","Hash","Rails/classes/Hash.html#method-i-encode_json","(encoder)","",null,1],["encode_json","NilClass","Rails/classes/NilClass.html#method-i-encode_json","(encoder)","",null,1],["encode_json","Numeric","Rails/classes/Numeric.html#method-i-encode_json","(encoder)","",null,1],["encode_json","String","Rails/classes/String.html#method-i-encode_json","(encoder)","",null,1],["encode_json","TrueClass","Rails/classes/TrueClass.html#method-i-encode_json","(encoder)","",null,1],["encode_with","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-encode_with","(coder)","<p>Populate <code>coder</code> with attributes about this record that should\nbe serialized. The structure of <code>coder</code> defined …\n",null,1],["encode_with","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-encode_with","(coder)","",null,1],["encode_with","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-encode_with","(coder)","",null,1],["encode_with","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-encode_with","(coder)","",null,1],["encode_with","BigDecimal","Rails/classes/BigDecimal.html#method-i-encode_with","(coder)","",null,1],["encoding","Regexp","Ruby/classes/Regexp.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,0],["encoding","String","Ruby/classes/String.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of obj.\n",null,0],["encoding","Symbol","Ruby/classes/Symbol.html#method-i-encoding","()","<p>Returns the Encoding object that represents the encoding of <em>sym</em>.\n",null,0],["encoding","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-encoding","()","<p>Returns the current database encoding format.\n",null,1],["encoding=","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-encoding-3D","(value)","",null,1],["encoding_aware?","String","Rails/classes/String.html#method-i-encoding_aware-3F","()","",null,1],["encrypt","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt","(value)","",null,1],["encrypt_and_sign","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-i-encrypt_and_sign","(value)","<p>Encrypt and sign a message. We need to sign the message in order to avoid\npadding attacks. Reference: …\n",null,1],["end","MatchData","Ruby/classes/MatchData.html#method-i-end","(p1)","<p>Returns the offset of the character immediately following the end of the\n<em>n</em>th element of the match array …\n",null,0],["end","Range","Ruby/classes/Range.html#method-i-end","()","<p>Returns the object that defines the end of <em>rng</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">10</span>).<span class=\"ruby-identifier\">end</span>    <span class=\"ruby-comment\">#=&gt; 10</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">...</span><span class=\"ruby-value\">10</span>).<span class=\"ruby-identifier\">end</span>   <span class=\"ruby-comment\">#=&gt; 10</span>\n</pre>\n",null,0],["end_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_document","()","",null,1],["end_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-end_element","(name)","",null,1],["end_of_day","Date","Rails/classes/Date.html#method-i-end_of_day","()","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the end of the day (23:59:59) …\n",null,1],["end_of_day","DateTime","Rails/classes/DateTime.html#method-i-end_of_day","()","<p>Returns a new DateTime representing the end of the day (23:59:59)\n",null,1],["end_of_day","Time","Rails/classes/Time.html#method-i-end_of_day","()","<p>Returns a new Time representing the end of the day, 23:59:59.999999\n(.999999999 in ruby1.9)\n",null,1],["end_of_hour","DateTime","Rails/classes/DateTime.html#method-i-end_of_hour","()","<p>Returns a new DateTime representing the end of the hour (hh:59:59)\n",null,1],["end_of_hour","Time","Rails/classes/Time.html#method-i-end_of_hour","()","<p>Returns a new Time representing the end of the hour, x:59:59.999999\n(.999999999 in ruby1.9)\n",null,1],["end_of_month","Date","Rails/classes/Date.html#method-i-end_of_month","()","<p>Returns a new Date/DateTime representing the end of the month (last day of\nthe month; DateTime objects …\n",null,1],["end_of_month","Time","Rails/classes/Time.html#method-i-end_of_month","()","<p>Returns a new Time representing the end of the month (end of the last day\nof the month)\n",null,1],["end_of_quarter","Date","Rails/classes/Date.html#method-i-end_of_quarter","()","<p>Returns a new Date/DateTime representing the end of the quarter (last day\nof march, june, september, …\n",null,1],["end_of_quarter","Time","Rails/classes/Time.html#method-i-end_of_quarter","()","<p>Returns a new Time representing the end of the quarter (end of the last day\nof march, june, september, …\n",null,1],["end_of_week","Date","Rails/classes/Date.html#method-i-end_of_week","(start_day = :monday)","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the end\nof this week. Week is assumed to start on <code>start_day</code> …\n",null,1],["end_of_week","Time","Rails/classes/Time.html#method-i-end_of_week","(start_day = :monday)","<p>Returns a new Time representing the end of this week, week starts on\nstart_day (default is :monday,  …\n",null,1],["end_of_year","Date","Rails/classes/Date.html#method-i-end_of_year","()","<p>Returns a new Time representing the end of the year (31st of december;\nDateTime objects will have time …\n",null,1],["end_of_year","Time","Rails/classes/Time.html#method-i-end_of_year","()","<p>Returns a new Time representing the end of the year (end of the 31st of\ndecember)\n",null,1],["end_transaction","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-end_transaction","()","",null,1],["end_with?","String","Ruby/classes/String.html#method-i-end_with-3F","(*args)","<p>Returns true if <em>str</em> ends with one of the suffixes given.\n",null,0],["endpoint","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-endpoint","(endpoint = nil)","",null,1],["endpoint","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-endpoint","()","",null,1],["engine","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-engine","()","",null,1],["engine=","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-engine-3D","(name)","",null,1],["engines","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-c-engines","()","",null,1],["enlist_fixture_connections","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-enlist_fixture_connections","()","",null,1],["entries","Dir","Ruby/classes/Dir.html#method-c-entries","(*args)","<p>Returns an array containing all of the filenames in the given directory.\nWill raise a <code>SystemCallError</code> …\n",null,0],["entries","Enumerable","Ruby/classes/Enumerable.html#method-i-entries","(*args)","<p>Returns an array containing the items in <em>enum</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">to_a</span>                       <span class=\"ruby-comment\">#=&gt; [1, 2, 3, 4, 5, 6, ...</span>\n</pre>\n",null,0],["entry","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","Rails/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#method-i-entry","(record, options = {})","<p>Creates an entry tag for a specific record and prefills the id using class\nand id.\n<p>Options:\n<p><code>:published</code> …\n",null,1],["enum_for","Object","Ruby/classes/Object.html#method-i-enum_for","(*args)","<p>Creates a new Enumerator which will enumerate by on calling\n<code>method</code> on <code>obj</code>.\n<p><code>method</code> &mdash; the method to call on …\n",null,0],["enumerate","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-c-enumerate","(tag, options={})","<p>Prints all annotations with tag <code>tag</code> under the root directories\n<code>app</code>, <code>config</code>, <code>lib</code>,\n<code>script</code>, and <code>test</code> (recursively). …\n",null,1],["env","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-env","()","",null,1],["env","Rails","Rails/classes/Rails.html#method-c-env","()","",null,1],["env=","Rails","Rails/classes/Rails.html#method-c-env-3D","(environment)","",null,1],["env_config","Rails::Application","Rails/classes/Rails/Application.html#method-i-env_config","()","<p>Rails.application.env_config stores some of the Rails initial environment\nparameters. Currently stores: …\n",null,1],["env_config","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-env_config","()","",null,1],["env_filter","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-env_filter","()","",null,1],["environment","ActiveSupport::Testing::Performance::Benchmarker","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html#method-i-environment","()","",null,1],["environment","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-environment","(data=nil, options={}, &block)","<p>Adds a line inside the Application class for config/application.rb.\n<p>If options :env is specified, the …\n",null,1],["environment=","Rails::Commands::Plugin","Rails/classes/Rails/Commands/Plugin.html#method-i-environment-3D","(value)","",null,1],["eof","ARGF","Ruby/classes/ARGF.html#method-i-eof","()","<p>Returns true if the current file in <code>ARGF</code> is at end of file,\ni.e. it has no data to read. The stream must …\n",null,0],["eof","IO","Ruby/classes/IO.html#method-i-eof","()","<p>Returns true if <em>ios</em> is at end of file that means there are no more\ndata to read. The stream must be opened …\n",null,0],["eof?","ARGF","Ruby/classes/ARGF.html#method-i-eof-3F","()","<p>Returns true if the current file in <code>ARGF</code> is at end of file,\ni.e. it has no data to read. The stream must …\n",null,0],["eof?","IO","Ruby/classes/IO.html#method-i-eof-3F","()","<p>Returns true if <em>ios</em> is at end of file that means there are no more\ndata to read. The stream must be opened …\n",null,0],["eql?","Array","Ruby/classes/Array.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <code>self</code> and <em>other</em> are the\nsame object, or are both arrays with the same content.\n",null,0],["eql?","Bignum","Ruby/classes/Bignum.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>Bignum</code>\nwith the same value as <em>big</em>. Contrast this with\n<code>Bignum#==</code>, which …\n",null,0],["eql?","Float","Ruby/classes/Float.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a <code>Float</code> with\nthe same value as <em>flt</em>. Contrast this with <code>Float#==</code>,\nwhich performs …\n",null,0],["eql?","Hash","Ruby/classes/Hash.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>hash</em> and <em>other</em> are both\nhashes with the same content.\n",null,0],["eql?","MatchData","Ruby/classes/MatchData.html#method-i-eql-3F","(p1)","<p>Equality—Two matchdata are equal if their target strings, patterns, and\nmatched positions are identical. …\n",null,0],["eql?","Method","Ruby/classes/Method.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,0],["eql?","Numeric","Ruby/classes/Numeric.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>num</em> and <em>numeric</em> are the same\ntype and have equal values.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span> <span class=\"ruby-operator\">==</span> <span class=\"ruby-value\">1.0</span>          <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">eql?</span>(<span class=\"ruby-value\">1.0</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["eql?","Object","Ruby/classes/Object.html#method-i-eql-3F","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,0],["eql?","Proc","Ruby/classes/Proc.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> if <em>prc</em> is the same object as\n<em>other_proc</em>, or if they are both procs with the same body.\n",null,0],["eql?","Range","Ruby/classes/Range.html#method-i-eql-3F","(p1)","<p>Returns <code>true</code> only if <em>obj</em> is a Range, has equivalent\nbeginning and end items (by comparing them with  …\n",null,0],["eql?","Regexp","Ruby/classes/Regexp.html#method-i-eql-3F","(p1)","<p>Equality—Two regexps are equal if their patterns are identical, they have\nthe same character set code, …\n",null,0],["eql?","String","Ruby/classes/String.html#method-i-eql-3F","(p1)","<p>Two strings are equal if they have the same length and content.\n",null,0],["eql?","Struct","Ruby/classes/Struct.html#method-i-eql-3F","(p1)","<p>code-seq:\n\n<pre>struct.eql?(other)   -&gt; true or false</pre>\n<p>Two structures are equal if they are the same object, or …\n",null,0],["eql?","Time","Ruby/classes/Time.html#method-i-eql-3F","(p1)","<p>Return <code>true</code> if <em>time</em> and <em>other_time</em> are both\n<code>Time</code> objects with the same seconds and fractional seconds. …\n",null,0],["eql?","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-eql-3F","(p1)","<p>Two method objects are equal if they are bound to the same object and refer\nto the same method definition. …\n",null,0],["eql?","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-eql-3F","(resolver)","",null,1],["eql?","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-eql-3F","(comparison_object)","",null,1],["eql?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-eql-3F","(other)","<p>Tests for equality (delegates to ==).\n",null,1],["eql?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-eql-3F","(other)","",null,1],["eql?","Time","Rails/classes/Time.html#method-i-eql-3F","(other)","",null,1],["eql_with_coercion","Time","Rails/classes/Time.html#method-i-eql_with_coercion","(other)","<p>Layers additional behavior on Time#eql? so that ActiveSupport::TimeWithZone\ninstances can be eql? to …\n",null,1],["eql_without_coercion","Time","Rails/classes/Time.html#method-i-eql_without_coercion","(other)","",null,1],["equal?","BasicObject","Ruby/classes/BasicObject.html#method-i-equal-3F","(p1)","<p>Equality—At the <code>Object</code> level, <code>==</code> returns\n<code>true</code> only if <em>obj</em> and <em>other</em> are the same\nobject. Typically …\n",null,0],["erf","Math","Ruby/classes/Math.html#method-c-erf","(p1)","<p>Calculates the error function of x.\n",null,0],["erfc","Math","Ruby/classes/Math.html#method-c-erfc","(p1)","<p>Calculates the complementary error function of x.\n",null,0],["errno","SystemCallError","Ruby/classes/SystemCallError.html#method-i-errno","()","<p>Return this SystemCallError&#39;s error number.\n",null,0],["error","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-error","(error_message)","",null,1],["error_bytes","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-error_bytes","()","<p>Returns the discarded bytes when Encoding::InvalidByteSequenceError occurs.\n\n<pre>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...</pre>\n",null,0],["error_char","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-error_char","()","<p>Returns the one-character string which cause\nEncoding::UndefinedConversionError.\n\n<pre>ec = Encoding::Converter.new(&quot;ISO-8859-1&quot;, ...</pre>\n",null,0],["error_message","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_message","()","",null,1],["error_number","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-error_number","(exception)","",null,1],["error_wrapping","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-error_wrapping","(html_tag)","",null,1],["errors","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-errors","()","<p>Returns the <code>Errors</code> object that holds all information about\nattribute error messages.\n",null,1],["errors","ActiveResource::Validations","Rails/classes/ActiveResource/Validations.html#method-i-errors","()","<p>Returns the Errors object that holds all information about attribute error\nmessages.\n",null,1],["errors","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-errors","()","<p>POST create PUT update\n",null,1],["escape","Regexp","Ruby/classes/Regexp.html#method-c-escape","(p1)","<p>Escapes any characters that would have special meaning in a regular\nexpression. Returns a new escaped …\n",null,0],["escape","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-escape","(string)","",null,1],["escape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-escape_bytea","(value)","<p>Escapes binary strings for bytea input to the database.\n",null,1],["escape_glob_chars","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-escape_glob_chars","(path)","",null,1],["escape_javascript","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-escape_javascript","(javascript)","<p>Escapes carriage returns and single and double quotes for JavaScript\nsegments.\n<p>Also available through …\n",null,1],["escape_once","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-escape_once","(html)","<p>Returns an escaped version of <code>html</code> without affecting existing\nescaped entities.\n<p>Examples\n\n<pre>escape_once(&quot;1 ...</pre>\n",null,1],["establish_connection","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-establish_connection","(spec = ENV[\"DATABASE_URL\"])","<p>Establishes the connection to the database. Accepts a hash as input where\nthe <code>:adapter</code> key must be specified …\n",null,1],["establish_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-establish_connection","(name, spec)","",null,1],["etag=","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-etag-3D","(etag)","",null,1],["etag_matches?","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-etag_matches-3F","(etag)","",null,1],["euid","Process","Ruby/classes/Process.html#method-c-euid","()","<p>Returns the effective user ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">euid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["euid=","Process","Ruby/classes/Process.html#method-c-euid-3D","(p1)","<p>Sets the effective user ID for this process. Not available on all\nplatforms.\n",null,0],["eval","Binding","Ruby/classes/Binding.html#method-i-eval","(p1, p2 = v2, p3 = v3)","<p>Evaluates the Ruby expression(s) in <em>string</em>, in the\n<em>binding</em>&#39;s context.  If the optional <em>filename</em> and …\n",null,0],["eval","Kernel","Ruby/classes/Kernel.html#method-i-eval","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Evaluates the Ruby expression(s) in <em>string</em>. If <em>binding</em> is\ngiven, which must be a <code>Binding</code> object, the …\n",null,0],["eval","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-eval","()","",null,0],["evaluate_default_scope","ActiveRecord::Scoping::Default::ClassMethods","Rails/classes/ActiveRecord/Scoping/Default/ClassMethods.html#method-i-evaluate_default_scope","()","<p>The ignore_default_scope flag is used to prevent an infinite recursion\nsituation where a default scope …\n",null,1],["even?","Bignum","Ruby/classes/Bignum.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>big</em> is an even number.\n",null,0],["even?","Fixnum","Ruby/classes/Fixnum.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>fix</em> is an even number.\n",null,0],["even?","Integer","Ruby/classes/Integer.html#method-i-even-3F","()","<p>Returns <code>true</code> if <em>int</em> is an even number.\n",null,0],["exabyte","Numeric","Rails/classes/Numeric.html#method-i-exabyte","()","",null,1],["exabytes","Numeric","Rails/classes/Numeric.html#method-i-exabytes","()","",null,1],["except","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-except","(*skips)","<p>Removes from the query the condition(s) specified in <code>skips</code>.\n<p>Example:\n\n<pre>Post.order(&#39;id asc&#39;).except(:order) ...</pre>\n",null,1],["except","Hash","Rails/classes/Hash.html#method-i-except","(*keys)","<p>Return a hash that includes everything but the given keys. This is useful\nfor limiting a set of parameters …\n",null,1],["except!","Hash","Rails/classes/Hash.html#method-i-except-21","(*keys)","<p>Replaces the hash without the given keys.\n",null,1],["exception","Exception","Ruby/classes/Exception.html#method-c-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return\nthe receiver. Otherwise, create …\n",null,0],["exception","Exception","Ruby/classes/Exception.html#method-i-exception","(*args)","<p>With no argument, or if the argument is the same as the receiver, return\nthe receiver. Otherwise, create …\n",null,0],["excerpt","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-excerpt","(text, phrase, *args)","<p>Extracts an excerpt from <code>text</code> that matches the first instance\nof <code>phrase</code>. The <code>:radius</code> option expands the …\n",null,1],["exclude?","Enumerable","Rails/classes/Enumerable.html#method-i-exclude-3F","(object)","<p>The negative of the <code>Enumerable#include?</code>. Returns true if the\ncollection does not include the object. …\n",null,1],["exclude?","String","Rails/classes/String.html#method-i-exclude-3F","(string)","<p>The inverse of <code>String#include?</code>. Returns true if the string\ndoes not include the other string.\n\n<pre>&quot;hello&quot;.exclude? ...</pre>\n",null,1],["exclude_end?","Range","Ruby/classes/Range.html#method-i-exclude_end-3F","()","<p>Returns <code>true</code> if <em>rng</em> excludes its end value.\n",null,0],["exclusive","Thread","Ruby/classes/Thread.html#method-c-exclusive","()","<p>Wraps a block in Thread.critical, restoring the original value upon exit\nfrom the critical section, and …\n",null,0],["exec","Kernel","Ruby/classes/Kernel.html#method-i-exec","(*args)","<p>Replaces the current process by running the given external\n<em>command</em>. <em>command…</em> is one of following forms. …\n",null,0],["exec","Process","Ruby/classes/Process.html#method-c-exec","(*args)","<p>Replaces the current process by running the given external\n<em>command</em>. <em>command…</em> is one of following forms. …\n",null,0],["exec_delete","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_delete","(sql, name, binds)","<p>Executes delete <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_delete","(sql, name, binds)","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_delete","(sql, name, binds)","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-exec_delete","(sql, name = 'SQL', binds = [])","",null,1],["exec_delete","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-exec_delete","(sql, name = 'SQL', binds = [])","",null,1],["exec_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_insert","(sql, name, binds)","<p>Executes insert <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,1],["exec_insert","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_insert","(sql, name, binds)","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","<p>Executes <code>sql</code> statement in the context of this connection using\n<code>binds</code> as the bind substitutes. <code>name</code> is …\n",null,1],["exec_query","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-exec_query","(sql, name = 'SQL', binds = [])","",null,1],["exec_query","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-exec_query","(sql, name = nil, binds = [])","",null,1],["exec_script_rails!","Rails::ScriptRailsLoader","Rails/classes/Rails/ScriptRailsLoader.html#method-c-exec_script_rails-21","()","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-exec_update","(sql, name, binds)","<p>Executes update <code>sql</code> statement in the context of this\nconnection using <code>binds</code> as the bind substitutes. …\n",null,1],["exec_update","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_update","(sql, name, binds)","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-exec_update","(sql, name, binds)","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-exec_update","(sql, name = 'SQL', binds = [])","",null,1],["exec_update","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-exec_update","(sql, name = 'SQL', binds = [])","",null,1],["exec_without_stmt","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-exec_without_stmt","(sql, name = 'SQL', binds = [])","",null,1],["executable?","File","Ruby/classes/File.html#method-c-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective\nuser id of this process.\n",null,0],["executable?","File::Stat","Ruby/classes/File/Stat.html#method-i-executable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is executable or if the\noperating system doesn&#39;t distinguish executable files …\n",null,0],["executable?","FileTest","Ruby/classes/FileTest.html#method-i-executable-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the effective\nuser id of this process.\n",null,0],["executable_real?","File","Ruby/classes/File.html#method-c-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user\nid of this process.\n",null,0],["executable_real?","File::Stat","Ruby/classes/File/Stat.html#method-i-executable_real-3F","()","<p>Same as <code>executable?</code>, but tests using the real owner of the\nprocess.\n",null,0],["executable_real?","FileTest","Ruby/classes/FileTest.html#method-i-executable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is executable by the real user\nid of this process.\n",null,0],["execute","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-execute","(sql, name = nil)","<p>Executes the SQL statement in the context of this connection.\n",null,1],["execute","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-execute","(sql, name = nil)","<p>Executes an SQL statement, returning a PGresult object on success or\nraising a PGError exception otherwise. …\n",null,1],["execute","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute","()","<p>Executes the given block and updates the counter to latest timestamp.\n",null,1],["execute_and_free","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-execute_and_free","(sql, name = nil)","",null,1],["execute_hook","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-execute_hook","(base, options, block)","",null,1],["execute_if_updated","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-execute_if_updated","()","<p>Execute the block given if updated.\n",null,1],["exist?","Dir","Ruby/classes/Dir.html#method-c-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["exist?","File","Ruby/classes/File.html#method-c-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory,\n<code>false</code> otherwise.\n",null,0],["exist?","FileTest","Ruby/classes/FileTest.html#method-i-exist-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory,\n<code>false</code> otherwise.\n",null,0],["exist?","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-exist-3F","(key)","",null,1],["exist?","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-exist-3F","(name, options = nil)","<p>Return true if the cache contains an entry for the given key.\n<p>Options are passed to the underlying cache …\n",null,1],["existent","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-existent","()","<p>Returns all expanded paths but only if they exist in the filesystem.\n",null,1],["existent_directories","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-existent_directories","()","",null,1],["exists?","Dir","Ruby/classes/Dir.html#method-c-exists-3F","(p1)","<p>Returns <code>true</code> if the named file is a directory, or a symlink\nthat points at a directory, and <code>false</code> otherwise. …\n",null,0],["exists?","File","Ruby/classes/File.html#method-c-exists-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n",null,0],["exists?","FileTest","Ruby/classes/FileTest.html#method-i-exists-3F","(p1)","<p>Return <code>true</code> if the named file exists.\n",null,0],["exists?","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-exists-3F","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["exists?","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-exists-3F","(id = false)","<p>Returns true if a record exists in the table that matches the\n<code>id</code> or conditions given, or false otherwise. …\n",null,1],["exists?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-exists-3F","(id, options = {})","<p>Asserts the existence of a resource, returning <code>true</code> if the\nresource is found.\n<p>Examples\n\n<pre>Note.create(:title ...</pre>\n",null,1],["exists?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-exists-3F","()","<p>Evaluates to <code>true</code> if this resource is not <code>new?</code>\nand is found on the remote service.  Using this method, …\n",null,1],["exit","Kernel","Ruby/classes/Kernel.html#method-i-exit","(p1 = v1)","<p>Initiates the termination of the Ruby script by raising the\n<code>SystemExit</code> exception. This exception may …\n",null,0],["exit","Process","Ruby/classes/Process.html#method-c-exit","(p1 = v1)","<p>Initiates the termination of the Ruby script by raising the\n<code>SystemExit</code> exception. This exception may …\n",null,0],["exit","Thread","Ruby/classes/Thread.html#method-i-exit","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,0],["exit","Thread","Ruby/classes/Thread.html#method-c-exit","()","<p>Terminates the currently running thread and schedules another thread to be\nrun. If this thread is already …\n",null,0],["exit!","Kernel","Ruby/classes/Kernel.html#method-i-exit-21","(p1 = v1)","<p>Exits the process immediately. No exit handlers are run. <em>status</em> is\nreturned to the underlying system …\n",null,0],["exit!","Process","Ruby/classes/Process.html#method-c-exit-21","(p1 = v1)","<p>Exits the process immediately. No exit handlers are run. <em>status</em> is\nreturned to the underlying system …\n",null,0],["exit_on_failure?","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-c-exit_on_failure-3F","()","<p>We want to exit on failure to be kind to other libraries This is only when\naccessing via CLI\n",null,1],["exit_value","LocalJumpError","Ruby/classes/LocalJumpError.html#method-i-exit_value","()","<p>call_seq:\n\n<pre>local_jump_error.exit_value  -&gt; obj</pre>\n<p>Returns the exit value associated with this <code>LocalJumpError</code> …\n",null,0],["exited?","Process::Status","Ruby/classes/Process/Status.html#method-i-exited-3F","()","<p>Returns <code>true</code> if <em>stat</em> exited normally (for example\nusing an <code>exit()</code> call or finishing the program).\n",null,0],["exitstatus","Process::Status","Ruby/classes/Process/Status.html#method-i-exitstatus","()","<p>Returns the least significant eight bits of the return code of\n<em>stat</em>. Only available if <code>exited?</code> is <code>true</code>\n…\n",null,0],["exp","Math","Ruby/classes/Math.html#method-c-exp","(p1)","<p>Returns e**x.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-value\">0</span>)       <span class=\"ruby-comment\">#=&gt; 1.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 2.718281828459045</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">exp</span>(<span class=\"ruby-value\">1.5</span>)     <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["expand_cache_key","ActiveSupport::Cache","Rails/classes/ActiveSupport/Cache.html#method-c-expand_cache_key","(key, namespace = nil)","",null,1],["expand_hash_conditions_for_aggregates","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-expand_hash_conditions_for_aggregates","(attrs)","<p>Accepts a hash of SQL conditions and replaces those attributes that\ncorrespond to a <code>composed_of</code> relationship …\n",null,1],["expand_path","File","Ruby/classes/File.html#method-c-expand_path","(p1, p2 = v2)","<p>Converts a pathname to an absolute pathname. Relative paths are referenced\nfrom the current working directory …\n",null,0],["expanded","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-expanded","()","<p>Expands all paths against the root and return all unique values.\n",null,1],["expected_response","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-expected_response","(http_method, uri, credentials, password, password_is_ha1=true)","<p>Returns the expected response for a request of <code>http_method</code> to\n<code>uri</code> with the decoded <code>credentials</code> and the …\n",null,1],["expire","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-expire","()","",null,1],["expire_action","ActionController::Caching::Actions","Rails/classes/ActionController/Caching/Actions.html#method-i-expire_action","(options = {})","",null,1],["expire_fragment","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-expire_fragment","(key, options = nil)","<p>Removes fragments from the cache.\n<p><code>key</code> can take one of three forms:\n<p>String - This would normally take the …\n",null,1],["expire_page","ActionController::Caching::Pages","Rails/classes/ActionController/Caching/Pages.html#method-i-expire_page","(options = {})","<p>Expires the page that was cached with the <code>options</code> as a key.\nExample:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">expire_page</span> :<span class=\"ruby-identifier\">controller</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;lists&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["expire_page","ActionController::Caching::Pages::ClassMethods","Rails/classes/ActionController/Caching/Pages/ClassMethods.html#method-i-expire_page","(path)","<p>Expires the page that was cached with the <code>path</code> as a key.\nExample:\n\n<pre>expire_page &quot;/lists/show&quot;</pre>\n",null,1],["expired?","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-expired-3F","()","<p>Check if the entry is expired. The <code>expires_in</code> parameter can\noverride the value set when the entry was …\n",null,1],["expires_at","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-expires_at","()","<p>Seconds since the epoch when the entry will expire.\n",null,1],["expires_at=","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-expires_at-3D","(time)","<p>Set a new time when the entry will expire.\n",null,1],["expires_in","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-expires_in","(seconds, options = {})","<p>Sets a HTTP 1.1 Cache-Control header. Defaults to issuing a\n<code>private</code> instruction, so that intermediate …\n",null,1],["expires_now","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-expires_now","()","<p>Sets a HTTP 1.1 Cache-Control header of <code>no-cache</code> so no caching\nshould occur by the browser or intermediate …\n",null,1],["explain","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,1],["explain","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,1],["explain","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-explain","(arel, binds = [])","<p>DATABASE STATEMENTS ======================================\n",null,1],["explain","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-explain","()","<p>Runs EXPLAIN on the query or queries triggered by this relation and returns\nthe result as a string.  …\n",null,1],["ext","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-ext","()","",null,1],["extend","Object","Ruby/classes/Object.html#method-i-extend","(*args)","<p>Adds to <em>obj</em> the instance methods from each module given as a\nparameter.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Mod</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">hello</span>\n    <span class=\"ruby-string\">&quot;Hello ...\n</span></pre>\n",null,0],["extended","ActiveModel::Callbacks","Rails/classes/ActiveModel/Callbacks.html#method-c-extended","(base)","",null,1],["extended","ActiveRecord::Explain","Rails/classes/ActiveRecord/Explain.html#method-c-extended","(base)","",null,1],["extended","ActiveSupport::Concern","Rails/classes/ActiveSupport/Concern.html#method-c-extended","(base)","",null,1],["extended","ActiveSupport::Memoizable","Rails/classes/ActiveSupport/Memoizable.html#method-c-extended","(base)","",null,1],["extended","ActiveSupport::Testing::Declarative","Rails/classes/ActiveSupport/Testing/Declarative.html#method-c-extended","(klass)","",null,1],["extending","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-extending","(*modules)","<p>Used to extend a scope with additional methods, either through a module or\nthrough a block provided. …\n",null,1],["extension","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-extension","()","",null,1],["extension","ActionView::Helpers::AssetTagHelper::JavascriptIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptIncludeTag.html#method-i-extension","()","",null,1],["extension","ActionView::Helpers::AssetTagHelper::StylesheetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetIncludeTag.html#method-i-extension","()","",null,1],["extension","ActiveResource::Formats::JsonFormat","Rails/classes/ActiveResource/Formats/JsonFormat.html#method-i-extension","()","",null,1],["extension","ActiveResource::Formats::XmlFormat","Rails/classes/ActiveResource/Formats/XmlFormat.html#method-i-extension","()","",null,1],["external_encoding","ARGF","Ruby/classes/ARGF.html#method-i-external_encoding","()","\n<pre>Returns the external encoding for files read from +ARGF+ as an +Encoding+\nobject. The external encoding ...</pre>\n",null,0],["external_encoding","IO","Ruby/classes/IO.html#method-i-external_encoding","()","<p>Returns the Encoding object that represents the encoding of the file. If io\nis write mode and no encoding …\n",null,0],["externals","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-externals","()","",null,1],["externals=","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-externals-3D","(items)","",null,1],["extify","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-extify","(name)","<p>Add an extension to the given name based on the platform.\n",null,1],["extname","File","Ruby/classes/File.html#method-c-extname","(p1)","<p>Returns the extension (the portion of file name in <em>path</em> after the\nperiod).\n\n<pre>File.extname(&quot;test.rb&quot;)    ...</pre>\n",null,0],["extract!","Hash","Rails/classes/Hash.html#method-i-extract-21","(*keys)","<p>Removes and returns the key/value pairs matching the given keys.\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>, :<span class=\"ruby-identifier\">b</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>, :<span class=\"ruby-identifier\">c</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">3</span>, :<span class=\"ruby-identifier\">d</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">4</span>}.<span class=\"ruby-identifier\">extract!</span>(:<span class=\"ruby-identifier\">a</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["extract_annotations_from","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-extract_annotations_from","(file, pattern)","<p>If <code>file</code> is the filename of a file that contains annotations\nthis method returns a hash with a single …\n",null,1],["extract_domain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-extract_domain","(host, tld_length = @@tld_length)","",null,1],["extract_options!","Array","Rails/classes/Array.html#method-i-extract_options-21","()","<p>Extracts options from a set of arguments. Removes and returns the last\nelement in the array if it&#39;s …\n",null,1],["extract_schema_and_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::Utils","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/Utils.html#method-i-extract_schema_and_table","(name)","<p>Returns an array of <code>[schema_name, table_name]</code> extracted from\n<code>name</code>. <code>schema_name</code> is nil if not specified …\n",null,1],["extract_session_id","ActionDispatch::Session::StaleSessionCheck","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-extract_session_id","(env)","",null,1],["extract_subdomain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomain","(host, tld_length = @@tld_length)","",null,1],["extract_subdomains","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-extract_subdomains","(host, tld_length = @@tld_length)","",null,1],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Always returns true, so that <code>Array#extract_options!</code> finds\nmembers of this class.\n",null,1],["extractable_options?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-extractable_options-3F","()","<p>Always returns true, so that <code>Array#extract_options!</code> finds\nmembers of this class.\n",null,1],["extractable_options?","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-extractable_options-3F","()","<p>Returns true to make sure that this hash is extractable via\n<code>Array#extract_options!</code>\n",null,1],["extractable_options?","Hash","Rails/classes/Hash.html#method-i-extractable_options-3F","()","<p>By default, only instances of Hash itself are extractable. Subclasses of\nHash may implement this method …\n",null,1],["fail","Kernel","Ruby/classes/Kernel.html#method-i-fail","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a\n<code>RuntimeError</code> if <code>$!</code> is <code>nil</code>. With a\nsingle <code>String</code> …\n",null,0],["fallbacks","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-fallbacks","()","<p>Hold configured generators fallbacks. If a plugin developer wants a\ngenerator group to fallback to another …\n",null,1],["fatal","","Ruby/classes/fatal.html","","<p>fatal is an Exception that is raised when ruby has encountered a fatal\nerror and must exit.  You are …\n",null,0],["favicon_link_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-favicon_link_tag","(source='/favicon.ico', options={})","\n<pre>&lt;%= favicon_link_tag %&gt;</pre>\n<p>generates\n\n<pre>&lt;link href=&quot;/favicon.ico&quot; rel=&quot;shortcut icon&quot; type=&quot;image/vnd.microsoft.icon&quot; ...</pre>\n",null,1],["fcntl","IO","Ruby/classes/IO.html#method-i-fcntl","(p1, p2 = v2)","<p>Provides a mechanism for issuing low-level commands to control or query\nfile-oriented I/O streams. Arguments …\n",null,0],["fdatasync","IO","Ruby/classes/IO.html#method-i-fdatasync","()","<p>Immediately writes all buffered data in <em>ios</em> to disk.\n<p>If the underlying operating system does not support …\n",null,0],["fdiv","Bignum","Ruby/classes/Bignum.html#method-i-fdiv","(p1)","<p>Returns the floating point result of dividing <em>big</em> by\n<em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">fdiv</span>(<span class=\"ruby-value\">13731</span>)      <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["fdiv","Complex","Ruby/classes/Complex.html#method-i-fdiv","(p1)","<p>Performs division as each part is a float, never returns a float.\n<p>For example:\n\n<pre>Complex(11,22).fdiv(3)  ...</pre>\n",null,0],["fdiv","Fixnum","Ruby/classes/Fixnum.html#method-i-fdiv","(p1)","<p>Returns the floating point result of dividing <em>fix</em> by\n<em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">654321</span>.<span class=\"ruby-identifier\">fdiv</span>(<span class=\"ruby-value\">13731</span>)      <span class=\"ruby-comment\">#=&gt; 47.6528293642124 ...</span>\n</pre>\n",null,0],["fdiv","Float","Ruby/classes/Float.html#method-i-fdiv","(p1)","<p>Returns float / numeric.\n",null,0],["fdiv","Numeric","Ruby/classes/Numeric.html#method-i-fdiv","(p1)","<p>Returns float division.\n",null,0],["fdiv","Rational","Ruby/classes/Rational.html#method-i-fdiv","(p1)","<p>Performs division and returns the value as a float.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">fdiv</span>(<span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 0.6666666666666666 ...</span>\n</pre>\n",null,0],["feed","Enumerator","Ruby/classes/Enumerator.html#method-i-feed","(p1)","<p>Sets the value to be returned by the next yield inside <code>e</code>.\n<p>If the value is not set, the yield returns nil. …\n",null,0],["fetch","Array","Ruby/classes/Array.html#method-i-fetch","(p1, p2 = v2)","<p>Tries to return the element at position <em>index</em>. If the index lies\noutside the array, the first form throws …\n",null,0],["fetch","ENV","Ruby/classes/ENV.html#method-c-fetch","(p1, p2 = v2)","<p>Retrieves the environment variable <code>name</code>.\n<p>If the given name does not exist and neither <code>default</code> nor a\nblock …\n",null,0],["fetch","Hash","Ruby/classes/Hash.html#method-i-fetch","(p1, p2 = v2)","<p>Returns a value from the hash for the given key. If the key can&#39;t be\nfound, there are several options: …\n",null,0],["fetch","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-fetch","(name, options = nil)","<p>Fetches data from the cache, using the given key. If there is data in the\ncache with the given key, then …\n",null,1],["fetch","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be\neither a string or a symbol:\n\n<pre>counters = HashWithIndifferentAccess.new ...</pre>\n",null,1],["fetch","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-fetch","(key, *extras)","<p>Same as <code>Hash#fetch</code> where the key passed as argument can be\neither a string or a symbol:\n\n<pre>counters = HashWithIndifferentAccess.new ...</pre>\n",null,1],["fetch","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-fetch","(links = @urls_to_fetch)","",null,1],["fetch_dir","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-fetch_dir","(url)","",null,1],["field_set_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-field_set_tag","(legend = nil, options = nil, &block)","<p>Creates a field set for grouping HTML form elements.\n<p><code>legend</code> will become the fieldset&#39;s title (optional …\n",null,1],["field_type","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-field_type","()","",null,1],["fields_for","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-fields_for","(record_name, record_object = nil, fields_options = {}, &block)","",null,1],["fields_for","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-fields_for","(record_name, record_object = nil, options = {}, &block)","<p>Creates a scope around a specific model object like form_for, but\ndoesn&#39;t create the form tags themselves. …\n",null,1],["fifth","Array","Rails/classes/Array.html#method-i-fifth","()","<p>Equal to <code>self[4]</code>.\n",null,1],["file","ARGF","Ruby/classes/ARGF.html#method-i-file","()","<p>Returns the current file as an <code>IO</code> or <code>File</code> object.\n#&lt;IO:&lt;STDIN&gt;&gt; is returned when the current …\n",null,0],["file","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-file","(*args, &block)","<p>Define file as an alias to create_file for backwards compatibility.\n",null,1],["file?","File","Ruby/classes/File.html#method-c-file-3F","(p1)","<p>Returns <code>true</code> if the named file exists and is a regular file.\n",null,0],["file?","File::Stat","Ruby/classes/File/Stat.html#method-i-file-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a regular file (not a device\nfile, pipe, socket, etc.).\n\n<pre>File.stat(&quot;testfile&quot;).file? ...</pre>\n",null,0],["file?","FileTest","Ruby/classes/FileTest.html#method-i-file-3F","(p1)","<p>Returns <code>true</code> if the named file exists and is a regular file.\n",null,0],["file_field","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-file_field","(method, options = {})","",null,1],["file_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-file_field","(object_name, method, options = {})","<p>Returns a file upload input tag tailored for accessing a specified\nattribute (identified by <code>method</code>) on …\n",null,1],["file_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-file_field_tag","(name, options = {})","<p>Creates a file upload field. If you are using file uploads then you will\nalso need to set the multipart …\n",null,1],["file_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-file_path","()","",null,1],["filename","ARGF","Ruby/classes/ARGF.html#method-i-filename","()","<p>Returns the current filename. “-” is returned when the current file is\nSTDIN.\n<p>For example:\n\n<pre>$ ...</pre>\n",null,0],["filename","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-filename","()","<p>Returns the filename for the data file for this version\n",null,1],["fileno","ARGF","Ruby/classes/ARGF.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for the current\nfile. Raises an <code>ArgumentError</code> …\n",null,0],["fileno","IO","Ruby/classes/IO.html#method-i-fileno","()","<p>Returns an integer representing the numeric file descriptor for\n<em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">$stdin</span>.<span class=\"ruby-identifier\">fileno</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">$stdout</span>.<span class=\"ruby-identifier\">fileno</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["fill","Array","Ruby/classes/Array.html#method-i-fill","(p1 = v1, p2 = v2)","<p>The first three forms set the selected elements of <code>self</code> (which\nmay be the entire array) to <em>obj</em>. A <em>start</em> …\n",null,0],["filter","ActionDispatch::Http::ParameterFilter","Rails/classes/ActionDispatch/Http/ParameterFilter.html#method-i-filter","(params)","",null,1],["filter_by","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-filter_by","(constraint)","",null,1],["filtered_env","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_env","()","<p>Return a hash of request.env with all sensitive data replaced.\n",null,1],["filtered_options","ActiveModel::Validations::NumericalityValidator","Rails/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-filtered_options","(value)","",null,1],["filtered_parameters","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_parameters","()","<p>Return a hash of parameters with all sensitive data replaced.\n",null,1],["filtered_path","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_path","()","<p>Reconstructed a path with all sensitive GET parameters replaced.\n",null,1],["filtered_query_string","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-filtered_query_string","()","",null,1],["find","Encoding","Ruby/classes/Encoding.html#method-c-find","(p1)","<p>Search the encoding with specified <em>name</em>. <em>name</em> should be a\nstring or symbol.\n\n<pre>Encoding.find(&quot;US-ASCII&quot;) ...</pre>\n",null,0],["find","Enumerable","Ruby/classes/Enumerable.html#method-i-find","(p1 = v1)","<p>Passes each entry in <em>enum</em> to <em>block</em>. Returns the first for\nwhich <em>block</em> is not false.  If no object matches, …\n",null,0],["find","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["find","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find","(*args)","<p>Find operates with four different retrieval approaches:\n<p>Find by id - This can either be a specific id …\n",null,1],["find","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-find","(*arguments)","<p>Core method for finding resources.  Used similarly to Active Record&#39;s\n<code>find</code> method.\n<p>Arguments\n<p>The first …\n",null,1],["find","Plugin","Rails/classes/Plugin.html#method-c-find","(name)","",null,1],["find","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-find","(path)","<p>Finds engine with given path\n",null,1],["find","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-find","(klass, params=nil)","<p>GET show GET edit PUT update DELETE destroy\n",null,1],["find","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-c-find","(dir=nil)","",null,1],["find","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-find","(dirs=%w(app config lib script test))","<p>Returns a hash that maps filenames under <code>dirs</code> (recursively) to\narrays with their annotations.\n",null,1],["find_all","Enumerable","Ruby/classes/Enumerable.html#method-i-find_all","()","<p>Returns an array containing all elements of <em>enum</em> for which\n<em>block</em> is not <code>false</code> (see also\n<code>Enumerable#reject</code> …\n",null,0],["find_all","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_all","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["find_all","ActionView::Resolver","Rails/classes/ActionView/Resolver.html#method-i-find_all","(name, prefix=nil, partial=false, details={}, key=nil, locals=[])","<p>Normalizes the arguments and passes it on to find_template.\n",null,1],["find_all_tag","ActionDispatch::Assertions::TagAssertions","Rails/classes/ActionDispatch/Assertions/TagAssertions.html#method-i-find_all_tag","(conditions)","",null,1],["find_by_attributes","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_by_attributes","(match, attributes, *args)","",null,1],["find_by_session_id","ActiveRecord::SessionStore::Session","Rails/classes/ActiveRecord/SessionStore/Session.html#method-c-find_by_session_id","(session_id)","<p>Hook to set up sessid compatibility.\n",null,1],["find_by_session_id","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-find_by_session_id","(session_id)","<p>Look up a session by id and unmarshal its data if found.\n",null,1],["find_by_sql","ActiveRecord::Querying","Rails/classes/ActiveRecord/Querying.html#method-i-find_by_sql","(sql, binds = [])","<p>Executes a custom SQL query against your database and returns all the\nresults. The results will be returned …\n",null,1],["find_cmd","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-find_cmd","(*commands)","",null,1],["find_each","ActiveRecord::Batches","Rails/classes/ActiveRecord/Batches.html#method-i-find_each","(options = {})","<p>Yields each record that was found by the find <code>options</code>. The\nfind is performed by find_in_batches with …\n",null,1],["find_first","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_first","()","",null,1],["find_in","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-i-find_in","(dir)","<p>Returns a hash that maps filenames under <code>dir</code> (recursively) to\narrays with their annotations. Only files …\n",null,1],["find_in_batches","ActiveRecord::Batches","Rails/classes/ActiveRecord/Batches.html#method-i-find_in_batches","(options = {})","<p>Yields each batch of records that was found by the find\n<code>options</code> as an array. The size of each batch is …\n",null,1],["find_index","Array","Ruby/classes/Array.html#method-i-find_index","(p1)","<p>Returns the index of the first object in <code>self</code> such that the\nobject is <code>==</code> to <em>obj</em>. If a block is given …\n",null,0],["find_index","Enumerable","Ruby/classes/Enumerable.html#method-i-find_index","(p1)","<p>Compares each entry in <em>enum</em> with <em>value</em> or passes to\n<em>block</em>.  Returns the index for the first for which …\n",null,0],["find_last","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_last","()","",null,1],["find_one","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_one","(id)","",null,1],["find_or_instantiator_by_attributes","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_or_instantiator_by_attributes","(match, attributes, *args)","",null,1],["find_root_with_flag","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-find_root_with_flag","(flag, default=nil)","",null,1],["find_some","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_some","(ids)","",null,1],["find_tag","ActionDispatch::Assertions::TagAssertions","Rails/classes/ActionDispatch/Assertions/TagAssertions.html#method-i-find_tag","(conditions)","",null,1],["find_template","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-find_template","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["find_tzinfo","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-find_tzinfo","(name)","",null,1],["find_with_associations","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_with_associations","()","",null,1],["find_with_ids","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-find_with_ids","(*ids)","",null,1],["find_zone","Time","Rails/classes/Time.html#method-c-find_zone","(time_zone)","",null,1],["find_zone!","Time","Rails/classes/Time.html#method-c-find_zone-21","(time_zone)","<p>Returns a TimeZone instance or nil, or raises an ArgumentError for invalid\ntimezones.\n",null,1],["finder?","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-i-finder-3F","()","",null,1],["finish","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-finish","()","<p>Finishes the converter. It returns the last part of the converted string.\n\n<pre>ec = Encoding::Converter.new(&quot;utf-8&quot;, ...</pre>\n",null,0],["finish_template","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-finish_template","()","",null,1],["finish_template","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-finish_template","()","",null,1],["finite?","Float","Ruby/classes/Float.html#method-i-finite-3F","()","<p>Returns <code>true</code> if <em>flt</em> is a valid IEEE floating point\nnumber (it is not infinite, and <code>nan?</code> is <code>false</code>).\n",null,0],["first","Array","Ruby/classes/Array.html#method-i-first","(*args)","<p>Returns the first element, or the first <code>n</code> elements, of the\narray. If the array is empty, the first form …\n",null,0],["first","Enumerable","Ruby/classes/Enumerable.html#method-i-first","(p1 = v1)","<p>Returns the first element, or the first <code>n</code> elements, of the\nenumerable. If the enumerable is empty, the …\n",null,0],["first","Range","Ruby/classes/Range.html#method-i-first","(p1)","<p>Returns the first object in <em>rng</em>, or the first <code>n</code>\nelements.\n",null,0],["first","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-first","(*args)","<p>A convenience wrapper for <code>find(:first, *args)</code>. You can pass in\nall the same arguments to this method …\n",null,1],["first","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-first","(*args)","<p>A convenience wrapper for <code>find(:first, *args)</code>. You can pass in\nall the same arguments to this method …\n",null,1],["first","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-first","()","",null,1],["first","String","Rails/classes/String.html#method-i-first","(limit = 1)","<p>Returns the first character of the string or the first <code>limit</code>\ncharacters.\n<p>Examples:\n\n<pre>&quot;hello&quot;.first     # ...</pre>\n",null,1],["first!","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-first-21","()","<p>Same as <code>first</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>first!</code> accepts …\n",null,1],["first_or_create","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-first_or_create","(attributes = nil, options = {}, &block)","<p>Tries to load the first record; if it fails, then <code>create</code> is\ncalled with the same arguments as this method. …\n",null,1],["first_or_create!","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-first_or_create-21","(attributes = nil, options = {}, &block)","<p>Like <code>first_or_create</code> but calls <code>create!</code> so an\nexception is raised if the created record is invalid.\n<p>Expects …\n",null,1],["first_or_initialize","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-first_or_initialize","(attributes = nil, options = {}, &block)","<p>Like <code>first_or_create</code> but calls <code>new</code> instead of\n<code>create</code>.\n<p>Expects arguments in the same format as <code>Base.new</code> …\n",null,1],["fixed_encoding?","Regexp","Ruby/classes/Regexp.html#method-i-fixed_encoding-3F","()","<p>Returns false if rxp is applicable to a string with any ASCII compatible\nencoding. Returns true otherwise. …\n",null,0],["fixture_file_upload","ActionDispatch::TestProcess","Rails/classes/ActionDispatch/TestProcess.html#method-i-fixture_file_upload","(path, mime_type = nil, binary = false)","<p>Shortcut for\n<code>Rack::Test::UploadedFile.new(ActionController::TestCase.fixture_path\n+ path, type)</code>:\n\n<pre>post ...</pre>\n",null,1],["fixture_is_cached?","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-fixture_is_cached-3F","(connection, table_name)","",null,1],["fixtures","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-fixtures","(*fixture_names)","",null,1],["flash","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-flash","()","<p>Access the contents of the flash. Use <code>flash[\"notice\"]</code> to read\na notice you put there or <code>flash[\"notice\"]</code> …\n",null,1],["flash","ActionDispatch::TestProcess","Rails/classes/ActionDispatch/TestProcess.html#method-i-flash","()","",null,1],["flat_map","Enumerable","Ruby/classes/Enumerable.html#method-i-flat_map","()","<p>Returns a new array with the concatenated results of running <em>block</em>\nonce for every element in <em>enum</em>.\n<p>If …\n",null,0],["flatten","Array","Ruby/classes/Array.html#method-i-flatten","(p1 = v1)","<p>Returns a new array that is a one-dimensional flattening of this array\n(recursively). That is, for every …\n",null,0],["flatten","Hash","Ruby/classes/Hash.html#method-i-flatten","(*args)","<p>Returns a new array that is a one-dimensional flattening of this hash. That\nis, for every key or value …\n",null,0],["flatten!","Array","Ruby/classes/Array.html#method-i-flatten-21","(p1 = v1)","<p>Flattens <code>self</code> in place. Returns <code>nil</code> if no\nmodifications were made (i.e., <em>ary</em> contains no subarrays.) …\n",null,0],["flock","File","Ruby/classes/File.html#method-i-flock","(p1)","<p>Locks or unlocks a file according to <em>locking_constant</em> (a logical\n<em>or</em> of the values in the table below). …\n",null,0],["floor","Float","Ruby/classes/Float.html#method-i-floor","()","<p>Returns the largest integer less than or equal to <em>flt</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1.2</span>.<span class=\"ruby-identifier\">floor</span>      <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-value\">2.0</span>.<span class=\"ruby-identifier\">floor</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1.2</span>).<span class=\"ruby-identifier\">floor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["floor","Integer","Ruby/classes/Integer.html#method-i-floor","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["floor","Numeric","Ruby/classes/Numeric.html#method-i-floor","()","<p>Returns the largest integer less than or equal to <em>num</em>.\n<code>Numeric</code> implements this by converting <em>anInteger</em> …\n",null,0],["floor","Rational","Ruby/classes/Rational.html#method-i-floor","(*args)","<p>Returns the truncated value (toward negative infinity).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">floor</span>      <span class=\"ruby-comment\">#=&gt; 3</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["flush","IO","Ruby/classes/IO.html#method-i-flush","()","<p>Flushes any buffered data within <em>ios</em> to the underlying operating\nsystem (note that this is Ruby internal …\n",null,0],["flush","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-flush","()","",null,1],["flush","ActiveSupport::LogSubscriber::TestHelper::MockLogger","Rails/classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#method-i-flush","()","",null,1],["flush","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-flush","()","",null,1],["flush_all!","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-flush_all-21","()","<p>Flush all log_subscribers&#39; logger.\n",null,1],["flush_cache","ActiveSupport::Memoizable::InstanceMethods","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-flush_cache","(*syms)","",null,1],["flushable_loggers","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-flushable_loggers","()","",null,1],["fnmatch","File","Ruby/classes/File.html#method-c-fnmatch","(p1, p2, p3 = v3)","<p>Returns true if <em>path</em> matches against <em>pattern</em> The pattern\nis not a regular expression; instead it follows …\n",null,0],["fnmatch?","File","Ruby/classes/File.html#method-c-fnmatch-3F","(p1, p2, p3 = v3)","<p>Returns true if <em>path</em> matches against <em>pattern</em> The pattern\nis not a regular expression; instead it follows …\n",null,0],["follow_redirect!","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-follow_redirect-21","()","<p>Follow a single redirect response. If the last response was not a redirect,\nan exception will be raised. …\n",null,1],["font_path","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-font_path","(source)","<p>Computes the path to a font asset in the public fonts directory. Full paths\nfrom the document root will …\n",null,1],["font_path","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-font_path","(source)","",null,1],["for_class","HTML::Selector","Rails/classes/HTML/Selector.html#method-c-for_class","(cls)","<p>Creates a new selector for the given class name.\n",null,1],["for_fd","IO","Ruby/classes/IO.html#method-c-for_fd","(*args)","<p>Synonym for <code>IO.new</code>.\n",null,0],["for_id","HTML::Selector","Rails/classes/HTML/Selector.html#method-c-for_id","(id)","<p>Creates a new selector for the given id.\n",null,1],["for_tag","ActiveSupport::TestCase","Rails/classes/ActiveSupport/TestCase.html#method-c-for_tag","(tag)","",null,1],["force_encoding","String","Ruby/classes/String.html#method-i-force_encoding","(p1)","<p>Changes the encoding to <code>encoding</code> and returns self.\n",null,0],["force_ssl","ActionController::ForceSSL::ClassMethods","Rails/classes/ActionController/ForceSSL/ClassMethods.html#method-i-force_ssl","(options = {})","<p>Force the request to this particular controller or specified actions to be\nunder HTTPS protocol.\n<p>Note …\n",null,1],["foreach","Dir","Ruby/classes/Dir.html#method-c-foreach","(*args)","<p>Calls the block once for each entry in the named directory, passing the\nfilename of each entry as a parameter …\n",null,0],["foreach","IO","Ruby/classes/IO.html#method-c-foreach","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Executes the block for every line in the named I/O port, where lines are\nseparated by <em>sep</em>.\n<p>If no block …\n",null,0],["foreign_key","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-foreign_key","(class_name, separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name.\n<code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,1],["foreign_key","String","Rails/classes/String.html#method-i-foreign_key","(separate_class_name_and_id_with_underscore = true)","<p>Creates a foreign key name from a class name.\n<code>separate_class_name_and_id_with_underscore</code> sets whether …\n",null,1],["fork","Kernel","Ruby/classes/Kernel.html#method-i-fork","()","<p>Creates a subprocess. If a block is specified, that block is run in the\nsubprocess, and the subprocess …\n",null,0],["fork","Process","Ruby/classes/Process.html#method-c-fork","()","<p>Creates a subprocess. If a block is specified, that block is run in the\nsubprocess, and the subprocess …\n",null,0],["fork","Thread","Ruby/classes/Thread.html#method-c-fork","(*args)","<p>Basically the same as <code>Thread::new</code>. However, if class\n<code>Thread</code> is subclassed, then calling <code>start</code> in that\n…\n",null,0],["forking_env?","ActiveSupport::Testing::Isolation","Rails/classes/ActiveSupport/Testing/Isolation.html#method-c-forking_env-3F","()","",null,1],["form_authenticity_param","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_param","()","<p>The form&#39;s authenticity parameter. Override to provide your own.\n",null,1],["form_authenticity_token","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-form_authenticity_token","()","<p>Sets the token value for the current session.\n",null,1],["form_data?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-form_data-3F","()","",null,1],["form_for","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-form_for","(record, options = {}, &proc)","<p>Creates a form and a scope around a specific model object that is used as a\nbase for questioning about …\n",null,1],["form_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-form_tag","(url_for_options = {}, options = {}, &block)","<p>Starts a form tag that points the action to an url configured with\n<code>url_for_options</code> just like ActionController::Base#url_for …\n",null,1],["format","Kernel","Ruby/classes/Kernel.html#method-i-format","(*args)","<p>Returns the string resulting from applying <em>format_string</em> to any\nadditional arguments.  Within the format …\n",null,0],["format","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format","(view_path = [])","<p>Returns the MIME type for the format used in the request.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">GET</span> <span class=\"ruby-regexp\">/posts/</span><span class=\"ruby-value\">5</span>.<span class=\"ruby-identifier\">xml</span>   <span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">format</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-constant\">Mime</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">XML</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["format","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-format","()","<p>Returns the current format, default is ActiveResource::Formats::JsonFormat.\n",null,1],["format","ActiveSupport::Testing::Performance::Metrics::Amount","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Amount.html#method-i-format","(measurement)","",null,1],["format","ActiveSupport::Testing::Performance::Metrics::DigitalInformationUnit","Rails/classes/ActiveSupport/Testing/Performance/Metrics/DigitalInformationUnit.html#method-i-format","(measurement)","",null,1],["format","ActiveSupport::Testing::Performance::Metrics::Time","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Time.html#method-i-format","(measurement)","",null,1],["format","Erb::Generators::MailerGenerator","Rails/classes/Erb/Generators/MailerGenerator.html#method-i-format","()","",null,1],["format=","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-format-3D","(extension)","<p>Sets the format by string extension, which can be used to force custom\nformats that are not controlled …\n",null,1],["format=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-format-3D","(mime_type_reference_or_format)","<p>Sets the format that attributes are sent and received in from a mime type\nreference:\n\n<pre>Person.format = :json ...</pre>\n",null,1],["format_paragraph","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-format_paragraph","(text, len = 72, indent = 2)","<p>Returns <code>text</code> wrapped at <code>len</code> columns and indented\n<code>indent</code> spaces.\n<p>Examples\n\n<pre>my_text = &quot;Here is a sample text ...</pre>\n",null,1],["formats","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-formats","()","",null,1],["formatted_offset","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","",null,1],["formatted_offset","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-formatted_offset","(colon=true, alternate_utc_string = nil)","<p>Returns the offset of this time zone as a formatted string, of the format\n“+HH:MM”.\n",null,1],["formatted_offset","DateTime","Rails/classes/DateTime.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns the <code>utc_offset</code> as an +HH:MM formatted string.\nExamples:\n\n<pre>datetime = DateTime.civil(2000, 1, 1, ...</pre>\n",null,1],["formatted_offset","Time","Rails/classes/Time.html#method-i-formatted_offset","(colon = true, alternate_utc_string = nil)","<p>Returns the UTC offset as an +HH:MM formatted string.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">formatted_offset</span>         <span class=\"ruby-comment\"># =&gt; &quot;-06:00&quot; ...</span>\n</pre>\n",null,1],["fortnight","Numeric","Rails/classes/Numeric.html#method-i-fortnight","()","",null,1],["fortnights","Numeric","Rails/classes/Numeric.html#method-i-fortnights","()","",null,1],["forty_two","Array","Rails/classes/Array.html#method-i-forty_two","()","<p>Equal to <code>self[41]</code>. Also known as accessing “the reddit”.\n",null,1],["fourth","Array","Rails/classes/Array.html#method-i-fourth","()","<p>Equal to <code>self[3]</code>.\n",null,1],["fragment_cache_key","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-fragment_cache_key","(key)","<p>Given a key (as described in <code>expire_fragment</code>), returns a key\nsuitable for use in reading, writing, or …\n",null,1],["fragment_exist?","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-fragment_exist-3F","(key, options = nil)","<p>Check if a cached fragment from the location signified by  <code>key</code>\nexists (see <code>expire_fragment</code> for acceptable …\n",null,1],["framework_trace","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-framework_trace","()","",null,1],["framework_version","Rails::Info","Rails/classes/Rails/Info.html#method-c-framework_version","(framework)","",null,1],["frameworks","Rails::Info","Rails/classes/Rails/Info.html#method-c-frameworks","()","",null,1],["freeze","Module","Ruby/classes/Module.html#method-i-freeze","()","<p>Prevents further modifications to <em>mod</em>.\n<p>This method returns self.\n",null,0],["freeze","Object","Ruby/classes/Object.html#method-i-freeze","()","<p>Prevents further modifications to <em>obj</em>. A <code>RuntimeError</code>\nwill be raised if modification is attempted. There …\n",null,0],["freeze","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-freeze","()","<p>Freeze the attributes hash such that associations are still accessible,\neven on destroyed records.\n",null,1],["freeze","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-freeze","()","",null,1],["freeze_with_memoizable","ActiveSupport::Memoizable::InstanceMethods","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-freeze_with_memoizable","()","",null,1],["fresh?","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-fresh-3F","(response)","<p>Check response freshness (Last-Modified and ETag) against request\nIf-Modified-Since and If-None-Match …\n",null,1],["fresh_when","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-fresh_when","(record_or_options, additional_options = {})","<p>Sets the etag, last_modified, or both on the response and renders a\n<code>304 Not Modified</code> response if the …\n",null,1],["frexp","Math","Ruby/classes/Math.html#method-c-frexp","(p1)","<p>Returns a two-element array containing the normalized fraction (a\n<code>Float</code>) and exponent (a <code>Fixnum</code>) of  …\n",null,0],["friday?","Time","Ruby/classes/Time.html#method-i-friday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Friday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1987</span>, <span class=\"ruby-value\">12</span>, <span class=\"ruby-value\">18</span>)     <span class=\"ruby-comment\">#=&gt; 1987-12-18 00:00:00 -0600 ...</span>\n</pre>\n",null,0],["from","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-from","(value)","",null,1],["from","Array","Rails/classes/Array.html#method-i-from","(position)","<p>Returns the tail of the array from <code>position</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\"># =&gt; %w( a b c d )</span>\n<span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">from</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["from","String","Rails/classes/String.html#method-i-from","(position)","<p>Returns the remaining of the string from the <code>position</code> treating\nthe string as an array (where 0 is the …\n",null,1],["from_array","ActiveResource::Errors","Rails/classes/ActiveResource/Errors.html#method-i-from_array","(messages, save_cache = false)","<p>Grabs errors from an array of messages (like ActiveRecord::Validations).\nThe second parameter directs …\n",null,1],["from_json","ActiveModel::Serializers::JSON","Rails/classes/ActiveModel/Serializers/JSON.html#method-i-from_json","(json, include_root=include_root_in_json)","",null,1],["from_json","ActiveResource::Errors","Rails/classes/ActiveResource/Errors.html#method-i-from_json","(json, save_cache = false)","<p>Grabs errors from a json response.\n",null,1],["from_now","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-from_now","(time = ::Time.current)","",null,1],["from_now","Numeric","Rails/classes/Numeric.html#method-i-from_now","(time = ::Time.current)","<p>Reads best without arguments:  10.minutes.from_now\n",null,1],["from_rails_root","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-from_rails_root","(string)","",null,1],["from_response","ActionDispatch::TestResponse","Rails/classes/ActionDispatch/TestResponse.html#method-c-from_response","(response)","",null,1],["from_trusted_xml","Hash","Rails/classes/Hash.html#method-c-from_trusted_xml","(xml)","",null,1],["from_xml","ActiveModel::Serializers::Xml","Rails/classes/ActiveModel/Serializers/Xml.html#method-i-from_xml","(xml)","",null,1],["from_xml","ActiveResource::Errors","Rails/classes/ActiveResource/Errors.html#method-i-from_xml","(xml, save_cache = false)","<p>Grabs errors from an XML response.\n",null,1],["from_xml","Hash","Rails/classes/Hash.html#method-c-from_xml","(xml, disallowed_types = nil)","",null,1],["frozen?","Array","Ruby/classes/Array.html#method-i-frozen-3F","()","<p>Return <code>true</code> if this array is frozen (or temporarily frozen\nwhile being sorted).\n",null,0],["frozen?","Object","Ruby/classes/Object.html#method-i-frozen-3F","()","<p>Returns the freeze status of <em>obj</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">freeze</span>    <span class=\"ruby-comment\">#=&gt; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;]</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">frozen?</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["frozen?","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-frozen-3F","()","<p>Returns <code>true</code> if the attributes hash has been frozen.\n",null,1],["fsync","IO","Ruby/classes/IO.html#method-i-fsync","()","<p>Immediately writes all buffered data in <em>ios</em> to disk. Note that\n<code>fsync</code> differs from using <code>IO#sync=</code>. The …\n",null,0],["ftype","File","Ruby/classes/File.html#method-c-ftype","(p1)","<p>Identifies the type of the named file; the return string is one of\n“<code>file</code>&#39;&#39;, “<code>directory</code>&#39;&#39;, …\n",null,0],["ftype","File::Stat","Ruby/classes/File/Stat.html#method-i-ftype","()","<p>Identifies the type of <em>stat</em>. The return string is one of:\n“<code>file</code>&#39;&#39;, “<code>directory</code>&#39;&#39;, “ …\n",null,0],["full?","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-full-3F","()","",null,1],["full_message","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-full_message","(attribute, message)","<p>Returns a full message for a given attribute.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">company</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">full_message</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&quot;is invalid&quot;</span>)  <span class=\"ruby-comment\"># =&gt;</span>\n <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["full_messages","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-full_messages","()","<p>Returns all the full error messages in an array.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Company</span>\n  <span class=\"ruby-identifier\">validates_presence_of</span> :<span class=\"ruby-identifier\">name</span>, :<span class=\"ruby-identifier\">address</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["full_profile_options","ActiveSupport::Testing::Performance","Rails/classes/ActiveSupport/Testing/Performance.html#method-i-full_profile_options","()","",null,1],["full_test_name","ActiveSupport::Testing::Performance","Rails/classes/ActiveSupport/Testing/Performance.html#method-i-full_test_name","()","",null,1],["full_trace","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-full_trace","()","",null,1],["fullpath","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-fullpath","()","",null,1],["future?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-future-3F","()","",null,1],["future?","Date","Rails/classes/Date.html#method-i-future-3F","()","<p>Returns true if the Date object&#39;s date lies in the future.\n",null,1],["future?","DateTime","Rails/classes/DateTime.html#method-i-future-3F","()","<p>Tells whether the DateTime object&#39;s datetime lies in the future\n",null,1],["future?","Time","Rails/classes/Time.html#method-i-future-3F","()","<p>Tells whether the Time object&#39;s time lies in the future\n",null,1],["g_length","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-g_length","()","<p>Returns the number of grapheme clusters in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;क्षि&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">length</span>   <span class=\"ruby-comment\"># =&gt; 4</span>\n<span class=\"ruby-string\">&#39;क्षि&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">g_length</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["g_pack","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-g_pack","(unpacked)","<p>Reverse operation of g_unpack.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Unicode</span>.<span class=\"ruby-identifier\">g_pack</span>(<span class=\"ruby-constant\">Unicode</span>.<span class=\"ruby-identifier\">g_unpack</span>(<span class=\"ruby-string\">&#39;क्षि&#39;</span>)) <span class=\"ruby-comment\"># =&gt; &#39;क्षि&#39;</span>\n</pre>\n",null,1],["g_unpack","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-g_unpack","(string)","<p>Unpack the string at grapheme boundaries. Returns a list of character\nlists.\n<p>Example:\n\n<pre>Unicode.g_unpack(&#39;क्षि&#39;) ...</pre>\n",null,1],["gamma","Math","Ruby/classes/Math.html#method-c-gamma","(p1)","<p>Calculates the gamma function of x.\n<p>Note that gamma(n) is same as fact(n-1) for integer n &gt; 0. However …\n",null,0],["garbage_collect","GC","Ruby/classes/GC.html#method-i-garbage_collect","()","<p>Initiates garbage collection, unless manually disabled.\n",null,0],["garbage_collect","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-garbage_collect","()","<p>Initiates garbage collection, unless manually disabled.\n",null,0],["gcd","Integer","Ruby/classes/Integer.html#method-i-gcd","(p1)","<p>Returns the greatest common divisor (always positive).  0.gcd(x) and\nx.gcd(0) return abs(x).\n<p>For example: …\n",null,0],["gcdlcm","Integer","Ruby/classes/Integer.html#method-i-gcdlcm","(p1)","<p>Returns an array; [int.gcd(int2), int.lcm(int2)].\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">2</span>.<span class=\"ruby-identifier\">gcdlcm</span>(<span class=\"ruby-value\">2</span>)                    <span class=\"ruby-comment\">#=&gt; [2, 2] ...</span>\n</pre>\n",null,0],["gem","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-gem","(*args)","<p>Adds an entry into Gemfile for the supplied gem. If env is specified, add\nthe gem to the given environment. …\n",null,1],["gem_for_database","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-gem_for_database","()","",null,1],["gem_group","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-gem_group","(*names, &block)","<p>Wraps gem entries inside a group.\n<p>Example\n\n<pre>gem_group :development, :test do\n  gem &quot;rspec-rails&quot;\nend</pre>\n",null,1],["gemfile","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-gemfile","()","",null,1],["gemfile","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gemfile","()","",null,1],["gemspec","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gemspec","()","",null,1],["generate","ActiveSupport::MessageVerifier","Rails/classes/ActiveSupport/MessageVerifier.html#method-i-generate","(value)","",null,1],["generate","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-generate","(what, *args)","<p>Generate something using a generator from Rails or a plugin. The second\nparameter is the argument string …\n",null,1],["generate_message","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-generate_message","(attribute, type = :invalid, options = {})","<p>Translates an error message in its default scope\n(<code>activemodel.errors.messages</code>).\n<p>Error messages are first …\n",null,1],["generate_method_for_mime","AbstractController::Collector","Rails/classes/AbstractController/Collector.html#method-c-generate_method_for_mime","(mime)","",null,1],["generate_railtie_name","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-generate_railtie_name","(class_or_module)","",null,1],["generate_sid","ActionDispatch::Session::Compatibility","Rails/classes/ActionDispatch/Session/Compatibility.html#method-i-generate_sid","()","",null,1],["generate_test_dummy","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-generate_test_dummy","(force = false)","",null,1],["generated_external_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-generated_external_attribute_methods","()","<p>We will define the methods as instance methods, but will call them as\nsingleton methods. This allows …\n",null,1],["generated_feature_methods","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-generated_feature_methods","()","",null,1],["generator","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-generator","(args=self.default_arguments, options={}, config={})","<p>Instantiate the generator.\n",null,1],["generator_dir","Rails::Generators::GeneratorGenerator","Rails/classes/Rails/Generators/GeneratorGenerator.html#method-i-generator_dir","()","",null,1],["generator_name","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-generator_name","()","<p>Removes the namespaces and get the generator name. For example,\nRails::Generators::ModelGenerator will …\n",null,1],["generators","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-generators","(&blk)","",null,1],["get","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-get","(action, parameters = nil, session = nil, flash = nil)","<p>Executes a request simulating GET HTTP method and set/volley the response\n",null,1],["get","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-get","(path, parameters = nil, headers = nil)","<p>Performs a GET request with the given parameters.\n<p><code>path</code>: The URI (as a String) on which you want to perform …\n",null,1],["get","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-get","(*args, &block)","<p>Define a route that only recognizes HTTP GET. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>get &#39;bacon&#39;, …\n",null,1],["get","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-get","(key)","<p>Get messages for <code>key</code>\n",null,1],["get","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-get","(klass, primary_key)","",null,1],["get","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-get","(path, headers = {})","<p>Executes a GET request. Used to get (find) resources.\n",null,1],["get","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-i-get","(method_name, options = {})","",null,1],["get","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-c-get","(custom_method_name, options = {})","<p>Invokes a GET to a given custom REST method. For example:\n\n<pre>Person.get(:active)  # GET /people/active.json ...</pre>\n",null,1],["get","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-get","(key)","",null,1],["get?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-get-3F","()","<p>Is this a GET (or HEAD) request? Equivalent to\n<code>request.request_method_symbol == :get</code>.\n",null,1],["get_builder_class","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-get_builder_class","()","",null,1],["get_builder_class","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-get_builder_class","()","",null,1],["get_session","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-i-get_session","(env, sid)","<p>Get a session from the cache.\n",null,1],["get_via_redirect","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-get_via_redirect","(path, parameters = nil, headers = nil)","<p>Performs a GET request, following any subsequent redirect. See\n<code>request_via_redirect</code> for more information. …\n",null,1],["getbyte","ARGF","Ruby/classes/ARGF.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from <code>ARGF</code>. Returns\n<code>nil</code> if called at the end of the stream.\n<p>For example: …\n",null,0],["getbyte","IO","Ruby/classes/IO.html#method-i-getbyte","()","<p>Gets the next 8-bit byte (0..255) from <em>ios</em>. Returns\n<code>nil</code> if called at end of file.\n\n<pre>f = File.new(&quot;testfile&quot;) ...</pre>\n",null,0],["getbyte","String","Ruby/classes/String.html#method-i-getbyte","(p1)","<p>returns the <em>index</em>th byte as an integer.\n",null,0],["getc","ARGF","Ruby/classes/ARGF.html#method-i-getc","()","<p>Reads the next character from <code>ARGF</code> and returns it as a\n<code>String</code>. Returns <code>nil</code> at the end of the stream. …\n",null,0],["getc","IO","Ruby/classes/IO.html#method-i-getc","()","<p>Reads a one-character string from <em>ios</em>. Returns <code>nil</code> if\ncalled at end of file.\n\n<pre>f = File.new(&quot;testfile&quot;) ...</pre>\n",null,0],["getegid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-getegid","()","<p>Returns the effective group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">egid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["geteuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-geteuid","()","<p>Returns the effective user ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">euid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["getgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-getgid","()","<p>Returns the (real) group ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["getgm","Time","Ruby/classes/Time.html#method-i-getgm","()","<p>Returns a new <code>new_time</code> object representing <em>time</em> in\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; 2000-01-01 ...</span>\n</pre>\n",null,0],["getgm","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-getgm","()","",null,1],["getlocal","Time","Ruby/classes/Time.html#method-i-getlocal","(p1 = v1)","<p>Returns a new <code>new_time</code> object representing <em>time</em> in\nlocal time (using the local time zone in effect for …\n",null,0],["getlocal","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-getlocal","()","",null,1],["getpgid","Process","Ruby/classes/Process.html#method-c-getpgid","(p1)","<p>Returns the process group ID for the given process id. Not available on all\nplatforms.\n\n<pre>Process.getpgid(Process.ppid()) ...</pre>\n",null,0],["getpgrp","Process","Ruby/classes/Process.html#method-c-getpgrp","()","<p>Returns the process group ID for this process. Not available on all\nplatforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">getpgid</span>(<span class=\"ruby-value\">0</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["getpriority","Process","Ruby/classes/Process.html#method-c-getpriority","(p1, p2)","<p>Gets the scheduling priority for specified process, process group, or user.\n<em>kind</em> indicates the kind of …\n",null,0],["getrlimit","Process","Ruby/classes/Process.html#method-c-getrlimit","(p1)","<p>Gets the resource limit of the process. <em>cur_limit</em> means current\n(soft) limit and <em>max_limit</em> means maximum …\n",null,0],["gets","ARGF","Ruby/classes/ARGF.html#method-i-gets","(*args)","<p>Returns the next line from the current file in <code>ARGF</code>.\n<p>By default lines are assumed to be separated by +$/+; …\n",null,0],["gets","IO","Ruby/classes/IO.html#method-i-gets","(*args)","<p>Reads the next “line&#39;&#39; from the I/O stream; lines are separated by\n<em>sep</em>. A separator of <code>nil</code> reads …\n",null,0],["gets","Kernel","Ruby/classes/Kernel.html#method-i-gets","(*args)","<p>Returns (and assigns to <code>$_</code>) the next line from the list of\nfiles in <code>ARGV</code> (or <code>$*</code>), or from standard input …\n",null,0],["getuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-getuid","()","<p>Returns the (real) user ID of this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["getutc","Time","Ruby/classes/Time.html#method-i-getutc","()","<p>Returns a new <code>new_time</code> object representing <em>time</em> in\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; 2000-01-01 ...</span>\n</pre>\n",null,0],["getutc","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-getutc","()","",null,1],["getutc","DateTime","Rails/classes/DateTime.html#method-i-getutc","()","",null,1],["getwd","Dir","Ruby/classes/Dir.html#method-c-getwd","()","<p>Returns the path to the current working directory of this process as a\nstring.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">chdir</span>(<span class=\"ruby-string\">&quot;/tmp&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["gid","File::Stat","Ruby/classes/File/Stat.html#method-i-gid","()","<p>Returns the numeric group id of the owner of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["gid","Process","Ruby/classes/Process.html#method-c-gid","()","<p>Returns the (real) group ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["gid=","Process","Ruby/classes/Process.html#method-c-gid-3D","(p1)","<p>Sets the group ID for this process.\n",null,0],["gigabyte","Numeric","Rails/classes/Numeric.html#method-i-gigabyte","()","",null,1],["gigabytes","Numeric","Rails/classes/Numeric.html#method-i-gigabytes","()","",null,1],["git","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-git","(commands={})","<p>Run a command in git.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">git</span> :<span class=\"ruby-identifier\">init</span>\n<span class=\"ruby-identifier\">git</span> :<span class=\"ruby-identifier\">add</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;this.file that.rb&quot;</span>\n<span class=\"ruby-identifier\">git</span> :<span class=\"ruby-identifier\">add</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;onefile.rb&quot;</span>, :<span class=\"ruby-identifier\">rm</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["git_keep","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-git_keep","(destination)","",null,1],["git_url?","Plugin","Rails/classes/Plugin.html#method-i-git_url-3F","()","",null,1],["gitignore","","Rails/files/rails/railties/lib/rails/generators/rails/plugin_new/templates/gitignore.html","","<p>.bundle/ log/*.log pkg/ &lt;%= dummy_path %&gt;/db/*.sqlite3 &lt;%=\ndummy_path %&gt;/log/*.log &lt;%= …\n",null,1],["gitignore","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/gitignore.html","","<p># See help.github.com/ignore-files/ for more about ignoring files. # # If\nyou find yourself ignoring …\n",null,1],["gitignore","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-gitignore","()","",null,1],["gitignore","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-gitignore","()","",null,1],["glob","Dir","Ruby/classes/Dir.html#method-c-glob","(p1, p2 = v2)","<p>Returns the filenames found by expanding <em>pattern</em> which is an\n<code>Array</code> of the patterns or the pattern <code>String</code> …\n",null,0],["global_plugins","Rails::Plugin","Rails/classes/Rails/Plugin.html#method-c-global_plugins","()","",null,1],["global_variables","Kernel","Ruby/classes/Kernel.html#method-i-global_variables","()","<p>Returns an array of the names of global variables.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">global_variables</span>.<span class=\"ruby-identifier\">grep</span> <span class=\"ruby-regexp\">/std/</span>   <span class=\"ruby-comment\">#=&gt; [:$stdin, :$stdout, ...</span>\n</pre>\n",null,0],["gm","Time","Ruby/classes/Time.html#method-c-gm","(*args)","<p>Creates a time based on given values, interpreted as UTC (GMT). The year\nmust be specified. Other values …\n",null,0],["gmt?","Time","Ruby/classes/Time.html#method-i-gmt-3F","()","<p>Returns <code>true</code> if <em>time</em> represents a time in UTC (GMT).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>                        <span class=\"ruby-comment\">#=&gt; 2007-11-19 ...</span>\n</pre>\n",null,0],["gmt?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmt-3F","()","",null,1],["gmt_offset","Time","Ruby/classes/Time.html#method-i-gmt_offset","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">gm</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["gmt_offset","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmt_offset","()","",null,1],["gmtime","Time","Ruby/classes/Time.html#method-i-gmtime","()","<p>Converts <em>time</em> to UTC (GMT), modifying the receiver.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:18:31 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">gmt?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["gmtime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmtime","()","",null,1],["gmtoff","Time","Ruby/classes/Time.html#method-i-gmtoff","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">gm</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["gmtoff","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-gmtoff","()","",null,1],["grant_privilege","Process::GID","Ruby/classes/Process/GID.html#method-c-grant_privilege","(p1)","<p>Set the effective group ID, and if possible, the saved group ID of the\nprocess to the given <em>integer</em>. …\n",null,0],["grant_privilege","Process::UID","Ruby/classes/Process/UID.html#method-c-grant_privilege","(p1)","<p>Set the effective user ID, and if possible, the saved user ID of the\nprocess to the given <em>integer</em>. Returns …\n",null,0],["grep","Enumerable","Ruby/classes/Enumerable.html#method-i-grep","(p1)","<p>Returns an array of every element in <em>enum</em> for which <code>Pattern\n=== element</code>. If the optional <em>block</em> is supplied, …\n",null,0],["group","Thread","Ruby/classes/Thread.html#method-i-group","()","<p>Returns the <code>ThreadGroup</code> which contains <em>thr</em>, or nil if\nthe thread is not a member of any group.\n\n<pre>Thread.main.group ...</pre>\n",null,0],["group","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-group","(*args)","",null,1],["group_by","Enumerable","Ruby/classes/Enumerable.html#method-i-group_by","()","<p>Returns a hash, which keys are evaluated result from the block, and values\nare arrays of elements in …\n",null,0],["group_by","Enumerable","Rails/classes/Enumerable.html#method-i-group_by","()","<p>Collect an enumerable into sets, grouped by the result of a block. Useful,\nfor example, for grouping …\n",null,1],["grouped_collection_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-grouped_collection_select","(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","",null,1],["grouped_collection_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_collection_select","(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = {}, html_options = {})","<p>Returns <code>&lt;select&gt;</code>, <code>&lt;optgroup&gt;</code> and\n<code>&lt;option&gt;</code> tags for the collection of existing return …\n",null,1],["grouped_options_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-grouped_options_for_select","(grouped_options, selected_key = nil, prompt = nil)","<p>Returns a string of <code>&lt;option&gt;</code> tags, like\n<code>options_for_select</code>, but wraps them with\n<code>&lt;optgroup&gt;</code> …\n",null,1],["groups","Process","Ruby/classes/Process.html#method-c-groups","()","<p>Get an <code>Array</code> of the gids of groups in the supplemental group\naccess list for this process.\n\n<pre>Process.groups ...</pre>\n",null,0],["groups","Rails","Rails/classes/Rails.html#method-c-groups","(*groups)","<p>Returns all rails groups for loading based on:\n<p>The Rails environment;\n<p>The environment variable RAILS_GROUPS …\n",null,1],["groups=","Process","Ruby/classes/Process.html#method-c-groups-3D","(p1)","<p>Set the supplemental group access list to the given <code>Array</code> of\ngroup IDs.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">groups</span>   <span class=\"ruby-comment\">#=&gt; [0, 1, 2, ...</span>\n</pre>\n",null,0],["grpowned?","File","Ruby/classes/File.html#method-c-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group\nid of the calling process is the owner …\n",null,0],["grpowned?","File::Stat","Ruby/classes/File/Stat.html#method-i-grpowned-3F","()","<p>Returns true if the effective group id of the process is the same as the\ngroup id of <em>stat</em>. On Windows …\n",null,0],["grpowned?","FileTest","Ruby/classes/FileTest.html#method-i-grpowned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective group\nid of the calling process is the owner …\n",null,0],["gsub","Kernel","Ruby/classes/Kernel.html#method-i-gsub","(*args)","<p>Equivalent to <code>$_.gsub...</code>, except that <code>$_</code> receives\nthe modified result. Available only when -p/-n command …\n",null,0],["gsub","String","Ruby/classes/String.html#method-i-gsub","(*args)","<p>Returns a copy of <em>str</em> with the <em>all</em> occurrences of\n<em>pattern</em> substituted for the second argument. The <em>pattern</em>\n…\n",null,0],["gsub!","String","Ruby/classes/String.html#method-i-gsub-21","(*args)","<p>Performs the substitutions of <code>String#gsub</code> in place, returning\n<em>str</em>, or <code>nil</code> if no substitutions were performed. …\n",null,0],["h","ERB::Util","Rails/classes/ERB/Util.html#method-c-h","(s)","",null,1],["ha1","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-ha1","(credentials, password)","",null,1],["halted_callback","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-halted_callback","(event)","",null,1],["handle_unverified_request","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-handle_unverified_request","()","<p>This is the method that defines the application behavior when a request is\nfound to be unverified. By …\n",null,1],["handler_for_rescue","ActiveSupport::Rescuable","Rails/classes/ActiveSupport/Rescuable.html#method-i-handler_for_rescue","(exception)","",null,1],["handles_encoding?","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-i-handles_encoding-3F","()","",null,1],["has_and_belongs_to_many","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_and_belongs_to_many","(name, options = {}, &extension)","<p>Specifies a many-to-many relationship with another class. This associates\ntwo classes via an intermediate …\n",null,1],["has_errors?","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-has_errors-3F","()","<p>Check whether the resource has errors.\n",null,1],["has_index?","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-has_index-3F","()","",null,1],["has_key?","ENV","Ruby/classes/ENV.html#method-c-has_key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["has_key?","Hash","Ruby/classes/Hash.html#method-i-has_key-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["has_key?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-has_key-3F","(error)","",null,1],["has_key?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-has_key-3F","(key)","",null,1],["has_key?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-has_key-3F","(key)","",null,1],["has_many","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_many","(name, options = {}, &extension)","<p>Specifies a one-to-many association. The following methods for retrieval\nand query of collections of …\n",null,1],["has_migrations?","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-has_migrations-3F","()","",null,1],["has_one","ActiveRecord::Associations::ClassMethods","Rails/classes/ActiveRecord/Associations/ClassMethods.html#method-i-has_one","(name, options = {})","<p>Specifies a one-to-one association with another class. This method should\nonly be used if the other class …\n",null,1],["has_secure_password","ActiveModel::SecurePassword::ClassMethods","Rails/classes/ActiveModel/SecurePassword/ClassMethods.html#method-i-has_secure_password","()","<p>Adds methods to set and authenticate against a BCrypt password. This\nmechanism requires you to have a …\n",null,1],["has_uniq_index?","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-has_uniq_index-3F","()","",null,1],["has_value?","ENV","Ruby/classes/ENV.html#method-c-has_value-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>value</code>.\n",null,0],["has_value?","Hash","Ruby/classes/Hash.html#method-i-has_value-3F","(p1)","<p>Returns <code>true</code> if the given value is present for some key in\n<em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_value?</span>(<span class=\"ruby-value\">100</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["hash","Array","Ruby/classes/Array.html#method-i-hash","()","<p>Compute a hash-code for this array. Two arrays with the same content will\nhave the same hash code (and …\n",null,0],["hash","Bignum","Ruby/classes/Bignum.html#method-i-hash","()","<p>Compute a hash based on the value of <em>big</em>.\n",null,0],["hash","Float","Ruby/classes/Float.html#method-i-hash","()","<p>Returns a hash code for this float.\n",null,0],["hash","Hash","Ruby/classes/Hash.html#method-i-hash","()","<p>Compute a hash-code for this hash. Two hashes with the same content will\nhave the same hash code (and …\n",null,0],["hash","MatchData","Ruby/classes/MatchData.html#method-i-hash","()","<p>Produce a hash based on the target string, regexp and matched positions of\nthis matchdata.\n",null,0],["hash","Method","Ruby/classes/Method.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n",null,0],["hash","Object","Ruby/classes/Object.html#method-i-hash","()","<p>Generates a <code>Fixnum</code> hash value for this object. This function\nmust have the property that a.eql?(b) implies …\n",null,0],["hash","Proc","Ruby/classes/Proc.html#method-i-hash","()","<p>Returns a hash value corresponding to proc body.\n",null,0],["hash","Range","Ruby/classes/Range.html#method-i-hash","()","<p>Generate a hash value such that two ranges with the same start and end\npoints, and the same value for …\n",null,0],["hash","Regexp","Ruby/classes/Regexp.html#method-i-hash","()","<p>Produce a hash based on the text and options of this regular expression.\n",null,0],["hash","String","Ruby/classes/String.html#method-i-hash","()","<p>Return a hash based on the string&#39;s length and content.\n",null,0],["hash","Struct","Ruby/classes/Struct.html#method-i-hash","()","<p>Return a hash value based on this struct&#39;s contents.\n",null,0],["hash","Time","Ruby/classes/Time.html#method-i-hash","()","<p>Return a hash code for this time object.\n",null,0],["hash","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-hash","()","<p>Returns a hash value corresponding to the method object.\n",null,0],["hash","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-hash","()","<p>Delegates to id in order to allow two records of the same type and id to\nwork with something like:\n\n<pre>[ Person.find(1), ...</pre>\n",null,1],["hash","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-hash","()","<p>Delegates to id in order to allow two resources of the same type and id to\nwork with something like: …\n",null,1],["hash","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-hash","()","",null,1],["having","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-having","(opts, *rest)","",null,1],["head","ActionController::Head","Rails/classes/ActionController/Head.html#method-i-head","(status, options = {})","<p>Return a response that has no content (merely headers). The options\nargument is interpreted to be a hash …\n",null,1],["head","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-head","(action, parameters = nil, session = nil, flash = nil)","<p>Executes a request simulating HEAD HTTP method and set/volley the response\n",null,1],["head","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-head","(path, parameters = nil, headers = nil)","<p>Performs a HEAD request with the given parameters. See <code>#get</code>\nfor more details.\n",null,1],["head","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-head","(path, headers = {})","<p>Executes a HEAD request. Used to obtain meta-information about resources,\nsuch as whether they exist …\n",null,1],["head?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-head-3F","()","<p>Is this a HEAD request? Equivalent to <code>request.method_symbol ==\n:head</code>.\n",null,1],["headers","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-headers","()","<p>Provides access to the request&#39;s HTTP headers, for example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">request</span>.<span class=\"ruby-identifier\">headers</span>[<span class=\"ruby-string\">&quot;Content-Type&quot;</span>] <span class=\"ruby-comment\"># =&gt; &quot;text/plain&quot;</span>\n</pre>\n",null,1],["headers","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-headers","(args=nil)","<p>Allows you to pass random and unusual headers to the new +Mail::Message+\nobject which will add them to …\n",null,1],["headers","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-headers","()","",null,1],["headers=","ActionController::Testing","Rails/classes/ActionController/Testing.html#method-i-headers-3D","(new_headers)","<p>TODO : Rewrite tests using controller.headers= to use Rack env\n",null,1],["help","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-help","(command = 'generate')","<p>Show help message with available generators.\n",null,1],["helper","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper","(*args, &block)","<p>The <code>helper</code> class method can take a series of helper module\nnames, a block, or both.\n<p>Parameters\n<p><code>*args</code> - …\n",null,1],["helper","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-helper","()","",null,1],["helper_attr","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-helper_attr","(*attrs)","<p>Declares helper accessors for controller attributes. For example, the\nfollowing adds new <code>name</code> and <code>name=</code> …\n",null,1],["helper_class","ActionView::TestCase::Behavior::ClassMethods","Rails/classes/ActionView/TestCase/Behavior/ClassMethods.html#method-i-helper_class","()","",null,1],["helper_method","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-helper_method","(*meths)","<p>Declare a controller method as a helper. For example, the following makes\nthe <code>current_user</code> controller …\n",null,1],["helper_method","ActionView::TestCase::Behavior::ClassMethods","Rails/classes/ActionView/TestCase/Behavior/ClassMethods.html#method-i-helper_method","(*methods)","",null,1],["helpers","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-helpers","()","<p>Provides a proxy to access helpers methods from outside the view.\n",null,1],["helpers","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-helpers","()","",null,1],["helpers_paths","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-helpers_paths","()","",null,1],["hex","String","Ruby/classes/String.html#method-i-hex","()","<p>Treats leading characters from <em>str</em> as a string of hexadecimal\ndigits (with an optional sign and an optional …\n",null,0],["hidden_actions","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-hidden_actions","()","<p>The list of hidden actions to an empty array. Defaults to an empty array.\nThis can be modified by other …\n",null,1],["hidden_field","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-hidden_field","(method, options = {})","",null,1],["hidden_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-hidden_field","(object_name, method, options = {})","<p>Returns a hidden input tag tailored for accessing a specified attribute\n(identified by <code>method</code>) on an …\n",null,1],["hidden_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-hidden_field_tag","(name, value = nil, options = {})","<p>Creates a hidden form input field used to transmit data that would be lost\ndue to HTTP&#39;s statelessness …\n",null,1],["hidden_namespaces","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-hidden_namespaces","()","",null,1],["hide_action","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-hide_action","(*args)","<p>Sets all of the actions passed in as hidden actions.\n<p>Parameters\n<p><code>args</code> - A list of actions\n",null,1],["hide_namespace","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-hide_namespace","(*namespaces)","",null,1],["hide_namespaces","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-hide_namespaces","(*namespaces)","",null,1],["highlight","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-highlight","(text, phrases, *args)","<p>Highlights one or more <code>phrases</code> everywhere in <code>text</code>\nby inserting it into a <code>:highlighter</code> string. The highlighter …\n",null,1],["home","Dir","Ruby/classes/Dir.html#method-c-home","(p1 = v1)","<p>Returns the home directory of the current user or the named user if given.\n",null,0],["hook_for","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-hook_for","(*names, &block)","<p>Invoke a generator based on the value supplied by the user to the given\noption named “name”. …\n",null,1],["host","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-host","()","<p>Returns the host for this request, such as example.com.\n",null,1],["host","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-i-host","()","<p>The hostname used in the last request.\n",null,1],["host=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-host-3D","(host)","",null,1],["host_with_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-host_with_port","()","<p>Returns a host:port string for this request, such as “example.com” or\n“example.com:8080”. …\n",null,1],["hour","Time","Ruby/classes/Time.html#method-i-hour","()","<p>Returns the hour of the day (0..23) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:26:20 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">hour</span>     <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["hour","Numeric","Rails/classes/Numeric.html#method-i-hour","()","",null,1],["hours","Numeric","Rails/classes/Numeric.html#method-i-hours","()","",null,1],["html?","Mime::Type","Rails/classes/Mime/Type.html#method-i-html-3F","()","",null,1],["html_document","ActionDispatch::Assertions::TagAssertions","Rails/classes/ActionDispatch/Assertions/TagAssertions.html#method-i-html_document","()","",null,1],["html_escape","ERB::Util","Rails/classes/ERB/Util.html#method-c-html_escape","(s)","<p>A utility method for escaping HTML tag characters. This method is also\naliased as <code>h</code>.\n<p>In your ERB templates, …\n",null,1],["html_safe","String","Rails/classes/String.html#method-i-html_safe","()","",null,1],["html_safe?","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-html_safe-3F","()","",null,1],["html_safe?","Numeric","Rails/classes/Numeric.html#method-i-html_safe-3F","()","",null,1],["html_safe?","Object","Rails/classes/Object.html#method-i-html_safe-3F","()","",null,1],["http_basic_authenticate_with","ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods/ClassMethods.html#method-i-http_basic_authenticate_with","(options = {})","",null,1],["httpdate","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-httpdate","()","",null,1],["https!","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-i-https-21","(flag = true)","<p>Specify whether or not the session should mimic a secure HTTPS request.\n\n<pre>session.https!\nsession.https!(false)</pre>\n",null,1],["https?","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-i-https-3F","()","<p>Return <code>true</code> if the session is mimicking a secure HTTPS\nrequest.\n\n<pre>if session.https?\n  ...\nend</pre>\n",null,1],["human","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-i-human","(options={})","<p>Transform the model name into a more humane format, using I18n. By default,\nit will underscore then humanize …\n",null,1],["human","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-human","(rule, replacement)","<p>Specifies a humanized form of a string by a regular expression rule or by a\nstring mapping. When using …\n",null,1],["human_attribute_name","ActiveModel::Translation","Rails/classes/ActiveModel/Translation.html#method-i-human_attribute_name","(attribute, options = {})","<p>Transforms attribute names into a more human format, such as “First name”\ninstead of “ …\n",null,1],["human_name","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-human_name","()","",null,1],["human_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-human_name","()","",null,1],["humanize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-humanize","(lower_case_and_underscored_word)","<p>Capitalizes the first word and turns underscores into spaces and strips a\ntrailing “_id”, if …\n",null,1],["humanize","String","Rails/classes/String.html#method-i-humanize","()","<p>Capitalizes the first word, turns underscores into spaces, and strips\n&#39;_id&#39;. Like <code>titleize</code>, this …\n",null,1],["hypot","Math","Ruby/classes/Math.html#method-c-hypot","(p1, p2)","<p>Returns sqrt(x**2 + y**2), the hypotenuse of a right-angled triangle with\nsides <em>x</em> and <em>y</em>.\n\n<pre>Math.hypot(3, ...</pre>\n",null,0],["i","Numeric","Ruby/classes/Numeric.html#method-i-i","()","<p>Returns the corresponding imaginary number. Not available for complex\nnumbers.\n",null,0],["i18n_scope","ActiveModel::Translation","Rails/classes/ActiveModel/Translation.html#method-i-i18n_scope","()","<p>Returns the <code>i18n_scope</code> for the class. Overwrite if you want\ncustom lookup.\n",null,1],["i18n_scope","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-i18n_scope","()","",null,1],["id","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id","()","<p>Returns the primary key value\n",null,1],["id","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-id","()","<p>Gets the <code>\\id</code> attribute of the resource.\n",null,1],["id","NilClass","Rails/classes/NilClass.html#method-i-id","()","<p>Raises a RuntimeError when you attempt to call <code>id</code> on\n<code>nil</code>.\n",null,1],["id2name","Symbol","Ruby/classes/Symbol.html#method-i-id2name","()","<p>Returns the name or string corresponding to <em>sym</em>.\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">fred</span>.<span class=\"ruby-identifier\">id2name</span>   <span class=\"ruby-comment\">#=&gt; &quot;fred&quot;</span>\n</pre>\n",null,0],["id=","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3D","(value)","<p>Sets the primary key value\n",null,1],["id=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-id-3D","(id)","<p>Sets the <code>\\id</code> attribute of the resource.\n",null,1],["id?","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-id-3F","()","<p>Queries the primary key value\n",null,1],["id_from_response","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-id_from_response","(response)","<p>Takes a response from a typical create post and pulls the ID out\n",null,1],["identical?","File","Ruby/classes/File.html#method-c-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;w&quot;</span>) {}\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">identical?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;a&quot;</span>)      <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["identical?","FileTest","Ruby/classes/FileTest.html#method-i-identical-3F","(p1, p2)","<p>Returns <code>true</code> if the named files are identical.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">open</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;w&quot;</span>) {}\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">identical?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;a&quot;</span>)      <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["identify","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-identify","(label)","<p>Returns a consistent, platform-independent identifier for\n<code>label</code>. Identifiers are positive integers less …\n",null,1],["identity","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-identity","(event)","",null,1],["if_modified_since","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_modified_since","()","",null,1],["if_modified_since=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-if_modified_since-3D","(last_modified)","",null,1],["if_none_match","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-if_none_match","()","",null,1],["if_none_match=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-if_none_match-3D","(etag)","",null,1],["imag","Complex","Ruby/classes/Complex.html#method-i-imag","()","<p>Returns the imaginary part.\n",null,0],["imag","Numeric","Ruby/classes/Numeric.html#method-i-imag","()","<p>Returns zero.\n",null,0],["image_alt","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_alt","(src)","",null,1],["image_path","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_path","(source)","<p>Computes the path to an image asset in the public images directory. Full\npaths from the document root …\n",null,1],["image_path","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-image_path","(source)","",null,1],["image_submit_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-image_submit_tag","(source, options = {})","<p>Displays an image which when clicked will submit the form.\n<p><code>source</code> is passed to AssetTagHelper#path_to_image …\n",null,1],["image_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-image_tag","(source, options = {})","<p>Returns an html image tag for the <code>source</code>. The\n<code>source</code> can be a full path or a file that exists in your …\n",null,1],["imaginary","Complex","Ruby/classes/Complex.html#method-i-imaginary","()","<p>Returns the imaginary part.\n",null,0],["imaginary","Numeric","Ruby/classes/Numeric.html#method-i-imaginary","()","<p>Returns zero.\n",null,0],["in","Date","Rails/classes/Date.html#method-i-in","(seconds)","",null,1],["in","DateTime","Rails/classes/DateTime.html#method-i-in","(seconds)","",null,1],["in","Time","Rails/classes/Time.html#method-i-in","(seconds)","",null,1],["in?","Object","Rails/classes/Object.html#method-i-in-3F","(*args)","<p>Returns true if this object is included in the argument(s). Argument must\nbe any object which responds …\n",null,1],["in_char_class?","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-in_char_class-3F","(codepoint, classes)","<p>Detect whether the codepoint is in a certain character class. Returns\n<code>true</code> when it&#39;s in the specified …\n",null,1],["in_clause_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-in_clause_length","()","<p>Returns the maximum number of elements in an IN (x,y,z) clause. nil means\nno limit.\n",null,1],["in_groups","Array","Rails/classes/Array.html#method-i-in_groups","(number, fill_with = nil)","<p>Splits or iterates over the array in <code>number</code> of groups, padding\nany remaining slots with <code>fill_with</code> unless …\n",null,1],["in_groups_of","Array","Rails/classes/Array.html#method-i-in_groups_of","(number, fill_with = nil)","<p>Splits or iterates over the array in groups of size <code>number</code>,\npadding any remaining slots with <code>fill_with</code> …\n",null,1],["in_rails_application?","Rails::ScriptRailsLoader","Rails/classes/Rails/ScriptRailsLoader.html#method-c-in_rails_application-3F","()","",null,1],["in_rails_application_subdirectory?","Rails::ScriptRailsLoader","Rails/classes/Rails/ScriptRailsLoader.html#method-c-in_rails_application_subdirectory-3F","(path = Pathname.new(Dir.pwd))","",null,1],["in_time_zone","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-in_time_zone","(new_zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>, or the specified\nzone.\n",null,1],["in_time_zone","DateTime","Rails/classes/DateTime.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">&#39;Hawaii&#39;</span>             <span class=\"ruby-comment\"># =&gt; &#39;Hawaii&#39;</span>\n<span class=\"ruby-constant\">DateTime</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">in_time_zone</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["in_time_zone","Time","Rails/classes/Time.html#method-i-in_time_zone","(zone = ::Time.zone)","<p>Returns the simultaneous time in <code>Time.zone</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">zone</span> = <span class=\"ruby-string\">&#39;Hawaii&#39;</span>         <span class=\"ruby-comment\"># =&gt; &#39;Hawaii&#39;</span>\n<span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">utc</span>(<span class=\"ruby-value\">2000</span>).<span class=\"ruby-identifier\">in_time_zone</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["include?","Array","Ruby/classes/Array.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the given object is present in\n<code>self</code> (that is, if any object <code>==</code>\n<em>anObject</em>), <code>false</code> otherwise. …\n",null,0],["include?","ENV","Ruby/classes/ENV.html#method-c-include-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["include?","Enumerable","Ruby/classes/Enumerable.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if any member of <em>enum</em> equals\n<em>obj</em>. Equality is tested using <code>==</code>.\n\n<pre>IO.constants.include? :SEEK_SET ...</pre>\n",null,0],["include?","Hash","Ruby/classes/Hash.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["include?","Module","Ruby/classes/Module.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>module</em> is included in <em>mod</em> or\none of <em>mod</em>&#39;s ancestors.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">A</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">B</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["include?","Range","Ruby/classes/Range.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an element of <em>rng</em>,\n<code>false</code> otherwise.  If beg and end are numeric, comparison is …\n",null,0],["include?","String","Ruby/classes/String.html#method-i-include-3F","(p1)","<p>Returns <code>true</code> if <em>str</em> contains the given string or\ncharacter.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">include?</span> <span class=\"ruby-string\">&quot;lo&quot;</span>   <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">include?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["include?","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-include-3F","(error)","<p>Do the error messages include an error with key <code>error</code>?\n",null,1],["include?","ActiveModel::MassAssignmentSecurity::PermissionSet","Rails/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-include-3F","(key)","",null,1],["include?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-include-3F","(key)","",null,1],["include?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-include-3F","(key)","",null,1],["include?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-include-3F","(other)","<p>Returns <code>true</code> if contained string contains <em>other</em>.\nReturns <code>false</code> otherwise.\n<p>Example:\n\n<pre>&#39;Café&#39;.mb_chars.include?(&#39;é&#39;) ...</pre>\n",null,1],["include?","Test::Unit::Collector::ObjectSpace","Rails/classes/Test/Unit/Collector/ObjectSpace.html#method-i-include-3F","(test)","",null,1],["include_all_railties?","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-include_all_railties-3F","()","",null,1],["include_fallbacks_module","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-include_fallbacks_module","()","",null,1],["include_tag","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-i-include_tag","(*sources)","",null,1],["include_with_range?","Range","Rails/classes/Range.html#method-i-include_with_range-3F","(value)","<p>Extends the default Range#include? to support range comparisons.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">include?</span>(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>) <span class=\"ruby-comment\"># =&gt; true</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">include?</span>(<span class=\"ruby-value\">2</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">3</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["included","ActionController::TestCase::RaiseActionExceptions","Rails/classes/ActionController/TestCase/RaiseActionExceptions.html#method-c-included","(base)","",null,1],["included","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-c-included","(base)","",null,1],["included","ActiveSupport::Concern","Rails/classes/ActiveSupport/Concern.html#method-i-included","(base = nil, &block)","",null,1],["included","ActiveSupport::Memoizable::InstanceMethods","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-c-included","(base)","",null,1],["included","ActiveSupport::Testing::Isolation","Rails/classes/ActiveSupport/Testing/Isolation.html#method-c-included","(base)","",null,1],["included","Rails::Initializable","Rails/classes/Rails/Initializable.html#method-c-included","(base)","",null,1],["included_modules","Module","Ruby/classes/Module.html#method-i-included_modules","()","<p>Returns the list of modules included in <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Mixin</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">Outer</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">Mixin</span>\n<span class=\"ruby-keyword\">end</span>\n\n<span class=\"ruby-constant\">Mixin</span>.<span class=\"ruby-identifier\">included_modules</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["includes","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-includes","(*args)","",null,1],["incomplete_input?","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-incomplete_input-3F","()","<p>Returns true if the invalid byte sequence error is caused by premature end\nof string.\n\n<pre>ec = Encoding::Converter.new(&quot;EUC-JP&quot;, ...</pre>\n",null,0],["increment","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-increment","(attribute, by = 1)","<p>Initializes <code>attribute</code> to zero if <code>nil</code> and adds the\nvalue passed as <code>by</code> (default is 1). The increment is …\n",null,1],["increment","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,1],["increment","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n",null,1],["increment","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-i-increment","(name, amount = 1, options = nil)","",null,1],["increment","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-increment","(name, amount = 1, options = nil)","<p>Increment an integer value in the cache.\n<p>Options are passed to the underlying cache implementation.\n<p>All …\n",null,1],["increment!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-increment-21","(attribute, by = 1)","<p>Wrapper around <code>increment</code> that saves the record. This method\ndiffers from its non-bang version in that …\n",null,1],["increment_counter","ActiveRecord::CounterCache","Rails/classes/ActiveRecord/CounterCache.html#method-i-increment_counter","(counter_name, id)","<p>Increment a number field by one, usually representing a count.\n<p>This is used for caching aggregate values, …\n",null,1],["increment_open_transactions","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-increment_open_transactions","()","",null,1],["indent","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-indent","(content, multiplier = 2)","",null,1],["index","Array","Ruby/classes/Array.html#method-i-index","(p1)","<p>Returns the index of the first object in <code>self</code> such that the\nobject is <code>==</code> to <em>obj</em>. If a block is given …\n",null,0],["index","ENV","Ruby/classes/ENV.html#method-c-index","(p1)","<p>Deprecated method that is equivalent to ENV.key\n",null,0],["index","String","Ruby/classes/String.html#method-i-index","(p1, p2 = v2)","<p>Returns the index of the first occurrence of the given <em>substring</em>\nor pattern (<em>regexp</em>) in <em>str</em>. Returns …\n",null,0],["index","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-i-index","()","",null,1],["index","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index","(column_name, options = {})","<p>Adds a new index to the table. <code>column_name</code> can be a single\nSymbol, or an Array of Symbols. See SchemaStatements#add_index …\n",null,1],["index","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-index","(needle, offset=0)","<p>Returns the position <em>needle</em> in the string, counting in codepoints.\nReturns <code>nil</code> if <em>needle</em> isn&#39;t found. …\n",null,1],["index_by","Enumerable","Rails/classes/Enumerable.html#method-i-index_by","()","<p>Convert an enumerable to a hash. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">people</span>.<span class=\"ruby-identifier\">index_by</span>(&amp;:<span class=\"ruby-identifier\">login</span>)\n  =<span class=\"ruby-operator\">&gt;</span> { <span class=\"ruby-string\">&quot;nextangle&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">&lt;</span><span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span><span class=\"ruby-operator\">&gt;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["index_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_exists-3F","(table_name, column_name, options = {})","<p>Checks to see if an index exists on a table for a given index definition.\n<p>Examples\n\n<pre># Check an index exists ...</pre>\n",null,1],["index_exists?","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-index_exists-3F","(column_name, options = {})","<p>Checks to see if an index exists. See SchemaStatements#index_exists?\n",null,1],["index_helper","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-index_helper","()","",null,1],["index_name","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-index_name","()","",null,1],["index_name_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_exists-3F","(table_name, index_name, default)","<p>Verify the existence of an index with a given name.\n<p>The default argument is returned if the underlying …\n",null,1],["index_name_for_remove","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-index_name_for_remove","(table_name, options = {})","",null,1],["index_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-index_name_length","()","<p>Returns the maximum length of an index name.\n",null,1],["index_name_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-index_name_length","()","",null,1],["indexes","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-indexes","(table_name, name = nil)","<p>Returns an array of indexes for the given table.\n",null,1],["indexes_per_table","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-indexes_per_table","()","<p>Returns the maximum number of indexes per table.\n",null,1],["infinite?","Float","Ruby/classes/Float.html#method-i-infinite-3F","()","<p>Returns <code>nil</code>, -1, or +1 depending on whether <em>flt</em> is\nfinite, -infinity, or +infinity.\n\n<pre>(0.0).infinite?   ...</pre>\n",null,0],["inflections","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-inflections","()","<p>Yields a singleton instance of Inflector::Inflections so you can specify\nadditional inflector rules. …\n",null,1],["info","Plugin","Rails/classes/Plugin.html#method-i-info","()","",null,1],["inheritable_copy","ActiveSupport::InheritableOptions","Rails/classes/ActiveSupport/InheritableOptions.html#method-i-inheritable_copy","()","",null,1],["inheritance_column","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-inheritance_column","()","<p>The name of the column containing the object&#39;s class when Single Table\nInheritance is used\n",null,1],["inheritance_column=","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-inheritance_column-3D","(value)","<p>Sets the value of inheritance_column\n",null,1],["inherited","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-inherited","(klass)","<p>When a class is inherited, wrap its helper module in a new module. This\nensures that the parent class&#39;s …\n",null,1],["inherited","AbstractController::Layouts::ClassMethods","Rails/classes/AbstractController/Layouts/ClassMethods.html#method-i-inherited","(klass)","",null,1],["inherited","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-inherited","(klass)","",null,1],["inherited","ActionController::ParamsWrapper::ClassMethods","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-inherited","(klass)","<p>Sets the default wrapper key or model which will be used to determine\nwrapper key and attribute names. …\n",null,1],["inherited","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-c-inherited","(base)","",null,1],["inherited","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-inherited","(subclass)","<p>Notify observers when the observed class is subclassed.\n",null,1],["inherited","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-inherited","(base)","<p>Copy validators on inheritance.\n",null,1],["inherited","ActiveSupport::DescendantsTracker","Rails/classes/ActiveSupport/DescendantsTracker.html#method-i-inherited","(base)","",null,1],["inherited","Rails::Application","Rails/classes/Rails/Application.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Plugin","Rails/classes/Rails/Plugin.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-inherited","(base)","",null,1],["inherited","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-inherited","(base)","",null,1],["init_fallbacks","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-init_fallbacks","(fallbacks)","",null,1],["init_with","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-init_with","(coder)","<p>Initialize an empty model object from <code>coder</code>.\n<code>coder</code> must contain the attributes necessary for initializing …\n",null,1],["initgroups","Process","Ruby/classes/Process.html#method-c-initgroups","(p1, p2)","<p>Initializes the supplemental group access list by reading the system group\ndatabase and using all groups …\n",null,0],["initialize!","Rails","Rails/classes/Rails.html#method-c-initialize-21","()","",null,1],["initialize_copy","Array","Ruby/classes/Array.html#method-i-initialize_copy","(p1)","<p>Replaces the contents of <code>self</code> with the contents of\n<em>other_ary</em>, truncating or expanding if necessary.\n\n<pre>a ...</pre>\n",null,0],["initialize_copy","Hash","Ruby/classes/Hash.html#method-i-initialize_copy","(p1)","<p>Replaces the contents of <em>hsh</em> with the contents of\n<em>other_hash</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">replace</span>({ <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["initialize_copy","String","Ruby/classes/String.html#method-i-initialize_copy","(p1)","<p>Replaces the contents and taintedness of <em>str</em> with the\ncorresponding values in <em>other_str</em>.\n\n<pre>s = &quot;hello&quot;  ...</pre>\n",null,0],["initialize_copy","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-initialize_copy","(other)","",null,1],["initialize_copy","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-initialize_copy","(other)","",null,1],["initialize_dup","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-initialize_dup","(other)","",null,1],["initialize_dup","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-initialize_dup","(other)","<p>Duped objects have no id assigned and are treated as new records. Note that\nthis is a “shallow” …\n",null,1],["initialize_dup","ActiveRecord::Timestamp","Rails/classes/ActiveRecord/Timestamp.html#method-i-initialize_dup","(other)","",null,1],["initialize_generators","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-initialize_generators","()","",null,1],["initialize_i18n","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-initialize_i18n","(app)","<p>Setup i18n configuration\n",null,1],["initialize_schema_migrations_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-initialize_schema_migrations_table","()","<p>Should not be called normally, but this operation is non-destructive. The\nmigrations module handles this …\n",null,1],["initialize_sid","ActionDispatch::Session::Compatibility","Rails/classes/ActionDispatch/Session/Compatibility.html#method-i-initialize_sid","()","",null,1],["initialize_template_class","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-initialize_template_class","(*)","<p>For old tests\n",null,1],["initialize_test_deliveries","ActionMailer::TestCase::Behavior","Rails/classes/ActionMailer/TestCase/Behavior.html#method-i-initialize_test_deliveries","()","",null,1],["initialized=","Rails","Rails/classes/Rails.html#method-c-initialized-3D","(initialized)","",null,1],["initialized?","Rails","Rails/classes/Rails.html#method-c-initialized-3F","()","",null,1],["initializer","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-initializer","(filename, data=nil, &block)","<p>Create a new initializer with the provided code (either in a block or a\nstring).\n<p>Examples\n\n<pre>initializer(&quot;globals.rb&quot;) ...</pre>\n",null,1],["initializer","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializer","(name, opts = {}, &blk)","",null,1],["initializers","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-initializers","()","",null,1],["initializers","Rails::Initializable","Rails/classes/Rails/Initializable.html#method-i-initializers","()","",null,1],["initializers","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers","()","",null,1],["initializers_chain","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_chain","()","",null,1],["initializers_for","Rails::Initializable::ClassMethods","Rails/classes/Rails/Initializable/ClassMethods.html#method-i-initializers_for","(binding)","",null,1],["inject","Enumerable","Ruby/classes/Enumerable.html#method-i-inject","(p1 = v1, p2 = v2)","<p>Combines all elements of <em>enum</em> by applying a binary operation,\nspecified by a block or a symbol that names …\n",null,0],["inject_index_options","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-inject_index_options","()","",null,1],["inject_options","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-inject_options","()","",null,1],["ino","File::Stat","Ruby/classes/File/Stat.html#method-i-ino","()","<p>Returns the inode number for <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">ino</span>   <span class=\"ruby-comment\">#=&gt; 1083669</span>\n</pre>\n",null,0],["inplace_mode","ARGF","Ruby/classes/ARGF.html#method-i-inplace_mode","()","<p>Returns the file extension appended to the names of modified files under\ninplace-edit mode. This value …\n",null,0],["inplace_mode=","ARGF","Ruby/classes/ARGF.html#method-i-inplace_mode-3D","(p1)","\n<pre>Sets the filename extension for inplace editing mode to the given String.\nEach file being edited has ...</pre>\n",null,0],["inquiry","String","Rails/classes/String.html#method-i-inquiry","()","<p>Wraps the current string in the <code>ActiveSupport::StringInquirer</code>\nclass, which gives you a prettier way to …\n",null,1],["insensitive_attributes","ActiveModel::MassAssignmentSecurity::StrictSanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/StrictSanitizer.html#method-i-insensitive_attributes","()","",null,1],["insert","Array","Ruby/classes/Array.html#method-i-insert","(*args)","<p>Inserts the given values before the element with the given index (which may\nbe negative).\n\n<pre>a = %w{ a b ...</pre>\n",null,0],["insert","String","Ruby/classes/String.html#method-i-insert","(p1, p2)","<p>Inserts <em>other_str</em> before the character at the given\n<em>index</em>, modifying <em>str</em>. Negative indices count from …\n",null,0],["insert","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert","(index, *args, &block)","",null,1],["insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert","(arel, name = nil, pk = nil, id_value = nil, sequence_name = nil, binds = [])","<p>Returns the last auto-generated ID from the affected table.\n<p><code>id_value</code> will be returned unless the value …\n",null,1],["insert","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-insert","(values)","",null,1],["insert","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-insert","(offset, fragment)","<p>Inserts the passed string at specified codepoint offsets.\n<p>Example:\n\n<pre>&#39;Café&#39;.mb_chars.insert(4, &#39; périferôl&#39;).to_s ...</pre>\n",null,1],["insert_after","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_after","(index, *args, &block)","",null,1],["insert_before","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-insert_before","(index, *args, &block)","",null,1],["insert_fixture","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_fixture","(fixture, table_name)","<p>Inserts the given fixture into the table. Overridden in adapters that\nrequire something beyond a simple …\n",null,1],["insert_output","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-insert_output","(p1)","<p>Inserts string into the encoding converter. The string will be converted to\nthe destination encoding …\n",null,0],["insert_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","<p>Returns the last auto-generated ID from the affected table.\n",null,1],["insert_sql","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","",null,1],["insert_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-insert_sql","(sql, name = nil, pk = nil, id_value = nil, sequence_name = nil)","<p>Executes an INSERT query and returns the new record&#39;s ID\n",null,1],["inside_template","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-inside_template","()","",null,1],["inside_template?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-inside_template-3F","()","",null,1],["inspect","Array","Ruby/classes/Array.html#method-i-inspect","()","<p>Creates a string representation of <code>self</code>.\n",null,0],["inspect","Complex","Ruby/classes/Complex.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n",null,0],["inspect","Dir","Ruby/classes/Dir.html#method-i-inspect","()","<p>Return a string describing this Dir object.\n",null,0],["inspect","ENV","Ruby/classes/ENV.html#method-c-inspect","()","<p>Returns the contents of the environment as a String.\n",null,0],["inspect","Encoding","Ruby/classes/Encoding.html#method-i-inspect","()","<p>Returns a string which represents the encoding for programmers.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">inspect</span>       <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Encoding:UTF-8&gt;&quot; ...</span>\n</pre>\n",null,0],["inspect","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-inspect","()","<p>Returns a printable version of <em>ec</em>\n\n<pre>ec = Encoding::Converter.new(&quot;iso-8859-1&quot;, &quot;utf-8&quot;)\nputs ec.inspect ...</pre>\n",null,0],["inspect","Enumerator","Ruby/classes/Enumerator.html#method-i-inspect","()","<p>Creates a printable version of <em>e</em>.\n",null,0],["inspect","Exception","Ruby/classes/Exception.html#method-i-inspect","()","<p>Return this exception&#39;s class name an message\n",null,0],["inspect","File::Stat","Ruby/classes/File/Stat.html#method-i-inspect","()","<p>Produce a nicely formatted description of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/etc/passwd&quot;</span>).<span class=\"ruby-identifier\">inspect</span>\n   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;File::Stat ...</span>\n</pre>\n",null,0],["inspect","Hash","Ruby/classes/Hash.html#method-i-inspect","()","<p>Return the contents of this hash as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span>, <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>  } <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["inspect","IO","Ruby/classes/IO.html#method-i-inspect","()","<p>Return a string describing this IO object.\n",null,0],["inspect","MatchData","Ruby/classes/MatchData.html#method-i-inspect","()","<p>Returns a printable version of <em>mtch</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">puts</span> <span class=\"ruby-regexp\">/.$/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;foo&quot;</span>).<span class=\"ruby-identifier\">inspect</span>\n<span class=\"ruby-comment\">#=&gt; #&lt;MatchData &quot;o&quot;&gt;</span>\n\n<span class=\"ruby-identifier\">puts</span> <span class=\"ruby-regexp\">/(.)(.)(.)/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;foo&quot;</span>).<span class=\"ruby-identifier\">inspect</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["inspect","Method","Ruby/classes/Method.html#method-i-inspect","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,0],["inspect","NilClass","Ruby/classes/NilClass.html#method-i-inspect","()","<p>Always returns the string “nil”.\n",null,0],["inspect","Object","Ruby/classes/Object.html#method-i-inspect","()","<p>Returns a string containing a human-readable representation of\n<em>obj</em>. If not overridden and no instance …\n",null,0],["inspect","Process::Status","Ruby/classes/Process/Status.html#method-i-inspect","()","<p>Override the inspection method.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">system</span>(<span class=\"ruby-string\">&quot;false&quot;</span>)\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">$?</span>.<span class=\"ruby-identifier\">inspect</span> <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Process::Status: pid 12861 exit 1&gt;&quot;</span>\n</pre>\n",null,0],["inspect","Range","Ruby/classes/Range.html#method-i-inspect","()","<p>Convert this range object to a printable form (using <code>inspect</code>\nto convert the start and end objects).\n",null,0],["inspect","Rational","Ruby/classes/Rational.html#method-i-inspect","()","<p>Returns the value as a string for inspection.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">inspect</span>      <span class=\"ruby-comment\">#=&gt; &quot;(2/1)&quot;</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">-8</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["inspect","Regexp","Ruby/classes/Regexp.html#method-i-inspect","()","<p>Produce a nicely formatted string-version of <em>rxp</em>. Perhaps\nsurprisingly, <code>#inspect</code> actually produces the …\n",null,0],["inspect","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-inspect","()","",null,0],["inspect","String","Ruby/classes/String.html#method-i-inspect","()","<p>Returns a printable version of <em>str</em>, surrounded by quote marks,\nwith special characters escaped.\n\n<pre>str = ...</pre>\n",null,0],["inspect","Struct","Ruby/classes/Struct.html#method-i-inspect","()","<p>Describe the contents of this struct in a string.\n",null,0],["inspect","Symbol","Ruby/classes/Symbol.html#method-i-inspect","()","<p>Returns the representation of <em>sym</em> as a symbol literal.\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">fred</span>.<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;:fred&quot;</span>\n</pre>\n",null,0],["inspect","Thread","Ruby/classes/Thread.html#method-i-inspect","()","<p>Dump the name, id, and status of <em>thr</em> to a string.\n",null,0],["inspect","Time","Ruby/classes/Time.html#method-i-inspect","()","<p>Returns a string representing <em>time</em>. Equivalent to calling\n<code>Time#strftime</code> with a format string of “<code>%Y-%m-%d</code> …\n",null,0],["inspect","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-inspect","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,0],["inspect","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-inspect","()","",null,1],["inspect","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-inspect","()","",null,1],["inspect","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-inspect","()","<p>Returns the contents of the record as a nicely formatted string.\n",null,1],["inspect","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-inspect","()","<p>Returns a string like &#39;Post(id:integer, title:string, body:text)&#39;\n",null,1],["inspect","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-inspect","()","",null,1],["inspect","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-inspect","()","",null,1],["inspect","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-inspect","()","",null,1],["inspect","Date","Rails/classes/Date.html#method-i-inspect","()","",null,1],["inspect","DateTime","Rails/classes/DateTime.html#method-i-inspect","()","",null,1],["inspect","Rails::Info","Rails/classes/Rails/Info.html#method-c-inspect","()","",null,1],["install","Plugin","Rails/classes/Plugin.html#method-i-install","(method=nil, options = {})","",null,1],["install","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-install","(name_uri_or_plugin)","",null,1],["installed?","Plugin","Rails/classes/Plugin.html#method-i-installed-3F","()","",null,1],["instance","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-instance","()","",null,1],["instance","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-instance","()","",null,1],["instance_eval","BasicObject","Ruby/classes/BasicObject.html#method-i-instance_eval","(*args)","<p>Evaluates a string containing Ruby source code, or the given block, within\nthe context of the receiver …\n",null,0],["instance_exec","BasicObject","Ruby/classes/BasicObject.html#method-i-instance_exec","(*args)","<p>Executes the given block within the context of the receiver (<em>obj</em>).\nIn order to set the context, the variable …\n",null,0],["instance_method","Module","Ruby/classes/Module.html#method-i-instance_method","(p1)","<p>Returns an <code>UnboundMethod</code> representing the given instance\nmethod in <em>mod</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Interpreter</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">do_a</span>() <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["instance_method_already_implemented?","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","",null,1],["instance_method_already_implemented?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-instance_method_already_implemented-3F","(method_name)","",null,1],["instance_method_names","Module","Rails/classes/Module.html#method-i-instance_method_names","(*args)","",null,1],["instance_methods","Module","Ruby/classes/Module.html#method-i-instance_methods","(*args)","<p>Returns an array containing the names of the public and protected instance\nmethods in the receiver.  …\n",null,0],["instance_of?","Object","Ruby/classes/Object.html#method-i-instance_of-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an instance of the given\nclass. See also <code>Object#kind_of?</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">A</span>;     <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["instance_variable_defined?","Object","Ruby/classes/Object.html#method-i-instance_variable_defined-3F","(p1)","<p>Returns <code>true</code> if the given instance variable is defined in\n<em>obj</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Fred</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>(<span class=\"ruby-identifier\">p1</span>, <span class=\"ruby-identifier\">p2</span>)\n   <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["instance_variable_get","Object","Ruby/classes/Object.html#method-i-instance_variable_get","(p1)","<p>Returns the value of the given instance variable, or nil if the instance\nvariable is not set. The <code>@</code> part …\n",null,0],["instance_variable_names","Object","Rails/classes/Object.html#method-i-instance_variable_names","()","",null,1],["instance_variable_set","Object","Ruby/classes/Object.html#method-i-instance_variable_set","(p1, p2)","<p>Sets the instance variable names by <em>symbol</em> to <em>object</em>,\nthereby frustrating the efforts of the class&#39;s …\n",null,0],["instance_variables","Object","Ruby/classes/Object.html#method-i-instance_variables","()","<p>Returns an array of instance variable names for the receiver. Note that\nsimply defining an accessor does …\n",null,0],["instantiate","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-instantiate","(record)","<p>Finder methods must instantiate through this method to work with the\nsingle-table inheritance model that …\n",null,1],["instantiate_all_loaded_fixtures","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-instantiate_all_loaded_fixtures","(object, load_instances = true)","",null,1],["instantiate_fixtures","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-instantiate_fixtures","(object, fixture_set, load_instances = true, rails_3_2_compatibility_argument = true)","<p>The use with parameters  <code>(object, fixture_set_name, fixture_set,\nload_instances = true)</code>  is deprecated, …\n",null,1],["instantiate_observers","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-instantiate_observers","()","<p>Instantiate the global observers.\n",null,1],["instantiator?","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-i-instantiator-3F","()","",null,1],["instrument","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-c-instrument","()","",null,1],["instrument","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-instrument","(name, payload = {})","",null,1],["instrument","ActiveSupport::Notifications::Instrumenter","Rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-i-instrument","(name, payload={})","<p>Instrument the given block by measuring the time taken to execute it and\npublish it. Notice that events …\n",null,1],["instrument=","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-c-instrument-3D","(boolean)","<p>Set to true if cache stores should be instrumented. Default is false.\n",null,1],["instrument_fragment_cache","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-instrument_fragment_cache","(name, key)","",null,1],["instrumenter","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-instrumenter","()","",null,1],["integer?","Integer","Ruby/classes/Integer.html#method-i-integer-3F","()","<p>Always returns <code>true</code>.\n",null,0],["integer?","Numeric","Ruby/classes/Numeric.html#method-i-integer-3F","()","<p>Returns <code>true</code> if <em>num</em> is an <code>Integer</code>\n(including <code>Fixnum</code> and <code>Bignum</code>).\n",null,0],["intern","String","Ruby/classes/String.html#method-i-intern","()","<p>Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the\nsymbol if it did not previously exist. See <code>Symbol#id2name</code> …\n",null,0],["intern","Symbol","Ruby/classes/Symbol.html#method-i-intern","()","<p>In general, <code>to_sym</code> returns the <code>Symbol</code>\ncorresponding to an object. As <em>sym</em> is already a symbol,\n<code>self</code> is …\n",null,0],["internal_encoding","ARGF","Ruby/classes/ARGF.html#method-i-internal_encoding","()","<p>Returns the internal encoding for strings read from <code>ARGF</code> as an\n<code>Encoding</code> object.\n<p>If <code>ARGF.set_encoding</code> has …\n",null,0],["internal_encoding","IO","Ruby/classes/IO.html#method-i-internal_encoding","()","<p>Returns the Encoding of the internal string if conversion is specified. \nOtherwise returns nil.\n",null,0],["internal_methods","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-internal_methods","()","<p>A list of all internal methods for a controller. This finds the first\nabstract superclass of a controller, …\n",null,1],["invalid?","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-invalid-3F","(context = nil)","<p>Performs the opposite of <code>valid?</code>. Returns true if errors were\nadded, false otherwise.\n",null,1],["inverse","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-inverse","()","<p>Returns a list that represents commands that are the inverse of the\ncommands stored in <code>commands</code>. For …\n",null,1],["invert","ENV","Ruby/classes/ENV.html#method-c-invert","()","<p>Returns a new hash created by using environment variable names as values\nand values as names.\n",null,0],["invert","Hash","Ruby/classes/Hash.html#method-i-invert","()","<p>Returns a new hash created by using <em>hsh</em>&#39;s values as keys, and\nthe keys as values.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;n&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["invert","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-invert","()","",null,1],["invoke","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-invoke","(namespace, args=ARGV, config={})","<p>Receives a namespace, arguments and the behavior to invoke the generator.\nIt&#39;s used as the default …\n",null,1],["ioctl","IO","Ruby/classes/IO.html#method-i-ioctl","(p1, p2 = v2)","<p>Provides a mechanism for issuing low-level commands to control or query I/O\ndevices. Arguments and results …\n",null,0],["ip","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-ip","()","",null,1],["ips_from","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-ips_from","(header, allow_proxies = false)","",null,1],["irregular","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-irregular","(singular, plural)","<p>Specifies a new irregular that applies to both pluralization and\nsingularization at the same time. This …\n",null,1],["is_a?","Object","Ruby/classes/Object.html#method-i-is_a-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>,\nor if <em>class</em> is one of the superclasses of <em>obj</em> or modules\nincluded …\n",null,0],["is_a?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-is_a-3F","(klass)","<p>Say we&#39;re a Time to thwart type checking.\n",null,1],["is_missing?","LoadError","Rails/classes/LoadError.html#method-i-is_missing-3F","(location)","",null,1],["is_missing?","LoadError","Rails/classes/LoadError.html#method-i-is_missing-3F","(location)","",null,1],["is_utf8?","String","Rails/classes/String.html#method-i-is_utf8-3F","()","",null,1],["isatty","IO","Ruby/classes/IO.html#method-i-isatty","()","<p>Returns <code>true</code> if <em>ios</em> is associated with a terminal\ndevice (tty), <code>false</code> otherwise.\n\n<pre>File.new(&quot;testfile&quot;).isatty ...</pre>\n",null,0],["isdst","Time","Ruby/classes/Time.html#method-i-isdst","()","<p>Returns <code>true</code> if <em>time</em> occurs during Daylight Saving\nTime in its time zone.\n\n<pre># CST6CDT:\n  Time.local(2000, ...</pre>\n",null,0],["isdst","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-isdst","()","",null,1],["iso8601","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-iso8601","(fraction_digits = 0)","",null,1],["iso8601","Date","Rails/classes/Date.html#method-i-iso8601","()","",null,1],["isolate_namespace","Rails::Engine","Rails/classes/Rails/Engine.html#method-c-isolate_namespace","(mod)","",null,1],["issetugid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-issetugid","()","<p>Returns <code>true</code> if the process was created as a result of an\nexecve(2) system call which had either of the …\n",null,0],["iterator?","Kernel","Ruby/classes/Kernel.html#method-i-iterator-3F","()","<p>Returns <code>true</code> if <code>yield</code> would execute a block in\nthe current context. The <code>iterator?</code> form is mildly deprecated.\n…\n",null,0],["j","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-j","(javascript)","",null,1],["j","ERB::Util","Rails/classes/ERB/Util.html#method-c-j","(s)","",null,1],["javascript_gemfile_entry","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-javascript_gemfile_entry","()","",null,1],["javascript_include_tag","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#method-i-javascript_include_tag","(*sources)","<p>Returns an HTML script tag for each of the <code>sources</code> provided.\n<p>Sources may be paths to JavaScript files. …\n",null,1],["javascript_include_tag","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-javascript_include_tag","(*sources)","",null,1],["javascript_path","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#method-i-javascript_path","(source)","<p>Computes the path to a javascript asset in the public javascripts\ndirectory. If the <code>source</code> filename has …\n",null,1],["javascript_path","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-javascript_path","(source)","",null,1],["javascript_runtime_gemfile_entry","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-javascript_runtime_gemfile_entry","()","",null,1],["javascript_tag","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-javascript_tag","(content_or_options_with_block = nil, html_options = {}, &block)","<p>Returns a JavaScript tag with the <code>content</code> inside. Example:\n\n<pre>javascript_tag &quot;alert(&#39;All is good&#39;)&quot;</pre>\n<p>Returns: …\n",null,1],["javascripts","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-javascripts","()","",null,1],["join","Array","Ruby/classes/Array.html#method-i-join","(p1 = v1)","<p>Returns a string created by converting each element of the array to a\nstring, separated by <em>sep</em>.\n\n<pre>[ &quot;a&quot;, ...</pre>\n",null,0],["join","File","Ruby/classes/File.html#method-c-join","(*args)","<p>Returns a new string formed by joining the strings using\n<code>File::SEPARATOR</code>.\n\n<pre>File.join(&quot;usr&quot;, &quot;mail&quot;, &quot;gumby&quot;) ...</pre>\n",null,0],["join","Thread","Ruby/classes/Thread.html#method-i-join","(p1 = v1)","<p>The calling thread will suspend execution and run <em>thr</em>. Does not\nreturn until <em>thr</em> exits or until <em>limit</em> …\n",null,0],["joined_includes_values","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-joined_includes_values","()","<p>Joins that are also marked for preloading. In which case we should just\neager load them. Note that this …\n",null,1],["joins","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-joins","(*args)","",null,1],["joins_per_query","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-joins_per_query","()","<p>Returns maximum number of joins in a single query.\n",null,1],["json_escape","ERB::Util","Rails/classes/ERB/Util.html#method-c-json_escape","(s)","<p>A utility method for escaping HTML entities in JSON strings using uXXXX\nJavaScript escape sequences for …\n",null,1],["json_resource_errors","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-json_resource_errors","()","",null,1],["keep","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-keep","(k = nil)","<p>Keeps either the entire current flash or a specific flash entry available\nfor the next action:\n\n<pre>flash.keep ...</pre>\n",null,1],["keep_if","Array","Ruby/classes/Array.html#method-i-keep_if","()","<p>Deletes every element of <code>self</code> for which <em>block</em>\nevaluates to false. See also <code>Array#select!</code>\n<p>If no block is …\n",null,0],["keep_if","ENV","Ruby/classes/ENV.html#method-c-keep_if","()","<p>Deletes every environment variable where the block evaluates to\n<code>false</code>.\n<p>Returns an enumerator if no block …\n",null,0],["keep_if","Hash","Ruby/classes/Hash.html#method-i-keep_if","()","<p>Deletes every key-value pair from <em>hsh</em> for which <em>block</em>\nevaluates to false.\n<p>If no block is given, an enumerator …\n",null,0],["key","ENV","Ruby/classes/ENV.html#method-c-key","(p1)","<p>Returns the name of the environment variable with <code>value</code>.  If\nthe value is not found <code>nil</code> is returned. …\n",null,0],["key","Hash","Ruby/classes/Hash.html#method-i-key","(p1)","<p>Returns the key of an occurrence of a given value. If the value is not\nfound, returns <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["key?","ENV","Ruby/classes/ENV.html#method-c-key-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["key?","Hash","Ruby/classes/Hash.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["key?","Thread","Ruby/classes/Thread.html#method-i-key-3F","(p1)","<p>Returns <code>true</code> if the given string (or symbol) exists as a\nthread-local variable.\n\n<pre>me = Thread.current\nme[:oliver] ...</pre>\n",null,0],["key?","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-key-3F","(name)","",null,1],["key?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-key-3F","(key)","",null,1],["key?","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-key-3F","(key)","",null,1],["key?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[&quot;key&quot;] ...</pre>\n",null,1],["key?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-key-3F","(key)","<p>Checks the hash for a key matching the argument passed in:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[&quot;key&quot;] ...</pre>\n",null,1],["key_matcher","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-key_matcher","(pattern, options)","<p>Add the namespace defined in the options to a pattern designed to match\nkeys. Implementations that support …\n",null,1],["key_value","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-key_value","(key, value)","<p>Returns Ruby 1.9 style key-value pair if current code is running on Ruby\n1.9.x. Returns the old-style …\n",null,1],["key_value","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-key_value","(key, value)","<p>Returns Ruby 1.9 style key-value pair if current code is running on Ruby\n1.9.x. Returns the old-style …\n",null,1],["keys","ENV","Ruby/classes/ENV.html#method-c-keys","()","<p>Returns every environment variable name in an Array\n",null,0],["keys","Hash","Ruby/classes/Hash.html#method-i-keys","()","<p>Returns a new array populated with the keys from this hash. See also\n<code>Hash#values</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["keys","Thread","Ruby/classes/Thread.html#method-i-keys","()","<p>Returns an an array of the names of the thread-local variables (as\nSymbols).\n\n<pre>thr = Thread.new do\n  Thread.current[:cat] ...</pre>\n",null,0],["keys","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-keys","()","",null,1],["keys","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-keys","()","<p>Returns all message keys\n",null,1],["keys","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-keys","()","",null,1],["kill","Process","Ruby/classes/Process.html#method-c-kill","(*args)","<p>Sends the given signal to the specified process id(s), or to the current\nprocess if <em>pid</em> is zero. <em>signal</em> …\n",null,0],["kill","Thread","Ruby/classes/Thread.html#method-c-kill","(p1)","<p>Causes the given <em>thread</em> to exit (see <code>Thread::exit</code>).\n\n<pre>count = 0\na = Thread.new { loop { count += 1 } }\nsleep(0.1) ...</pre>\n",null,0],["kill","Thread","Ruby/classes/Thread.html#method-i-kill","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,0],["kilobyte","Numeric","Rails/classes/Numeric.html#method-i-kilobyte","()","",null,1],["kilobytes","Numeric","Rails/classes/Numeric.html#method-i-kilobytes","()","",null,1],["kind","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-c-kind","()","<p>Returns the kind of the validator. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">PresenceValidator</span>.<span class=\"ruby-identifier\">kind</span>   <span class=\"ruby-comment\"># =&gt; :presence</span>\n<span class=\"ruby-constant\">UniquenessValidator</span>.<span class=\"ruby-identifier\">kind</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["kind","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-i-kind","()","<p>Return the kind for this validator.\n",null,1],["kind_of?","Object","Ruby/classes/Object.html#method-i-kind_of-3F","(p1)","<p>Returns <code>true</code> if <em>class</em> is the class of <em>obj</em>,\nor if <em>class</em> is one of the superclasses of <em>obj</em> or modules\nincluded …\n",null,0],["kind_of?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-kind_of-3F","(klass)","",null,1],["klass","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-i-klass","()","",null,1],["klass","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-i-klass","()","<p>Returns the class for the macro.\n<p><code>composed_of :balance, :class_name =&gt; &#39;Money&#39;</code>\nreturns the  …\n",null,1],["known_attributes","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-known_attributes","()","<p>This is a list of known attributes for this resource. Either gathered from\nthe provided <code>schema</code>, or from …\n",null,1],["known_attributes","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-known_attributes","()","<p>Returns the list of known attributes for this resource, gathered from the\nprovided <code>schema</code> Attributes …\n",null,1],["l","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-l","(*args)","",null,1],["l","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-l","(*args)","",null,1],["label","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-label","(method, text = nil, options = {}, &block)","",null,1],["label","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-label","(object_name, method, content_or_options = nil, options = nil, &block)","<p>Returns a label tag tailored for labelling an input field for a specified\nattribute (identified by <code>method</code> …\n",null,1],["label_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-label_tag","(name = nil, content_or_options = nil, options = nil, &block)","<p>Creates a label element. Accepts a block.\n<p>Options\n<p>Creates standard HTML attributes for the tag.\n",null,1],["lambda","Kernel","Ruby/classes/Kernel.html#method-i-lambda","()","<p>Equivalent to <code>Proc.new</code>, except the resulting Proc objects\ncheck the number of parameters passed when …\n",null,0],["lambda?","Proc","Ruby/classes/Proc.html#method-i-lambda-3F","()","<p>Returns <code>true</code> for a Proc object for which argument handling is\nrigid. Such procs are typically generated …\n",null,0],["last","Array","Ruby/classes/Array.html#method-i-last","(*args)","<p>Returns the last element(s) of <code>self</code>. If the array is empty,\nthe first form returns <code>nil</code>.\n\n<pre>a = [ &quot;w&quot;, &quot;x&quot;, ...</pre>\n",null,0],["last","Range","Ruby/classes/Range.html#method-i-last","(*args)","<p>Returns the last object in <em>rng</em>, or the last <code>n</code>\nelements.\n",null,0],["last","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-last","()","",null,1],["last","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-last","(*args)","<p>A convenience wrapper for <code>find(:last, *args)</code>. You can pass in\nall the same arguments to this method as …\n",null,1],["last","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-last","(*args)","<p>A convenience wrapper for <code>find(:last, *args)</code>. You can pass in\nall the same arguments to this method as …\n",null,1],["last","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-last","()","",null,1],["last","String","Rails/classes/String.html#method-i-last","(limit = 1)","<p>Returns the last character of the string or the last <code>limit</code>\ncharacters.\n<p>Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;hello&quot;</span>.<span class=\"ruby-identifier\">last</span>     <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["last!","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-last-21","()","<p>Same as <code>last</code> but raises\n<code>ActiveRecord::RecordNotFound</code> if no record is found. Note that\n<code>last!</code> accepts no …\n",null,1],["last_error","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-last_error","()","<p>Returns an exception object for the last conversion. Returns nil if the\nlast conversion did not produce …\n",null,0],["last_inserted_id","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-last_inserted_id","(result)","",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-last_inserted_id","(result)","",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-last_inserted_id","(result)","",null,1],["last_inserted_id","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-last_inserted_id","(result)","",null,1],["last_match","Regexp","Ruby/classes/Regexp.html#method-c-last_match","(p1 = v1)","<p>The first form returns the <code>MatchData</code> object generated by the\nlast successful pattern match. Equivalent …\n",null,0],["last_modified","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified","()","",null,1],["last_modified=","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3D","(utc_time)","",null,1],["last_modified?","ActionDispatch::Http::Cache::Response","Rails/classes/ActionDispatch/Http/Cache/Response.html#method-i-last_modified-3F","()","",null,1],["layout","AbstractController::Layouts::ClassMethods","Rails/classes/AbstractController/Layouts/ClassMethods.html#method-i-layout","(layout, conditions = {})","<p>Specify the layout to use for this class.\n<p>If the specified layout is a:\n<p>String &mdash; the String is the template …\n",null,1],["lchmod","File","Ruby/classes/File.html#method-c-lchmod","(p1, *args)","<p>Equivalent to <code>File::chmod</code>, but does not follow symbolic links\n(so it will change the permissions associated …\n",null,0],["lchown","File","Ruby/classes/File.html#method-c-lchown","(p1, p2, *args)","<p>Equivalent to <code>File::chown</code>, but does not follow symbolic links\n(so it will change the owner associated …\n",null,0],["lcm","Integer","Ruby/classes/Integer.html#method-i-lcm","(p1)","<p>Returns the least common multiple (always positive).  0.lcm(x) and x.lcm(0)\nreturn zero.\n<p>For example: …\n",null,0],["ldexp","Math","Ruby/classes/Math.html#method-c-ldexp","(p1, p2)","<p>Returns the value of <em>flt</em>*(2**<em>int</em>).\n\n<pre>fraction, exponent = Math.frexp(1234)\nMath.ldexp(fraction, exponent) ...</pre>\n",null,0],["lease","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-lease","()","",null,1],["length","Array","Ruby/classes/Array.html#method-i-length","()","<p>Returns the number of elements in <code>self</code>. May be zero.\n\n<pre class=\"ruby\">[ <span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span> ].<span class=\"ruby-identifier\">length</span>   <span class=\"ruby-comment\">#=&gt; 5</span>\n</pre>\n",null,0],["length","ENV","Ruby/classes/ENV.html#method-c-length","()","<p>Returns the number of environment variables.\n",null,0],["length","Hash","Ruby/classes/Hash.html#method-i-length","()","<p>Returns the number of key-value pairs in the hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span>, <span class=\"ruby-string\">&quot;v&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;e&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["length","MatchData","Ruby/classes/MatchData.html#method-i-length","()","<p>Returns the number of elements in the match array.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.length   ...</pre>\n",null,0],["length","String","Ruby/classes/String.html#method-i-length","()","<p>Returns the character length of <em>str</em>.\n",null,0],["length","Struct","Ruby/classes/Struct.html#method-i-length","()","<p>Returns the number of instance variables.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,0],["length","Symbol","Ruby/classes/Symbol.html#method-i-length","()","<p>Same as <code>sym.to_s.length</code>.\n",null,0],["length","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-i-length","()","",null,1],["length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-length","()","",null,1],["length","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-i-length","()","",null,1],["length","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-i-length","()","",null,1],["level","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-level","()","",null,1],["level=","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-level-3D","(l)","",null,1],["lgamma","Math","Ruby/classes/Math.html#method-c-lgamma","(p1)","<p>Calculates the logarithmic gamma of x and the sign of gamma of x.\n<p>Math.lgamma(x) is same as\n\n<pre>[Math.log(Math.gamma(x).abs), ...</pre>\n",null,0],["lib","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-lib","()","",null,1],["lib","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-lib","(filename, data=nil, &block)","<p>Create a new file in the lib/ directory. Code can be specified in a block\nor a data string can be given. …\n",null,1],["lib","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-lib","()","",null,1],["license","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-license","()","",null,1],["limit","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-limit","(value)","",null,1],["limit","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-limit","(limit)","<p>Limit the byte size of the string to a number of bytes without breaking\ncharacters. Usable when the storage …\n",null,1],["limited_update_conditions","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-limited_update_conditions","(where_sql, quoted_table_name, quoted_primary_key)","",null,1],["limited_update_conditions","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-limited_update_conditions","(where_sql, quoted_table_name, quoted_primary_key)","",null,1],["lineno","ARGF","Ruby/classes/ARGF.html#method-i-lineno","()","<p>Returns the current line number of ARGF as a whole. This value can be set\nmanually with <code>ARGF.lineno=</code> …\n",null,0],["lineno","IO","Ruby/classes/IO.html#method-i-lineno","()","<p>Returns the current line number in <em>ios</em>.  The stream must be opened\nfor reading. <code>lineno</code> counts the number …\n",null,0],["lineno=","ARGF","Ruby/classes/ARGF.html#method-i-lineno-3D","(p1)","<p>Sets the line number of <code>ARGF</code> as a whole to the given\n<code>Integer</code>.\n<p><code>ARGF</code> sets the line number automatically …\n",null,0],["lineno=","IO","Ruby/classes/IO.html#method-i-lineno-3D","(p1)","<p>Manually sets the current line number to the given value. <code>$.</code>\nis updated only on the next read.\n\n<pre>f = File.new(&quot;testfile&quot;) ...</pre>\n",null,0],["lines","ARGF","Ruby/classes/ARGF.html#method-i-lines","(*args)","<p>Returns an enumerator which iterates over each line (separated by\n<em>sep</em>, which defaults to your platform&#39;s …\n",null,0],["lines","IO","Ruby/classes/IO.html#method-i-lines","(*args)","<p>Executes the block for every line in <em>ios</em>, where lines are\nseparated by <em>sep</em>. <em>ios</em> must be opened for reading …\n",null,0],["lines","String","Ruby/classes/String.html#method-i-lines","(p1 = v1)","<p>Splits <em>str</em> using the supplied parameter as the record separator\n(<code>$/</code> by default), passing each substring …\n",null,0],["link","File","Ruby/classes/File.html#method-c-link","(p1, p2)","<p>Creates a new name for an existing file using a hard link. Will not\noverwrite <em>new_name</em> if it already …\n",null,0],["link_to","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to","(*args, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code>. See the valid options …\n",null,1],["link_to_function","ActionView::Helpers::JavaScriptHelper","Rails/classes/ActionView/Helpers/JavaScriptHelper.html#method-i-link_to_function","(name, function, html_options={})","<p>Returns a link whose <code>onclick</code> handler triggers the passed\nJavaScript.\n<p>The helper receives a name, JavaScript …\n",null,1],["link_to_if","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_if","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> if <code>condition</code> is true, …\n",null,1],["link_to_unless","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless","(condition, name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> unless <code>condition</code> is true, …\n",null,1],["link_to_unless_current","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-link_to_unless_current","(name, options = {}, html_options = {}, &block)","<p>Creates a link tag of the given <code>name</code> using a URL created by\nthe set of <code>options</code> unless the current request …\n",null,1],["links","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-links","(base_url, contents)","",null,1],["list","Encoding","Ruby/classes/Encoding.html#method-c-list","()","<p>Returns the list of loaded encodings.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span>.<span class=\"ruby-identifier\">list</span>\n<span class=\"ruby-comment\">#=&gt; [#&lt;Encoding:ASCII-8BIT&gt;, #&lt;Encoding:UTF-8&gt;,</span>\n  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["list","Signal","Ruby/classes/Signal.html#method-c-list","()","<p>Returns a list of signal names mapped to the corresponding underlying\nsignal numbers.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Signal</span>.<span class=\"ruby-identifier\">list</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["list","Thread","Ruby/classes/Thread.html#method-c-list","()","<p>Returns an array of <code>Thread</code> objects for all threads that are\neither runnable or stopped.\n\n<pre>Thread.new { sleep(200) ...</pre>\n",null,0],["list","ThreadGroup","Ruby/classes/ThreadGroup.html#method-i-list","()","<p>Returns an array of all existing <code>Thread</code> objects that belong to\nthis group.\n\n<pre>ThreadGroup::Default.list  ...</pre>\n",null,0],["listeners_for","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-listeners_for","(name)","",null,1],["listening?","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-listening-3F","(name)","",null,1],["ljust","String","Ruby/classes/String.html#method-i-ljust","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em> left\njustified …\n",null,0],["ljust","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-ljust","(integer, padstr=' ')","<p>Works just like <code>String#ljust</code>, only integer specifies\ncharacters instead of bytes.\n<p>Example:\n\n<pre>&quot;¾ cup&quot;.mb_chars.rjust(8).to_s ...</pre>\n",null,1],["load","Kernel","Ruby/classes/Kernel.html#method-i-load","(p1, p2 = v2)","<p>Loads and executes the Ruby program in the file <em>filename</em>. If the\nfilename does not resolve to an absolute …\n",null,0],["load","Marshal","Ruby/classes/Marshal.html#method-c-load","(p1, p2 = v2)","<p>Returns the result of converting the serialized data in source into a Ruby\nobject (possibly with associated …\n",null,0],["load","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-load","(p1, p2 = v2)","",null,0],["load","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-load","(attributes, remove_root = false)","<p>A method to manually load attributes from a hash. Recursively loads\ncollections of resources.  This method …\n",null,1],["load","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-i-load","()","",null,1],["load_all!","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-load_all-21","()","",null,1],["load_attributes_from_response","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-load_attributes_from_response","(response)","",null,1],["load_console","Rails::Application","Rails/classes/Rails/Application.html#method-i-load_console","(app=self)","<p>Load the application console and invoke the registered hooks. Check\n<code>Rails::Railtie.console</code> for more info. …\n",null,1],["load_console","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-load_console","(app=self)","",null,1],["load_console","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-load_console","(app=self)","",null,1],["load_generators","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-load_generators","(app=self)","",null,1],["load_generators","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-load_generators","(app=self)","",null,1],["load_paths","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-i-load_paths","()","",null,1],["load_seed","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-load_seed","()","<p>Load data from db/seeds.rb file. It can be used in to load engines&#39;\nseeds, e.g.:\n<p>Blog::Engine.load_seed …\n",null,1],["load_session","ActionDispatch::Session::StaleSessionCheck","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-load_session","(env)","",null,1],["load_tasks","Rails::Application","Rails/classes/Rails/Application.html#method-i-load_tasks","(app=self)","<p>Load the application and its railties tasks and invoke the registered\nhooks. Check <code>Rails::Railtie.rake_tasks</code> …\n",null,1],["load_tasks","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-load_tasks","(app=self)","",null,1],["load_tasks","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-load_tasks","(app=self)","",null,1],["loaded?","ActiveRecord::SessionStore::Session","Rails/classes/ActiveRecord/SessionStore/Session.html#method-i-loaded-3F","()","<p>Has the session been loaded yet?\n",null,1],["loaded?","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-loaded-3F","()","",null,1],["local","Time","Ruby/classes/Time.html#method-c-local","(*args)","<p>Same as <code>Time::gm</code>, but interprets the values in the local time\nzone.\n\n<pre>Time.local(2000,&quot;jan&quot;,1,20,15,1)  ...</pre>\n",null,0],["local","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-local","(*args)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from given values. …\n",null,1],["local?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-local-3F","()","<p>True if the request came from localhost, 127.0.0.1.\n",null,1],["local_constant_names","Module","Rails/classes/Module.html#method-i-local_constant_names","()","<p>Returns the names of the constants defined locally rather than the\nconstants themselves. See <code>local_constants</code> …\n",null,1],["local_constants","Module","Rails/classes/Module.html#method-i-local_constants","()","<p>Returns the constants that have been defined locally by this object and not\nin an ancestor. This method …\n",null,1],["local_offset","DateTime","Rails/classes/DateTime.html#method-c-local_offset","()","<p>DateTimes aren&#39;t aware of DST rules, so use a consistent non-DST offset\nwhen creating a DateTime …\n",null,1],["local_time","Time","Rails/classes/Time.html#method-c-local_time","(*args)","<p>Wraps class method <code>time_with_datetime_fallback</code> with\n<code>utc_or_local</code> set to <code>:local</code>.\n",null,1],["local_to_utc","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-local_to_utc","(time, dst=true)","<p>Adjust the given time to the simultaneous time in UTC. Returns a Time.utc()\ninstance.\n",null,1],["local_variables","Kernel","Ruby/classes/Kernel.html#method-i-local_variables","()","<p>Returns the names of the current local variables.\n\n<pre>fred = 1\nfor i in 1..10\n   # ...\nend\nlocal_variables ...</pre>\n",null,0],["locale_charmap","Encoding","Ruby/classes/Encoding.html#method-c-locale_charmap","()","<p>Returns the locale charmap name. It returns nil if no appropriate\ninformation.\n\n<pre>Debian GNU/Linux\n  LANG=C ...</pre>\n",null,0],["localize","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-localize","(*args)","",null,1],["localize","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-localize","(*args)","<p>Delegates to <code>I18n.localize</code> with no additional functionality.\n",null,1],["locals","ActionView::TestCase::Behavior","Rails/classes/ActionView/TestCase/Behavior.html#method-i-locals","()","",null,1],["localtime","Time","Ruby/classes/Time.html#method-i-localtime","(p1 = v1)","<p>Converts <em>time</em> to local time (using the local time zone in effect\nfor this process) modifying the receiver. …\n",null,0],["localtime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-localtime","()","<p>Returns a <code>Time.local()</code> instance of the simultaneous time in\nyour system&#39;s <code>ENV['TZ']</code> zone\n",null,1],["location","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-location","()","",null,1],["location","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-location","()","",null,1],["location=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-location-3D","(url)","",null,1],["location=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-location-3D","(url)","",null,1],["lock","Mutex","Ruby/classes/Mutex.html#method-i-lock","()","<p>Attempts to grab the lock and waits if it isn&#39;t available. Raises\n<code>ThreadError</code> if <code>mutex</code> was locked …\n",null,0],["lock","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-lock","(locks = true)","",null,1],["lock!","ActiveRecord::Locking::Pessimistic","Rails/classes/ActiveRecord/Locking/Pessimistic.html#method-i-lock-21","(lock = true)","<p>Obtain a row lock on this record. Reloads the record to obtain the\nrequested lock. Pass an SQL locking …\n",null,1],["locked?","Mutex","Ruby/classes/Mutex.html#method-i-locked-3F","()","<p>Returns <code>true</code> if this lock is currently held by some thread.\n",null,0],["locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column","()","<p>The version column used for optimistic locking. Defaults to\n<code>lock_version</code>.\n",null,1],["locking_column=","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_column-3D","(value)","",null,1],["locking_enabled?","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-locking_enabled-3F","()","<p>Returns true if the <code>lock_optimistically</code> flag is set to true\n(which it is, by default) and the table includes …\n",null,1],["log","Math","Ruby/classes/Math.html#method-c-log","(p1, p2 = v2)","<p>Returns the natural logarithm of <em>numeric</em>. If additional second\nargument is given, it will be the base …\n",null,0],["log","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-log","(sql, name = \"SQL\", binds = [])","",null,1],["log","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-log","()","",null,1],["log","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-log","(*args)","<p>Define log for backwards compatibility. If just one argument is sent,\ninvoke say, otherwise invoke say_status. …\n",null,1],["log10","Math","Ruby/classes/Math.html#method-c-log10","(p1)","<p>Returns the base 10 logarithm of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log10</span>(<span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 0.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log10</span>(<span class=\"ruby-value\">10</span>)      <span class=\"ruby-comment\">#=&gt; 1.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log10</span>(<span class=\"ruby-value\">10</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">100</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["log2","Math","Ruby/classes/Math.html#method-c-log2","(p1)","<p>Returns the base 2 logarithm of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log2</span>(<span class=\"ruby-value\">1</span>)      <span class=\"ruby-comment\">#=&gt; 0.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log2</span>(<span class=\"ruby-value\">2</span>)      <span class=\"ruby-comment\">#=&gt; 1.0</span>\n<span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">log2</span>(<span class=\"ruby-value\">32768</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["log_level","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-log_level","()","",null,1],["log_path","Rails::Server","Rails/classes/Rails/Server.html#method-i-log_path","()","",null,1],["log_process_action","ActiveRecord::Railties::ControllerRuntime::ClassMethods","Rails/classes/ActiveRecord/Railties/ControllerRuntime/ClassMethods.html#method-i-log_process_action","(payload)","",null,1],["log_subscribers","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-log_subscribers","()","",null,1],["logged","ActiveSupport::LogSubscriber::TestHelper::MockLogger","Rails/classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#method-i-logged","(level)","",null,1],["logger","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActionMailer::LogSubscriber","Rails/classes/ActionMailer/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-logger","()","<p>TODO: Ideally, ActionView should have its own logger so it does not depend\non AC.logger\n",null,1],["logger","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-logger","","<p>Accepts a logger conforming to the interface of Log4r or the default Ruby\n1.8+ Logger class, which is …\n",null,1],["logger","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-logger","","<p>The logger for diagnosing and tracing Active Resource calls.\n",null,1],["logger","ActiveResource::LogSubscriber","Rails/classes/ActiveResource/LogSubscriber.html#method-i-logger","()","",null,1],["logger","ActiveSupport::LogSubscriber","Rails/classes/ActiveSupport/LogSubscriber.html#method-c-logger","()","",null,1],["logger","Rails","Rails/classes/Rails.html#method-c-logger","()","",null,1],["logger=","Rails","Rails/classes/Rails.html#method-c-logger-3D","(logger)","",null,1],["logger?","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html#method-i-logger-3F","()","",null,1],["lookup","Mime::Type","Rails/classes/Mime/Type.html#method-c-lookup","(string)","",null,1],["lookup_ancestors","ActiveModel::Translation","Rails/classes/ActiveModel/Translation.html#method-i-lookup_ancestors","()","<p>When localizing a string, it goes through the lookup returned by this\nmethod, which is used in ActiveModel::Name#human …\n",null,1],["lookup_by_extension","Mime::Type","Rails/classes/Mime/Type.html#method-c-lookup_by_extension","(extension)","",null,1],["lookup_context","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-lookup_context","()","<p>LookupContext is the object responsible to hold all information required to\nlookup templates, i.e. view …\n",null,1],["lookup_store","ActiveSupport::Cache","Rails/classes/ActiveSupport/Cache.html#method-c-lookup_store","(*store_option)","<p>Creates a new CacheStore object according to the given options.\n<p>If no arguments are passed to this method, …\n",null,1],["loop","Kernel","Ruby/classes/Kernel.html#method-i-loop","()","<p>Repeatedly executes the block.\n<p>If no block is given, an enumerator is returned instead.\n\n<pre>loop do\n  print ...</pre>\n",null,0],["ls","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-ls","()","",null,1],["lstat","File","Ruby/classes/File.html#method-i-lstat","()","<p>Same as <code>IO#stat</code>, but does not follow the last symbolic link.\nInstead, reports on the link itself.\n\n<pre>File.symlink(&quot;testfile&quot;, ...</pre>\n",null,0],["lstat","File","Ruby/classes/File.html#method-c-lstat","(p1)","<p>Same as <code>File::stat</code>, but does not follow the last symbolic\nlink. Instead, reports on the link itself. …\n",null,0],["lstrip","String","Ruby/classes/String.html#method-i-lstrip","()","<p>Returns a copy of <em>str</em> with leading whitespace removed. See also\n<code>String#rstrip</code> and <code>String#strip</code>.\n\n<pre>&quot;  hello ...</pre>\n",null,0],["lstrip","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-lstrip","()","<p>Strips entire range of Unicode whitespace from the left of the string.\n",null,1],["lstrip!","String","Ruby/classes/String.html#method-i-lstrip-21","()","<p>Removes leading whitespace from <em>str</em>, returning <code>nil</code> if\nno change was made. See also <code>String#rstrip!</code> and …\n",null,0],["magnitude","Bignum","Ruby/classes/Bignum.html#method-i-magnitude","()","<p>Returns the absolute value of <em>big</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 1234567890987654321</span>\n</pre>\n",null,0],["magnitude","Complex","Ruby/classes/Complex.html#method-i-magnitude","()","<p>Returns the absolute part of its polar form.\n",null,0],["magnitude","Fixnum","Ruby/classes/Fixnum.html#method-i-magnitude","()","<p>Returns the absolute value of <em>fix</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-12345</span>.<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 12345</span>\n<span class=\"ruby-value\">12345</span>.<span class=\"ruby-identifier\">abs</span>    <span class=\"ruby-comment\">#=&gt; 12345</span>\n</pre>\n",null,0],["magnitude","Float","Ruby/classes/Float.html#method-i-magnitude","()","<p>Returns the absolute value of <em>flt</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,0],["magnitude","Numeric","Ruby/classes/Numeric.html#method-i-magnitude","()","<p>Returns the absolute value of <em>num</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">12</span>.<span class=\"ruby-identifier\">abs</span>         <span class=\"ruby-comment\">#=&gt; 12</span>\n(<span class=\"ruby-value\">-34.56</span>).<span class=\"ruby-identifier\">abs</span>   <span class=\"ruby-comment\">#=&gt; 34.56</span>\n<span class=\"ruby-value\">-34.56</span>.<span class=\"ruby-identifier\">abs</span>     <span class=\"ruby-comment\">#=&gt; 34.56</span>\n</pre>\n",null,0],["mail","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-mail","(headers={}, &block)","<p>The main method that creates the message and renders the email templates.\nThere are two ways to call …\n",null,1],["mail_to","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-mail_to","(email_address, name = nil, html_options = {})","<p>Creates a mailto link tag to the specified <code>email_address</code>,\nwhich is also used as the name of the link …\n",null,1],["mailer","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-mailer","()","<p>Access the mailer instance.\n",null,1],["mailer_class","ActionMailer::TestCase::Behavior::ClassMethods","Rails/classes/ActionMailer/TestCase/Behavior/ClassMethods.html#method-i-mailer_class","()","",null,1],["mailer_name","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-mailer_name","()","",null,1],["mailer_name","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-mailer_name","()","",null,1],["main","Thread","Ruby/classes/Thread.html#method-c-main","()","<p>Returns the main thread.\n",null,0],["malloc_allocated_size","GC","Ruby/classes/GC.html#method-c-malloc_allocated_size","()","<p>The allocated size by malloc().\n<p>It returns the allocated size by malloc().\n",null,0],["malloc_allocations","GC","Ruby/classes/GC.html#method-c-malloc_allocations","()","<p>The number of allocated memory object by malloc().\n<p>It returns the number of allocated memory object by …\n",null,0],["many?","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-many-3F","()","",null,1],["many?","Enumerable","Rails/classes/Enumerable.html#method-i-many-3F","()","<p>Returns true if the enumerable has more than 1 element. Functionally\nequivalent to enum.to_a.size &gt; …\n",null,1],["map","Array","Ruby/classes/Array.html#method-i-map","()","<p>Invokes <em>block</em> once for each element of <code>self</code>. Creates\na new array containing the values returned by the …\n",null,0],["map","Enumerable","Ruby/classes/Enumerable.html#method-i-map","()","<p>Returns a new array with the results of running <em>block</em> once for\nevery element in <em>enum</em>.\n<p>If no block is given, …\n",null,0],["map!","Array","Ruby/classes/Array.html#method-i-map-21","()","<p>Invokes the block once for each element of <code>self</code>, replacing the\nelement with the value returned by <em>block</em> …\n",null,0],["mark_for_destruction","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-mark_for_destruction","()","<p>Marks this record to be destroyed as part of the parents save transaction.\nThis does <em>not</em> actually destroy …\n",null,1],["marked_for_destruction?","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-marked_for_destruction-3F","()","<p>Returns whether or not this record will be destroyed as part of the parents\nsave transaction.\n<p>Only useful …\n",null,1],["marshal_dump","Time","Ruby/classes/Time.html#method-i-marshal_dump","()","<p>undocumented\n",null,0],["marshal_dump","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_dump","()","",null,1],["marshal_load","Time","Ruby/classes/Time.html#method-i-marshal_load","(p1)","<p>undocumented\n",null,0],["marshal_load","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-marshal_load","(variables)","",null,1],["mass_assignment_authorizer","ActiveModel::MassAssignmentSecurity","Rails/classes/ActiveModel/MassAssignmentSecurity.html#method-i-mass_assignment_authorizer","(role)","",null,1],["mass_assignment_options","ActiveRecord::AttributeAssignment","Rails/classes/ActiveRecord/AttributeAssignment.html#method-i-mass_assignment_options","()","",null,1],["mass_assignment_role","ActiveRecord::AttributeAssignment","Rails/classes/ActiveRecord/AttributeAssignment.html#method-i-mass_assignment_role","()","",null,1],["mass_assignment_sanitizer=","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-mass_assignment_sanitizer-3D","(value)","",null,1],["match","Regexp","Ruby/classes/Regexp.html#method-i-match","(p1, p2 = v2)","<p>Returns a <code>MatchData</code> object describing the match, or\n<code>nil</code> if there was no match. This is equivalent to …\n",null,0],["match","String","Ruby/classes/String.html#method-i-match","(*args)","<p>Converts <em>pattern</em> to a <code>Regexp</code> (if it isn&#39;t already\none), then invokes its <code>match</code> method on <em>str</em>.  If …\n",null,0],["match","Symbol","Ruby/classes/Symbol.html#method-i-match","(p1)","<p>Returns <code>sym.to_s =~ obj</code>.\n",null,0],["match","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-match","(path, options=nil)","<p>Matches a url pattern to one or more routes. Any symbols in a pattern are\ninterpreted as url query parameters …\n",null,1],["match","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-match","(path, *rest)","",null,1],["match","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Rails/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-i-match","(method_name)","",null,1],["match","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-c-match","(method)","",null,1],["match","ActiveRecord::DynamicScopeMatch","Rails/classes/ActiveRecord/DynamicScopeMatch.html#method-c-match","(method)","",null,1],["match","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-match","(element, first_only = false)","<p>Matches an element against the selector.\n<p>For a simple selector this method returns an array with the element …\n",null,1],["match?","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-match-3F","(path)","",null,1],["mattr_accessor","Module","Rails/classes/Module.html#method-i-mattr_accessor","(*syms)","<p>Extends the module object with module and instance accessors for class\nattributes, just like the native …\n",null,1],["mattr_reader","Module","Rails/classes/Module.html#method-i-mattr_reader","(*syms)","",null,1],["mattr_writer","Module","Rails/classes/Module.html#method-i-mattr_writer","(*syms)","",null,1],["max","Enumerable","Ruby/classes/Enumerable.html#method-i-max","()","<p>Returns the object in <em>enum</em> with the maximum value. The first form\nassumes all objects implement <code>Comparable</code> …\n",null,0],["max","Range","Ruby/classes/Range.html#method-i-max","()","<p>Returns the maximum value in <em>rng</em>. The second uses the block to\ncompare values.  Returns nil if the first …\n",null,0],["max_by","Enumerable","Ruby/classes/Enumerable.html#method-i-max_by","()","<p>Returns the object in <em>enum</em> that gives the maximum value from the\ngiven block.\n<p>If no block is given, an …\n",null,0],["maxgroups","Process","Ruby/classes/Process.html#method-c-maxgroups","()","<p>Returns the maximum number of gids allowed in the supplemental group access\nlist.\n\n<pre>Process.maxgroups   ...</pre>\n",null,0],["maxgroups=","Process","Ruby/classes/Process.html#method-c-maxgroups-3D","(p1)","<p>Sets the maximum number of gids allowed in the supplemental group access\nlist.\n",null,0],["maximum","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-maximum","(column_name, options = {})","<p>Calculates the maximum value on a given column. The value is returned with\nthe same data type of the …\n",null,1],["mb_chars","String","Rails/classes/String.html#method-i-mb_chars","()","<p>Multibyte proxy\n<p><code>mb_chars</code> is a multibyte safe proxy for string methods.\n<p>In Ruby 1.8 and older it creates …\n",null,1],["mday","Time","Ruby/classes/Time.html#method-i-mday","()","<p>Returns the day of the month (1..n) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:03 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">day</span>      <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["measure","ActiveSupport::Testing::Performance::Metrics::CpuTime","Rails/classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::GcRuns","Rails/classes/ActiveSupport/Testing/Performance/Metrics/GcRuns.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::GcTime","Rails/classes/ActiveSupport/Testing/Performance/Metrics/GcTime.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::Memory","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Memory.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::Objects","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Objects.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::ProcessTime","Rails/classes/ActiveSupport/Testing/Performance/Metrics/ProcessTime.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::Time","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Time.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::UserTime","Rails/classes/ActiveSupport/Testing/Performance/Metrics/UserTime.html#method-i-measure","()","",null,1],["measure","ActiveSupport::Testing::Performance::Metrics::WallTime","Rails/classes/ActiveSupport/Testing/Performance/Metrics/WallTime.html#method-i-measure","()","",null,1],["measure_mode","ActiveSupport::Testing::Performance::Metrics::Base","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html#method-i-measure_mode","()","",null,1],["media_type","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-media_type","()","",null,1],["megabyte","Numeric","Rails/classes/Numeric.html#method-i-megabyte","()","",null,1],["megabytes","Numeric","Rails/classes/Numeric.html#method-i-megabytes","()","",null,1],["member","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-member","()","<p>To add a member route, add a member block into the resource block:\n\n<pre>resources :photos do\n  member do\n  ...</pre>\n",null,1],["member?","ENV","Ruby/classes/ENV.html#method-c-member-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>name</code>.\n",null,0],["member?","Enumerable","Ruby/classes/Enumerable.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if any member of <em>enum</em> equals\n<em>obj</em>. Equality is tested using <code>==</code>.\n\n<pre>IO.constants.include? :SEEK_SET ...</pre>\n",null,0],["member?","Hash","Ruby/classes/Hash.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if the given key is present in <em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_key?</span>(<span class=\"ruby-string\">&quot;a&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["member?","Range","Ruby/classes/Range.html#method-i-member-3F","(p1)","<p>Returns <code>true</code> if <em>obj</em> is an element of <em>rng</em>,\n<code>false</code> otherwise.  If beg and end are numeric, comparison is …\n",null,0],["member?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-member-3F","(key)","",null,1],["member?","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-member-3F","(key)","",null,1],["members","Struct","Ruby/classes/Struct.html#method-i-members","()","<p>Returns an array of strings representing the names of the instance\nvariables.\n\n<pre>Customer = Struct.new(:name, ...</pre>\n",null,0],["memoize","ActiveSupport::Memoizable","Rails/classes/ActiveSupport/Memoizable.html#method-i-memoize","(*symbols)","",null,1],["memoize_all","ActiveSupport::Memoizable::InstanceMethods","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-memoize_all","()","",null,1],["memoized_ivar_for","ActiveSupport::Memoizable","Rails/classes/ActiveSupport/Memoizable.html#method-c-memoized_ivar_for","(symbol)","",null,1],["merge","Hash","Ruby/classes/Hash.html#method-i-merge","(p1)","<p>Returns a new hash containing the contents of <em>other_hash</em> and the\ncontents of <em>hsh</em>. If no block is specified, …\n",null,0],["merge","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-merge","(r)","",null,1],["merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(hash)","<p>Merges the instantized and the specified hashes together, giving precedence\nto the values from the second …\n",null,1],["merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge","(hash)","<p>Merges the instantized and the specified hashes together, giving precedence\nto the values from the second …\n",null,1],["merge","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-merge","(other_hash, &block)","",null,1],["merge!","Hash","Ruby/classes/Hash.html#method-i-merge-21","(p1)","<p>Adds the contents of <em>other_hash</em> to <em>hsh</em>.  If no block is\nspecified, entries with duplicate keys are overwritten …\n",null,0],["merge!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge-21","(other_hash)","",null,1],["merge!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-merge-21","(other_hash)","",null,1],["merge!","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-merge-21","(other_hash)","",null,1],["message","Exception","Ruby/classes/Exception.html#method-i-message","()","<p>Returns the result of invoking <code>exception.to_s</code>. Normally this\nreturns the exception&#39;s message or name. …\n",null,0],["message","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-message","()","",null,1],["message","ActionMailer::MailHelper","Rails/classes/ActionMailer/MailHelper.html#method-i-message","()","<p>Access the message instance.\n",null,1],["message","ActiveRecord::StaleObjectError","Rails/classes/ActiveRecord/StaleObjectError.html#method-i-message","()","",null,1],["message","ActiveRecord::UnknownPrimaryKey","Rails/classes/ActiveRecord/UnknownPrimaryKey.html#method-i-message","()","",null,1],["method","Object","Ruby/classes/Object.html#method-i-method","(p1)","<p>Looks up the named method as a receiver in <em>obj</em>, returning a\n<code>Method</code> object (or raising <code>NameError</code>). The …\n",null,0],["method","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-method","()","<p>Returns the original value of the environment&#39;s REQUEST_METHOD, even if\nit was overridden by middleware. …\n",null,1],["method_added","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-c-method_added","(name)","",null,1],["method_defined?","Module","Ruby/classes/Module.html#method-i-method_defined-3F","(p1)","<p>Returns <code>true</code> if the named method is defined by <em>mod</em>\n(or its included modules and, if <em>mod</em> is a class, its …\n",null,0],["method_defined_within?","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-method_defined_within-3F","(name, klass, sup = klass.superclass)","",null,1],["method_for_action","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-method_for_action","(action_name)","",null,1],["method_for_action","ActionController::ImplicitRender","Rails/classes/ActionController/ImplicitRender.html#method-i-method_for_action","(action_name)","",null,1],["method_missing","AbstractController::Collector","Rails/classes/AbstractController/Collector.html#method-i-method_missing","(symbol, &block)","",null,1],["method_missing","ActionDispatch::Assertions::RoutingAssertions","Rails/classes/ActionDispatch/Assertions/RoutingAssertions.html#method-i-method_missing","(selector, *args, &block)","<p>ROUTES TODO: These assertions should really work in an integration context\n",null,1],["method_missing","ActionDispatch::BodyProxy","Rails/classes/ActionDispatch/BodyProxy.html#method-i-method_missing","(*args, &block)","",null,1],["method_missing","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-method_missing","(sym, *args, &block)","<p>Delegate unhandled messages to the current session instance.\n",null,1],["method_missing","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-method_missing","(method, *args, &block)","<p>Allows access to the object attributes, which are held in the\n<code>@attributes</code> hash, as though they were first-class …\n",null,1],["method_missing","ActiveRecord::Delegation","Rails/classes/ActiveRecord/Delegation.html#method-i-method_missing","(method, *args, &block)","",null,1],["method_missing","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-method_missing","(method, *arguments, &block)","",null,1],["method_missing","ActiveSupport::LogSubscriber::TestHelper::MockLogger","Rails/classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#method-i-method_missing","(level, message)","",null,1],["method_missing","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-method_missing","(method, *args, &block)","<p>Forward all undefined methods to the wrapped string.\n",null,1],["method_missing","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-method_missing","(name, *args)","",null,1],["method_missing","ActiveSupport::StringInquirer","Rails/classes/ActiveSupport/StringInquirer.html#method-i-method_missing","(method_name, *arguments)","",null,1],["method_missing","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-method_missing","(method, *args)","",null,1],["method_missing","ActiveSupport::Testing::ProxyTestResult","Rails/classes/ActiveSupport/Testing/ProxyTestResult.html#method-i-method_missing","(name, *args)","",null,1],["method_missing","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-method_missing","(sym, *args, &block)","<p>Send the missing method to <code>time</code> instance, and wrap result in a\nnew TimeWithZone with the existing <code>time_zone</code> …\n",null,1],["method_missing","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-method_missing","(*args, &block)","",null,1],["method_name","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Rails/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-i-method_name","(attr_name)","",null,1],["method_names","Module","Rails/classes/Module.html#method-i-method_names","(*args)","",null,1],["method_symbol","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-method_symbol","()","<p>Returns a symbol form of the #method\n",null,1],["methods","Object","Ruby/classes/Object.html#method-i-methods","(p1)","<p>Returns a list of the names of public and protected methods of\n<em>obj</em>. This will include all the methods …\n",null,0],["middleware","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-middleware","()","<p>Alias for middleware_stack\n",null,1],["middleware","ActiveSupport::Cache::Strategy::LocalCache","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-middleware","()","<p>Middleware class can be inserted as a Rack handler to be local cache for\nthe duration of request.\n",null,1],["middleware","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-middleware","()","<p>Returns the middleware stack for the engine.\n",null,1],["middleware","Rails::Server","Rails/classes/Rails/Server.html#method-i-middleware","()","",null,1],["midnight","Date","Rails/classes/Date.html#method-i-midnight","()","",null,1],["midnight","DateTime","Rails/classes/DateTime.html#method-i-midnight","()","",null,1],["midnight","Time","Rails/classes/Time.html#method-i-midnight","()","",null,1],["migrate","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-c-migrate","(direction)","",null,1],["migrate","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-migrate","(direction)","<p>Execute this migration in the named direction\n",null,1],["migration_template","Rails::Generators::Migration","Rails/classes/Rails/Generators/Migration.html#method-i-migration_template","(source, destination=nil, config={})","<p>Creates a migration template at the given destination. The difference to\nthe default template method …\n",null,1],["migrations_paths","ActiveRecord::Schema","Rails/classes/ActiveRecord/Schema.html#method-i-migrations_paths","()","",null,1],["mime_type","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-mime_type","()","",null,1],["mime_type","ActiveResource::Formats::JsonFormat","Rails/classes/ActiveResource/Formats/JsonFormat.html#method-i-mime_type","()","",null,1],["mime_type","ActiveResource::Formats::XmlFormat","Rails/classes/ActiveResource/Formats/XmlFormat.html#method-i-mime_type","()","",null,1],["min","Enumerable","Ruby/classes/Enumerable.html#method-i-min","()","<p>Returns the object in <em>enum</em> with the minimum value. The first form\nassumes all objects implement <code>Comparable</code> …\n",null,0],["min","Range","Ruby/classes/Range.html#method-i-min","()","<p>Returns the minimum value in <em>rng</em>. The second uses the block to\ncompare values.  Returns nil if the first …\n",null,0],["min","Time","Ruby/classes/Time.html#method-i-min","()","<p>Returns the minute of the hour (0..59) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:25:51 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">min</span>   <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["min_by","Enumerable","Ruby/classes/Enumerable.html#method-i-min_by","()","<p>Returns the object in <em>enum</em> that gives the minimum value from the\ngiven block.\n<p>If no block is given, an …\n",null,0],["minimum","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-minimum","(column_name, options = {})","<p>Calculates the minimum value on a given column. The value is returned with\nthe same data type of the …\n",null,1],["minmax","Enumerable","Ruby/classes/Enumerable.html#method-i-minmax","()","<p>Returns two elements array which contains the minimum and the maximum value\nin the enumerable.  The first …\n",null,0],["minmax_by","Enumerable","Ruby/classes/Enumerable.html#method-i-minmax_by","()","<p>Returns two elements array array containing the objects in <em>enum</em>\nthat gives the minimum and maximum values …\n",null,0],["minus_with_coercion","Time","Rails/classes/Time.html#method-i-minus_with_coercion","(other)","<p>Time#- can also be used to determine the number of seconds between two Time\ninstances. We&#39;re layering …\n",null,1],["minus_without_coercion","Time","Rails/classes/Time.html#method-i-minus_without_coercion","(other)","",null,1],["minus_without_duration","Time","Rails/classes/Time.html#method-i-minus_without_duration","(other)","",null,1],["minute","Numeric","Rails/classes/Numeric.html#method-i-minute","()","",null,1],["minutes","Numeric","Rails/classes/Numeric.html#method-i-minutes","()","",null,1],["missing_name","NameError","Rails/classes/NameError.html#method-i-missing_name","()","<p>Extract the name of the missing constant from the exception message.\n",null,1],["missing_name?","NameError","Rails/classes/NameError.html#method-i-missing_name-3F","(name)","<p>Was this exception raised because the given name was missing?\n",null,1],["mkdir","Dir","Ruby/classes/Dir.html#method-c-mkdir","(p1, p2 = v2)","<p>Makes a new directory named by <em>string</em>, with permissions specified\nby the optional parameter <em>anInteger</em> …\n",null,0],["mktime","Time","Ruby/classes/Time.html#method-c-mktime","(*args)","<p>Same as <code>Time::gm</code>, but interprets the values in the local time\nzone.\n\n<pre>Time.local(2000,&quot;jan&quot;,1,20,15,1)  ...</pre>\n",null,0],["mode","File::Stat","Ruby/classes/File/Stat.html#method-i-mode","()","<p>Returns an integer representing the permission bits of <em>stat</em>. The\nmeaning of the bits is platform dependent; …\n",null,0],["model_name","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-i-model_name","()","<p>Returns an ActiveModel::Name object for module. It can be used to retrieve\nall kinds of naming-related …\n",null,1],["module_eval","Module","Ruby/classes/Module.html#method-i-module_eval","(*args)","<p>Evaluates the string or block in the context of <em>mod</em>. This can be\nused to add methods to a class. <code>module_eval</code> …\n",null,0],["module_exec","Module","Ruby/classes/Module.html#method-i-module_exec","(*args)","<p>Evaluates the given block in the context of the class/module. The method\ndefined in the block will belong …\n",null,0],["module_namespacing","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-module_namespacing","(&block)","<p>Wrap block with namespace of current application if namespace exists and is\nnot skipped\n",null,1],["modules_for_helpers","AbstractController::Helpers::ClassMethods","Rails/classes/AbstractController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Returns a list of modules, normalized from the acceptable kinds of helpers\nwith the following behavior: …\n",null,1],["modules_for_helpers","ActionController::Helpers::ClassMethods","Rails/classes/ActionController/Helpers/ClassMethods.html#method-i-modules_for_helpers","(args)","<p>Overwrite modules_for_helpers to accept :all as argument, which loads all\nhelpers in helpers_path.\n<p>Parameters …\n",null,1],["modulo","Bignum","Ruby/classes/Bignum.html#method-i-modulo","(p1)","<p>Returns big modulo other. See Numeric.divmod for more information.\n",null,0],["modulo","Fixnum","Ruby/classes/Fixnum.html#method-i-modulo","(p1)","<p>Returns <code>fix</code> modulo <code>other</code>. See\n<code>numeric.divmod</code> for more information.\n",null,0],["modulo","Float","Ruby/classes/Float.html#method-i-modulo","(p1)","<p>Return the modulo after division of <code>flt</code> by <code>other</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137</span>)      <span class=\"ruby-comment\">#=&gt; 104.21</span>\n<span class=\"ruby-value\">6543.21</span>.<span class=\"ruby-identifier\">modulo</span>(<span class=\"ruby-value\">137.24</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["modulo","Numeric","Ruby/classes/Numeric.html#method-i-modulo","(p1)","\n<pre>x.modulo(y) means x-y*(x/y).floor</pre>\n<p>Equivalent to <em>num.divmod(aNumeric)</em>.\n<p>See <code>Numeric#divmod</code>.\n",null,0],["mon","Time","Ruby/classes/Time.html#method-i-mon","()","<p>Returns the month of the year (1..12) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:30 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">mon</span>    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["monday","Date","Rails/classes/Date.html#method-i-monday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\nstart of this week. Week is assumed to start on a Monday …\n",null,1],["monday","Time","Rails/classes/Time.html#method-i-monday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\nstart of this week. Week is assumed to start on a Monday …\n",null,1],["monday?","Time","Ruby/classes/Time.html#method-i-monday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Monday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2003</span>, <span class=\"ruby-value\">8</span>, <span class=\"ruby-value\">4</span>)       <span class=\"ruby-comment\">#=&gt; 2003-08-04 00:00:00 -0500 ...</span>\n</pre>\n",null,0],["month","Time","Ruby/classes/Time.html#method-i-month","()","<p>Returns the month of the year (1..12) for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:30 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">mon</span>    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["month","Integer","Rails/classes/Integer.html#method-i-month","()","",null,1],["months","Integer","Rails/classes/Integer.html#method-i-months","()","<p>Enables the use of time calculations and declarations, like 45.minutes +\n2.hours + 4.years.\n<p>These methods …\n",null,1],["months_ago","Date","Rails/classes/Date.html#method-i-months_ago","(months)","<p>Returns a new Date/DateTime representing the time a number of specified\nmonths ago.\n",null,1],["months_ago","Time","Rails/classes/Time.html#method-i-months_ago","(months)","<p>Returns a new Time representing the time a number of specified months ago\n",null,1],["months_since","Date","Rails/classes/Date.html#method-i-months_since","(months)","<p>Returns a new Date/DateTime representing the time a number of specified\nmonths in the future.\n",null,1],["months_since","Time","Rails/classes/Time.html#method-i-months_since","(months)","<p>Returns a new Time representing the time a number of specified months in\nthe future\n",null,1],["mount","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-mount","(app, options = nil)","<p>Mount a Rack-based application to be used within the application.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">mount</span> <span class=\"ruby-constant\">SomeRackApp</span>, :<span class=\"ruby-identifier\">at</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;some_route&quot;</span>\n</pre>\n",null,1],["mountable?","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-mountable-3F","()","",null,1],["ms","Benchmark","Rails/classes/Benchmark.html#method-c-ms","()","",null,1],["mtime","File","Ruby/classes/File.html#method-c-mtime","(p1)","<p>Returns the modification time for the named file as a Time object.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">mtime</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)   <span class=\"ruby-comment\">#=&gt; Tue Apr ...</span>\n</pre>\n",null,0],["mtime","File","Ruby/classes/File.html#method-i-mtime","()","<p>Returns the modification time for <em>file</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">mtime</span>   <span class=\"ruby-comment\">#=&gt; Wed Apr 09 08:53:14 CDT 2003</span>\n</pre>\n",null,0],["mtime","File::Stat","Ruby/classes/File/Stat.html#method-i-mtime","()","<p>Returns the modification time of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">mtime</span>   <span class=\"ruby-comment\">#=&gt; Wed Apr 09 08:53:14 CDT 2003</span>\n</pre>\n",null,0],["multipart=","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-multipart-3D","(multipart)","",null,1],["multiple_of?","Integer","Rails/classes/Integer.html#method-i-multiple_of-3F","(number)","<p>Check whether the integer is evenly divisible by the argument.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">0</span>.<span class=\"ruby-identifier\">multiple_of?</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\">#=&gt; true</span>\n<span class=\"ruby-value\">6</span>.<span class=\"ruby-identifier\">multiple_of?</span>(<span class=\"ruby-value\">5</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["mute","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-mute","()","<p>Silence the logger within a block.\n",null,1],["mute","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-mute","(&block)","",null,1],["mysql2_connection","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-mysql2_connection","(config)","<p>Establishes a connection to the database that&#39;s used by all Active\nRecord objects.\n",null,1],["mysql_socket","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-mysql_socket","()","",null,1],["name","Encoding","Ruby/classes/Encoding.html#method-i-name","()","<p>Returns the name of the encoding.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">name</span>      <span class=\"ruby-comment\">#=&gt; &quot;UTF-8&quot;</span>\n</pre>\n",null,0],["name","Method","Ruby/classes/Method.html#method-i-name","()","<p>Returns the name of the method.\n",null,0],["name","Module","Ruby/classes/Module.html#method-i-name","()","<p>Returns the name of the module <em>mod</em>.  Returns nil for anonymous\nmodules.\n",null,0],["name","NameError","Ruby/classes/NameError.html#method-i-name","()","<p>Return the name associated with this NameError exception.\n",null,0],["name","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-name","()","<p>Returns the name of the method.\n",null,0],["name","ActiveSupport::Testing::Performance::Metrics::Base","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html#method-i-name","()","",null,1],["name","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-c-name","()","",null,1],["name","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-name","()","",null,1],["name_list","Encoding","Ruby/classes/Encoding.html#method-c-name_list","()","<p>Returns the list of available encoding names.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span>.<span class=\"ruby-identifier\">name_list</span>\n<span class=\"ruby-comment\">#=&gt; [&quot;US-ASCII&quot;, &quot;ASCII-8BIT&quot;, &quot;UTF-8&quot;, ...</span>\n</pre>\n",null,0],["named_captures","Regexp","Ruby/classes/Regexp.html#method-i-named_captures","()","<p>Returns a hash representing information about named captures of\n<em>rxp</em>.\n<p>A key of the hash is a name of the …\n",null,0],["names","Encoding","Ruby/classes/Encoding.html#method-i-names","()","<p>Returns the list of name and aliases of the encoding.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">WINDOWS_31J</span>.<span class=\"ruby-identifier\">names</span>  <span class=\"ruby-comment\">#=&gt; [&quot;Windows-31J&quot;, ...</span>\n</pre>\n",null,0],["names","MatchData","Ruby/classes/MatchData.html#method-i-names","()","<p>Returns a list of names of captures as an array of strings. It is same as\nmtch.regexp.names.\n\n<pre>/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/.match(&quot;hoge&quot;).names ...</pre>\n",null,0],["names","Regexp","Ruby/classes/Regexp.html#method-i-names","()","<p>Returns a list of names of captures as an array of strings.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/(?&lt;foo&gt;.)(?&lt;bar&gt;.)(?&lt;baz&gt;.)/</span>.<span class=\"ruby-identifier\">names</span>\n<span class=\"ruby-comment\">#=&gt; [&quot;foo&quot;, ...</span>\n</pre>\n",null,0],["names","QualifiedConstUtils","Rails/classes/QualifiedConstUtils.html#method-c-names","(path)","",null,1],["namespace","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-namespace","(path, options = {})","<p>See ActionDispatch::Routing::Mapper::Scoping#namespace\n",null,1],["namespace","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-namespace","(path, options = {})","<p>Scopes routes to a specific namespace. For example:\n\n<pre>namespace :admin do\n  resources :posts\nend</pre>\n<p>This generates …\n",null,1],["namespace","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-namespace","(name=nil)","<p>Convenience method to get the namespace from the class name. It&#39;s the\nsame as Thor default except …\n",null,1],["namespace","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespace","()","",null,1],["namespaced?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced-3F","()","",null,1],["namespaced_class_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced_class_path","()","",null,1],["namespaced_file_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-namespaced_file_path","()","",null,1],["nan?","Float","Ruby/classes/Float.html#method-i-nan-3F","()","<p>Returns <code>true</code> if <em>flt</em> is an invalid IEEE floating point\nnumber.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-value\">-1.0</span>      <span class=\"ruby-comment\">#=&gt; -1.0</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">nan?</span>        <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["native_database_types","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-native_database_types","()","",null,1],["native_database_types","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-native_database_types","()","<p>Returns a Hash of mappings from the abstract data types to the native\ndatabase types. See TableDefinition#column …\n",null,1],["navigation_behavior","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-navigation_behavior","(error)","<p>This is the common behavior for formats associated with browsing, like\n:html, :iphone and so forth.\n",null,1],["navigation_location","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-navigation_location","()","",null,1],["negotiate_mime","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-negotiate_mime","(order)","<p>Receives an array of mimes and return the first user sent mime that matches\nthe order array.\n",null,1],["nested","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-nested","()","",null,1],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,1],["nested_under_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-nested_under_indifferent_access","()","",null,1],["nested_under_indifferent_access","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-nested_under_indifferent_access","()","",null,1],["nested_under_indifferent_access","Hash","Rails/classes/Hash.html#method-i-nested_under_indifferent_access","()","<p>Called when object is nested under an object that receives\n#with_indifferent_access. This method will …\n",null,1],["nesting","Module","Ruby/classes/Module.html#method-c-nesting","()","<p>Returns the list of <code>Modules</code> nested at the point of call.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M1</span>\n  <span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M2</span>\n    <span class=\"ruby-identifier\">$a</span> = <span class=\"ruby-constant\">Module</span>.<span class=\"ruby-identifier\">nesting</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["new","Array","Ruby/classes/Array.html#method-c-new","(p1 = v1, p2 = v2)","<p>Returns a new array.\n<p>In the first form, if no arguments are sent, the new array will be empty.\nWhen a …\n",null,0],["new","BasicObject","Ruby/classes/BasicObject.html#method-c-new","()","<p>Not documented\n",null,0],["new","Class","Ruby/classes/Class.html#method-i-new","(*args)","<p>Calls <code>allocate</code> to create a new object of <em>class</em>&#39;s\nclass, then invokes that object&#39;s <code>initialize</code> …\n",null,0],["new","Class","Ruby/classes/Class.html#method-c-new","(p1 = v1)","<p>Creates a new anonymous (unnamed) class with the given superclass (or\n<code>Object</code> if no parameter is given). …\n",null,0],["new","Dir","Ruby/classes/Dir.html#method-c-new","(p1, p2 = {})","<p>Returns a new directory object for the named directory.\n",null,0],["new","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-c-new","(*args)","<p>possible options elements:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hash</span> <span class=\"ruby-identifier\">form</span><span class=\"ruby-operator\">:</span>\n  :<span class=\"ruby-identifier\">invalid</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>            <span class=\"ruby-comment\"># raise error on invalid byte sequence ...</span>\n</pre>\n",null,0],["new","Enumerator","Ruby/classes/Enumerator.html#method-c-new","(*args)","<p>Creates a new Enumerator object, which can be used as an Enumerable.\n<p>In the first form, iteration is defined …\n",null,0],["new","Exception","Ruby/classes/Exception.html#method-c-new","(p1 = v1)","<p>Construct a new Exception object, optionally passing in a message.\n",null,0],["new","File","Ruby/classes/File.html#method-c-new","(*args)","<p>Opens the file named by <code>filename</code> according to\n<code>mode</code> (default is “r”) and returns a new <code>File</code> …\n",null,0],["new","File::Stat","Ruby/classes/File/Stat.html#method-c-new","(p1)","<p>Create a File::Stat object for the given file name (raising an exception if\nthe file doesn&#39;t exist). …\n",null,0],["new","Hash","Ruby/classes/Hash.html#method-c-new","(p1 = v1)","<p>Returns a new, empty hash. If this hash is subsequently accessed by a key\nthat doesn&#39;t correspond …\n",null,0],["new","IO","Ruby/classes/IO.html#method-c-new","(p1, p2 = v2, p3 = {})","<p>Returns a new IO object (a stream) for the given IO object or integer file\ndescriptor and mode string. …\n",null,0],["new","Module","Ruby/classes/Module.html#method-c-new","()","<p>Creates a new anonymous module. If a block is given, it is passed the\nmodule object, and the block is …\n",null,0],["new","Mutex","Ruby/classes/Mutex.html#method-c-new","()","<p>Creates a new Mutex\n",null,0],["new","NameError","Ruby/classes/NameError.html#method-c-new","(*args)","<p>Construct a new NameError exception. If given the <em>name</em> parameter\nmay subsequently be examined using the …\n",null,0],["new","NoMethodError","Ruby/classes/NoMethodError.html#method-c-new","(*args)","<p>Construct a NoMethodError exception for a method of the given name called\nwith the given arguments.  …\n",null,0],["new","Proc","Ruby/classes/Proc.html#method-c-new","(*args)","<p>Creates a new <code>Proc</code> object, bound to the current context.\n<code>Proc::new</code> may be called without a block only …\n",null,0],["new","Random","Ruby/classes/Random.html#method-c-new","(p1 = v1)","<p>Creates new Mersenne Twister based pseudorandom number generator with seed.\nWhen the argument seed is …\n",null,0],["new","Range","Ruby/classes/Range.html#method-c-new","(p1, p2, p3 = v3)","<p>Constructs a range using the given <em>start</em> and <em>end</em>. If the\nthird parameter is omitted or is <code>false</code>, the …\n",null,0],["new","Regexp","Ruby/classes/Regexp.html#method-c-new","(*args)","<p>Constructs a new regular expression from <em>pattern</em>, which can be\neither a <code>String</code> or a <code>Regexp</code> (in which …\n",null,0],["new","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-c-new","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = v5)","",null,0],["new","SignalException","Ruby/classes/SignalException.html#method-c-new","(*args)","<p>Construct a new SignalException object.  <code>sig_name</code> should be a\nknown signal name.\n",null,0],["new","String","Ruby/classes/String.html#method-c-new","(p1 = v1)","<p>Returns a new string object containing a copy of <em>str</em>.\n",null,0],["new","Struct","Ruby/classes/Struct.html#method-c-new","(p1, *args)","<p>Creates a new class, named by <em>aString</em>, containing accessor methods\nfor the given symbols. If the name …\n",null,0],["new","SystemCallError","Ruby/classes/SystemCallError.html#method-c-new","(p1, p2 = v2)","<p>If <em>errno</em> corresponds to a known system error code, constructs the\nappropriate <code>Errno</code> class for that error, …\n",null,0],["new","SystemExit","Ruby/classes/SystemExit.html#method-c-new","(*args)","<p>Create a new <code>SystemExit</code> exception with the given status.\n",null,0],["new","Time","Ruby/classes/Time.html#method-c-new","(*args)","<p>Returns a <code>Time</code> object.\n<p>It is initialized to the current system time if no argument.\n<strong>Note:</strong> The object created …\n",null,0],["new","AbstractController::DoubleRenderError","Rails/classes/AbstractController/DoubleRenderError.html#method-c-new","(message = nil)","",null,1],["new","AbstractController::Layouts","Rails/classes/AbstractController/Layouts.html#method-c-new","(*)","",null,1],["new","ActionController::Caching::Actions::ActionCachePath","Rails/classes/ActionController/Caching/Actions/ActionCachePath.html#method-c-new","(controller, options = {}, infer_extension = true)","<p>If <code>infer_extension</code> is true, the cache path extension is looked\nup from the request&#39;s path and format. …\n",null,1],["new","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-new","()","",null,1],["new","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-c-new","(app)","",null,1],["new","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-c-new","(app)","",null,1],["new","ActionController::Middleware::ActionMiddleware","Rails/classes/ActionController/Middleware/ActionMiddleware.html#method-c-new","(controller, app)","",null,1],["new","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-c-new","(controller, resources, options={})","",null,1],["new","ActionDispatch::BestStandardsSupport","Rails/classes/ActionDispatch/BestStandardsSupport.html#method-c-new","(app, type = true)","",null,1],["new","ActionDispatch::BodyProxy","Rails/classes/ActionDispatch/BodyProxy.html#method-c-new","(body, &block)","",null,1],["new","ActionDispatch::Callbacks","Rails/classes/ActionDispatch/Callbacks.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Cookies","Rails/classes/ActionDispatch/Cookies.html#method-c-new","(app)","",null,1],["new","ActionDispatch::DebugExceptions","Rails/classes/ActionDispatch/DebugExceptions.html#method-c-new","(app)","",null,1],["new","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-c-new","(env, exception)","",null,1],["new","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-c-new","(root, cache_control)","",null,1],["new","ActionDispatch::Flash","Rails/classes/ActionDispatch/Flash.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Head","Rails/classes/ActionDispatch/Head.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Http::Headers","Rails/classes/ActionDispatch/Http/Headers.html#method-c-new","(*args)","",null,1],["new","ActionDispatch::Http::ParameterFilter","Rails/classes/ActionDispatch/Http/ParameterFilter.html#method-c-new","(filters)","",null,1],["new","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-c-new","(hash)","",null,1],["new","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-c-new","(app)","<p>Create and initialize a new Session instance.\n",null,1],["new","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-c-new","(*args)","",null,1],["new","ActionDispatch::MiddlewareStack::Middleware","Rails/classes/ActionDispatch/MiddlewareStack/Middleware.html#method-c-new","(klass_or_name, *args, &block)","",null,1],["new","ActionDispatch::ParamsParser","Rails/classes/ActionDispatch/ParamsParser.html#method-c-new","(app, parsers = {})","",null,1],["new","ActionDispatch::PublicExceptions","Rails/classes/ActionDispatch/PublicExceptions.html#method-c-new","(public_path)","",null,1],["new","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-c-new","(store = RAILS_CACHE)","",null,1],["new","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-c-new","(store = RAILS_CACHE)","<p>TODO: Finally deal with the RAILS_CACHE global\n",null,1],["new","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-new","(app, condition=nil)","",null,1],["new","ActionDispatch::RemoteIp","Rails/classes/ActionDispatch/RemoteIp.html#method-c-new","(app, check_ip_spoofing = true, custom_proxies = nil)","",null,1],["new","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-c-new","(env, middleware)","",null,1],["new","ActionDispatch::RequestId","Rails/classes/ActionDispatch/RequestId.html#method-c-new","(app)","",null,1],["new","ActionDispatch::Rescue","Rails/classes/ActionDispatch/Rescue.html#method-c-new","(app, rescuers = {}, &block)","",null,1],["new","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-c-new","(status = 200, header = {}, body = [])","",null,1],["new","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-new","()","",null,1],["new","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-c-new","(*)","",null,1],["new","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-c-new","(app, options = {})","<p>Create a new store. The cache to use can be passed in the\n<code>:cache</code> option. If it is not specified,\n<code>Rails.cache</code> …\n",null,1],["new","ActionDispatch::Session::Compatibility","Rails/classes/ActionDispatch/Session/Compatibility.html#method-c-new","(app, options = {})","",null,1],["new","ActionDispatch::Session::MemCacheStore","Rails/classes/ActionDispatch/Session/MemCacheStore.html#method-c-new","(app, options = {})","",null,1],["new","ActionDispatch::ShowExceptions","Rails/classes/ActionDispatch/ShowExceptions.html#method-c-new","(app, exceptions_app = nil)","",null,1],["new","ActionDispatch::Static","Rails/classes/ActionDispatch/Static.html#method-c-new","(app, path, cache_control=nil)","",null,1],["new","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-c-new","(env = {})","",null,1],["new","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-c-new","(env = {})","",null,1],["new","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-new","(method_name=nil, *args)","<p>Instantiate a new mailer object. If <code>method_name</code> is not\n<code>nil</code>, the mailer will be initialized according …\n",null,1],["new","ActionMailer::Collector","Rails/classes/ActionMailer/Collector.html#method-c-new","(context, &block)","",null,1],["new","ActionMailer::NonInferrableMailerError","Rails/classes/ActionMailer/NonInferrableMailerError.html#method-c-new","(name)","",null,1],["new","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-c-new","(path, pattern=nil)","",null,1],["new","ActionView::FixtureResolver","Rails/classes/ActionView/FixtureResolver.html#method-c-new","(hash = {}, pattern=nil)","",null,1],["new","ActionView::Helpers::AssetTagHelper::AssetIncludeTag","Rails/classes/ActionView/Helpers/AssetTagHelper/AssetIncludeTag.html#method-c-new","(config, asset_paths)","",null,1],["new","ActionView::Helpers::AtomFeedHelper::AtomBuilder","Rails/classes/ActionView/Helpers/AtomFeedHelper/AtomBuilder.html#method-c-new","(xml)","",null,1],["new","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","Rails/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#method-c-new","(xml, view, feed_options = {})","",null,1],["new","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-c-new","(object_name, object, template, options, proc)","",null,1],["new","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-c-new","(object_name, method_name, template_object, object = nil)","",null,1],["new","ActionView::Helpers::NumberHelper::InvalidNumberError","Rails/classes/ActionView/Helpers/NumberHelper/InvalidNumberError.html#method-c-new","(number)","",null,1],["new","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-c-new","(*)","",null,1],["new","ActionView::Renderer","Rails/classes/ActionView/Renderer.html#method-c-new","(lookup_context)","",null,1],["new","ActionView::Resolver","Rails/classes/ActionView/Resolver.html#method-c-new","()","",null,1],["new","ActionView::Resolver::Path","Rails/classes/ActionView/Resolver/Path.html#method-c-new","(name, prefix, partial, virtual)","",null,1],["new","ActionView::Template","Rails/classes/ActionView/Template.html#method-c-new","(source, identifier, handler, details)","",null,1],["new","ActionView::TestCase::Behavior::ClassMethods","Rails/classes/ActionView/TestCase/Behavior/ClassMethods.html#method-i-new","(*)","",null,1],["new","ActionView::TestCase::TestController","Rails/classes/ActionView/TestCase/TestController.html#method-c-new","()","",null,1],["new","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Rails/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-c-new","(options = {})","",null,1],["new","ActiveModel::BlockValidator","Rails/classes/ActiveModel/BlockValidator.html#method-c-new","(options, &block)","",null,1],["new","ActiveModel::EachValidator","Rails/classes/ActiveModel/EachValidator.html#method-c-new","(options)","<p>Returns a new validator instance. All options will be available via the\n<code>options</code> reader, however the  …\n",null,1],["new","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-c-new","(base)","<p>Pass in the instance of the object that is using the errors object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">initialize</span>\n    <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["new","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html#method-c-new","(target)","",null,1],["new","ActiveModel::MassAssignmentSecurity::Sanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-c-new","(target=nil)","",null,1],["new","ActiveModel::Name","Rails/classes/ActiveModel/Name.html#method-c-new","(klass, namespace = nil, name = nil)","",null,1],["new","ActiveModel::Observer","Rails/classes/ActiveModel/Observer.html#method-c-new","()","<p>Start observing the declared classes and their subclasses.\n",null,1],["new","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-c-new","(model_class, *args)","",null,1],["new","ActiveModel::Validations::AcceptanceValidator","Rails/classes/ActiveModel/Validations/AcceptanceValidator.html#method-c-new","(options)","",null,1],["new","ActiveModel::Validations::LengthValidator","Rails/classes/ActiveModel/Validations/LengthValidator.html#method-c-new","(options)","",null,1],["new","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-c-new","(options)","<p>Accepts options that will be made available through the\n<code>options</code> reader.\n",null,1],["new","ActiveRecord::AttributeAssignmentError","Rails/classes/ActiveRecord/AttributeAssignmentError.html#method-c-new","(message, exception, attribute)","",null,1],["new","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-new","(attributes = nil, options = {})","<p>New objects can be instantiated as either empty (pass no construction\nparameter) or pre-set with attributes …\n",null,1],["new","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","<p>FIXME: Make the first parameter more similar for the two adapters\n",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-c-new","(pools = {})","",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionManagement","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionManagement.html#method-c-new","(app)","",null,1],["new","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-c-new","(spec)","<p>Creates a new ConnectionPool object. <code>spec</code> is a\nConnectionSpecification object which describes database …\n",null,1],["new","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-c-new","(connection, logger, connection_options, config)","",null,1],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-c-new","(connection, logger, connection_options, config)","",null,1],["new","ActiveRecord::ConnectionAdapters::MysqlAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter/StatementPool.html#method-c-new","(connection, max = 1000)","",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-c-new","(connection, logger, connection_parameters, config)","<p>Initializes and connects a PostgreSQL adapter.\n",null,1],["new","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-c-new","(connection, max)","",null,1],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-c-new","(connection, logger, config)","",null,1],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/StatementPool.html#method-c-new","(connection, max)","",null,1],["new","ActiveRecord::ConnectionAdapters::SQLiteAdapter::Version","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter/Version.html#method-c-new","(version_string)","",null,1],["new","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-c-new","(conn)","",null,1],["new","ActiveRecord::ConnectionAdapters::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/StatementPool.html#method-c-new","(connection, max = 1000)","",null,1],["new","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-c-new","(table_name, base)","",null,1],["new","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-c-new","(base)","",null,1],["new","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-c-new","(finder, instantiator, bang, attribute_names)","",null,1],["new","ActiveRecord::DynamicScopeMatch","Rails/classes/ActiveRecord/DynamicScopeMatch.html#method-c-new","(scope, attribute_names)","",null,1],["new","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-new","(connection, table_name, class_name, fixture_path)","",null,1],["new","ActiveRecord::Fixtures::File","Rails/classes/ActiveRecord/Fixtures/File.html#method-c-new","(file)","",null,1],["new","ActiveRecord::IdentityMap::Middleware","Rails/classes/ActiveRecord/IdentityMap/Middleware.html#method-c-new","(app)","",null,1],["new","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-new","()","",null,1],["new","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-c-new","()","",null,1],["new","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-c-new","(delegate = nil)","",null,1],["new","ActiveRecord::MigrationProxy","Rails/classes/ActiveRecord/MigrationProxy.html#method-c-new","(name, version, filename, scope)","",null,1],["new","ActiveRecord::MultiparameterAssignmentErrors","Rails/classes/ActiveRecord/MultiparameterAssignmentErrors.html#method-c-new","(errors)","",null,1],["new","ActiveRecord::QueryCache","Rails/classes/ActiveRecord/QueryCache.html#method-c-new","(app)","",null,1],["new","ActiveRecord::RecordInvalid","Rails/classes/ActiveRecord/RecordInvalid.html#method-c-new","(record)","",null,1],["new","ActiveRecord::Reflection::MacroReflection","Rails/classes/ActiveRecord/Reflection/MacroReflection.html#method-c-new","(macro, name, options, active_record)","",null,1],["new","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-c-new","(klass, table)","",null,1],["new","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-new","(*args, &block)","",null,1],["new","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-c-new","(columns, rows)","",null,1],["new","ActiveRecord::SessionStore::Session","Rails/classes/ActiveRecord/SessionStore/Session.html#method-c-new","(attributes = nil, options = {})","",null,1],["new","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-new","(attributes)","<p>Look for normal and marshaled data, self.find_by_session_id&#39;s way of\ntelling us to postpone unmarshaling …\n",null,1],["new","ActiveRecord::StaleObjectError","Rails/classes/ActiveRecord/StaleObjectError.html#method-c-new","(record, attempted_action)","",null,1],["new","ActiveRecord::UnknownPrimaryKey","Rails/classes/ActiveRecord/UnknownPrimaryKey.html#method-c-new","(model)","",null,1],["new","ActiveRecord::Validations::UniquenessValidator","Rails/classes/ActiveRecord/Validations/UniquenessValidator.html#method-c-new","(options)","",null,1],["new","ActiveRecord::WrappedDatabaseException","Rails/classes/ActiveRecord/WrappedDatabaseException.html#method-c-new","(message, original_exception)","",null,1],["new","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-new","(attributes = {}, persisted = false)","<p>Constructor method for new resources; the optional <code>attributes</code>\nparameter takes a hash of attributes for …\n",null,1],["new","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-c-new","(site, format = ActiveResource::Formats::JsonFormat)","<p>The <code>site</code> parameter is required and will set the\n<code>site</code> attribute to the URI for the remote resource service. …\n",null,1],["new","ActiveResource::Request","Rails/classes/ActiveResource/Request.html#method-c-new","(method, path, body = nil, headers = {})","",null,1],["new","ActiveResource::Response","Rails/classes/ActiveResource/Response.html#method-c-new","(body, message = 200, headers = {})","",null,1],["new","ActiveResource::SSLError","Rails/classes/ActiveResource/SSLError.html#method-c-new","(message)","",null,1],["new","ActiveResource::TimeoutError","Rails/classes/ActiveResource/TimeoutError.html#method-c-new","(message)","",null,1],["new","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-c-new","()","",null,1],["new","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-c-new","(log, level = DEBUG)","",null,1],["new","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-c-new","(value, options = {})","<p>Create a new cache entry for the specified value. Options supported are\n<code>:compress</code>, <code>:compress_threshold</code> …\n",null,1],["new","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-c-new","(cache_path, options = nil)","",null,1],["new","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-c-new","(*addresses)","<p>Creates a new MemCacheStore object, with the given memcached server\naddresses. Each address is either …\n",null,1],["new","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-c-new","(options = nil)","",null,1],["new","ActiveSupport::Cache::NullStore","Rails/classes/ActiveSupport/Cache/NullStore.html#method-c-new","(options = nil)","",null,1],["new","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-c-new","(options = nil)","<p>Create a new cache. The options will be passed to any write method calls\nexcept for :namespace which …\n",null,1],["new","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-c-new","()","",null,1],["new","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-c-new","()","",null,1],["new","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-c-new","()","<p>@watching is a stack of lists of constants being watched. For instance, if\nparent.rb is autoloaded, the …\n",null,1],["new","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-c-new","(files, dirs={}, &block)","<p>It accepts two parameters on initialization. The first is an array of files\nand the second is an optional …\n",null,1],["new","ActiveSupport::FileWatcher","Rails/classes/ActiveSupport/FileWatcher.html#method-c-new","()","",null,1],["new","ActiveSupport::FileWatcher::Backend","Rails/classes/ActiveSupport/FileWatcher/Backend.html#method-c-new","(path, watcher)","",null,1],["new","ActiveSupport::Gzip::Stream","Rails/classes/ActiveSupport/Gzip/Stream.html#method-c-new","(*)","",null,1],["new","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = {})","",null,1],["new","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new","(constructor = {})","",null,1],["new","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-c-new","()","",null,1],["new","ActiveSupport::InheritableOptions","Rails/classes/ActiveSupport/InheritableOptions.html#method-c-new","(parent = nil)","",null,1],["new","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-c-new","(options = nil)","",null,1],["new","ActiveSupport::LogSubscriber::TestHelper::MockLogger","Rails/classes/ActiveSupport/LogSubscriber/TestHelper/MockLogger.html#method-c-new","(level = DEBUG)","",null,1],["new","ActiveSupport::MessageEncryptor","Rails/classes/ActiveSupport/MessageEncryptor.html#method-c-new","(secret, options = {})","",null,1],["new","ActiveSupport::MessageVerifier","Rails/classes/ActiveSupport/MessageVerifier.html#method-c-new","(secret, options = {})","",null,1],["new","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-c-new","(string)","<p>Creates a new Chars instance by wrapping <em>string</em>.\n",null,1],["new","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-c-new","()","",null,1],["new","ActiveSupport::Multibyte::Unicode::UnicodeDatabase","Rails/classes/ActiveSupport/Multibyte/Unicode/UnicodeDatabase.html#method-c-new","()","",null,1],["new","ActiveSupport::Notifications::Event","Rails/classes/ActiveSupport/Notifications/Event.html#method-c-new","(name, start, ending, transaction_id, payload)","",null,1],["new","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-c-new","()","",null,1],["new","ActiveSupport::Notifications::Instrumenter","Rails/classes/ActiveSupport/Notifications/Instrumenter.html#method-c-new","(notifier)","",null,1],["new","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-c-new","(*args, &block)","<p>In MRI the Hash class is core and written in C. In particular, methods are\nprogrammed with explicit  …\n",null,1],["new","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-c-new","(*)","",null,1],["new","ActiveSupport::SafeBuffer::SafeConcatError","Rails/classes/ActiveSupport/SafeBuffer/SafeConcatError.html#method-c-new","()","",null,1],["new","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-c-new","(logger)","",null,1],["new","ActiveSupport::Testing::Performance::Benchmarker","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html#method-c-new","(*args)","",null,1],["new","ActiveSupport::Testing::Performance::Metrics::Base","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html#method-c-new","()","",null,1],["new","ActiveSupport::Testing::Performance::Metrics::CpuTime","Rails/classes/ActiveSupport/Testing/Performance/Metrics/CpuTime.html#method-c-new","(*args)","",null,1],["new","ActiveSupport::Testing::Performance::Performer","Rails/classes/ActiveSupport/Testing/Performance/Performer.html#method-c-new","(harness, metric)","",null,1],["new","ActiveSupport::Testing::Performance::Profiler","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html#method-c-new","(*args)","",null,1],["new","ActiveSupport::Testing::ProxyTestResult","Rails/classes/ActiveSupport/Testing/ProxyTestResult.html#method-c-new","()","",null,1],["new","ActiveSupport::Testing::RemoteError","Rails/classes/ActiveSupport/Testing/RemoteError.html#method-c-new","(exception)","",null,1],["new","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-c-new","(utc_time, time_zone, local_time = nil, period = nil)","",null,1],["new","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-new","(name, utc_offset = nil, tzinfo = nil)","<p>Create a new TimeZone object with the given name and offset. The offset is\nthe number of seconds that …\n",null,1],["new","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-new","(name)","<p>Return a TimeZone instance with the given name, or <code>nil</code> if no\nsuch TimeZone instance exists. (This exists …\n",null,1],["new","ArJdbcMySQL::Error","Rails/classes/ArJdbcMySQL/Error.html#method-c-new","(msg)","",null,1],["new","HTML::Selector","Rails/classes/HTML/Selector.html#method-c-new","(selector, *values)","<p>Creates a new selector from a CSS 2 selector expression.\n<p>The first argument is the selector expression. …\n",null,1],["new","Mime::Type","Rails/classes/Mime/Type.html#method-c-new","(string, symbol = nil, synonyms = [])","",null,1],["new","Plugin","Rails/classes/Plugin.html#method-c-new","(uri, name = nil)","",null,1],["new","Rails::ActionMethods","Rails/classes/Rails/ActionMethods.html#method-c-new","(generator)","",null,1],["new","Rails::Application","Rails/classes/Rails/Application.html#method-c-new","()","",null,1],["new","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-c-new","(*)","",null,1],["new","Rails::Application::RoutesReloader","Rails/classes/Rails/Application/RoutesReloader.html#method-c-new","()","",null,1],["new","Rails::BacktraceCleaner","Rails/classes/Rails/BacktraceCleaner.html#method-c-new","()","",null,1],["new","Rails::Commands::Info","Rails/classes/Rails/Commands/Info.html#method-c-new","(base_command)","",null,1],["new","Rails::Commands::Install","Rails/classes/Rails/Commands/Install.html#method-c-new","(base_command)","",null,1],["new","Rails::Commands::Plugin","Rails/classes/Rails/Commands/Plugin.html#method-c-new","()","",null,1],["new","Rails::Commands::Remove","Rails/classes/Rails/Commands/Remove.html#method-c-new","(base_command)","",null,1],["new","Rails::Console","Rails/classes/Rails/Console.html#method-c-new","(app)","",null,1],["new","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-c-new","(app)","",null,1],["new","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-c-new","(root=nil)","",null,1],["new","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-c-new","(config)","<p>TODO Write tests for this behavior extracted from Application\n",null,1],["new","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-c-new","(name)","",null,1],["new","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-c-new","(*args)","",null,1],["new","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-c-new","(*args)","",null,1],["new","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-c-new","(name, type=nil, index_type=false, attr_options={})","",null,1],["new","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-c-new","(*args)","",null,1],["new","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-c-new","(name, context, options, &block)","",null,1],["new","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-c-new","(root, current, *paths)","",null,1],["new","Rails::Paths::Root","Rails/classes/Rails/Paths/Root.html#method-c-new","(path)","",null,1],["new","Rails::Plugin","Rails/classes/Rails/Plugin.html#method-c-new","(root)","",null,1],["new","Rails::Rack::Debugger","Rails/classes/Rails/Rack/Debugger.html#method-c-new","(app)","",null,1],["new","Rails::Rack::LogTailer","Rails/classes/Rails/Rack/LogTailer.html#method-c-new","(app, log = nil)","",null,1],["new","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-c-new","(app, taggers = nil)","",null,1],["new","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-c-new","()","",null,1],["new","Rails::Server","Rails/classes/Rails/Server.html#method-c-new","(*)","",null,1],["new","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-c-new","(dir)","",null,1],["new","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-c-new","(urls_to_fetch, level = 1, cwd = \".\")","",null,1],["new","SourceAnnotationExtractor","Rails/classes/SourceAnnotationExtractor.html#method-c-new","(tag)","",null,1],["new","Sprockets::Bootstrap","Rails/classes/Sprockets/Bootstrap.html#method-c-new","(app)","",null,1],["new","Sprockets::StaticCompiler","Rails/classes/Sprockets/StaticCompiler.html#method-c-new","(env, target, paths, options = {})","",null,1],["new?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-new-3F","()","<p>Returns <code>true</code> if this object hasn&#39;t yet been saved,\notherwise, returns <code>false</code>.\n<p>Examples\n\n<pre>not_new = Computer.create(:brand ...</pre>\n",null,1],["new_constants","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-new_constants","()","<p>return a list of new constants found since the last call to\nwatch_namespaces\n",null,1],["new_element_path","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-new_element_path","(prefix_options = {})","<p>Gets the new element path for REST resources.\n<p>Options\n<p><code>prefix_options</code> - A hash to add a prefix to the request …\n",null,1],["new_element_path","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-new_element_path","()","",null,1],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new_from_hash_copying_default","(hash)","",null,1],["new_from_hash_copying_default","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-c-new_from_hash_copying_default","(hash)","",null,1],["new_record?","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-new_record-3F","()","<p>Returns true if this object hasn&#39;t been saved yet – that is, a record\nfor the object doesn&#39;t …\n",null,1],["new_record?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-new_record-3F","()","",null,1],["new_seed","Random","Ruby/classes/Random.html#method-c-new_seed","()","<p>Returns arbitrary value for seed.\n",null,0],["new_session","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-new_session","()","<p>create a new session. If a block is given, the new session will be yielded\nto the block before being …\n",null,1],["next","Enumerator","Ruby/classes/Enumerator.html#method-i-next","()","<p>Returns the next object in the enumerator, and move the internal position\nforward.  When the position …\n",null,0],["next","Integer","Ruby/classes/Integer.html#method-i-next","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">next</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">next</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,0],["next","String","Ruby/classes/String.html#method-i-next","()","<p>Returns the successor to <em>str</em>. The successor is calculated by\nincrementing characters starting from the …\n",null,0],["next","Symbol","Ruby/classes/Symbol.html#method-i-next","()","<p>Same as <code>sym.to_s.succ.intern</code>.\n",null,0],["next!","String","Ruby/classes/String.html#method-i-next-21","()","<p>Equivalent to <code>String#succ</code>, but modifies the receiver in place.\n",null,0],["next_element","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-next_element","(element, name = nil)","<p>Return the next element after this one. Skips sibling text nodes.\n<p>With the <code>name</code> argument, returns the …\n",null,1],["next_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::StatementPool","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/StatementPool.html#method-i-next_key","()","",null,1],["next_migration_number","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-next_migration_number","(number)","",null,1],["next_month","Date","Rails/classes/Date.html#method-i-next_month","()","<p>Shorthand for months_since(1)\n",null,1],["next_month","Time","Rails/classes/Time.html#method-i-next_month","()","<p>Short-hand for months_since(1)\n",null,1],["next_selector","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-next_selector","(statement, values)","<p>Called to create a dependent selector (sibling, descendant, etc). Passes\nthe remainder of the statement …\n",null,1],["next_values","Enumerator","Ruby/classes/Enumerator.html#method-i-next_values","()","<p>Returns the next object as an array in the enumerator, and move the\ninternal position forward.  When …\n",null,0],["next_week","Date","Rails/classes/Date.html#method-i-next_week","(day = :monday)","<p>Returns a new Date/DateTime representing the start of the given day in next\nweek (default is :monday). …\n",null,1],["next_week","Time","Rails/classes/Time.html#method-i-next_week","(day = :monday)","<p>Returns a new Time representing the start of the given day in next week\n(default is :monday).\n",null,1],["next_year","Date","Rails/classes/Date.html#method-i-next_year","()","<p>Shorthand for years_since(1)\n",null,1],["next_year","Time","Rails/classes/Time.html#method-i-next_year","()","<p>Short-hand for years_since(1)\n",null,1],["nil?","NilClass","Ruby/classes/NilClass.html#method-i-nil-3F","()","<p>call_seq:\n\n<pre>nil.nil?               -&gt; true</pre>\n<p>Only the object <em>nil</em> responds <code>true</code> to\n<code>nil?</code>.\n",null,0],["nil?","Object","Ruby/classes/Object.html#method-i-nil-3F","()","<p>call_seq:\n\n<pre>nil.nil?               -&gt; true\n&lt;anything_else&gt;.nil?   -&gt; false</pre>\n<p>Only the object <em>nil</em> responds  …\n",null,0],["nlink","File::Stat","Ruby/classes/File/Stat.html#method-i-nlink","()","<p>Returns the number of hard links to <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">nlink</span>             <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">link</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["no_color!","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-no_color-21","()","<p>Remove the color from output.\n",null,1],["nonce","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-nonce","(secret_key, time = Time.now)","<p>Uses an MD5 digest based on time to generate a value to be used only once.\n<p>A server-specified data string …\n",null,1],["none?","Enumerable","Ruby/classes/Enumerable.html#method-i-none-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block never …\n",null,0],["nonzero?","Numeric","Ruby/classes/Numeric.html#method-i-nonzero-3F","()","<p>Returns <code>self</code> if <em>num</em> is not zero, <code>nil</code>\notherwise. This behavior is useful when chaining comparisons:\n\n<pre>a = ...</pre>\n",null,0],["normalize","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-normalize","(form = nil)","<p>Returns the KC normalization of the string by default. NFKC is considered\nthe best normalization form …\n",null,1],["normalize","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-normalize","(string, form=nil)","<p>Returns the KC normalization of the string by default. NFKC is considered\nthe best normalization form …\n",null,1],["normalize_boundary_map","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-normalize_boundary_map","()","",null,1],["normalize_name","ActionDispatch::Routing::Mapper","Rails/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_name","(name)","",null,1],["normalize_path","ActionDispatch::Routing::Mapper","Rails/classes/ActionDispatch/Routing/Mapper.html#method-c-normalize_path","(path)","<p>Invokes Rack::Mount::Utils.normalize path and ensure that (:locale) becomes\n(/:locale) instead of /(:locale). …\n",null,1],["not_modified?","ActionDispatch::Http::Cache::Request","Rails/classes/ActionDispatch/Http/Cache/Request.html#method-i-not_modified-3F","(modified_at)","",null,1],["notice","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice","()","<p>Convenience accessor for flash\n",null,1],["notice=","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-notice-3D","(message)","<p>Convenience accessor for flash=\n",null,1],["notify_observers","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-notify_observers","(*arg)","<p>Notify list of observers of a change.\n",null,1],["now","Time","Ruby/classes/Time.html#method-c-now","()","<p>Synonym for <code>Time.new</code>. Returns a <code>Time</code> object\ninitialized to the current system time.\n",null,0],["now","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-now","()","<p>Sets a flash that will not be available to the next action, only to the\ncurrent.\n\n<pre>flash.now[:message] = ...</pre>\n",null,1],["now","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-now","()","<p>Returns an ActiveSupport::TimeWithZone instance representing the current\ntime in the time zone represented …\n",null,1],["now_is_loaded?","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-now_is_loaded-3F","()","",null,1],["nsec","Time","Ruby/classes/Time.html#method-i-nsec","()","<p>Returns just the number of nanoseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-17 15:18:03 +0900</span>\n<span class=\"ruby-string\">&quot;%10.9f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["nth_child","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-nth_child","(a, b, of_type, reverse)","<p>Returns a lambda that can match an element against the nth-child pseudo\nclass, given the following arguments: …\n",null,1],["number_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-number_field","(object_name, method, options = {})","<p>Returns an input tag of type “number”.\n<p>Options\n<p>Accepts same options as number_field_tag\n",null,1],["number_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-number_field_tag","(name, value = nil, options = {})","<p>Creates a number field.\n<p>Options\n<p><code>:min</code> - The minimum acceptable value.\n",null,1],["number_to_currency","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_currency","(number, options = {})","<p>Formats a <code>number</code> into a currency string (e.g., $13.65). You\ncan customize the format in the <code>options</code> hash. …\n",null,1],["number_to_human","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human","(number, options = {})","<p>Pretty prints (formats and approximates) a number in a way it is more\nreadable by humans (eg.: 1200000000 …\n",null,1],["number_to_human_size","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_human_size","(number, options = {})","<p>Formats the bytes in <code>number</code> into a more understandable\nrepresentation (e.g., giving it 1500 yields 1.5 …\n",null,1],["number_to_percentage","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_percentage","(number, options = {})","<p>Formats a <code>number</code> as a percentage string (e.g., 65%). You can\ncustomize the format in the <code>options</code> hash. …\n",null,1],["number_to_phone","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_to_phone","(number, options = {})","<p>Formats a <code>number</code> into a US phone number (e.g., (555)\n123-9876). You can customize the format in the  …\n",null,1],["number_with_delimiter","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_delimiter","(number, options = {})","<p>Formats a <code>number</code> with grouped thousands using\n<code>delimiter</code> (e.g., 12,324). You can customize the format …\n",null,1],["number_with_precision","ActionView::Helpers::NumberHelper","Rails/classes/ActionView/Helpers/NumberHelper.html#method-i-number_with_precision","(number, options = {})","<p>Formats a <code>number</code> with the specified level of\n<code>:precision</code> (e.g., 112.32 has a precision of 2 if\n<code>:significant</code> …\n",null,1],["numerator","Complex","Ruby/classes/Complex.html#method-i-numerator","()","<p>Returns the numerator.\n<p>For example:\n\n<pre>    1   2       3+4i  &lt;-  numerator\n    - + -i  -&gt;  ----\n    2   3 ...</pre>\n",null,0],["numerator","Float","Ruby/classes/Float.html#method-i-numerator","()","<p>Returns the numerator.  The result is machine dependent.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">n</span> = <span class=\"ruby-value\">0.3</span>.<span class=\"ruby-identifier\">numerator</span>    <span class=\"ruby-comment\">#=&gt; 5404319552844595 ...</span>\n</pre>\n",null,0],["numerator","Integer","Ruby/classes/Integer.html#method-i-numerator","()","<p>Returns self.\n",null,0],["numerator","Numeric","Ruby/classes/Numeric.html#method-i-numerator","()","<p>Returns the numerator.\n",null,0],["numerator","Rational","Ruby/classes/Rational.html#method-i-numerator","()","<p>Returns the numerator.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">numerator</span>        <span class=\"ruby-comment\">#=&gt; 7</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">7</span>, <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">numerator</span>     <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["object","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-object","()","",null,1],["object_id","Object","Ruby/classes/Object.html#method-i-object_id","()","<p>Returns an integer identifier for <em>obj</em>. The same number will be\nreturned on all calls to <code>id</code> for a given …\n",null,0],["observe","ActiveModel::Observer","Rails/classes/ActiveModel/Observer.html#method-c-observe","(*models)","<p>Attaches the observer to the supplied model classes.\n",null,1],["observed_class","ActiveModel::Observer","Rails/classes/ActiveModel/Observer.html#method-c-observed_class","()","<p>The class observed by default is inferred from the observer&#39;s class\nname:\n\n<pre>assert_equal Person, PersonObserver.observed_class</pre>\n",null,1],["observed_classes","ActiveModel::Observer","Rails/classes/ActiveModel/Observer.html#method-c-observed_classes","()","<p>Returns an array of Classes to observe.\n<p>You can override this instead of using the <code>observe</code> helper.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">class</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["observed_classes","ActiveRecord::Observer","Rails/classes/ActiveRecord/Observer.html#method-i-observed_classes","()","",null,1],["observer_class_for","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-observer_class_for","(observer)","",null,1],["observer_instances","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-observer_instances","()","<p>Gets the current observer instances.\n",null,1],["observers","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-observers","()","<p>Gets an array of observers observing this model. The array also provides\n<code>enable</code> and <code>disable</code> methods that …\n",null,1],["observers=","ActiveModel::Observing::ClassMethods","Rails/classes/ActiveModel/Observing/ClassMethods.html#method-i-observers-3D","(*values)","<p>Active Model Observers Activation\n<p>Activates the observers assigned. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">ORM</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Observing</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["oct","String","Ruby/classes/String.html#method-i-oct","()","<p>Treats leading characters of <em>str</em> as a string of octal digits (with\nan optional sign) and returns the …\n",null,0],["odd?","Bignum","Ruby/classes/Bignum.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>big</em> is an odd number.\n",null,0],["odd?","Fixnum","Ruby/classes/Fixnum.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>fix</em> is an odd number.\n",null,0],["odd?","Integer","Ruby/classes/Integer.html#method-i-odd-3F","()","<p>Returns <code>true</code> if <em>int</em> is an odd number.\n",null,0],["odd?","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-odd-3F","()","",null,1],["offset","MatchData","Ruby/classes/MatchData.html#method-i-offset","(p1)","<p>Returns a two-element array containing the beginning and ending offsets of\nthe <em>n</em>th match. <em>n</em> can be a …\n",null,0],["offset","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-offset","(value)","",null,1],["on_cdata_block","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_cdata_block","(string)","",null,1],["on_characters","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_characters","(string)","",null,1],["on_end_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_document","()","",null,1],["on_end_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_end_element","(name)","",null,1],["on_load","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-on_load","(name, options = {}, &block)","",null,1],["on_load_all","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-on_load_all","(&hook)","",null,1],["on_start_document","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_document","()","",null,1],["on_start_element","ActiveSupport::XmlMini_LibXMLSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX/HashBuilder.html#method-i-on_start_element","(name, attrs = {})","",null,1],["one?","Enumerable","Ruby/classes/Enumerable.html#method-i-one-3F","()","<p>Passes each element of the collection to the given block. The method\nreturns <code>true</code> if the block returns …\n",null,0],["only","ActiveRecord::SpawnMethods","Rails/classes/ActiveRecord/SpawnMethods.html#method-i-only","(*onlies)","<p>Removes any condition from the query other than the one(s) specified in\n<code>onlies</code>.\n<p>Example:\n\n<pre>Post.order(&#39;id ...</pre>\n",null,1],["only_child","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-only_child","(of_type)","<p>Creates a only child lambda. Pass <code>of-type</code> to only look at\nelements of its type.\n",null,1],["opaque","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-opaque","(secret_key)","<p>Opaque based on random generation - but changing each request?\n",null,1],["open","Dir","Ruby/classes/Dir.html#method-c-open","(*args)","<p>With no block, <code>open</code> is a synonym for <code>Dir::new</code>. If\na block is present, it is passed <em>aDir</em> as a parameter. …\n",null,0],["open","File","Ruby/classes/File.html#method-c-open","(*args)","<p>With no associated block, <code>File.open</code> is a synonym for File.new.\nIf the optional code block is given, it …\n",null,0],["open","IO","Ruby/classes/IO.html#method-c-open","(*args)","<p>With no associated block, <code>IO.open</code> is a synonym for IO.new. If\nthe optional code block is given, it will …\n",null,0],["open","Kernel","Ruby/classes/Kernel.html#method-i-open","(*args)","<p>Creates an <code>IO</code> object connected to the given stream, file, or\nsubprocess.\n<p>If <em>path</em> does not start with a …\n",null,0],["open","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-open","(key)","",null,1],["open","ActiveRecord::Fixtures::File","Rails/classes/ActiveRecord/Fixtures/File.html#method-c-open","(file)","<p>Open a fixture file named <code>file</code>.  When called with a block, the\nblock is called with the filehandle and …\n",null,1],["open_log","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-open_log","(log, mode)","",null,1],["open_session","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-open_session","(app = nil)","<p>Open a new session instance. If a block is given, the new session is\nyielded to the block before being …\n",null,1],["opt_parser","Rails::Server","Rails/classes/Rails/Server.html#method-i-opt_parser","()","",null,1],["option_groups_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-option_groups_from_collection_for_select","(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = nil)","<p>Returns a string of <code>&lt;option&gt;</code> tags, like\n<code>options_from_collection_for_select</code>, but groups them by …\n",null,1],["optional_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-optional_port","()","<p>Returns a number port suffix like 8080 if the port number of this request\nis not the default HTTP port …\n",null,1],["options","Regexp","Ruby/classes/Regexp.html#method-i-options","()","<p>Returns the set of bits corresponding to the options used when creating\nthis Regexp (see <code>Regexp::new</code> …\n",null,0],["options","Object","Rails/classes/Object.html#method-i-options","()","",null,1],["options","Rails::Commands::Info","Rails/classes/Rails/Commands/Info.html#method-i-options","()","",null,1],["options","Rails::Commands::Install","Rails/classes/Rails/Commands/Install.html#method-i-options","()","",null,1],["options","Rails::Commands::Plugin","Rails/classes/Rails/Commands/Plugin.html#method-i-options","()","",null,1],["options","Rails::Commands::Remove","Rails/classes/Rails/Commands/Remove.html#method-i-options","()","",null,1],["options_for","ActiveSupport::JSON::Encoding::Encoder","Rails/classes/ActiveSupport/JSON/Encoding/Encoder.html#method-i-options_for","(value)","",null,1],["options_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_for_select","(container, selected = nil)","<p>Accepts a container (hash, array, enumerable, your type) and returns a\nstring of option tags. Given a …\n",null,1],["options_from_collection_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-options_from_collection_for_select","(collection, value_method, text_method, selected = nil)","<p>Returns a string of option tags that have been compiled by iterating over\nthe <code>collection</code> and assigning …\n",null,1],["options_include_default?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-options_include_default-3F","(options)","",null,1],["ord","Integer","Ruby/classes/Integer.html#method-i-ord","()","<p>Returns the int itself.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">a</span>.<span class=\"ruby-identifier\">ord</span>    <span class=\"ruby-comment\">#=&gt; 97</span>\n</pre>\n<p>This method is intended for compatibility to character constant …\n",null,0],["ord","String","Ruby/classes/String.html#method-i-ord","()","<p>Return the <code>Integer</code> ordinal of a one-character string.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;a&quot;</span>.<span class=\"ruby-identifier\">ord</span>         <span class=\"ruby-comment\">#=&gt; 97</span>\n</pre>\n",null,0],["ord","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-ord","()","<p>Returns the codepoint of the first character in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;こんにちは&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">ord</span> <span class=\"ruby-comment\"># =&gt; 12371</span>\n</pre>\n",null,1],["ord","String","Rails/classes/String.html#method-i-ord","()","<p>Returns the codepoint of the first character of the string, assuming a\nsingle-byte character encoding: …\n",null,1],["order","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-order","(*args)","",null,1],["ordered_railties","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-ordered_railties","()","",null,1],["ordinalize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-ordinalize","(number)","<p>Turns a number into an ordinal string used to denote the position in an\nordered sequence such as 1st, …\n",null,1],["ordinalize","Integer","Rails/classes/Integer.html#method-i-ordinalize","()","<p>Ordinalize turns a number into an ordinal string used to denote the\nposition in an ordered sequence such …\n",null,1],["orig_delete","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-c-orig_delete","(custom_method_name, options = {})","",null,1],["original_concat","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-original_concat","(value)","",null,1],["original_fullpath","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-original_fullpath","()","",null,1],["original_name","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-original_name","()","",null,1],["original_url","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-original_url","()","",null,1],["orm_class","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-orm_class","()","<p>Loads the ORM::Generators::ActiveModel class. This class is responsible to\ntell scaffold entities how …\n",null,1],["orm_instance","Rails::Generators::ResourceHelpers","Rails/classes/Rails/Generators/ResourceHelpers.html#method-i-orm_instance","(name=singular_table_name)","<p>Initialize ORM::Generators::ActiveModel to access instance methods.\n",null,1],["output_filename","ActiveSupport::Testing::Performance::Benchmarker","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html#method-i-output_filename","()","",null,1],["output_filename","ActiveSupport::Testing::Performance::Performer","Rails/classes/ActiveSupport/Testing/Performance/Performer.html#method-i-output_filename","()","",null,1],["output_filename","ActiveSupport::Testing::Performance::Profiler","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html#method-i-output_filename","(printer_class)","",null,1],["outside_transaction?","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-outside_transaction-3F","()","<p>Checks whether there is currently no transaction active. This is done by\nquerying the database driver, …\n",null,1],["outside_transaction?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-outside_transaction-3F","()","",null,1],["overlaps?","Range","Rails/classes/Range.html#method-i-overlaps-3F","(other)","<p>Compare two ranges and see if they overlap each other\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">overlaps?</span>(<span class=\"ruby-value\">4</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">6</span>) <span class=\"ruby-comment\"># =&gt; true</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">5</span>).<span class=\"ruby-identifier\">overlaps?</span>(<span class=\"ruby-value\">7</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">9</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["owned?","File","Ruby/classes/File.html#method-c-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used\nid of the calling process is the owner of …\n",null,0],["owned?","File::Stat","Ruby/classes/File/Stat.html#method-i-owned-3F","()","<p>Returns <code>true</code> if the effective user id of the process is the\nsame as the owner of <em>stat</em>.\n\n<pre>File.stat(&quot;testfile&quot;).owned? ...</pre>\n",null,0],["owned?","FileTest","Ruby/classes/FileTest.html#method-i-owned-3F","(p1)","<p>Returns <code>true</code> if the named file exists and the effective used\nid of the calling process is the owner of …\n",null,0],["owner","Method","Ruby/classes/Method.html#method-i-owner","()","<p>Returns the class or module that defines the method.\n",null,0],["owner","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-owner","()","<p>Returns the class or module that defines the method.\n",null,0],["p","Kernel","Ruby/classes/Kernel.html#method-i-p","(*args)","<p>For each object, directly writes <em>obj</em>.<code>inspect</code> followed\nby a newline to the program&#39;s standard output. …\n",null,0],["pack","Array","Ruby/classes/Array.html#method-i-pack","(p1)","<p>Packs the contents of <em>arr</em> into a binary sequence according to the\ndirectives in <em>aTemplateString</em> (see …\n",null,0],["param_key","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-param_key","(record_or_class)","<p>Returns string to use for params names. It differs for namespaced models\nregarding whether it&#39;s inside …\n",null,1],["parameter_filter","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter","()","",null,1],["parameter_filter_for","ActionDispatch::Http::FilterParameters","Rails/classes/ActionDispatch/Http/FilterParameters.html#method-i-parameter_filter_for","(filters)","",null,1],["parameterize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-parameterize","(string, sep = '-')","<p>Replaces special characters in a string so that it may be used as part of a\n&#39;pretty&#39; URL.\n<p>Examples …\n",null,1],["parameterize","String","Rails/classes/String.html#method-i-parameterize","(sep = '-')","<p>Replaces special characters in a string so that it may be used as part of a\n&#39;pretty&#39; URL.\n<p>Examples …\n",null,1],["parameters","Method","Ruby/classes/Method.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n",null,0],["parameters","Proc","Ruby/classes/Proc.html#method-i-parameters","()","<p>Returns the parameter information of this proc.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">prc</span> = <span class=\"ruby-identifier\">lambda</span>{<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span>, <span class=\"ruby-identifier\">y</span>=<span class=\"ruby-value\">42</span>, *<span class=\"ruby-identifier\">other</span><span class=\"ruby-operator\">|</span>}\n<span class=\"ruby-identifier\">prc</span>.<span class=\"ruby-identifier\">parameters</span>  <span class=\"ruby-comment\">#=&gt; [[:req, ...</span>\n</pre>\n",null,0],["parameters","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-parameters","()","<p>Returns the parameter information of this method.\n",null,0],["parameters","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-parameters","()","<p>Returns both GET and POST parameters in a single hash.\n",null,1],["paramify_values","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-paramify_values","(hash_or_array_or_value)","",null,1],["params","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-params","()","",null,1],["params","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-params","()","",null,1],["params=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-params-3D","(val)","",null,1],["parent","Module","Rails/classes/Module.html#method-i-parent","()","<p>Returns the module which contains this one according to its name.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">M</span>\n  <span class=\"ruby-keyword\">module</span> <span class=\"ruby-constant\">N</span>\n  <span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-keyword\">end</span>\n<span class=\"ruby-constant\">X</span> = <span class=\"ruby-constant\">M</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">N</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["parent_class_name","ActiveRecord::Generators::ModelGenerator","Rails/classes/ActiveRecord/Generators/ModelGenerator.html#method-i-parent_class_name","()","",null,1],["parent_name","Module","Rails/classes/Module.html#method-i-parent_name","()","<p>Returns the name of the module containing this one.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">M</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">N</span>.<span class=\"ruby-identifier\">parent_name</span> <span class=\"ruby-comment\"># =&gt; &quot;M&quot;</span>\n</pre>\n",null,1],["parent_of?","ActiveSupport::Notifications::Event","Rails/classes/ActiveSupport/Notifications/Event.html#method-i-parent_of-3F","(event)","",null,1],["parent_prefixes","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-parent_prefixes","()","",null,1],["parents","Module","Rails/classes/Module.html#method-i-parents","()","<p>Returns all the parents of this module according to its name, ordered from\nnested outwards. The receiver …\n",null,1],["parse","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-parse","()","",null,1],["parse","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-parse","(str, now=now)","<p>Method for creating new ActiveSupport::TimeWithZone instance in time zone\nof <code>self</code> from parsed string. …\n",null,1],["parse","ActiveSupport::XmlMini_LibXMLSAX","Rails/classes/ActiveSupport/XmlMini_LibXMLSAX.html#method-i-parse","(data)","",null,1],["parse","ActiveSupport::XmlMini_NokogiriSAX","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX.html#method-i-parse","(data)","",null,1],["parse","Mime::Type","Rails/classes/Mime/Type.html#method-c-parse","(accept_header)","",null,1],["parse","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-c-parse","(column_definition)","",null,1],["parse!","Rails::Commands::Info","Rails/classes/Rails/Commands/Info.html#method-i-parse-21","(args)","",null,1],["parse!","Rails::Commands::Install","Rails/classes/Rails/Commands/Install.html#method-i-parse-21","(args)","",null,1],["parse!","Rails::Commands::Plugin","Rails/classes/Rails/Commands/Plugin.html#method-i-parse-21","(args=ARGV)","",null,1],["parse!","Rails::Commands::Plugin","Rails/classes/Rails/Commands/Plugin.html#method-c-parse-21","(args=ARGV)","",null,1],["parse!","Rails::Commands::Remove","Rails/classes/Rails/Commands/Remove.html#method-i-parse-21","(args)","",null,1],["parse!","Rails::Server::Options","Rails/classes/Rails/Server/Options.html#method-i-parse-21","(args)","",null,1],["parse_codepoints","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-parse_codepoints","(line)","",null,1],["parse_composition_exclusion","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-parse_composition_exclusion","(line)","",null,1],["parse_cp1252","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-parse_cp1252","(line)","",null,1],["parse_data_with_trailing_star","Mime::Type","Rails/classes/Mime/Type.html#method-c-parse_data_with_trailing_star","(input)","<p>input: &#39;text&#39; returned value:  [Mime::JSON, Mime::XML, Mime::ICS,\nMime::HTML, Mime::CSS, Mime::CSV …\n",null,1],["parse_error","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-parse_error","()","",null,1],["parse_grapheme_break_property","ActiveSupport::Multibyte::Unicode::DatabaseGenerator","Rails/classes/ActiveSupport/Multibyte/Unicode/DatabaseGenerator.html#method-i-parse_grapheme_break_property","(line)","",null,1],["parse_query","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-parse_query","(qs)","",null,1],["parse_raw_value_as_a_number","ActiveModel::Validations::NumericalityValidator","Rails/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-parse_raw_value_as_a_number","(raw_value)","",null,1],["parse_raw_value_as_an_integer","ActiveModel::Validations::NumericalityValidator","Rails/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-parse_raw_value_as_an_integer","(raw_value)","",null,1],["parser","URI","Rails/classes/URI.html#method-c-parser","()","",null,1],["partition","Enumerable","Ruby/classes/Enumerable.html#method-i-partition","()","<p>Returns two arrays, the first containing the elements of <em>enum</em> for\nwhich the block evaluates to true, …\n",null,0],["partition","String","Ruby/classes/String.html#method-i-partition","(p1)","<p>Searches <em>sep</em> or pattern (<em>regexp</em>) in the string and\nreturns the part before it, the match, and the part …\n",null,0],["pass","Thread","Ruby/classes/Thread.html#method-c-pass","()","<p>Give the thread scheduler a hint to pass execution to another thread. A\nrunning thread may or may not …\n",null,0],["password","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-password","()","<p>Gets the password for REST HTTP authentication.\n",null,1],["password=","ActiveModel::SecurePassword::InstanceMethodsOnActivation","Rails/classes/ActiveModel/SecurePassword/InstanceMethodsOnActivation.html#method-i-password-3D","(unencrypted_password)","<p>Encrypts the password into the password_digest attribute.\n",null,1],["password=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-password-3D","(password)","<p>Sets the password for REST HTTP authentication.\n",null,1],["password=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-password-3D","(password)","<p>Sets the password for remote service.\n",null,1],["password_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-password_field","(object_name, method, options = {})","<p>Returns an input tag of the “password” type tailored for accessing a\nspecified attribute (identified …\n",null,1],["password_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-password_field_tag","(name = \"password\", value = nil, options = {})","<p>Creates a password field, a masked text field that will hide the users\ninput behind a mask character. …\n",null,1],["past?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-past-3F","()","",null,1],["past?","Date","Rails/classes/Date.html#method-i-past-3F","()","<p>Returns true if the Date object&#39;s date lies in the past. Otherwise\nreturns false.\n",null,1],["past?","DateTime","Rails/classes/DateTime.html#method-i-past-3F","()","<p>Tells whether the DateTime object&#39;s datetime lies in the past\n",null,1],["past?","Time","Rails/classes/Time.html#method-i-past-3F","()","<p>Tells whether the Time object&#39;s time lies in the past\n",null,1],["path","ARGF","Ruby/classes/ARGF.html#method-i-path","()","<p>Returns the current filename. “-” is returned when the current file is\nSTDIN.\n<p>For example:\n\n<pre>$ ...</pre>\n",null,0],["path","Dir","Ruby/classes/Dir.html#method-i-path","()","<p>Returns the path parameter passed to <em>dir</em>&#39;s constructor.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;..&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">path</span>   <span class=\"ruby-comment\">#=&gt; &quot;..&quot;</span>\n</pre>\n",null,0],["path","File","Ruby/classes/File.html#method-c-path","(p1)","<p>Returns the string representation of the path\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">path</span>(<span class=\"ruby-string\">&quot;/dev/null&quot;</span>)          <span class=\"ruby-comment\">#=&gt; &quot;/dev/null&quot;</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">path</span>(<span class=\"ruby-constant\">Pathname</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;/tmp&quot;</span>)) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["path","File","Ruby/classes/File.html#method-i-path","()","<p>Returns the pathname used to create <em>file</em> as a string. Does not\nnormalize the name.\n\n<pre>File.new(&quot;testfile&quot;).path ...</pre>\n",null,0],["path","LoadError","Rails/classes/LoadError.html#method-i-path","()","",null,1],["path","LoadError","Rails/classes/LoadError.html#method-i-path","()","",null,1],["path=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-path-3D","(path)","",null,1],["path_for","Sprockets::StaticCompiler","Rails/classes/Sprockets/StaticCompiler.html#method-i-path_for","(asset)","",null,1],["path_parameters","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-path_parameters","()","<p>Returns a hash with the parameters used to form the path of the request.\nReturned hash keys are strings: …\n",null,1],["path_to_asset","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_asset","(source, options = {})","",null,1],["path_to_audio","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_audio","(source)","",null,1],["path_to_font","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_font","(source)","",null,1],["path_to_font","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_font","(source)","",null,1],["path_to_image","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_image","(source)","",null,1],["path_to_image","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_image","(source)","",null,1],["path_to_javascript","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers.html#method-i-path_to_javascript","(source)","",null,1],["path_to_javascript","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_javascript","(source)","",null,1],["path_to_stylesheet","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#method-i-path_to_stylesheet","(source)","",null,1],["path_to_stylesheet","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-path_to_stylesheet","(source)","",null,1],["path_to_video","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-path_to_video","(source)","",null,1],["paths","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-paths","()","",null,1],["paths","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-paths","()","",null,1],["peek","Enumerator","Ruby/classes/Enumerator.html#method-i-peek","()","<p>Returns the next object in the enumerator, but doesn&#39;t move the\ninternal position forward.  If the …\n",null,0],["peek_values","Enumerator","Ruby/classes/Enumerator.html#method-i-peek_values","()","<p>Returns the next object as an array, similar to Enumerator#next_values, but\ndoesn&#39;t move the internal …\n",null,0],["pending","ActiveSupport::Testing::Pending","Rails/classes/ActiveSupport/Testing/Pending.html#method-i-pending","(description = \"\", &block)","",null,1],["perform_validations","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-perform_validations","(options={})","",null,1],["performed?","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-performed-3F","()","",null,1],["period","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-period","()","<p>Returns the underlying TZInfo::TimezonePeriod.\n",null,1],["period_for_local","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-period_for_local","(time, dst=true)","<p>Available so that TimeZone instances respond like TZInfo::Timezone\ninstances\n",null,1],["period_for_utc","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-period_for_utc","(time)","<p>Available so that TimeZone instances respond like TZInfo::Timezone\ninstances\n",null,1],["permutation","Array","Ruby/classes/Array.html#method-i-permutation","(p1 = v1)","<p>When invoked with a block, yield all permutations of length <em>n</em> of\nthe elements of <em>ary</em>, then return the …\n",null,0],["persisted?","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-persisted-3F","()","<p>Returns if the record is persisted, i.e. it&#39;s not a new record and it\nwas not destroyed.\n",null,1],["persisted?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-persisted-3F","()","<p>Returns <code>true</code> if this object has been saved, otherwise returns\n<code>false</code>.\n<p>Examples\n\n<pre>persisted = Computer.create(:brand ...</pre>\n",null,1],["petabyte","Numeric","Rails/classes/Numeric.html#method-i-petabyte","()","",null,1],["petabytes","Numeric","Rails/classes/Numeric.html#method-i-petabytes","()","",null,1],["phase","Complex","Ruby/classes/Complex.html#method-i-phase","()","<p>Returns the angle part of its polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-constant\">Math</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PI</span><span class=\"ruby-operator\">/</span><span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">arg</span> <span class=\"ruby-comment\">#=&gt; 1.5707963267948966</span>\n</pre>\n",null,0],["phase","Float","Ruby/classes/Float.html#method-i-phase","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["phase","Numeric","Ruby/classes/Numeric.html#method-i-phase","()","<p>Returns 0 if the value is positive, pi otherwise.\n",null,0],["phone_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-phone_field","(object_name, method, options = {})","",null,1],["phone_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-phone_field_tag","(name, value = nil, options = {})","",null,1],["pid","IO","Ruby/classes/IO.html#method-i-pid","()","<p>Returns the process ID of a child process associated with <em>ios</em>.\nThis will be set by <code>IO.popen</code>.\n\n<pre>pipe = IO.popen(&quot;-&quot;) ...</pre>\n",null,0],["pid","Process","Ruby/classes/Process.html#method-c-pid","()","<p>Returns the process id of this process. Not available on all platforms.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">pid</span>   <span class=\"ruby-comment\">#=&gt; 27415</span>\n</pre>\n",null,0],["pid","Process::Status","Ruby/classes/Process/Status.html#method-i-pid","()","<p>Returns the process ID that this status object represents.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">fork</span> { <span class=\"ruby-identifier\">exit</span> }   <span class=\"ruby-comment\">#=&gt; 26569</span>\n<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">wait</span>    <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["pipe","IO","Ruby/classes/IO.html#method-c-pipe","(p1 = v1, p2 = v2, p3 = {})","<p>Creates a pair of pipe endpoints (connected to each other) and returns them\nas a two-element array of …\n",null,0],["pipe?","File","Ruby/classes/File.html#method-c-pipe-3F","(p1)","<p>Returns <code>true</code> if the named file is a pipe.\n",null,0],["pipe?","File::Stat","Ruby/classes/File/Stat.html#method-i-pipe-3F","()","<p>Returns <code>true</code> if the operating system supports pipes and\n<em>stat</em> is a pipe; <code>false</code> otherwise.\n",null,0],["pipe?","FileTest","Ruby/classes/FileTest.html#method-i-pipe-3F","(p1)","<p>Returns <code>true</code> if the named file is a pipe.\n",null,0],["pk_and_sequence_for","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-pk_and_sequence_for","(table)","<p>Returns a table&#39;s primary key and belonging sequence.\n",null,1],["plain?","ActiveModel::AttributeMethods::ClassMethods::AttributeMethodMatcher","Rails/classes/ActiveModel/AttributeMethods/ClassMethods/AttributeMethodMatcher.html#method-i-plain-3F","()","",null,1],["pluck","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-pluck","(column_name)","<p>This method is designed to perform select by a single column as direct SQL\nquery Returns <code>Array</code> with values …\n",null,1],["plugin","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-plugin","(name, options)","<p>Install a plugin. You must provide either a Subversion url or Git url.\n<p>For a Git-hosted plugin, you can …\n",null,1],["plugins","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-i-plugins","()","",null,1],["plural","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-plural","(record_or_class)","<p>Returns the plural class name of a record or class. Examples:\n\n<pre>ActiveModel::Naming.plural(post)        ...</pre>\n",null,1],["plural","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-plural","(rule, replacement)","<p>Specifies a new pluralization rule and its replacement. The rule can either\nbe a string or a regular …\n",null,1],["plural_file_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-plural_file_name","()","",null,1],["plural_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-plural_name","()","",null,1],["plural_table_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-plural_table_name","()","",null,1],["pluralize","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-pluralize","(count, singular, plural = nil)","<p>Attempts to pluralize the <code>singular</code> word unless\n<code>count</code> is 1. If <code>plural</code> is supplied, it will use\nthat when …\n",null,1],["pluralize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-pluralize","(word)","<p>Returns the plural form of the word in the string.\n<p>Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;post&quot;</span>.<span class=\"ruby-identifier\">pluralize</span>             <span class=\"ruby-comment\"># =&gt; &quot;posts&quot; ...</span>\n</pre>\n",null,1],["pluralize","String","Rails/classes/String.html#method-i-pluralize","(count = nil)","<p>Returns the plural form of the word in the string.\n<p>If the optional parameter <code>count</code> is specified, the singular …\n",null,1],["pluralize_table_names?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-pluralize_table_names-3F","()","",null,1],["polar","Complex","Ruby/classes/Complex.html#method-c-polar","(p1, p2 = v2)","<p>Returns a complex object which denotes the given polar form.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>.<span class=\"ruby-identifier\">polar</span>(<span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">0</span>)           <span class=\"ruby-comment\">#=&gt; (3.0+0.0i) ...</span>\n</pre>\n",null,0],["polar","Complex","Ruby/classes/Complex.html#method-i-polar","()","<p>Returns an array; [cmp.abs, cmp.arg].\n",null,0],["polar","Numeric","Ruby/classes/Numeric.html#method-i-polar","()","<p>Returns an array; [num.abs, num.arg].\n",null,0],["polymorphic_path","ActionDispatch::Routing::PolymorphicRoutes","Rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_path","(record_or_hash_or_array, options = {})","<p>Returns the path component of a URL for the given record. It uses\n<code>polymorphic_url</code> with <code>:routing_type</code> …\n",null,1],["polymorphic_url","ActionDispatch::Routing::PolymorphicRoutes","Rails/classes/ActionDispatch/Routing/PolymorphicRoutes.html#method-i-polymorphic_url","(record_or_hash_or_array, options = {})","<p>Constructs a call to a named RESTful route for the given record and returns\nthe resulting URL string. …\n",null,1],["pop","Array","Ruby/classes/Array.html#method-i-pop","(*args)","<p>Removes the last element from <code>self</code> and returns it, or\n<code>nil</code> if the array is empty.\n<p>If a number <em>n</em> is given, …\n",null,0],["pop_d","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-pop_d","()","",null,1],["pop_tags","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-pop_tags","(size = 1)","",null,1],["popen","IO","Ruby/classes/IO.html#method-c-popen","(p1, p2 = v2, p3 = {})","<p>Runs the specified command as a subprocess; the subprocess&#39;s standard\ninput and output will be connected …\n",null,0],["populate_with_current_scope_attributes","ActiveRecord::Scoping","Rails/classes/ActiveRecord/Scoping.html#method-i-populate_with_current_scope_attributes","()","",null,1],["port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-port","()","<p>Returns the port number of this request as an integer.\n",null,1],["port=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-port-3D","(number)","",null,1],["port_string","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-port_string","()","<p>Returns a string port suffix, including colon, like “:8080” if the port\nnumber of this request …\n",null,1],["pos","ARGF","Ruby/classes/ARGF.html#method-i-pos","()","<p>Returns the current offset (in bytes) of the current file in\n<code>ARGF</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,0],["pos","Dir","Ruby/classes/Dir.html#method-i-pos","()","<p>Returns the current position in <em>dir</em>. See also\n<code>Dir#seek</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">tell</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">read</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["pos","IO","Ruby/classes/IO.html#method-i-pos","()","<p>Returns the current offset (in bytes) of <em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,0],["pos=","ARGF","Ruby/classes/ARGF.html#method-i-pos-3D","(p1)","<p>Seeks to the position given by <em>position</em> (in bytes) in\n<code>ARGF</code>.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">pos</span> = <span class=\"ruby-value\">17</span>\n<span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["pos=","Dir","Ruby/classes/Dir.html#method-i-pos-3D","(p1)","<p>Synonym for <code>Dir#seek</code>, but returns the position parameter.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)   <span class=\"ruby-comment\">#=&gt; #&lt;Dir:0x401b3c40&gt; ...</span>\n</pre>\n",null,0],["pos=","IO","Ruby/classes/IO.html#method-i-pos-3D","(p1)","<p>Seeks to the given position (in bytes) in <em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">pos</span> = <span class=\"ruby-value\">17</span>\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,0],["post","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-post","(action, parameters = nil, session = nil, flash = nil)","<p>Executes a request simulating POST HTTP method and set/volley the response\n",null,1],["post","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-post","(path, parameters = nil, headers = nil)","<p>Performs a POST request with the given parameters. See <code>#get</code>\nfor more details.\n",null,1],["post","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-post","(*args, &block)","<p>Define a route that only recognizes HTTP POST. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>post &#39;bacon&#39;, …\n",null,1],["post","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-post","(path, body = '', headers = {})","<p>Executes a POST request. Used to create new resources.\n",null,1],["post","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-c-post","(custom_method_name, options = {}, body = '')","",null,1],["post","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-i-post","(method_name, options = {}, body = nil)","",null,1],["post?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-post-3F","()","<p>Is this a POST request? Equivalent to <code>request.request_method_symbol\n== :post</code>.\n",null,1],["post_match","MatchData","Ruby/classes/MatchData.html#method-i-post_match","()","<p>Returns the portion of the original string after the current match.\nEquivalent to the special variable …\n",null,0],["post_via_redirect","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-post_via_redirect","(path, parameters = nil, headers = nil)","<p>Performs a POST request, following any subsequent redirect. See\n<code>request_via_redirect</code> for more information. …\n",null,1],["postgresql_version","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-postgresql_version","()","<p>Returns the version of the connected PostgreSQL server.\n",null,1],["ppid","Process","Ruby/classes/Process.html#method-c-ppid","()","<p>Returns the process id of the parent of this process. Returns untrustworthy\nvalue on Win32/64. Not available …\n",null,0],["pre_match","MatchData","Ruby/classes/MatchData.html#method-i-pre_match","()","<p>Returns the portion of the original string before the current match.\nEquivalent to the special variable …\n",null,0],["precisionless_round","Float","Rails/classes/Float.html#method-i-precisionless_round","(precision = nil)","",null,1],["pred","Integer","Ruby/classes/Integer.html#method-i-pred","()","<p>Returns the <code>Integer</code> equal to <em>int</em> - 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">pred</span>      <span class=\"ruby-comment\">#=&gt; 0</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">pred</span>   <span class=\"ruby-comment\">#=&gt; -2</span>\n</pre>\n",null,0],["prefetch_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-prefetch_primary_key-3F","(table_name = nil)","<p>Should primary key values be selected from their corresponding sequence\nbefore the insert statement? …\n",null,1],["prefix","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-prefix","(options={})","<p>Gets the prefix for a resource&#39;s nested URL (e.g.,\n<code>prefix/collectionname/1.json</code>) This method is regenerated …\n",null,1],["prefix=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-prefix-3D","(value = '/')","<p>Sets the prefix for a resource&#39;s nested URL (e.g.,\n<code>prefix/collectionname/1.json</code>). Default value is …\n",null,1],["prefix_source","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-prefix_source","()","<p>An attribute reader for the source string for the resource path prefix. \nThis method is regenerated at …\n",null,1],["preload","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-preload","(*args)","",null,1],["prepare!","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-prepare-21","()","<p>Execute all prepare callbacks.\n",null,1],["prepare!","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-prepare-21","()","",null,1],["prepare_controller_class","ActionController::TestCase::Behavior::ClassMethods","Rails/classes/ActionController/TestCase/Behavior/ClassMethods.html#method-i-prepare_controller_class","(new_class)","",null,1],["prepare_destination","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-prepare_destination","()","",null,1],["prepend","String","Ruby/classes/String.html#method-i-prepend","(p1)","<p>Prepend—Prepend the given string to <em>str</em>.\n<p>a = “world” a.prepend(“hello ”) #=&gt; …\n",null,0],["prepend_after_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_after_filter","","<p>Prepend an after filter. See _insert_callbacks for parameter details.\n",null,1],["prepend_around_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_around_filter","","<p>Prepend an around filter. See _insert_callbacks for parameter details.\n",null,1],["prepend_before_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-prepend_before_filter","","<p>Prepend a before filter. See _insert_callbacks for parameter details.\n",null,1],["prepend_view_path","AbstractController::ViewPaths","Rails/classes/AbstractController/ViewPaths.html#method-i-prepend_view_path","(path)","",null,1],["prepend_view_path","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-prepend_view_path","(path)","<p>Prepend a path to the list of view paths for this controller.\n<p>Parameters\n<p><code>path</code> - If a String is provided, …\n",null,1],["presence","Object","Rails/classes/Object.html#method-i-presence","()","<p>Returns object if it&#39;s <code>present?</code> otherwise returns\n<code>nil</code>. <code>object.presence</code> is equivalent to\n<code>object.present</code> …\n",null,1],["present?","Object","Rails/classes/Object.html#method-i-present-3F","()","<p>An object is present if it&#39;s not <code>blank?</code>.\n",null,1],["prev_month","Date","Rails/classes/Date.html#method-i-prev_month","()","<p>Shorthand for months_ago(1)\n",null,1],["prev_month","Time","Rails/classes/Time.html#method-i-prev_month","()","<p>Short-hand for months_ago(1)\n",null,1],["prev_week","Date","Rails/classes/Date.html#method-i-prev_week","(day = :monday)","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the\ngiven <code>day</code> in the previous week. Default is\n<code>:monday</code>. <code>DateTime</code> …\n",null,1],["prev_week","Time","Rails/classes/Time.html#method-i-prev_week","(day = :monday)","<p>Returns a new Time representing the start of the given day in the previous\nweek (default is :monday). …\n",null,1],["prev_year","Date","Rails/classes/Date.html#method-i-prev_year","()","<p>Shorthand for years_ago(1)\n",null,1],["prev_year","Time","Rails/classes/Time.html#method-i-prev_year","()","<p>Short-hand for years_ago(1)\n",null,1],["previous_changes","ActiveModel::Dirty","Rails/classes/ActiveModel/Dirty.html#method-i-previous_changes","()","<p>Map of attributes that were changed when the model was saved.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> <span class=\"ruby-comment\"># =&gt; &#39;bob&#39;</span>\n<span class=\"ruby-identifier\">person</span>.<span class=\"ruby-identifier\">name</span> = <span class=\"ruby-string\">&#39;robert&#39;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key","()","<p>Defines the primary key field – can be overridden in subclasses.\nOverwriting will negate any effect …\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-primary_key","(table)","<p>Returns just a table&#39;s primary key\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-primary_key","(table)","<p>Returns just a table&#39;s primary key\n",null,1],["primary_key","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-primary_key","(name)","<p>Appends a primary key definition to the table definition. Can be called\nmultiple times, but this is probably …\n",null,1],["primary_key","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-primary_key","()","",null,1],["primary_key=","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-primary_key-3D","(value)","<p>Sets the name of the primary key column.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Project</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">primary_key</span> = <span class=\"ruby-string\">&quot;sysid&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["primary_keys","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-primary_keys","()","",null,1],["prime_cache","ActiveSupport::Memoizable::InstanceMethods","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-prime_cache","(*syms)","",null,1],["primitive_convert","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-primitive_convert","(p1, p2, p3 = v3, p4 = v4, p5 = v5, p6 = {})","<p>possible opt elements:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">hash</span> <span class=\"ruby-identifier\">form</span><span class=\"ruby-operator\">:</span>\n  :<span class=\"ruby-identifier\">partial_input</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">true</span>           <span class=\"ruby-comment\"># source buffer may be part of larger ...</span>\n</pre>\n",null,0],["primitive_errinfo","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-primitive_errinfo","()","<p>primitive_errinfo returns important information regarding the last error as\na 5-element array:\n\n<pre>[result, ...</pre>\n",null,0],["print","ARGF","Ruby/classes/ARGF.html#method-i-print","(*args)","<p>Writes the given object(s) to <em>ios</em>. The stream must be opened for\nwriting. If the output field separator …\n",null,0],["print","IO","Ruby/classes/IO.html#method-i-print","(*args)","<p>Writes the given object(s) to <em>ios</em>. The stream must be opened for\nwriting. If the output field separator …\n",null,0],["print","Kernel","Ruby/classes/Kernel.html#method-i-print","(*args)","<p>Prints each object in turn to <code>$stdout</code>. If the output field\nseparator (<code>$,</code>) is not <code>nil</code>, its contents will …\n",null,0],["printf","ARGF","Ruby/classes/ARGF.html#method-i-printf","(*args)","<p>Formats and writes to <em>ios</em>, converting parameters under control of\nthe format string. See <code>Kernel#sprintf</code> …\n",null,0],["printf","IO","Ruby/classes/IO.html#method-i-printf","(*args)","<p>Formats and writes to <em>ios</em>, converting parameters under control of\nthe format string. See <code>Kernel#sprintf</code> …\n",null,0],["printf","Kernel","Ruby/classes/Kernel.html#method-i-printf","(*args)","<p>Equivalent to:\n\n<pre>io.write(sprintf(string, obj, ...)</pre>\n<p>or\n",null,0],["priority","Thread","Ruby/classes/Thread.html#method-i-priority","()","<p>Returns the priority of <em>thr</em>. Default is inherited from the current\nthread which creating the new thread, …\n",null,0],["priority=","Thread","Ruby/classes/Thread.html#method-i-priority-3D","(p1)","<p>Sets the priority of <em>thr</em> to <em>integer</em>. Higher-priority\nthreads will run more frequently than lower-priority …\n",null,0],["private_class_method","Module","Ruby/classes/Module.html#method-i-private_class_method","(*args)","<p>Makes existing class methods private. Often used to hide the default\nconstructor <code>new</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">SimpleSingleton</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["private_instance_methods","Module","Ruby/classes/Module.html#method-i-private_instance_methods","(*args)","<p>Returns a list of the private instance methods defined in <em>mod</em>. If\nthe optional parameter is not <code>false</code> …\n",null,0],["private_method_defined?","Module","Ruby/classes/Module.html#method-i-private_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named private method is defined by _ mod_\n(or its included modules and, if <em>mod</em> is …\n",null,0],["private_methods","Object","Ruby/classes/Object.html#method-i-private_methods","(*args)","<p>Returns the list of private methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,0],["proc","Kernel","Ruby/classes/Kernel.html#method-i-proc","()","<p>Equivalent to <code>Proc.new</code>.\n",null,0],["process","AbstractController::Base","Rails/classes/AbstractController/Base.html#method-i-process","(action, *args)","<p>Calls the action going through the entire action dispatch stack.\n<p>The actual method that is called is determined …\n",null,1],["process","ActionController::Middleware","Rails/classes/ActionController/Middleware.html#method-i-process","(action)","",null,1],["process","ActionController::TemplateAssertions","Rails/classes/ActionController/TemplateAssertions.html#method-i-process","(*args)","",null,1],["process","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-process","(action, parameters = nil, session = nil, flash = nil, http_method = 'GET')","",null,1],["process_action","AbstractController::Callbacks","Rails/classes/AbstractController/Callbacks.html#method-i-process_action","(*args)","<p>Override AbstractController::Base&#39;s process_action to run the\nprocess_action callbacks around the …\n",null,1],["process_action","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-process_action","(*args)","",null,1],["process_action","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-process_action","(event)","",null,1],["process_action","ActionController::ParamsWrapper","Rails/classes/ActionController/ParamsWrapper.html#method-i-process_action","(*args)","<p>Performs parameters wrapping upon the request. Will be called automatically\nby the metal call stack. …\n",null,1],["process_attributes_for","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-process_attributes_for","(node, options)","",null,1],["process_node","HTML::FullSanitizer","Rails/classes/HTML/FullSanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_node","HTML::LinkSanitizer","Rails/classes/HTML/LinkSanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_node","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_node","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-process_node","(node, result, options)","",null,1],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::LoggerSanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/LoggerSanitizer.html#method-i-process_removed_attributes","(attrs)","",null,1],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::Sanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-i-process_removed_attributes","(attrs)","",null,1],["process_removed_attributes","ActiveModel::MassAssignmentSecurity::StrictSanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/StrictSanitizer.html#method-i-process_removed_attributes","(attrs)","",null,1],["process_view_paths","ActionView::Base","Rails/classes/ActionView/Base.html#method-c-process_view_paths","(value)","",null,1],["process_with_new_base_test","ActionController::Testing","Rails/classes/ActionController/Testing.html#method-i-process_with_new_base_test","(request, response)","<p>TODO: Clean this up\n",null,1],["product","Array","Ruby/classes/Array.html#method-i-product","(*args)","<p>Returns an array of all combinations of elements from all arrays. The\nlength of the returned array is …\n",null,0],["profile","ActiveSupport::Testing::Performance::Metrics::Base","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html#method-i-profile","()","",null,1],["properties","Rails::InfoController","Rails/classes/Rails/InfoController.html#method-i-properties","()","",null,1],["property","Rails::Info","Rails/classes/Rails/Info.html#method-c-property","(name, value = nil)","",null,1],["protect_against_forgery?","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-protect_against_forgery-3F","()","",null,1],["protect_from_forgery","ActionController::RequestForgeryProtection::ClassMethods","Rails/classes/ActionController/RequestForgeryProtection/ClassMethods.html#method-i-protect_from_forgery","(options = {})","<p>Turn on request forgery protection. Bear in mind that only non-GET,\nHTML/JavaScript requests are checked. …\n",null,1],["protected_attributes","ActiveModel::MassAssignmentSecurity::ClassMethods","Rails/classes/ActiveModel/MassAssignmentSecurity/ClassMethods.html#method-i-protected_attributes","(role = :default)","",null,1],["protected_instance_methods","Module","Ruby/classes/Module.html#method-i-protected_instance_methods","(*args)","<p>Returns a list of the protected instance methods defined in <em>mod</em>.\nIf the optional parameter is not <code>false</code> …\n",null,0],["protected_method_defined?","Module","Ruby/classes/Module.html#method-i-protected_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named protected method is defined by\n<em>mod</em> (or its included modules and, if <em>mod</em> is …\n",null,0],["protected_methods","Object","Ruby/classes/Object.html#method-i-protected_methods","(*args)","<p>Returns the list of protected methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,0],["protocol","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-protocol","()","<p>Returns &#39;https://&#39; if this is an SSL request and &#39;http://&#39;\notherwise.\n",null,1],["provide","ActionView::Helpers::CaptureHelper","Rails/classes/ActionView/Helpers/CaptureHelper.html#method-i-provide","(name, content = nil, &block)","<p>The same as <code>content_for</code> but when used with streaming flushes\nstraight back to the layout. In other words, …\n",null,1],["proxy","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-proxy","()","<p>Gets the proxy variable if a proxy is required\n",null,1],["proxy=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-proxy-3D","(proxy)","<p>Sets the URI of the http proxy to the value in the <code>proxy</code>\nargument.\n",null,1],["proxy=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-proxy-3D","(proxy)","<p>Set the proxy for remote service.\n",null,1],["proxy_class","ActiveSupport::Multibyte","Rails/classes/ActiveSupport/Multibyte.html#method-c-proxy_class","()","<p>Returns the current proxy class\n",null,1],["proxy_class=","ActiveSupport::Multibyte","Rails/classes/ActiveSupport/Multibyte.html#method-c-proxy_class-3D","(klass)","<p>The proxy class returned when calling mb_chars. You can use this accessor\nto configure your own proxy …\n",null,1],["prune","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-prune","(target_size, max_time = nil)","<p>To ensure entries fit within the specified memory prune the cache by\nremoving the least recently accessed …\n",null,1],["pruning?","ActiveSupport::Cache::MemoryStore","Rails/classes/ActiveSupport/Cache/MemoryStore.html#method-i-pruning-3F","()","<p>Returns true if the cache is currently being pruned.\n",null,1],["public_class_method","Module","Ruby/classes/Module.html#method-i-public_class_method","(*args)","<p>Makes a list of existing class methods public.\n",null,0],["public_directory","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-public_directory","()","",null,1],["public_instance_method","Module","Ruby/classes/Module.html#method-i-public_instance_method","(p1)","<p>Similar to <em>instance_method</em>, searches public method only.\n",null,0],["public_instance_methods","Module","Ruby/classes/Module.html#method-i-public_instance_methods","(*args)","<p>Returns a list of the public instance methods defined in <em>mod</em>. If\nthe optional parameter is not <code>false</code> …\n",null,0],["public_method","Object","Ruby/classes/Object.html#method-i-public_method","(p1)","<p>Similar to <em>method</em>, searches public method only.\n",null,0],["public_method_defined?","Module","Ruby/classes/Module.html#method-i-public_method_defined-3F","(p1)","<p>Returns <code>true</code> if the named public method is defined by\n<em>mod</em> (or its included modules and, if <em>mod</em> is a class, …\n",null,0],["public_methods","Object","Ruby/classes/Object.html#method-i-public_methods","(*args)","<p>Returns the list of public methods accessible to <em>obj</em>. If the\n<em>all</em> parameter is set to <code>false</code>, only those …\n",null,0],["public_path","Rails","Rails/classes/Rails.html#method-c-public_path","()","",null,1],["public_send","Object","Ruby/classes/Object.html#method-i-public_send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. Unlike send, public_send …\n",null,0],["publish","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-publish","(name, *args)","",null,1],["publish","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-publish","(name, *args)","",null,1],["push","Array","Ruby/classes/Array.html#method-i-push","(*args)","<p>Append—Pushes the given object(s) on to the end of this array. This\nexpression returns the array itself, …\n",null,0],["push_d","RecursiveHTTPFetcher","Rails/classes/RecursiveHTTPFetcher.html#method-i-push_d","(dir)","",null,1],["push_tags","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-push_tags","(*tags)","",null,1],["put","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-put","(action, parameters = nil, session = nil, flash = nil)","<p>Executes a request simulating PUT HTTP method and set/volley the response\n",null,1],["put","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-put","(path, parameters = nil, headers = nil)","<p>Performs a PUT request with the given parameters. See <code>#get</code> for\nmore details.\n",null,1],["put","ActionDispatch::Routing::Mapper::HttpHelpers","Rails/classes/ActionDispatch/Routing/Mapper/HttpHelpers.html#method-i-put","(*args, &block)","<p>Define a route that only recognizes HTTP PUT. For supported arguments, see\n<code>Base#match</code>.\n<p>Example:\n<p>put &#39;bacon&#39;, …\n",null,1],["put","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-put","(path, body = '', headers = {})","<p>Executes a PUT request (see HTTP protocol documentation if unfamiliar).\nUsed to update resources.\n",null,1],["put","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-i-put","(method_name, options = {}, body = '')","",null,1],["put","ActiveResource::CustomMethods","Rails/classes/ActiveResource/CustomMethods.html#method-c-put","(custom_method_name, options = {}, body = '')","",null,1],["put?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-put-3F","()","<p>Is this a PUT request? Equivalent to <code>request.request_method_symbol ==\n:put</code>.\n",null,1],["put_via_redirect","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-put_via_redirect","(path, parameters = nil, headers = nil)","<p>Performs a PUT request, following any subsequent redirect. See\n<code>request_via_redirect</code> for more information. …\n",null,1],["putback","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-putback","(p1 = v1)","<p>call-seq\n\n<pre>ec.putback                    -&gt; string\nec.putback(max_numbytes)      -&gt; string</pre>\n<p>Put back the bytes …\n",null,0],["putc","ARGF","Ruby/classes/ARGF.html#method-i-putc","(p1)","<p>If <em>obj</em> is <code>Numeric</code>, write the character whose code is\nthe least-significant byte of <em>obj</em>, otherwise write …\n",null,0],["putc","IO","Ruby/classes/IO.html#method-i-putc","(p1)","<p>If <em>obj</em> is <code>Numeric</code>, write the character whose code is\nthe least-significant byte of <em>obj</em>, otherwise write …\n",null,0],["putc","Kernel","Ruby/classes/Kernel.html#method-i-putc","(p1)","\n<pre>Equivalent to:\n\n  $stdout.putc(int)</pre>\n<p>Refer to the documentation for IO#putc for important information regarding\n…\n",null,0],["puts","ARGF","Ruby/classes/ARGF.html#method-i-puts","(*args)","<p>Writes the given objects to <em>ios</em> as with <code>IO#print</code>.\nWrites a record separator (typically a newline) after …\n",null,0],["puts","IO","Ruby/classes/IO.html#method-i-puts","(*args)","<p>Writes the given objects to <em>ios</em> as with <code>IO#print</code>.\nWrites a record separator (typically a newline) after …\n",null,0],["puts","Kernel","Ruby/classes/Kernel.html#method-i-puts","(*args)","<p>Equivalent to\n\n<pre>$stdout.puts(obj, ...)</pre>\n",null,0],["pwd","Dir","Ruby/classes/Dir.html#method-c-pwd","()","<p>Returns the path to the current working directory of this process as a\nstring.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">chdir</span>(<span class=\"ruby-string\">&quot;/tmp&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["qualified_const_defined?","Module","Rails/classes/Module.html#method-i-qualified_const_defined-3F","(path)","",null,1],["qualified_const_get","Module","Rails/classes/Module.html#method-i-qualified_const_get","(path)","",null,1],["qualified_const_set","Module","Rails/classes/Module.html#method-i-qualified_const_set","(path, value)","",null,1],["query","ActionView::NullResolver","Rails/classes/ActionView/NullResolver.html#method-i-query","(path, exts, formats)","",null,1],["query_attribute","ActiveRecord::AttributeMethods::Query","Rails/classes/ActiveRecord/AttributeMethods/Query.html#method-i-query_attribute","(attr_name)","",null,1],["query_parameters","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-query_parameters","()","",null,1],["quietly","Kernel","Rails/classes/Kernel.html#method-i-quietly","()","<p>Silences both STDOUT and STDERR, even for subprocesses.\n\n<pre>quietly { system &#39;bundle install&#39; }</pre>\n",null,1],["quo","Complex","Ruby/classes/Complex.html#method-i-quo","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10.0</span>) <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-comment\">#=&gt; (3.3333333333333335+(0/1)*i)</span>\n<span class=\"ruby-constant\">Complex</span>(<span class=\"ruby-value\">10</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-value\">3</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["quo","Float","Ruby/classes/Float.html#method-i-quo","(p1)","<p>Returns float / numeric.\n",null,0],["quo","Numeric","Ruby/classes/Numeric.html#method-i-quo","(p1)","<p>Returns most exact division (rational for integers, float for floats).\n",null,0],["quo","Rational","Ruby/classes/Rational.html#method-i-quo","(p1)","<p>Performs division.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)  <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>)   <span class=\"ruby-comment\">#=&gt; (1/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">900</span>)   <span class=\"ruby-operator\">/</span> <span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["quote","Regexp","Ruby/classes/Regexp.html#method-c-quote","(p1)","<p>Escapes any characters that would have special meaning in a regular\nexpression. Returns a new escaped …\n",null,0],["quote","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quote","(value, column = nil)","<p>QUOTING ==================================================\n",null,1],["quote","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote","(value, column = nil)","<p>Quotes the column value to help prevent SQL injection attacks.\n",null,1],["quote_column_name","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_column_name","(column_name)","<p>Quotes the column name. Defaults to no quoting.\n",null,1],["quote_string","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-quote_string","(string)","<p>QUOTING ==================================================\n",null,1],["quote_string","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_string","(s)","<p>Quotes a string, escaping any &#39; (single quote) and \\ (backslash)\ncharacters.\n",null,1],["quote_table_name","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-quote_table_name","(name)","<p>Override to return the quoted table name. Defaults to column quoting.\n",null,1],["quote_table_name","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-quote_table_name","(name)","<p>Checks the following cases:\n<p>table_name\n<p>“table.name”\n",null,1],["quote_table_name","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quote_table_name","(table_name)","<p>Quotes the table name. Defaults to column name quoting.\n",null,1],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_columns_for_index","(column_names, options = {})","",null,1],["quoted_columns_for_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-quoted_columns_for_index","(column_names, options = {})","<p>Overridden by the mysql adapter for supporting index lengths\n",null,1],["quoted_date","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_date","(value)","",null,1],["quoted_false","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_false","()","",null,1],["quoted_false","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_false","()","",null,1],["quoted_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-quoted_locking_column","()","<p>Quote the column name used for optimistic locking.\n",null,1],["quoted_primary_key","ActiveRecord::AttributeMethods::PrimaryKey::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey/ClassMethods.html#method-i-quoted_primary_key","()","<p>Returns a quoted version of the primary key name, used to construct SQL\nstatements.\n",null,1],["quoted_table_name","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-quoted_table_name","()","<p>Returns a quoted version of the table name, used to construct SQL\nstatements.\n",null,1],["quoted_true","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-quoted_true","()","",null,1],["quoted_true","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-quoted_true","()","",null,1],["rack_cookies","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-rack_cookies","()","",null,1],["radio_button","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-radio_button","(method, tag_value, options = {})","",null,1],["radio_button","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-radio_button","(object_name, method, tag_value, options = {})","<p>Returns a radio button tag for accessing a specified attribute (identified\nby <code>method</code>) on an object assigned …\n",null,1],["radio_button_checked?","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-c-radio_button_checked-3F","(value, checked_value)","",null,1],["radio_button_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-radio_button_tag","(name, value, checked = false, options = {})","<p>Creates a radio button; use groups of radio buttons named the same to allow\nusers to select from a group …\n",null,1],["rails","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/script/rails.html","","<p># This command will automatically be run when you run “rails” with Rails 3\ngems installed from …\n",null,1],["rails_gemfile_entry","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-rails_gemfile_entry","()","",null,1],["railtie_name","Rails::Plugin","Rails/classes/Rails/Plugin.html#method-i-railtie_name","()","",null,1],["railtie_name","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-railtie_name","(name = nil)","",null,1],["railtie_namespace","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-i-railtie_namespace","()","",null,1],["railties","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-railties","()","",null,1],["railties","Rails::Engine::Railties","Rails/classes/Rails/Engine/Railties.html#method-c-railties","()","",null,1],["raise","Kernel","Ruby/classes/Kernel.html#method-i-raise","(*args)","<p>With no arguments, raises the exception in <code>$!</code> or raises a\n<code>RuntimeError</code> if <code>$!</code> is <code>nil</code>. With a\nsingle <code>String</code> …\n",null,0],["raise","Thread","Ruby/classes/Thread.html#method-i-raise","(*args)","<p>Raises an exception (see <code>Kernel::raise</code>) from <em>thr</em>. The\ncaller does not have to be <em>thr</em>.\n\n<pre>Thread.abort_on_exception ...</pre>\n",null,0],["raise","ActiveSupport::BasicObject","Rails/classes/ActiveSupport/BasicObject.html#method-i-raise","(*args)","<p>Let ActiveSupport::BasicObject at least raise exceptions.\n",null,1],["raise_if_absolute","QualifiedConstUtils","Rails/classes/QualifiedConstUtils.html#method-c-raise_if_absolute","(path)","",null,1],["rake","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-rake","(command, options={})","<p>Runs the supplied rake task\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">rake</span>(<span class=\"ruby-string\">&quot;db:migrate&quot;</span>)\n<span class=\"ruby-identifier\">rake</span>(<span class=\"ruby-string\">&quot;db:migrate&quot;</span>, :<span class=\"ruby-identifier\">env</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;production&quot;</span>)\n<span class=\"ruby-identifier\">rake</span>(<span class=\"ruby-string\">&quot;gems:install&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["rake_tasks","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-rake_tasks","(&blk)","",null,1],["rakefile","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-rakefile","()","",null,1],["rakefile","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-rakefile","(filename, data=nil, &block)","<p>Create a new Rakefile with the provided code (either in a block or a\nstring).\n<p>Examples\n\n<pre>rakefile(&quot;bootstrap.rake&quot;) ...</pre>\n",null,1],["rakefile","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-rakefile","()","",null,1],["rakefile_test_tasks","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-rakefile_test_tasks","()","",null,1],["rand","Kernel","Ruby/classes/Kernel.html#method-i-rand","(p1 = v1)","<p>If <em>max</em> is <code>Range</code>, returns a pseudorandom number where\nrange.member(number) == true.\n<p>Or else converts <em>max</em> …\n",null,0],["rand","Random","Ruby/classes/Random.html#method-i-rand","(*args)","<p>When the argument is an <code>Integer</code> or a <code>Bignum</code>, it\nreturns a random integer greater than or equal to zero …\n",null,0],["rand","Random","Ruby/classes/Random.html#method-c-rand","(*args)","<p>Alias of _Random::DEFAULT.rand_.\n",null,0],["range_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-range_field","(object_name, method, options = {})","<p>Returns an input tag of type “range”.\n<p>Options\n<p>Accepts same options as range_field_tag\n",null,1],["range_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-range_field_tag","(name, value = nil, options = {})","<p>Creates a range form element.\n<p>Options\n<p>Accepts the same options as number_field_tag.\n",null,1],["rassoc","Array","Ruby/classes/Array.html#method-i-rassoc","(p1)","<p>Searches through the array whose elements are also arrays. Compares\n<em>obj</em> with the second element of each …\n",null,0],["rassoc","ENV","Ruby/classes/ENV.html#method-c-rassoc","(p1)","<p>Returns an Array of the name and value of the environment variable with\n<code>value</code> or <code>nil</code> if the value cannot …\n",null,0],["rassoc","Hash","Ruby/classes/Hash.html#method-i-rassoc","(p1)","<p>Searches through the hash comparing <em>obj</em> with the value using\n<code>==</code>. Returns the first key-value pair (two-element …\n",null,0],["rationalize","Complex","Ruby/classes/Complex.html#method-i-rationalize","(p1 = v1)","<p>If the imaginary part is exactly 0, returns the real part as a Rational,\notherwise a RangeError is raised. …\n",null,0],["rationalize","Float","Ruby/classes/Float.html#method-i-rationalize","(p1 = v1)","<p>Returns a simpler approximation of the value (flt-|eps| &lt;= result &lt;=\nflt+|eps|).  if eps is not …\n",null,0],["rationalize","Integer","Ruby/classes/Integer.html#method-i-rationalize","(p1 = v1)","<p>Returns the value as a rational.  An optional argument eps is always\nignored.\n",null,0],["rationalize","NilClass","Ruby/classes/NilClass.html#method-i-rationalize","(p1 = v1)","<p>Returns zero as a rational.  An optional argument eps is always ignored.\n",null,0],["rationalize","Rational","Ruby/classes/Rational.html#method-i-rationalize","(p1 = v1)","<p>Returns a simpler approximation of the value if an optional argument eps is\ngiven (rat-|eps| &lt;= result …\n",null,0],["raw","ActionView::Helpers::OutputSafetyHelper","Rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-raw","(stringish)","<p>This method outputs without escaping a string. Since escaping tags is now\ndefault, this can be used when …\n",null,1],["raw_connection","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-raw_connection","()","<p>Provides access to the underlying database driver for this adapter. For\nexample, this method returns …\n",null,1],["raw_host_with_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-raw_host_with_port","()","<p>Returns the host for this request, such as “example.com”.\n",null,1],["raw_post","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-raw_post","()","<p>Read the request body. This is useful for web services that need to work\nwith raw requests directly. …\n",null,1],["raw_value","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-raw_value","()","<p>Get the raw value. This value may be serialized and compressed.\n",null,1],["raw_write_attribute","ActiveRecord::AttributeMethods::Write","Rails/classes/ActiveRecord/AttributeMethods/Write.html#method-i-raw_write_attribute","(attr_name, value)","",null,1],["rdev","File::Stat","Ruby/classes/File/Stat.html#method-i-rdev","()","<p>Returns an integer representing the device type on which <em>stat</em>\nresides. Returns <code>nil</code> if the operating system …\n",null,0],["rdev_major","File::Stat","Ruby/classes/File/Stat.html#method-i-rdev_major","()","<p>Returns the major part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">rdev_major</span>   <span class=\"ruby-comment\">#=&gt; 2</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">rdev_major</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["rdev_minor","File::Stat","Ruby/classes/File/Stat.html#method-i-rdev_minor","()","<p>Returns the minor part of <code>File_Stat#rdev</code> or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/fd1&quot;</span>).<span class=\"ruby-identifier\">rdev_minor</span>   <span class=\"ruby-comment\">#=&gt; 1</span>\n<span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;/dev/tty&quot;</span>).<span class=\"ruby-identifier\">rdev_minor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["re_exchange","Process::GID","Ruby/classes/Process/GID.html#method-c-re_exchange","()","<p>Exchange real and effective group IDs and return the new effective group\nID. Not available on all platforms. …\n",null,0],["re_exchange","Process::UID","Ruby/classes/Process/UID.html#method-c-re_exchange","()","<p>Exchange real and effective user IDs and return the new effective user ID.\nNot available on all platforms. …\n",null,0],["re_exchangeable?","Process::GID","Ruby/classes/Process/GID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective group IDs of a process\nmay be exchanged on the current platform. …\n",null,0],["re_exchangeable?","Process::UID","Ruby/classes/Process/UID.html#method-c-re_exchangeable-3F","()","<p>Returns <code>true</code> if the real and effective user IDs of a process\nmay be exchanged on the current platform. …\n",null,0],["read","ARGF","Ruby/classes/ARGF.html#method-i-read","(p1 = v1, p2 = v2)","\n<pre>Reads _length_ bytes from ARGF. The files named on the command line\nare concatenated and treated as a ...</pre>\n",null,0],["read","Dir","Ruby/classes/Dir.html#method-i-read","()","<p>Reads the next entry from <em>dir</em> and returns it as a string. Returns\n<code>nil</code> at the end of the stream.\n\n<pre>d = Dir.new(&quot;testdir&quot;) ...</pre>\n",null,0],["read","IO","Ruby/classes/IO.html#method-c-read","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Opens the file, optionally seeks to the given <em>offset</em>, then returns\n<em>length</em> bytes (defaulting to the rest …\n",null,0],["read","IO","Ruby/classes/IO.html#method-i-read","(p1 = v1, p2 = v2)","<p>Reads <em>length</em> bytes from the I/O stream.\n<p><em>length</em> must be a non-negative integer or <code>nil</code>.\n<p>If <em>length</em> is a positive …\n",null,0],["read","ActionDispatch::Http::UploadedFile","Rails/classes/ActionDispatch/Http/UploadedFile.html#method-i-read","(*args)","",null,1],["read","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-read","(key)","",null,1],["read","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-i-read","(key)","",null,1],["read","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-read","(name, options = nil)","<p>Fetches data from the cache, using the given key. If there is data in the\ncache with the given key, then …\n",null,1],["read_attribute","ActiveRecord::AttributeMethods::Read","Rails/classes/ActiveRecord/AttributeMethods/Read.html#method-i-read_attribute","(attr_name)","<p>Returns the value of the attribute identified by <code>attr_name</code>\nafter it has been typecast (for example, “2004-12-12” …\n",null,1],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::BeforeTypeCast","Rails/classes/ActiveRecord/AttributeMethods/BeforeTypeCast.html#method-i-read_attribute_before_type_cast","(attr_name)","",null,1],["read_attribute_before_type_cast","ActiveRecord::AttributeMethods::Serialization","Rails/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-read_attribute_before_type_cast","(attr_name)","",null,1],["read_entry","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-read_entry","(key, options)","",null,1],["read_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-read_entry","(key, options)","",null,1],["read_fragment","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-read_fragment","(key, options = nil)","<p>Reads a cached fragment from the location signified by <code>key</code>\n(see <code>expire_fragment</code> for acceptable formats). …\n",null,1],["read_multi","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-read_multi","(*names)","<p>Reads multiple values from the cache using a single call to the servers for\nall keys. Options can be …\n",null,1],["read_multi","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-read_multi","(*names)","<p>Read multiple values at once from the cache. Options can be passed in the\nlast argument.\n<p>Some cache implementation …\n",null,1],["read_nonblock","ARGF","Ruby/classes/ARGF.html#method-i-read_nonblock","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream in non-blocking\nmode.\n",null,0],["read_nonblock","IO","Ruby/classes/IO.html#method-i-read_nonblock","(*args)","<p>Reads at most <em>maxlen</em> bytes from <em>ios</em> using the read(2)\nsystem call after O_NONBLOCK is set for the underlying …\n",null,0],["readable?","File","Ruby/classes/File.html#method-c-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective\nuser id of this process.\n",null,0],["readable?","File::Stat","Ruby/classes/File/Stat.html#method-i-readable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the effective\nuser id of this process.\n\n<pre>File.stat(&quot;testfile&quot;).readable? ...</pre>\n",null,0],["readable?","FileTest","Ruby/classes/FileTest.html#method-i-readable-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the effective\nuser id of this process.\n",null,0],["readable_inspect","Date","Rails/classes/Date.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon,\n21 Feb 2005”\n",null,1],["readable_inspect","DateTime","Rails/classes/DateTime.html#method-i-readable_inspect","()","<p>Overrides the default inspect method with a human readable one, e.g., “Mon,\n21 Feb 2005 14:30:00 …\n",null,1],["readable_real?","File","Ruby/classes/File.html#method-c-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user id\nof this process.\n",null,0],["readable_real?","File::Stat","Ruby/classes/File/Stat.html#method-i-readable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is readable by the real user id\nof this process.\n\n<pre>File.stat(&quot;testfile&quot;).readable_real? ...</pre>\n",null,0],["readable_real?","FileTest","Ruby/classes/FileTest.html#method-i-readable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is readable by the real user id\nof this process.\n",null,0],["readagain_bytes","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-readagain_bytes","()","<p>Returns the bytes to be read again when Encoding::InvalidByteSequenceError\noccurs.\n",null,0],["readbyte","ARGF","Ruby/classes/ARGF.html#method-i-readbyte","()","<p>Reads the next 8-bit byte from ARGF and returns it as a\n<code>Fixnum</code>. Raises an <code>EOFError</code> after the last byte …\n",null,0],["readbyte","IO","Ruby/classes/IO.html#method-i-readbyte","()","<p>Reads a byte as with <code>IO#getbyte</code>, but raises an\n<code>EOFError</code> on end of file.\n",null,0],["readchar","ARGF","Ruby/classes/ARGF.html#method-i-readchar","()","<p>Reads the next character from <code>ARGF</code> and returns it as a\n<code>String</code>. Raises an <code>EOFError</code> after the last\ncharacter …\n",null,0],["readchar","IO","Ruby/classes/IO.html#method-i-readchar","()","<p>Reads a one-character string from <em>ios</em>. Raises an\n<code>EOFError</code> on end of file.\n\n<pre>f = File.new(&quot;testfile&quot;)\nf.readchar ...</pre>\n",null,0],["readline","ARGF","Ruby/classes/ARGF.html#method-i-readline","(*args)","<p>Returns the next line from the current file in <code>ARGF</code>.\n<p>By default lines are assumed to be separated by +$/+; …\n",null,0],["readline","IO","Ruby/classes/IO.html#method-i-readline","(*args)","<p>Reads a line as with <code>IO#gets</code>, but raises an\n<code>EOFError</code> on end of file.\n",null,0],["readline","Kernel","Ruby/classes/Kernel.html#method-i-readline","(*args)","<p>Equivalent to <code>Kernel::gets</code>, except <code>readline</code>\nraises <code>EOFError</code> at end of file.\n",null,0],["readlines","ARGF","Ruby/classes/ARGF.html#method-i-readlines","(*args)","<p>Reads <code>ARGF</code>&#39;s current file in its entirety, returning an\n<code>Array</code> of its lines, one line per element. …\n",null,0],["readlines","IO","Ruby/classes/IO.html#method-c-readlines","(p1, p2 = v2, p3 = v3, p4 = v4, p5 = {})","<p>Reads the entire file specified by <em>name</em> as individual lines, and\nreturns those lines in an array. Lines …\n",null,0],["readlines","IO","Ruby/classes/IO.html#method-i-readlines","(*args)","<p>Reads all of the lines in <em>ios</em>, and returns them in\n<em>anArray</em>. Lines are separated by the optional <em>sep</em>. …\n",null,0],["readlines","Kernel","Ruby/classes/Kernel.html#method-i-readlines","(*args)","<p>Returns an array containing the lines returned by calling\n<code>Kernel.gets(<em>sep</em>)</code> until the end of file.\n",null,0],["readlink","File","Ruby/classes/File.html#method-c-readlink","(p1)","<p>Returns the name of the file referenced by the given link. Not available on\nall platforms.\n\n<pre>File.symlink(&quot;testfile&quot;, ...</pre>\n",null,0],["readme","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-readme","()","",null,1],["readme","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-readme","(path)","<p>Reads the given file at the source root and prints it in the console.\n<p>Example\n\n<pre>readme &quot;README&quot;</pre>\n",null,1],["readme","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-readme","()","",null,1],["readonly","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-readonly","(value = true)","",null,1],["readonly!","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-readonly-21","()","<p>Marks this record as read only.\n",null,1],["readonly?","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-i-readonly-3F","()","<p>Returns <code>true</code> if the record is read only. Records loaded\nthrough joins with piggy-back attributes will …\n",null,1],["readonly_attributes","ActiveRecord::ReadonlyAttributes::ClassMethods","Rails/classes/ActiveRecord/ReadonlyAttributes/ClassMethods.html#method-i-readonly_attributes","()","<p>Returns an array of all the attributes that have been specified as\nreadonly.\n",null,1],["readpartial","ARGF","Ruby/classes/ARGF.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the ARGF stream. It blocks only if\n<code>ARGF</code> has no data immediately available. …\n",null,0],["readpartial","IO","Ruby/classes/IO.html#method-i-readpartial","(*args)","<p>Reads at most <em>maxlen</em> bytes from the I/O stream. It blocks only if\n<em>ios</em> has no data immediately available. …\n",null,0],["real","Complex","Ruby/classes/Complex.html#method-i-real","()","<p>Returns the real part.\n",null,0],["real","Numeric","Ruby/classes/Numeric.html#method-i-real","()","<p>Returns self.\n",null,0],["real?","Complex","Ruby/classes/Complex.html#method-i-real-3F","()","<p>Returns false.\n",null,0],["real?","Numeric","Ruby/classes/Numeric.html#method-i-real-3F","()","<p>Returns <code>true</code> if <em>num</em> is a <code>Real</code> (i.e. non\n<code>Complex</code>).\n",null,0],["realdirpath","File","Ruby/classes/File.html#method-c-realdirpath","(p1, p2 = v2)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual\nfilesystem. The real pathname doesn&#39;t …\n",null,0],["realpath","File","Ruby/classes/File.html#method-c-realpath","(p1, p2 = v2)","<p>Returns the real (absolute) pathname of <em>pathname</em> in the actual\nfilesystem not containing symlinks or …\n",null,0],["reason","LocalJumpError","Ruby/classes/LocalJumpError.html#method-i-reason","()","<p>The reason this block was terminated: :break, :redo, :retry, :next,\n:return, or :noreason.\n",null,0],["receive","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-receive","(raw_mail)","<p>Receives a raw email, parses it into an email object, decodes it,\ninstantiates a new mailer, and passes …\n",null,1],["receive","ActionMailer::LogSubscriber","Rails/classes/ActionMailer/LogSubscriber.html#method-i-receive","(event)","",null,1],["receiver","Method","Ruby/classes/Method.html#method-i-receiver","()","<p>Returns the bound receiver of the method object.\n",null,0],["reconnect!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reconnect-21","()","<p>Disconnects from the database if already connected, and establishes a new\nconnection with the database. …\n",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reconnect-21","()","",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-reconnect-21","()","",null,1],["reconnect!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reconnect-21","()","<p>Close then reopen the connection.\n",null,1],["record","ActiveRecord::Migration::CommandRecorder","Rails/classes/ActiveRecord/Migration/CommandRecorder.html#method-i-record","(*command)","<p>record <code>command</code>. <code>command</code> should be a method name\nand arguments. For example:\n\n<pre>recorder.record(:method_name, ...</pre>\n",null,1],["record","ActiveSupport::Testing::Performance::Benchmarker","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html#method-i-record","()","",null,1],["record","ActiveSupport::Testing::Performance::Profiler","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html#method-i-record","()","",null,1],["record_key_for_dom_id","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-i-record_key_for_dom_id","(record)","<p>Returns a string representation of the key attribute(s) that is suitable\nfor use in an HTML DOM id.  …\n",null,1],["recreate_database","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-recreate_database","(name, options = {})","<p>Drops the database specified on the <code>name</code> attribute and creates\nit again using the provided <code>options</code>.\n",null,1],["rect","Complex","Ruby/classes/Complex.html#method-i-rect","()","<p>Returns an array; [cmp.real, cmp.imag].\n",null,0],["rect","Complex","Ruby/classes/Complex.html#method-c-rect","(p1, p2 = v2)","<p>Returns a complex object which denotes the given rectangular form.\n",null,0],["rect","Numeric","Ruby/classes/Numeric.html#method-i-rect","()","<p>Returns an array; [num, 0].\n",null,0],["rectangular","Complex","Ruby/classes/Complex.html#method-i-rectangular","()","<p>Returns an array; [cmp.real, cmp.imag].\n",null,0],["rectangular","Complex","Ruby/classes/Complex.html#method-c-rectangular","(p1, p2 = v2)","<p>Returns a complex object which denotes the given rectangular form.\n",null,0],["rectangular","Numeric","Ruby/classes/Numeric.html#method-i-rectangular","()","<p>Returns an array; [num, 0].\n",null,0],["recycle!","ActionController::TestResponse","Rails/classes/ActionController/TestResponse.html#method-i-recycle-21","()","",null,1],["recycle!","ActionController::Testing","Rails/classes/ActionController/Testing.html#method-i-recycle-21","()","",null,1],["redefine_method","Module","Rails/classes/Module.html#method-i-redefine_method","(method, &block)","",null,1],["redirect","ActionDispatch::Routing::Redirection","Rails/classes/ActionDispatch/Routing/Redirection.html#method-i-redirect","(*args, &block)","<p>Redirect any path to another path:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">match</span> <span class=\"ruby-string\">&quot;/stories&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-identifier\">redirect</span>(<span class=\"ruby-string\">&quot;/posts&quot;</span>)\n</pre>\n<p>You can also use interpolation …\n",null,1],["redirect_to","ActionController::Flash","Rails/classes/ActionController/Flash.html#method-i-redirect_to","(options = {}, response_status_and_flash = {})","",null,1],["redirect_to","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-redirect_to","(*args)","",null,1],["redirect_to","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-redirect_to","(event)","",null,1],["redirect_to","ActionController::Redirecting","Rails/classes/ActionController/Redirecting.html#method-i-redirect_to","(options = {}, response_status = {})","<p>Redirects the browser to the target specified in <code>options</code>. This\nparameter can take one of three forms: …\n",null,1],["redirect_to_url","ActionDispatch::TestProcess","Rails/classes/ActionDispatch/TestProcess.html#method-i-redirect_to_url","()","",null,1],["redirect_url","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-redirect_url","()","",null,1],["reduce","Enumerable","Ruby/classes/Enumerable.html#method-i-reduce","(p1 = v1, p2 = v2)","<p>Combines all elements of <em>enum</em> by applying a binary operation,\nspecified by a block or a symbol that names …\n",null,0],["ref","Mime::Type","Rails/classes/Mime/Type.html#method-i-ref","()","",null,1],["reference?","Rails::Generators::GeneratedAttribute","Rails/classes/Rails/Generators/GeneratedAttribute.html#method-i-reference-3F","()","",null,1],["references","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-references","(*args)","<p>Adds a reference. Optionally adds a <code>type</code> column, if\n<code>:polymorphic</code> option is provided. <code>references</code> and \n…\n",null,1],["references","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-references","(*args)","",null,1],["reflect_on_aggregation","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_aggregation","(aggregation)","<p>Returns the AggregateReflection object for the named\n<code>aggregation</code> (use the symbol).\n\n<pre>Account.reflect_on_aggregation(:balance) ...</pre>\n",null,1],["reflect_on_all_aggregations","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_aggregations","()","<p>Returns an array of AggregateReflection objects for all the aggregations in\nthe class.\n",null,1],["reflect_on_all_associations","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_associations","(macro = nil)","<p>Returns an array of AssociationReflection objects for all the associations\nin the class. If you only …\n",null,1],["reflect_on_all_autosave_associations","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_all_autosave_associations","()","<p>Returns an array of AssociationReflection objects for all associations\nwhich have <code>:autosave</code> enabled. …\n",null,1],["reflect_on_association","ActiveRecord::Reflection::ClassMethods","Rails/classes/ActiveRecord/Reflection/ClassMethods.html#method-i-reflect_on_association","(association)","<p>Returns the AssociationReflection object for the <code>association</code>\n(use the symbol).\n\n<pre>Account.reflect_on_association(:owner) ...</pre>\n",null,1],["refresh","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-refresh","(view)","<p>Receives a view object and return a template similar to self by using\n@virtual_path.\n<p>This method is useful …\n",null,1],["regexp","MatchData","Ruby/classes/MatchData.html#method-i-regexp","()","<p>Returns the regexp.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-regexp\">/a.*b/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;abc&quot;</span>)\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">regexp</span> <span class=\"ruby-comment\">#=&gt; /a.*b/</span>\n</pre>\n",null,0],["register","Mime::Type","Rails/classes/Mime/Type.html#method-c-register","(string, symbol, mime_type_synonyms = [], extension_synonyms = [], skip_lookup = false)","",null,1],["register_alias","Mime::Type","Rails/classes/Mime/Type.html#method-c-register_alias","(string, symbol, extension_synonyms = [])","<p>Registers an alias that&#39;s not used on mime type lookup, but can be\nreferenced directly. Especially …\n",null,1],["register_css_compressor","Sprockets::Compressors","Rails/classes/Sprockets/Compressors.html#method-c-register_css_compressor","(name, klass, options = {})","",null,1],["register_interceptor","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_interceptor","(interceptor)","<p>Register an Interceptor which will be called before mail is sent. Either a\nclass or a string can be passed …\n",null,1],["register_interceptors","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_interceptors","(*interceptors)","<p>Register one or more Interceptors which will be called before mail is sent.\n",null,1],["register_javascript_expansion","ActionView::Helpers::AssetTagHelper::JavascriptTagHelpers::ClassMethods","Rails/classes/ActionView/Helpers/AssetTagHelper/JavascriptTagHelpers/ClassMethods.html#method-i-register_javascript_expansion","(expansions)","<p>Register one or more javascript files to be included when\n<code>symbol</code> is passed to <code>javascript_include_tag</code> …\n",null,1],["register_js_compressor","Sprockets::Compressors","Rails/classes/Sprockets/Compressors.html#method-c-register_js_compressor","(name, klass, options = {})","",null,1],["register_observer","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_observer","(observer)","<p>Register an Observer which will be notified when mail is delivered. Either\na class or a string can be …\n",null,1],["register_observers","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-c-register_observers","(*observers)","<p>Register one or more Observers which will be notified when mail is\ndelivered.\n",null,1],["register_stylesheet_expansion","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers::ClassMethods","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers/ClassMethods.html#method-i-register_stylesheet_expansion","(expansions)","<p>Register one or more stylesheet files to be included when\n<code>symbol</code> is passed to <code>stylesheet_link_tag</code>. This …\n",null,1],["registered_css_compressor","Sprockets::Compressors","Rails/classes/Sprockets/Compressors.html#method-c-registered_css_compressor","(name)","",null,1],["registered_js_compressor","Sprockets::Compressors","Rails/classes/Sprockets/Compressors.html#method-c-registered_js_compressor","(name)","",null,1],["regular_class_path","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-regular_class_path","()","",null,1],["regular_update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(other_hash)","",null,1],["regular_update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_update","(other_hash)","",null,1],["regular_writer","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,1],["regular_writer","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-regular_writer","(key, value)","",null,1],["rehash","ENV","Ruby/classes/ENV.html#method-c-rehash","()","<p>Re-hashing the environment variables does nothing.  It is provided for\ncompatibility with Hash.\n",null,0],["rehash","Hash","Ruby/classes/Hash.html#method-i-rehash","()","<p>Rebuilds the hash based on the current hash values for each key. If values\nof key objects have changed …\n",null,0],["reinit_with","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-i-reinit_with","(coder)","<p>Reinitialize an Identity Map model object from <code>coder</code>.\n<code>coder</code> must contain the attributes necessary for …\n",null,1],["reject","Array","Ruby/classes/Array.html#method-i-reject","()","<p>Returns a new array containing the items in <code>self</code> for which the\nblock is not true. See also <code>Array#delete_if</code> …\n",null,0],["reject","ENV","Ruby/classes/ENV.html#method-c-reject","()","<p>Same as ENV#delete_if, but works on (and returns) a copy of the\nenvironment.\n",null,0],["reject","Enumerable","Ruby/classes/Enumerable.html#method-i-reject","()","<p>Returns an array for all elements of <em>enum</em> for which <em>block</em>\nis false (see also <code>Enumerable#find_all</code>).\n<p>If …\n",null,0],["reject","Hash","Ruby/classes/Hash.html#method-i-reject","()","<p>Same as <code>Hash#delete_if</code>, but works on (and returns) a copy of\nthe <em>hsh</em>. Equivalent to <code><em>hsh</em>.dup.delete_if</code> …\n",null,0],["reject","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-reject","(&block)","",null,1],["reject!","Array","Ruby/classes/Array.html#method-i-reject-21","()","<p>Equivalent to <code>Array#delete_if</code>, deleting elements from\n<code>self</code> for which the block evaluates to true, but …\n",null,0],["reject!","ENV","Ruby/classes/ENV.html#method-c-reject-21","()","<p>Equivalent to ENV#delete_if but returns <code>nil</code> if no changes were\nmade.\n<p>Returns an Enumerator if no block …\n",null,0],["reject!","Hash","Ruby/classes/Hash.html#method-i-reject-21","()","<p>Equivalent to <code>Hash#delete_if</code>, but returns <code>nil</code> if\nno changes were made.\n",null,0],["reject!","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-reject-21","()","",null,1],["release_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-release_connection","(with_id = current_connection_id)","<p>Signal that the thread is finished with the current connection.\n#release_connection releases the connection-thread …\n",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-release_savepoint","()","",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-release_savepoint","()","",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-release_savepoint","()","",null,1],["release_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-release_savepoint","()","",null,1],["reload","ActiveRecord::AutosaveAssociation","Rails/classes/ActiveRecord/AutosaveAssociation.html#method-i-reload","(options = nil)","<p>Reloads the attributes of the object as usual and clears\n<code>marked_for_destruction</code> flag.\n",null,1],["reload","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-reload","(options = nil)","<p>Reloads the attributes of this object from the database. The optional\noptions argument is passed to find …\n",null,1],["reload","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-reload","()","",null,1],["reload","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-reload","()","<p>A method to reload the attributes of this object from the remote web\nservice.\n<p>Examples\n\n<pre>my_branch = Branch.find(:first) ...</pre>\n",null,1],["reload!","Rails::Application::RoutesReloader","Rails/classes/Rails/Application/RoutesReloader.html#method-i-reload-21","()","",null,1],["reload!","Rails::ConsoleMethods","Rails/classes/Rails/ConsoleMethods.html#method-i-reload-21","(print=true)","<p>reloads the environment\n",null,1],["reload_dependencies?","Rails::Application","Rails/classes/Rails/Application.html#method-i-reload_dependencies-3F","()","",null,1],["reload_routes!","Rails::Application","Rails/classes/Rails/Application.html#method-i-reload_routes-21","()","<p>Reload application routes regardless if they changed or not.\n",null,1],["reloader","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-reloader","()","",null,1],["reloader_paths","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-reloader_paths","()","",null,1],["remainder","Bignum","Ruby/classes/Bignum.html#method-i-remainder","(p1)","<p>Returns the remainder after dividing <em>big</em> by <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">-1234567890987654321</span>.<span class=\"ruby-identifier\">remainder</span>(<span class=\"ruby-value\">13731</span>)      <span class=\"ruby-comment\">#=&gt; -6966 ...</span>\n</pre>\n",null,0],["remainder","Numeric","Ruby/classes/Numeric.html#method-i-remainder","(p1)","\n<pre>x.remainder(y) means x-y*(x/y).truncate</pre>\n<p>See <code>Numeric#divmod</code>.\n",null,0],["remote_addr=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-remote_addr-3D","(addr)","",null,1],["remote_ip","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-remote_ip","()","<p>Originating IP address, usually set by the RemoteIp middleware.\n",null,1],["remove","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove","(*column_names)","<p>Removes the column(s) from the table definition.\n<p>Examples\n\n<pre>t.remove(:qualification)\nt.remove(:qualification, ...</pre>\n",null,1],["remove","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-remove","(record)","",null,1],["remove_belongs_to","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_belongs_to","(*args)","",null,1],["remove_by_id","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-remove_by_id","(symbolized_sti_name, id)","",null,1],["remove_class_variable","Module","Ruby/classes/Module.html#method-i-remove_class_variable","(p1)","<p>Removes the definition of the <em>sym</em>, returning that constant&#39;s\nvalue.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Dummy</span>\n  <span class=\"ruby-identifier\">@@var</span> = <span class=\"ruby-value\">99</span>\n  <span class=\"ruby-identifier\">puts</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["remove_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_column","(table_name, *column_names)","<p>Removes the column(s) from the table definition.\n<p>Examples\n\n<pre>remove_column(:suppliers, :qualification)\nremove_columns(:suppliers, ...</pre>\n",null,1],["remove_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_column_sql","(table_name, *column_names)","",null,1],["remove_columns","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_columns","(table_name, *column_names)","",null,1],["remove_connection","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-remove_connection","(klass = self)","",null,1],["remove_connection","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-remove_connection","(klass)","<p>Remove the connection for this class. This will close the active connection\nand the defined connection …\n",null,1],["remove_filters!","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_filters-21","()","",null,1],["remove_hook_for","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-remove_hook_for","(*names)","<p>Remove a previously added hook.\n<p>Examples\n\n<pre>remove_hook_for :orm</pre>\n",null,1],["remove_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_index","(table_name, options = {})","<p>Remove the given index from the table.\n<p>Remove the index_accounts_on_column in the accounts table.\n\n<pre>remove_index ...</pre>\n",null,1],["remove_index","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_index","(options = {})","<p>Removes the given index from the table.\n<p>Examples\n<p>Remove the index_table_name_on_column in the table_name …\n",null,1],["remove_index_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_index_sql","(table_name, options = {})","",null,1],["remove_multiparameter_id","ActiveModel::MassAssignmentSecurity::PermissionSet","Rails/classes/ActiveModel/MassAssignmentSecurity/PermissionSet.html#method-i-remove_multiparameter_id","(key)","",null,1],["remove_possible_method","Module","Rails/classes/Module.html#method-i-remove_possible_method","(method)","",null,1],["remove_references","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_references","(*args)","<p>Removes a reference. Optionally removes a <code>type</code> column.\n<code>remove_references</code> and <code>remove_belongs_to</code> are\nacceptable. …\n",null,1],["remove_root","ActiveResource::Formats","Rails/classes/ActiveResource/Formats.html#method-c-remove_root","(data)","",null,1],["remove_silencers!","ActiveSupport::BacktraceCleaner","Rails/classes/ActiveSupport/BacktraceCleaner.html#method-i-remove_silencers-21","()","<p>Will remove all silencers, but leave in the filters. This is useful if your\ncontext of debugging suddenly …\n",null,1],["remove_timestamps","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-remove_timestamps","(table_name)","<p>Removes the timestamp columns (created_at and updated_at) from the table\ndefinition.\n<p>Examples\n\n<pre>remove_timestamps(:suppliers)</pre>\n",null,1],["remove_timestamps","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-remove_timestamps","()","<p>Removes the timestamp columns (<code>created_at</code> and\n<code>updated_at</code>) from the table.\n<p>Example\n\n<pre>t.remove_timestamps</pre>\n",null,1],["remove_timestamps_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-remove_timestamps_sql","(table_name)","",null,1],["rename","File","Ruby/classes/File.html#method-c-rename","(p1, p2)","<p>Renames the given file to the new name. Raises a\n<code>SystemCallError</code> if the file cannot be renamed.\n\n<pre>File.rename(&quot;afile&quot;, ...</pre>\n",null,0],["rename","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-rename","(column_name, new_column_name)","<p>Renames a column.\n<p>Example\n\n<pre>t.rename(:description, :name)</pre>\n",null,1],["rename_column","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column in a table.\n",null,1],["rename_column","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_column","(table_name, column_name, new_column_name)","<p>Renames a column.\n<p>Example\n\n<pre>rename_column(:suppliers, :description, :name)</pre>\n",null,1],["rename_column_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_column_sql","(table_name, column_name, new_column_name)","",null,1],["rename_index","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rename_index","(table_name, old_name, new_name)","",null,1],["rename_index","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_index","(table_name, old_name, new_name)","<p>Rename an index.\n<p>Rename the index_people_on_last_name index to index_users_on_last_name\n\n<pre>rename_index :people, ...</pre>\n",null,1],["rename_key","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-rename_key","(key, options = {})","",null,1],["rename_table","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)</pre>\n",null,1],["rename_table","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rename_table","(name, new_name)","<p>Renames a table. Also renames a table&#39;s primary key sequence if the\nsequence name matches the Active …\n",null,1],["rename_table","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-rename_table","(name, new_name)","<p>Renames a table.\n<p>Example:\n\n<pre>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)</pre>\n",null,1],["rename_table","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-rename_table","(table_name, new_name)","<p>Renames a table.\n<p>Example\n\n<pre>rename_table(&#39;octopuses&#39;, &#39;octopi&#39;)</pre>\n",null,1],["render","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-render","(*args, &block)","<p>Normalize arguments, options and then delegates render_to_body and sticks\nthe result in self.response_body. …\n",null,1],["render","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-render","(*args)","",null,1],["render","ActionView::Helpers::RenderingHelper","Rails/classes/ActionView/Helpers/RenderingHelper.html#method-i-render","(options = {}, locals = {}, &block)","<p>Returns the result of a render that&#39;s dictated by the options hash. The\nprimary options are:\n<p><code>:partial</code> …\n",null,1],["render","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-i-render","(context, options, block)","",null,1],["render","ActionView::Renderer","Rails/classes/ActionView/Renderer.html#method-i-render","(context, options)","<p>Main render entry point shared by AV and AC.\n",null,1],["render","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-render","(view, locals, buffer=nil, &block)","<p>Render a template. If the template was not compiled yet, it is done exactly\nbefore rendering.\n<p>This method …\n",null,1],["render","ActionView::TestCase::Behavior","Rails/classes/ActionView/TestCase/Behavior.html#method-i-render","(options = {}, local_assigns = {}, &block)","",null,1],["render","ActionView::TestCase::Behavior::Locals","Rails/classes/ActionView/TestCase/Behavior/Locals.html#method-i-render","(options = {}, local_assigns = {})","",null,1],["render_body","ActionView::Renderer","Rails/classes/ActionView/Renderer.html#method-i-render_body","(context, options)","<p>Render but returns a valid Rack body. If fibers are defined, we return a\nstreaming body that renders …\n",null,1],["render_collection","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-render_collection","(event)","",null,1],["render_collection","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-i-render_collection","()","",null,1],["render_partial","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-render_partial","(event)","",null,1],["render_partial","ActionView::PartialRenderer","Rails/classes/ActionView/PartialRenderer.html#method-i-render_partial","()","",null,1],["render_template","ActionView::LogSubscriber","Rails/classes/ActionView/LogSubscriber.html#method-i-render_template","(event)","",null,1],["render_to_body","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-render_to_body","(options = {})","<p>Raw rendering of a template to a Rack-compatible body. :api: plugin\n",null,1],["render_to_body","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-render_to_body","(options)","",null,1],["render_to_body","ActionController::Renderers","Rails/classes/ActionController/Renderers.html#method-i-render_to_body","(options)","",null,1],["render_to_string","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-render_to_string","(*args, &block)","<p>Raw rendering of a template to a string. Just convert the results of\nrender_response into a String. :api: …\n",null,1],["render_to_string","ActionController::Rendering","Rails/classes/ActionController/Rendering.html#method-i-render_to_string","(*)","<p>Overwrite render_to_string because body can now be set to a rack body.\n",null,1],["reopen","IO","Ruby/classes/IO.html#method-i-reopen","(p1, p2 = v2)","<p>Reassociates <em>ios</em> with the I/O stream given in <em>other_IO</em> or\nto a new stream opened on <em>path</em>. This may dynamically …\n",null,0],["reorder","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-reorder","(*args)","<p>Replaces any existing order defined on the relation with the specified\norder.\n\n<pre>User.order(&#39;email DESC&#39;).reorder(&#39;id ...</pre>\n",null,1],["reorder_characters","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-reorder_characters","(codepoints)","<p>Re-order codepoints so the string becomes canonical.\n",null,1],["repeated_combination","Array","Ruby/classes/Array.html#method-i-repeated_combination","(p1)","<p>When invoked with a block, yields all repeated combinations of length\n<em>n</em> of elements from <em>ary</em> and then …\n",null,0],["repeated_permutation","Array","Ruby/classes/Array.html#method-i-repeated_permutation","(p1)","<p>When invoked with a block, yield all repeated permutations of length\n<em>n</em> of the elements of <em>ary</em>, then return …\n",null,0],["replace","Array","Ruby/classes/Array.html#method-i-replace","(p1)","<p>Replaces the contents of <code>self</code> with the contents of\n<em>other_ary</em>, truncating or expanding if necessary.\n\n<pre>a ...</pre>\n",null,0],["replace","ENV","Ruby/classes/ENV.html#method-c-replace","(p1)","<p>Replaces the contents of the environment variables with the contents of\n<code>hash</code>.\n",null,0],["replace","Hash","Ruby/classes/Hash.html#method-i-replace","(p1)","<p>Replaces the contents of <em>hsh</em> with the contents of\n<em>other_hash</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">replace</span>({ <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["replace","String","Ruby/classes/String.html#method-i-replace","(p1)","<p>Replaces the contents and taintedness of <em>str</em> with the\ncorresponding values in <em>other_str</em>.\n\n<pre>s = &quot;hello&quot;  ...</pre>\n",null,0],["replace","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-replace","(other)","<p>When replacing with another hash, the initial order of our keys must come\nfrom the other hash -ordered …\n",null,1],["replacement","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-replacement","()","<p>Returns the replacement string.\n\n<pre>ec = Encoding::Converter.new(&quot;euc-jp&quot;, &quot;us-ascii&quot;)\np ec.replacement   ...</pre>\n",null,0],["replacement=","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-replacement-3D","(p1)","<p>Sets the replacement string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">ec</span> = <span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Converter</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;utf-8&quot;</span>, <span class=\"ruby-string\">&quot;us-ascii&quot;</span>, :<span class=\"ruby-keyword\">undef</span> =<span class=\"ruby-operator\">&gt;</span> :<span class=\"ruby-identifier\">replace</span>)\n<span class=\"ruby-identifier\">ec</span>.<span class=\"ruby-identifier\">replacement</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["replicate","Encoding","Ruby/classes/Encoding.html#method-i-replicate","(p1)","<p>Returns a replicated encoding of <em>enc</em> whose name is <em>name</em>.\nThe new encoding should have the same byte structure …\n",null,0],["report","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-report","(p1 = v1)","<p>Writes the GC::Profiler#result to <code>$stdout</code> or the given IO\nobject.\n",null,0],["report","ActiveSupport::Testing::Performance::Performer","Rails/classes/ActiveSupport/Testing/Performance/Performer.html#method-i-report","()","",null,1],["repository","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-repository","()","",null,1],["request","ActiveResource::LogSubscriber","Rails/classes/ActiveResource/LogSubscriber.html#method-i-request","(event)","",null,1],["request_http_basic_authentication","ActionController::HttpAuthentication::Basic::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Basic/ControllerMethods.html#method-i-request_http_basic_authentication","(realm = \"Application\")","",null,1],["request_http_digest_authentication","ActionController::HttpAuthentication::Digest::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Digest/ControllerMethods.html#method-i-request_http_digest_authentication","(realm = \"Application\", message = nil)","<p>Render output including the HTTP Digest authentication header\n",null,1],["request_http_token_authentication","ActionController::HttpAuthentication::Token::ControllerMethods","Rails/classes/ActionController/HttpAuthentication/Token/ControllerMethods.html#method-i-request_http_token_authentication","(realm = \"Application\")","",null,1],["request_method","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-request_method","()","<p>Returns the HTTP method that the application should see. In the case where\nthe method was overridden …\n",null,1],["request_method=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-request_method-3D","(method)","",null,1],["request_method_symbol","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-request_method_symbol","()","<p>Returns a symbol form of the #request_method\n",null,1],["request_parameters","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-request_parameters","()","",null,1],["request_uri=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-request_uri-3D","(uri)","",null,1],["request_via_redirect","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-request_via_redirect","(http_method, path, parameters = nil, headers = nil)","<p>Performs a request using the specified method, following any subsequent\nredirect. Note that the redirects …\n",null,1],["requests","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-c-requests","()","",null,1],["requests","ActiveResource::HttpMock","Rails/classes/ActiveResource/HttpMock.html#method-c-requests","()","<p>Returns an array of all request objects that have been sent to the mock.\nYou can use this to check if …\n",null,1],["require","Kernel","Ruby/classes/Kernel.html#method-i-require","(p1)","<p>Loads the given <code>name</code>, returning <code>true</code> if\nsuccessful and <code>false</code> if the feature is already loaded.\n<p>If the …\n",null,0],["require_engine","ActionView::Template::Handlers::Builder","Rails/classes/ActionView/Template/Handlers/Builder.html#method-i-require_engine","()","",null,1],["require_fixture_classes","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-require_fixture_classes","(fixture_names = nil)","",null,1],["require_relative","Kernel","Ruby/classes/Kernel.html#method-i-require_relative","(p1)","<p>Ruby tries to load the library named <em>string</em> relative to the\nrequiring file&#39;s path.  If the file&#39;s …\n",null,0],["require_tzinfo","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-require_tzinfo","()","",null,1],["requires_reloading?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-requires_reloading-3F","()","<p>Returns true if its required to reload the connection between requests for\ndevelopment mode. This is …\n",null,1],["requires_reloading?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-requires_reloading-3F","()","",null,1],["rescue_action","ActionController::Compatibility","Rails/classes/ActionController/Compatibility.html#method-i-rescue_action","(env)","",null,1],["rescue_action_without_handler","ActionController::TestCase::RaiseActionExceptions","Rails/classes/ActionController/TestCase/RaiseActionExceptions.html#method-i-rescue_action_without_handler","(e)","",null,1],["rescue_from","ActionDispatch::Rescue","Rails/classes/ActionDispatch/Rescue.html#method-i-rescue_from","(exception, rescuer)","",null,1],["rescue_from","ActiveSupport::Rescuable::ClassMethods","Rails/classes/ActiveSupport/Rescuable/ClassMethods.html#method-i-rescue_from","(*klasses, &block)","<p>Rescue exceptions raised in controller actions.\n<p><code>rescue_from</code> receives a series of exception classes or …\n",null,1],["rescue_responses","ActionDispatch::ShowExceptions","Rails/classes/ActionDispatch/ShowExceptions.html#method-c-rescue_responses","()","",null,1],["rescue_template","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-rescue_template","()","",null,1],["rescue_templates","ActionDispatch::ShowExceptions","Rails/classes/ActionDispatch/ShowExceptions.html#method-c-rescue_templates","()","",null,1],["rescue_with_handler","ActionController::Rescue","Rails/classes/ActionController/Rescue.html#method-i-rescue_with_handler","(exception)","",null,1],["rescue_with_handler","ActiveSupport::Rescuable","Rails/classes/ActiveSupport/Rescuable.html#method-i-rescue_with_handler","(exception)","<p>Tries to rescue the exception by looking up and calling a registered\nhandler.\n",null,1],["reset","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-reset","()","",null,1],["reset!","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-reset-21","()","<p>Reset the current session. This is useful for testing multiple sessions in\na single test case.\n",null,1],["reset!","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-i-reset-21","()","<p>Resets the instance. This can be used to reset the state information in an\nexisting session instance, …\n",null,1],["reset!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-reset-21","()","<p>Reset the state of this connection, directing the DBMS to clear\ntransactions and other connection-related …\n",null,1],["reset!","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-reset-21","()","",null,1],["reset!","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-reset-21","()","",null,1],["reset!","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-reset-21","()","",null,1],["reset!","ActiveResource::HttpMock","Rails/classes/ActiveResource/HttpMock.html#method-c-reset-21","()","<p>Deletes all logged requests and responses.\n",null,1],["reset_cache","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-c-reset_cache","()","",null,1],["reset_callbacks","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-reset_callbacks","(symbol)","<p>Remove all set callbacks for the given event.\n",null,1],["reset_column_information","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-reset_column_information","()","<p>Resets all the cached information about columns, which will cause them to\nbe reloaded on the next request. …\n",null,1],["reset_counters","ActiveRecord::CounterCache","Rails/classes/ActiveRecord/CounterCache.html#method-i-reset_counters","(id, *counters)","<p>Resets one or more counter caches to their correct value using an SQL count\nquery. This is useful when …\n",null,1],["reset_cycle","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-reset_cycle","(name = \"default\")","<p>Resets a cycle so that it starts from the first element the next time it is\ncalled. Pass in <code>name</code> to reset …\n",null,1],["reset_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-reset_locking_column","()","<p>Reset the column used for optimistic locking back to the\n<code>lock_version</code> default.\n",null,1],["reset_runtime","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-reset_runtime","()","",null,1],["reset_sequence!","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-reset_sequence-21","(table, column, sequence = nil)","<p>Set the sequence to the max value of the table&#39;s column.\n",null,1],["reset_session","ActionController::RackDelegation","Rails/classes/ActionController/RackDelegation.html#method-i-reset_session","()","",null,1],["reset_session","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-reset_session","()","<p>TODO This should be broken apart into AD::Request::Session and probably be\nincluded by the session middleware. …\n",null,1],["resolve","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-c-resolve","(uri)","",null,1],["resolve","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-c-resolve","(uri)","",null,1],["resource","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resource","(*resources, &block)","<p>Sometimes, you have a resource that clients always look up without\nreferencing an ID. A common example, …\n",null,1],["resource_errors","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-resource_errors","()","",null,1],["resource_location","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-resource_location","()","<p>Returns the resource location by retrieving it from the options or\nreturning the resources array.\n",null,1],["resourceful?","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-resourceful-3F","()","<p>Checks whether the resource responds to the current format or not.\n",null,1],["resources","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources","(*resources, &block)","<p>In Rails, a resourceful route provides a mapping between HTTP verbs and\nURLs and controller actions. …\n",null,1],["resources_path_names","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-resources_path_names","(options)","",null,1],["respond","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-respond","()","<p>Main entry point for responder responsible to dispatch to the proper\nformat.\n",null,1],["respond_to","ActionController::MimeResponds","Rails/classes/ActionController/MimeResponds.html#method-i-respond_to","(*mimes, &block)","<p>Without web-service support, an action which collects the data for\ndisplaying a list of people might …\n",null,1],["respond_to","ActionController::MimeResponds::ClassMethods","Rails/classes/ActionController/MimeResponds/ClassMethods.html#method-i-respond_to","(*mimes)","<p>Defines mime types that are rendered by default when invoking\n<code>respond_with</code>.\n<p>Examples:\n\n<pre>respond_to :html, ...</pre>\n",null,1],["respond_to","ActiveResource::HttpMock","Rails/classes/ActiveResource/HttpMock.html#method-c-respond_to","(*args)","<p>Accepts a block which declares a set of requests and responses for the\nHttpMock to respond to in the …\n",null,1],["respond_to?","Object","Ruby/classes/Object.html#method-i-respond_to-3F","(p1, p2 = v2)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method.\nPrivate methods are included in the search only if …\n",null,0],["respond_to?","ActionDispatch::BodyProxy","Rails/classes/ActionDispatch/BodyProxy.html#method-i-respond_to-3F","(*args)","",null,1],["respond_to?","ActionDispatch::Integration::Runner","Rails/classes/ActionDispatch/Integration/Runner.html#method-i-respond_to-3F","(method, include_private = false)","",null,1],["respond_to?","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-respond_to-3F","(method)","",null,1],["respond_to?","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-respond_to-3F","(method, include_private_methods = false)","",null,1],["respond_to?","ActiveRecord::Delegation","Rails/classes/ActiveRecord/Delegation.html#method-i-respond_to-3F","(method, include_private = false)","",null,1],["respond_to?","ActiveRecord::DynamicMatchers","Rails/classes/ActiveRecord/DynamicMatchers.html#method-i-respond_to-3F","(method_id, include_private = false)","",null,1],["respond_to?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-respond_to-3F","(method, include_priv = false)","<p>A method to determine if an object responds to a message (e.g., a method\ncall). In Active Resource, a …\n",null,1],["respond_to?","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-respond_to-3F","(method, include_private = false)","",null,1],["respond_to?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-respond_to-3F","(method, include_private=false)","<p>Returns <code>true</code> if <em>obj</em> responds to the given method.\nPrivate methods are included in the search only if …\n",null,1],["respond_to?","ActiveSupport::OrderedOptions","Rails/classes/ActiveSupport/OrderedOptions.html#method-i-respond_to-3F","(name)","",null,1],["respond_to?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-respond_to-3F","(sym, include_priv = false)","<p>Ensure proxy class responds to all methods that underlying time instance\nresponds to.\n",null,1],["respond_to?","Rails::Railtie::Configurable::ClassMethods","Rails/classes/Rails/Railtie/Configurable/ClassMethods.html#method-i-respond_to-3F","(*args)","",null,1],["respond_to?","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-respond_to-3F","(name)","",null,1],["respond_to_missing?","Object","Ruby/classes/Object.html#method-i-respond_to_missing-3F","(p1, p2)","<p>Hook method to return whether the <em>obj</em> can respond to <em>id</em>\nmethod or not.\n<p>See #respond_to?.\n",null,0],["respond_to_without_attributes?","ActiveModel::AttributeMethods","Rails/classes/ActiveModel/AttributeMethods.html#method-i-respond_to_without_attributes-3F","(method, include_private_methods = false)","<p>A Person object with a name attribute can ask\n<code>person.respond_to?(:name)</code>,\n<code>person.respond_to?(:name=)</code>, …\n",null,1],["respond_to_without_attributes?","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-respond_to_without_attributes-3F","(method, include_priv = false)","<p>For checking <code>respond_to?</code> without searching the attributes\n(which is faster).\n",null,1],["respond_with","ActionController::MimeResponds","Rails/classes/ActionController/MimeResponds.html#method-i-respond_with","(*resources, &block)","<p>respond_with wraps a resource around a responder for default\nrepresentation. First it invokes respond_to …\n",null,1],["response_body=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-response_body-3D","(val)","",null,1],["response_body=","ActionController::RackDelegation","Rails/classes/ActionController/RackDelegation.html#method-i-response_body-3D","(body)","",null,1],["response_code","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-response_code","()","<p>The response code of the request\n",null,1],["response_from_page","ActionDispatch::Assertions::SelectorAssertions","Rails/classes/ActionDispatch/Assertions/SelectorAssertions.html#method-i-response_from_page","()","<p><code>assert_select</code> and <code>css_select</code> call this to obtain\nthe content in the HTML page.\n",null,1],["response_overridden?","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-response_overridden-3F","()","",null,1],["responses","ActiveResource::HttpMock","Rails/classes/ActiveResource/HttpMock.html#method-c-responses","()","<p>Returns the list of requests and their mocked responses. Look up a response\nfor a request using <code>responses.assoc</code> …\n",null,1],["restore","Marshal","Ruby/classes/Marshal.html#method-c-restore","(p1, p2 = v2)","<p>Returns the result of converting the serialized data in source into a Ruby\nobject (possibly with associated …\n",null,0],["result","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-result","()","<p>Returns a profile data report such as:\n\n<pre>GC 1 invokes.\nIndex    Invoke Time(sec)       Use Size(byte)   ...</pre>\n",null,0],["result","StopIteration","Ruby/classes/StopIteration.html#method-i-result","()","<p>Returns the return value of the iterator.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">o</span> = <span class=\"ruby-constant\">Object</span>.<span class=\"ruby-identifier\">new</span>\n<span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">o</span>.<span class=\"ruby-identifier\">each</span>\n  <span class=\"ruby-keyword\">yield</span> <span class=\"ruby-value\">1</span>\n  <span class=\"ruby-keyword\">yield</span> <span class=\"ruby-value\">2</span>\n  <span class=\"ruby-keyword\">yield</span> <span class=\"ruby-value\">3</span>\n  <span class=\"ruby-value\">100</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["resume","Fiber","Ruby/classes/Fiber.html#method-i-resume","(*args)","<p>Resumes the fiber from the point at which the last <code>Fiber.yield</code>\nwas called, or starts running it if it …\n",null,0],["retrieve_autoindex","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-retrieve_autoindex","(pre_match)","",null,1],["retrieve_connection","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-retrieve_connection","()","",null,1],["retrieve_connection_pool","ActiveRecord::ConnectionAdapters::ConnectionHandler","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionHandler.html#method-i-retrieve_connection_pool","(klass)","",null,1],["retrieve_object","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-retrieve_object","(object)","",null,1],["reverse","Array","Ruby/classes/Array.html#method-i-reverse","()","<p>Returns a new array containing <code>self</code>&#39;s elements in reverse\norder.\n\n<pre class=\"ruby\">[ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ].<span class=\"ruby-identifier\">reverse</span>   <span class=\"ruby-comment\">#=&gt; [&quot;c&quot;, ...</span>\n</pre>\n",null,0],["reverse","String","Ruby/classes/String.html#method-i-reverse","()","<p>Returns a new string with the characters from <em>str</em> in reverse\norder.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;stressed&quot;</span>.<span class=\"ruby-identifier\">reverse</span>   <span class=\"ruby-comment\">#=&gt; &quot;desserts&quot;</span>\n</pre>\n",null,0],["reverse","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-reverse","()","<p>Reverses all characters in the string.\n<p>Example:\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&#39;Café&#39;</span>.<span class=\"ruby-identifier\">mb_chars</span>.<span class=\"ruby-identifier\">reverse</span>.<span class=\"ruby-identifier\">to_s</span> <span class=\"ruby-comment\"># =&gt; &#39;éfaC&#39;</span>\n</pre>\n",null,1],["reverse!","Array","Ruby/classes/Array.html#method-i-reverse-21","()","<p>Reverses <code>self</code> in place.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">reverse!</span>       <span class=\"ruby-comment\">#=&gt; [&quot;c&quot;, &quot;b&quot;, &quot;a&quot;]</span>\n<span class=\"ruby-identifier\">a</span>                <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["reverse!","String","Ruby/classes/String.html#method-i-reverse-21","()","<p>Reverses <em>str</em> in place.\n",null,0],["reverse_each","Array","Ruby/classes/Array.html#method-i-reverse_each","()","<p>Same as <code>Array#each</code>, but traverses <code>self</code> in reverse\norder.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-string\">&quot;a&quot;</span>, <span class=\"ruby-string\">&quot;b&quot;</span>, <span class=\"ruby-string\">&quot;c&quot;</span> ]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">reverse_each</span> {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">print</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["reverse_each","Enumerable","Ruby/classes/Enumerable.html#method-i-reverse_each","(*args)","<p>Builds a temporary array and traverses that array in reverse order.\n<p>If no block is given, an enumerator …\n",null,0],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Performs the opposite of merge, with the keys and values from the first\nhash taking precedence over the …\n",null,1],["reverse_merge","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge","(other_hash)","<p>Performs the opposite of merge, with the keys and values from the first\nhash taking precedence over the …\n",null,1],["reverse_merge","Hash","Rails/classes/Hash.html#method-i-reverse_merge","(other_hash)","<p>Merges the caller into <code>other_hash</code>. For example,\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">options</span> = <span class=\"ruby-identifier\">options</span>.<span class=\"ruby-identifier\">reverse_merge</span>(:<span class=\"ruby-identifier\">size</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">25</span>, :<span class=\"ruby-identifier\">velocity</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","",null,1],["reverse_merge!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-reverse_merge-21","(other_hash)","",null,1],["reverse_merge!","Hash","Rails/classes/Hash.html#method-i-reverse_merge-21","(other_hash)","<p>Destructive <code>reverse_merge</code>.\n",null,1],["reverse_order","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-reverse_order","()","",null,1],["reverse_update","Hash","Rails/classes/Hash.html#method-i-reverse_update","(other_hash)","",null,1],["revert","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-revert","()","",null,1],["reverting?","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-reverting-3F","()","",null,1],["rewind","ARGF","Ruby/classes/ARGF.html#method-i-rewind","()","<p>Positions the current file to the beginning of input, resetting\n<code>ARGF.lineno</code> to zero.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">readline</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["rewind","Dir","Ruby/classes/Dir.html#method-i-rewind","()","<p>Repositions <em>dir</em> to the first entry.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">read</span>     <span class=\"ruby-comment\">#=&gt; &quot;.&quot;</span>\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">rewind</span>   <span class=\"ruby-comment\">#=&gt; #&lt;Dir:0x401b3fb0&gt; ...</span>\n</pre>\n",null,0],["rewind","Enumerator","Ruby/classes/Enumerator.html#method-i-rewind","()","<p>Rewinds the enumeration sequence to the beginning.\n<p>If the enclosed object responds to a “rewind” …\n",null,0],["rewind","IO","Ruby/classes/IO.html#method-i-rewind","()","<p>Positions <em>ios</em> to the beginning of input, resetting\n<code>lineno</code> to zero.\n\n<pre>f = File.new(&quot;testfile&quot;)\nf.readline ...</pre>\n",null,0],["rfc2822","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc2822","()","",null,1],["rfc3339","Date","Rails/classes/Date.html#method-i-rfc3339","()","",null,1],["rfc822","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-rfc822","()","",null,1],["rid","Process::GID","Ruby/classes/Process/GID.html#method-c-rid","()","<p>Returns the (real) group ID for this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">gid</span>   <span class=\"ruby-comment\">#=&gt; 500</span>\n</pre>\n",null,0],["rid","Process::UID","Ruby/classes/Process/UID.html#method-c-rid","()","<p>Returns the (real) user ID of this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["rindex","Array","Ruby/classes/Array.html#method-i-rindex","(p1)","<p>Returns the index of the last object in <code>self</code> <code>==</code>\nto <em>obj</em>. If a block is given instead of an argument, returns …\n",null,0],["rindex","String","Ruby/classes/String.html#method-i-rindex","(p1, p2 = v2)","<p>Returns the index of the last occurrence of the given <em>substring</em> or\npattern (<em>regexp</em>) in <em>str</em>. Returns  …\n",null,0],["rindex","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-rindex","(needle, offset=nil)","<p>Returns the position <em>needle</em> in the string, counting in codepoints,\nsearching backward from <em>offset</em> or …\n",null,1],["rjust","String","Ruby/classes/String.html#method-i-rjust","(*args)","<p>If <em>integer</em> is greater than the length of <em>str</em>, returns a\nnew <code>String</code> of length <em>integer</em> with <em>str</em> right\njustified …\n",null,0],["rjust","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-rjust","(integer, padstr=' ')","<p>Works just like <code>String#rjust</code>, only integer specifies\ncharacters instead of bytes.\n<p>Example:\n\n<pre>&quot;¾ cup&quot;.mb_chars.rjust(8).to_s ...</pre>\n",null,1],["rmdir","Dir","Ruby/classes/Dir.html#method-c-rmdir","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn&#39;t empty.\n",null,0],["robots","","Rails/files/rails/railties/lib/rails/generators/rails/app/templates/public/robots_txt.html","","<p>See www.robotstxt.org/wc/norobots.html for documentation on how to use the\nrobots.txt file\n<p>To ban all …\n",null,1],["rollback_active_record_state!","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-rollback_active_record_state-21","()","<p>Reset id and @new_record if the transaction rolls back.\n",null,1],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_db_transaction","()","<p>Rolls back the transaction (and turns on auto-committing). Must be done if\nthe transaction block raises …\n",null,1],["rollback_db_transaction","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rollback_db_transaction","()","<p>Aborts a transaction.\n",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_to_savepoint","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-rollback_to_savepoint","()","",null,1],["rollback_transaction_records","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-rollback_transaction_records","(rollback)","<p>Send a rollback message to all records after they have been rolled back. If\nrollback is false, only rollback …\n",null,1],["root","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-root","(options = {})","<p>You can specify what Rails should route “/” to with the root method:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">root</span> :<span class=\"ruby-identifier\">to</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;pages#main&#39;</span>\n</pre>\n",null,1],["root","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-root","(options={})","",null,1],["root","Rails","Rails/classes/Rails.html#method-c-root","()","",null,1],["root=","Rails::Engine::Configuration","Rails/classes/Rails/Engine/Configuration.html#method-i-root-3D","(value)","",null,1],["rotate","Array","Ruby/classes/Array.html#method-i-rotate","(p1 = v1)","<p>Returns new array by rotating <code>self</code> so that the element at\n<code>cnt</code> in <code>self</code> is the first element of the new …\n",null,0],["rotate!","Array","Ruby/classes/Array.html#method-i-rotate-21","(p1 = v1)","<p>Rotates <code>self</code> in place so that the element at <code>cnt</code>\ncomes first, and returns <code>self</code>.  If <code>cnt</code> is\nnegative then …\n",null,0],["round","Float","Ruby/classes/Float.html#method-i-round","(p1 = v1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","Integer","Ruby/classes/Integer.html#method-i-round","(p1)","<p>Rounds <em>flt</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","Numeric","Ruby/classes/Numeric.html#method-i-round","(*args)","<p>Rounds <em>num</em> to a given precision in decimal digits (default 0\ndigits). Precision may be negative.  Returns …\n",null,0],["round","Rational","Ruby/classes/Rational.html#method-i-round","(*args)","<p>Returns the truncated value (toward the nearest integer; 0.5 =&gt; 1; -0.5\n=&gt; -1).\n<p>For example:\n\n<pre>Rational(3).round ...</pre>\n",null,0],["round","Time","Ruby/classes/Time.html#method-i-round","(p1 = v1)","<p>Rounds sub seconds to a given precision in decimal digits (0 digits by\ndefault). It returns a new time …\n",null,0],["round","Float","Rails/classes/Float.html#method-i-round","(precision = nil)","<p>Rounds the float with the specified precision.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">x</span> = <span class=\"ruby-value\">1.337</span>\n<span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">round</span>    <span class=\"ruby-comment\"># =&gt; 1</span>\n<span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">round</span>(<span class=\"ruby-value\">1</span>) <span class=\"ruby-comment\"># =&gt; 1.3</span>\n<span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">round</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["route","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-route","(routing_code)","<p>Make an entry in Rails routing file config/routes.rb\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">route</span> <span class=\"ruby-string\">&quot;root :to =&gt; &#39;welcome&#39;&quot;</span>\n</pre>\n",null,1],["route_key","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for\nnamespaced models regarding whether …\n",null,1],["route_url","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-route_url","()","",null,1],["routes","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-routes","()","",null,1],["routes?","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-routes-3F","()","",null,1],["routes_url_helpers","Rails::Engine","Rails/classes/Rails/Engine.html#method-i-routes_url_helpers","()","",null,1],["rpartition","String","Ruby/classes/String.html#method-i-rpartition","(p1)","<p>Searches <em>sep</em> or pattern (<em>regexp</em>) in the string from the\nend of the string, and returns the part before …\n",null,0],["rstrip","String","Ruby/classes/String.html#method-i-rstrip","()","<p>Returns a copy of <em>str</em> with trailing whitespace removed. See also\n<code>String#lstrip</code> and <code>String#strip</code>.\n\n<pre>&quot;  hello ...</pre>\n",null,0],["rstrip","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-rstrip","()","<p>Strips entire range of Unicode whitespace from the right of the string.\n",null,1],["rstrip!","String","Ruby/classes/String.html#method-i-rstrip-21","()","<p>Removes trailing whitespace from <em>str</em>, returning <code>nil</code>\nif no change was made. See also <code>String#lstrip!</code> and …\n",null,0],["ruby_debugger_gemfile_entry","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-ruby_debugger_gemfile_entry","()","",null,1],["run","Thread","Ruby/classes/Thread.html#method-i-run","()","<p>Wakes up <em>thr</em>, making it eligible for scheduling.\n\n<pre>a = Thread.new { puts &quot;a&quot;; Thread.stop; puts &quot;c&quot; }\nsleep ...</pre>\n",null,0],["run","ActiveSupport::Testing::Isolation::MiniTest","Rails/classes/ActiveSupport/Testing/Isolation/MiniTest.html#method-i-run","(runner)","",null,1],["run","ActiveSupport::Testing::Isolation::TestUnit","Rails/classes/ActiveSupport/Testing/Isolation/TestUnit.html#method-i-run","(result)","",null,1],["run","ActiveSupport::Testing::Performance::Benchmarker","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html#method-i-run","()","",null,1],["run","ActiveSupport::Testing::Performance::ForClassicTestUnit","Rails/classes/ActiveSupport/Testing/Performance/ForClassicTestUnit.html#method-i-run","(result)","",null,1],["run","ActiveSupport::Testing::Performance::ForMiniTest","Rails/classes/ActiveSupport/Testing/Performance/ForMiniTest.html#method-i-run","(runner)","",null,1],["run","ActiveSupport::Testing::Performance::Profiler","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html#method-i-run","()","",null,1],["run","ActiveSupport::Testing::SetupAndTeardown::ForClassicTestUnit","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ForClassicTestUnit.html#method-i-run","(result)","<p>This redefinition is unfortunate but test/unit shows us no alternative.\nDoubly unfortunate: hax to support …\n",null,1],["run","ActiveSupport::Testing::SetupAndTeardown::ForMiniTest","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ForMiniTest.html#method-i-run","(runner)","",null,1],["run","Rails::Initializable::Initializer","Rails/classes/Rails/Initializable/Initializer.html#method-i-run","(*args)","",null,1],["run","Sprockets::Bootstrap","Rails/classes/Sprockets/Bootstrap.html#method-i-run","()","<p>TODO: Get rid of config.assets.enabled\n",null,1],["run_bundle","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-run_bundle","()","",null,1],["run_callbacks","ActiveSupport::Callbacks","Rails/classes/ActiveSupport/Callbacks.html#method-i-run_callbacks","(kind, *args, &block)","<p>Runs the callbacks for the given event.\n<p>Calls the before and around callbacks in the order they were set, …\n",null,1],["run_gc","ActiveSupport::Testing::Performance","Rails/classes/ActiveSupport/Testing/Performance.html#method-i-run_gc","()","",null,1],["run_generator","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-i-run_generator","(args=self.default_arguments, config={})","<p>Runs the generator configured for this class. The first argument is an\narray like command line arguments: …\n",null,1],["run_in_isolation","ActiveSupport::Testing::Isolation::Forking","Rails/classes/ActiveSupport/Testing/Isolation/Forking.html#method-i-run_in_isolation","(&blk)","",null,1],["run_in_isolation","ActiveSupport::Testing::Isolation::Subprocess","Rails/classes/ActiveSupport/Testing/Isolation/Subprocess.html#method-i-run_in_isolation","(&blk)","<p>Crazy H4X to get this working in windows / jruby with no forking.\n",null,1],["run_in_transaction?","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-run_in_transaction-3F","()","",null,1],["run_initializers","Rails::Initializable","Rails/classes/Rails/Initializable.html#method-i-run_initializers","(group=:default, *args)","",null,1],["run_load_hooks","ActiveSupport","Rails/classes/ActiveSupport.html#method-c-run_load_hooks","(name, base = Object)","",null,1],["run_profile","ActiveSupport::Testing::Performance","Rails/classes/ActiveSupport/Testing/Performance.html#method-i-run_profile","(metric)","",null,1],["run_test","ActiveSupport::Testing::Performance::ForClassicTestUnit","Rails/classes/ActiveSupport/Testing/Performance/ForClassicTestUnit.html#method-i-run_test","(metric, mode)","",null,1],["run_test","ActiveSupport::Testing::Performance::ForMiniTest","Rails/classes/ActiveSupport/Testing/Performance/ForMiniTest.html#method-i-run_test","(metric, mode)","",null,1],["run_validations!","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-run_validations-21","()","",null,1],["run_validations!","ActiveModel::Validations::Callbacks","Rails/classes/ActiveModel/Validations/Callbacks.html#method-i-run_validations-21","()","<p>Overwrite run validations to include callbacks.\n",null,1],["run_warmup","ActiveSupport::Testing::Performance","Rails/classes/ActiveSupport/Testing/Performance.html#method-i-run_warmup","()","",null,1],["runtime","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-runtime","()","",null,1],["runtime=","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-c-runtime-3D","(value)","",null,1],["safe_concat","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-safe_concat","(string)","",null,1],["safe_concat","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-safe_concat","(value)","",null,1],["safe_constantize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-safe_constantize","(camel_cased_word)","<p>Tries to find a constant with the name specified in the argument string:\n\n<pre>&quot;Module&quot;.safe_constantize    ...</pre>\n",null,1],["safe_constantize","String","Rails/classes/String.html#method-i-safe_constantize","()","<p><code>safe_constantize</code> tries to find a declared constant with the\nname specified in the string. It returns …\n",null,1],["safe_get","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-safe_get","(key)","",null,1],["safe_join","ActionView::Helpers::OutputSafetyHelper","Rails/classes/ActionView/Helpers/OutputSafetyHelper.html#method-i-safe_join","(array, sep=$,)","<p>This method returns a html safe string similar to what\n<code>Array#join</code> would return. All items in the array, …\n",null,1],["safe_level","Thread","Ruby/classes/Thread.html#method-i-safe_level","()","<p>Returns the safe level in effect for <em>thr</em>. Setting thread-local\nsafe levels can help when implementing …\n",null,0],["sample","Array","Ruby/classes/Array.html#method-i-sample","(p1)","<p>Choose a random element or <code>n</code> random elements from the array.\nThe elements are chosen by using random …\n",null,0],["sample","Array","Rails/classes/Array.html#method-i-sample","(n=nil)","<p>Backport of Array#sample based on Marc-Andre Lafortune&#39;s\ngithub.com/marcandre/backports/ Returns …\n",null,1],["sanitize","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize","(html, options = {})","<p>This <code>sanitize</code> helper will html encode all tags and strip all\nattributes that aren&#39;t specifically …\n",null,1],["sanitize","ActiveModel::MassAssignmentSecurity::Sanitizer","Rails/classes/ActiveModel/MassAssignmentSecurity/Sanitizer.html#method-i-sanitize","(attributes, authorizer)","<p>Returns all attributes not denied by the authorizer.\n",null,1],["sanitize","HTML::FullSanitizer","Rails/classes/HTML/FullSanitizer.html#method-i-sanitize","(text, options = {})","",null,1],["sanitize","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-sanitize","(text, options = {})","",null,1],["sanitize_conditions","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_conditions","(condition, table_name = self.table_name)","",null,1],["sanitize_css","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of CSS code. Used by <code>sanitize</code> when it comes\nacross a style attribute.\n",null,1],["sanitize_css","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-sanitize_css","(style)","<p>Sanitizes a block of css code. Used by #sanitize when it comes across a\nstyle attribute\n",null,1],["sanitize_dom_id","ActionController::RecordIdentifier","Rails/classes/ActionController/RecordIdentifier.html#method-i-sanitize_dom_id","(candidate_id)","<p>Replaces characters that are invalid in HTML DOM ids with valid ones.\n",null,1],["sanitize_for_mass_assignment","ActiveModel::MassAssignmentSecurity","Rails/classes/ActiveModel/MassAssignmentSecurity.html#method-i-sanitize_for_mass_assignment","(attributes, role = nil)","",null,1],["sanitize_limit","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sanitize_limit","(limit)","<p>Sanitizes the given LIMIT parameter in order to prevent SQL injection.\n<p>The <code>limit</code> may be anything that …\n",null,1],["sanitize_sql","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql","(condition, table_name = self.table_name)","",null,1],["sanitize_sql_array","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_array","(ary)","<p>Accepts an array of conditions. The array has each value sanitized and\ninterpolated into the SQL statement. …\n",null,1],["sanitize_sql_for_assignment","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_assignment","(assignments)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into\na valid SQL fragment for …\n",null,1],["sanitize_sql_for_conditions","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_for_conditions","(condition, table_name = self.table_name)","<p>Accepts an array, hash, or string of SQL conditions and sanitizes them into\na valid SQL fragment for …\n",null,1],["sanitize_sql_hash","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash","(attrs, default_table_name = self.table_name)","",null,1],["sanitize_sql_hash_for_assignment","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_assignment","(attrs)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a SET\nclause.\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">status</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-keyword\">nil</span>, :<span class=\"ruby-identifier\">group_id</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["sanitize_sql_hash_for_conditions","ActiveRecord::Sanitization::ClassMethods","Rails/classes/ActiveRecord/Sanitization/ClassMethods.html#method-i-sanitize_sql_hash_for_conditions","(attrs, default_table_name = self.table_name)","<p>Sanitizes a hash of attribute/value pairs into SQL conditions for a WHERE\nclause.\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&quot;foo&#39;bar&quot;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["sanitizeable?","HTML::LinkSanitizer","Rails/classes/HTML/LinkSanitizer.html#method-i-sanitizeable-3F","(text)","",null,1],["sanitizeable?","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-sanitizeable-3F","(text)","",null,1],["saturday?","Time","Ruby/classes/Time.html#method-i-saturday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Saturday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">2006</span>, <span class=\"ruby-value\">6</span>, <span class=\"ruby-value\">10</span>)      <span class=\"ruby-comment\">#=&gt; 2006-06-10 00:00:00 -0500 ...</span>\n</pre>\n",null,0],["save","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-save","(*)","<p>Saves the model.\n<p>If the model is new a record gets created in the database, otherwise the\nexisting record …\n",null,1],["save","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-i-save","()","",null,1],["save","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-save","(options={})","<p>The validation process on save can be skipped by passing <code>:validate\n=&gt; false</code>. The regular Base#save …\n",null,1],["save","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-save","()","<p>Saves (<code>POST</code>) or updates (<code>PUT</code>) a resource. \nDelegates to <code>create</code> if the object is new, <code>update</code>\nif it exists. …\n",null,1],["save","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-save","()","<p>POST create\n",null,1],["save!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-save-21","(*)","<p>Saves the model.\n<p>If the model is new a record gets created in the database, otherwise the\nexisting record …\n",null,1],["save!","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-save-21","(options={})","<p>Attempts to save the record just like Base#save but will raise a\n<code>RecordInvalid</code> exception instead of returning …\n",null,1],["save!","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-save-21","()","<p>Saves the resource.\n<p>If the resource is new, it is created via <code>POST</code>, otherwise the\nexisting resource is …\n",null,1],["save_method","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-i-save_method","()","",null,1],["save_record?","ActiveRecord::DynamicFinderMatch","Rails/classes/ActiveRecord/DynamicFinderMatch.html#method-i-save_record-3F","()","",null,1],["save_with_validation","ActiveResource::Validations","Rails/classes/ActiveResource/Validations.html#method-i-save_with_validation","(options={})","<p>Validate a resource and save (POST) it to the remote web service. If any\nlocal validations fail - the …\n",null,1],["say","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-say","(message, subitem=false)","",null,1],["say_with_time","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-say_with_time","(message)","",null,1],["scan","String","Ruby/classes/String.html#method-i-scan","(p1)","<p>Both forms iterate through <em>str</em>, matching the pattern (which may be\na <code>Regexp</code> or a <code>String</code>). For each match, …\n",null,0],["schema","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-schema","(&block)","<p>Creates a schema for this resource - setting the attributes that are known\nprior to fetching an instance …\n",null,1],["schema","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-schema","()","<p>If no schema has been defined for the class (see\n<code>ActiveResource::schema=</code>), the default automatic schema …\n",null,1],["schema=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-schema-3D","(the_schema)","<p>Alternative, direct way to specify a <code>schema</code> for this Resource.\n<code>schema</code> is more flexible, but this is quick …\n",null,1],["schema_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_exists-3F","(name)","<p>Returns true if schema exists.\n",null,1],["schema_format","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-schema_format","","<p>Specifies the format to use when dumping the database schema with\nRails&#39; Rakefile. If :sql, the schema …\n",null,1],["schema_search_path","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_search_path","()","<p>Returns the active schema search path.\n",null,1],["schema_search_path=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-schema_search_path-3D","(schema_csv)","<p>Sets the schema search path to a string of comma-separated schema names.\nNames beginning with $ have …\n",null,1],["scope","ActionDispatch::Routing::Mapper::Scoping","Rails/classes/ActionDispatch/Routing/Mapper/Scoping.html#method-i-scope","(*args)","<p>Scopes a set of routes to the given default options.\n<p>Take the following route definition as an example: …\n",null,1],["scope","ActiveRecord::Scoping::Named::ClassMethods","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-scope","(name, scope_options = {})","<p>Adds a class method for retrieving and querying objects. A scope represents\na narrowing of a database …\n",null,1],["scope_for_create","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-scope_for_create","()","",null,1],["scoped","ActiveRecord::Scoping::Named::ClassMethods","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-scoped","(options = nil)","<p>Returns an anonymous scope.\n\n<pre>posts = Post.scoped\nposts.size # Fires &quot;select count(*) from  posts&quot; and returns ...</pre>\n",null,1],["scoping","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-scoping","()","<p>Scope all queries to the current scope.\n<p>Example\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Comment</span>.<span class=\"ruby-identifier\">where</span>(:<span class=\"ruby-identifier\">post_id</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">scoping</span> <span class=\"ruby-keyword\">do</span>\n  <span class=\"ruby-constant\">Comment</span>.<span class=\"ruby-identifier\">first</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["script","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-script","()","",null,1],["script","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-script","(force = false)","",null,1],["search_convpath","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-c-search_convpath","(*args)","<p>Returns a conversion path.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span> <span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Converter</span>.<span class=\"ruby-identifier\">search_convpath</span>(<span class=\"ruby-string\">&quot;ISO-8859-1&quot;</span>, <span class=\"ruby-string\">&quot;EUC-JP&quot;</span>)\n<span class=\"ruby-comment\">#=&gt; [[#&lt;Encoding:ISO-8859-1&gt;, ...</span>\n</pre>\n",null,0],["search_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-search_field","(object_name, method, options = {})","<p>Returns an input of type “search” for accessing a specified attribute\n(identified by <code>method</code> …\n",null,1],["search_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-search_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “search”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["sec","Time","Ruby/classes/Time.html#method-i-sec","()","<p>Returns the second of the minute (0..60)<em>[Yes, seconds really can range\nfrom zero to 60. This allows the</em> …\n",null,0],["second","Array","Rails/classes/Array.html#method-i-second","()","<p>Equal to <code>self[1]</code>.\n",null,1],["second","Numeric","Rails/classes/Numeric.html#method-i-second","()","",null,1],["seconds","Numeric","Rails/classes/Numeric.html#method-i-seconds","()","<p>Enables the use of time calculations and declarations, like 45.minutes +\n2.hours + 4.years.\n<p>These methods …\n",null,1],["seconds_since_midnight","DateTime","Rails/classes/DateTime.html#method-i-seconds_since_midnight","()","<p>Seconds since midnight: DateTime.now.seconds_since_midnight\n",null,1],["seconds_since_midnight","Time","Rails/classes/Time.html#method-i-seconds_since_midnight","()","<p>Seconds since midnight: Time.now.seconds_since_midnight\n",null,1],["seconds_to_utc_offset","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-seconds_to_utc_offset","(seconds, colon = true)","<p>Assumes self represents an offset from UTC in seconds (as returned from\nTime#utc_offset) and turns this …\n",null,1],["secret_token","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-secret_token","(request)","",null,1],["seed","Random","Ruby/classes/Random.html#method-i-seed","()","<p>Returns the seed of the generator.\n",null,0],["seek","ARGF","Ruby/classes/ARGF.html#method-i-seek","(*args)","<p>Seeks to offset <em>amount</em> (an <code>Integer</code>) in the\n<code>ARGF</code> stream according to the value of <em>whence</em>. See\n+IO#seek …\n",null,0],["seek","Dir","Ruby/classes/Dir.html#method-i-seek","(p1)","<p>Seeks to a particular location in <em>dir</em>. <em>integer</em> must be a\nvalue returned by <code>Dir#tell</code>.\n\n<pre>d = Dir.new(&quot;testdir&quot;) ...</pre>\n",null,0],["seek","IO","Ruby/classes/IO.html#method-i-seek","(p1, p2 = v2)","<p>Seeks to a given offset <em>anInteger</em> in the stream according to the\nvalue of <em>whence</em>:\n\n<pre>IO::SEEK_CUR  | Seeks ...</pre>\n",null,0],["select","Array","Ruby/classes/Array.html#method-i-select","()","<p>Invokes the block passing in successive elements from <code>self</code>,\nreturning an array containing those elements …\n",null,0],["select","ENV","Ruby/classes/ENV.html#method-c-select","()","<p>Returns a copy of the environment for entries where the block returns true.\n<p>Returns an Enumerator if no …\n",null,0],["select","Enumerable","Ruby/classes/Enumerable.html#method-i-select","()","<p>Returns an array containing all elements of <em>enum</em> for which\n<em>block</em> is not <code>false</code> (see also\n<code>Enumerable#reject</code> …\n",null,0],["select","Hash","Ruby/classes/Hash.html#method-i-select","()","<p>Returns a new hash consisting of entries for which the block returns true.\n<p>If no block is given, an enumerator …\n",null,0],["select","IO","Ruby/classes/IO.html#method-c-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Calls select(2) system call. It monitors given arrays of <code>IO</code>\nobjects, waits one or more of <code>IO</code> objects …\n",null,0],["select","Kernel","Ruby/classes/Kernel.html#method-i-select","(p1, p2 = v2, p3 = v3, p4 = v4)","<p>Calls select(2) system call. It monitors given arrays of <code>IO</code>\nobjects, waits one or more of <code>IO</code> objects …\n",null,0],["select","Struct","Ruby/classes/Struct.html#method-i-select","(*args)","<p>Invokes the block passing in successive elements from <em>struct</em>,\nreturning an array containing those elements …\n",null,0],["select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-select","(method, choices, options = {}, html_options = {})","",null,1],["select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-select","(object, method, choices, options = {}, html_options = {})","<p>Create a select tag and a series of contained option tags for the provided\nobject and method. The option …\n",null,1],["select","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select","(sql, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,1],["select","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-select","(sql, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,1],["select","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-select","(value = Proc.new)","<p>Works in two unique ways.\n<p>First: takes a block so it can be used just like Array#select.\n\n<pre>Model.scoped.select ...</pre>\n",null,1],["select","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-select","(root)","<p>Selects and returns an array with all matching elements, beginning with one\nnode and traversing through …\n",null,1],["select","HTML::Tag","Rails/classes/HTML/Tag.html#method-i-select","(selector, *values)","",null,1],["select!","Array","Ruby/classes/Array.html#method-i-select-21","()","<p>Invokes the block passing in successive elements from <code>self</code>,\ndeleting elements for which the block returns …\n",null,0],["select!","ENV","Ruby/classes/ENV.html#method-c-select-21","()","<p>Equivalent to ENV#keep_if but returns <code>nil</code> if no changes were\nmade.\n",null,0],["select!","Hash","Ruby/classes/Hash.html#method-i-select-21","()","<p>Equivalent to <code>Hash#keep_if</code>, but returns <code>nil</code> if no\nchanges were made.\n",null,0],["select_all","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_all","(arel, name = nil, binds = [])","<p>Returns an array of record hashes with the column names as keys and column\nvalues as values.\n",null,1],["select_all","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-select_all","(arel, name = nil, binds = [])","",null,1],["select_date","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_date","(date = Date.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for year, month, and day)\npre-selected with the <code>date</code>. It&#39;s …\n",null,1],["select_datetime","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_datetime","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for year, month, day, hour, minute,\nand second) pre-selected with …\n",null,1],["select_day","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_day","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the days 1 through 31 with\nthe current day selected. The …\n",null,1],["select_first","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-select_first","(root)","<p>Similar to #select but returns the first matching element. Returns\n<code>nil</code> if no element matches the selector. …\n",null,1],["select_hour","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_hour","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the hours 0 through 23 with\nthe current hour selected. …\n",null,1],["select_minute","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_minute","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the minutes 0 through 59 with\nthe current minute selected. …\n",null,1],["select_month","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_month","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the months January through\nDecember with the current month …\n",null,1],["select_one","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_one","(arel, name = nil)","<p>Returns a record hash with the column names as keys and column values as\nvalues.\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_rows","(sql, name = nil)","<p>Returns an array of arrays containing the field values. Order is the same\nas that returned by <code>columns</code> …\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-select_rows","(sql, name = nil)","<p>Returns an array of arrays containing the field values. Order is the same\nas that returned by <code>columns</code> …\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-select_rows","(sql, name = nil)","<p>DATABASE STATEMENTS ======================================\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-select_rows","(sql, name = nil)","<p>Executes a SELECT query and returns an array of rows. Each row is an array\nof field values.\n",null,1],["select_rows","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-select_rows","(sql, name = nil)","",null,1],["select_second","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_second","(datetime, options = {}, html_options = {})","<p>Returns a select tag with options for each of the seconds 0 through 59 with\nthe current second selected. …\n",null,1],["select_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-select_tag","(name, option_tags = nil, options = {})","<p>Creates a dropdown selection box, or if the <code>:multiple</code> option\nis set to true, a multiple choice selection …\n",null,1],["select_time","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_time","(datetime = Time.current, options = {}, html_options = {})","<p>Returns a set of html select-tags (one for hour and minute). You can set\n<code>:time_separator</code> key to format …\n",null,1],["select_value","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_value","(arel, name = nil)","<p>Returns a single value from a record\n",null,1],["select_values","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-select_values","(arel, name = nil)","<p>Returns an array of the values of the first column in a select:\n\n<pre>select_values(&quot;SELECT id FROM companies ...</pre>\n",null,1],["select_year","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-select_year","(date, options = {}, html_options = {})","<p>Returns a select tag with options for each of the five years on each side\nof the current, which is selected. …\n",null,1],["selector","HTML","Rails/classes/HTML.html#method-c-selector","(statement, *values)","<p>See HTML::Selector.new\n",null,1],["send","Object","Ruby/classes/Object.html#method-i-send","(*args)","<p>Invokes the method identified by <em>symbol</em>, passing it any arguments\nspecified. You can use <code>__send__</code> if …\n",null,0],["send_action","ActionController::ImplicitRender","Rails/classes/ActionController/ImplicitRender.html#method-i-send_action","(method, *args)","",null,1],["send_data","ActionController::DataStreaming","Rails/classes/ActionController/DataStreaming.html#method-i-send_data","(data, options = {})","<p>Sends the given binary data to the browser. This method is similar to\n<code>render :text =&gt; data</code>, but also …\n",null,1],["send_data","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-send_data","(data, options = {})","",null,1],["send_data","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-send_data","(event)","",null,1],["send_file","ActionController::DataStreaming","Rails/classes/ActionController/DataStreaming.html#method-i-send_file","(path, options = {})","<p>Sends the file. This uses a server-appropriate method (such as X-Sendfile)\nvia the Rack::Sendfile middleware. …\n",null,1],["send_file","ActionController::Instrumentation","Rails/classes/ActionController/Instrumentation.html#method-i-send_file","(path, options={})","",null,1],["send_file","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-send_file","(event)","",null,1],["sequence_name","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name","()","",null,1],["sequence_name=","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-sequence_name-3D","(value)","<p>Sets the name of the sequence to use when generating ids to the given\nvalue, or (if the value is nil …\n",null,1],["serial_sequence","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-serial_sequence","(table, column)","",null,1],["serializable_hash","ActiveModel::Serialization","Rails/classes/ActiveModel/Serialization.html#method-i-serializable_hash","(options = nil)","",null,1],["serializable_hash","ActiveRecord::Serialization","Rails/classes/ActiveRecord/Serialization.html#method-i-serializable_hash","(options = nil)","",null,1],["serialize","ActiveRecord::AttributeMethods::Serialization::Attribute","Rails/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-serialize","()","",null,1],["serialize","ActiveRecord::AttributeMethods::Serialization::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Serialization/ClassMethods.html#method-i-serialize","(attr_name, class_name = Object)","<p>If you have an attribute that needs to be saved to the database as an\nobject, and retrieved as the same …\n",null,1],["serialized_value","ActiveRecord::AttributeMethods::Serialization::Attribute","Rails/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-serialized_value","()","",null,1],["server_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-server_port","()","",null,1],["server_software","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-server_software","()","<p>Returns the lowercase name of the HTTP server software.\n",null,1],["session","ActionDispatch::TestProcess","Rails/classes/ActionDispatch/TestProcess.html#method-i-session","()","",null,1],["session_auth=","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-session_auth-3D","(user)","<p>Set the authorized user for this session\n",null,1],["session_id_column","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-session_id_column","","<p>The session id field defaults to &#39;session_id&#39;.\n",null,1],["session_options=","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-session_options-3D","(options)","",null,1],["session_store","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-session_store","(*args)","",null,1],["session_table_name","ActiveRecord::Generators::SessionMigrationGenerator","Rails/classes/ActiveRecord/Generators/SessionMigrationGenerator.html#method-i-session_table_name","()","",null,1],["set","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-set","(key, value)","<p>Set messages for <code>key</code> to <code>value</code>\n",null,1],["set_backtrace","Exception","Ruby/classes/Exception.html#method-i-set_backtrace","(p1)","<p>Sets the backtrace information associated with <em>exc</em>. The argument\nmust be an array of <code>String</code> objects in …\n",null,0],["set_callback","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-set_callback","(name, *filter_list, &block)","<p>Install a callback for the given event.\n\n<pre>set_callback :save, :before, :before_meth\nset_callback :save, ...</pre>\n",null,1],["set_content_type","ActionMailer::Base","Rails/classes/ActionMailer/Base.html#method-i-set_content_type","(m, user_content_type, class_default)","",null,1],["set_cookie","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-set_cookie","(key, value)","",null,1],["set_default_accessors!","Rails::Generators::AppBase","Rails/classes/Rails/Generators/AppBase.html#method-i-set_default_accessors-21","()","",null,1],["set_enablement","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-set_enablement","(enabled, observers)","",null,1],["set_encoding","ARGF","Ruby/classes/ARGF.html#method-i-set_encoding","(*args)","<p>If single argument is specified, strings read from ARGF are tagged with the\nencoding specified.\n<p>If two …\n",null,0],["set_encoding","IO","Ruby/classes/IO.html#method-i-set_encoding","(p1, p2 = v2, p3 = {})","<p>If single argument is specified, read string from io is tagged with the\nencoding specified.  If encoding …\n",null,0],["set_environment","Rails::Server","Rails/classes/Rails/Server.html#method-i-set_environment","()","",null,1],["set_expected_mail","ActionMailer::TestCase::Behavior","Rails/classes/ActionMailer/TestCase/Behavior.html#method-i-set_expected_mail","()","",null,1],["set_fixture_class","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-set_fixture_class","(class_names = {})","",null,1],["set_local_assigns!","ActiveRecord::Generators::MigrationGenerator","Rails/classes/ActiveRecord/Generators/MigrationGenerator.html#method-i-set_local_assigns-21","()","",null,1],["set_locking_column","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-set_locking_column","(value = nil, &block)","<p>Set the column to use for optimistic locking. Defaults to\n<code>lock_version</code>.\n",null,1],["set_logger","ActiveSupport::LogSubscriber::TestHelper","Rails/classes/ActiveSupport/LogSubscriber/TestHelper.html#method-i-set_logger","(logger)","<p>Overwrite if you use another logger in your log subscriber:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">logger</span>\n  <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>.<span class=\"ruby-identifier\">logger</span> = <span class=\"ruby-ivar\">@logger</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["set_prefix","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-set_prefix","(value = '/')","",null,1],["set_session","ActionDispatch::Session::CacheStore","Rails/classes/ActionDispatch/Session/CacheStore.html#method-i-set_session","(env, sid, session, options)","<p>Set a session in the cache.\n",null,1],["set_standard_conforming_strings","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-set_standard_conforming_strings","()","<p>Enable standard-conforming strings if available.\n",null,1],["set_trace_func","Kernel","Ruby/classes/Kernel.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> as the handler for tracing, or disables tracing\nif the parameter is <code>nil</code>. <em>proc</em> takes …\n",null,0],["set_trace_func","Thread","Ruby/classes/Thread.html#method-i-set_trace_func","(p1)","<p>Establishes <em>proc</em> on <em>thr</em> as the handler for tracing, or\ndisables tracing if the parameter is <code>nil</code>. See …\n",null,0],["setbyte","String","Ruby/classes/String.html#method-i-setbyte","(p1, p2)","<p>modifies the <em>index</em>th byte as <em>int</em>.\n",null,0],["setegid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setegid","(p1)","<p>Set the effective group ID of the calling process to <em>integer</em>.  Not\navailable on all platforms.\n",null,0],["seteuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-seteuid","(p1)","<p>Set the effective user ID of the calling process to <em>integer</em>.  Not\navailable on all platforms.\n",null,0],["setgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setgid","(p1)","<p>Set the group ID of the current process to <em>integer</em>. Not available\non all platforms.\n",null,0],["setgid?","File","Ruby/classes/File.html#method-c-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n",null,0],["setgid?","File::Stat","Ruby/classes/File/Stat.html#method-i-setgid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-group-id permission\nbit set, <code>false</code> if it doesn&#39;t or if the operating …\n",null,0],["setgid?","FileTest","Ruby/classes/FileTest.html#method-i-setgid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setgid bit set.\n",null,0],["setpgid","Process","Ruby/classes/Process.html#method-c-setpgid","(p1, p2)","<p>Sets the process group ID of <em>pid</em> (0 indicates this process) to\n<em>integer</em>. Not available on all platforms. …\n",null,0],["setpgrp","Process","Ruby/classes/Process.html#method-c-setpgrp","()","<p>Equivalent to <code>setpgid(0,0)</code>. Not available on all platforms.\n",null,0],["setpriority","Process","Ruby/classes/Process.html#method-c-setpriority","(p1, p2, p3)","<p>See <code>Process#getpriority</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">setpriority</span>(<span class=\"ruby-constant\">Process</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PRIO_USER</span>, <span class=\"ruby-value\">0</span>, <span class=\"ruby-value\">19</span>)      <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">setpriority</span>(<span class=\"ruby-constant\">Process</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">PRIO_PROCESS</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["setregid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setregid","(p1, p2)","<p>Sets the (integer) real and/or effective group IDs of the current process\nto <em>rid</em> and <em>eid</em>, respectively. …\n",null,0],["setresgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setresgid","(p1, p2, p3)","<p>Sets the (integer) real, effective, and saved user IDs of the current\nprocess to <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,0],["setresuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setresuid","(p1, p2, p3)","<p>Sets the (integer) real, effective, and saved user IDs of the current\nprocess to <em>rid</em>, <em>eid</em>, and <em>sid</em> respectively. …\n",null,0],["setreuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setreuid","(p1, p2)","<p>Sets the (integer) real and/or effective user IDs of the current process to\n<em>rid</em> and <em>eid</em>, respectively. …\n",null,0],["setrgid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setrgid","(p1)","<p>Set the real group ID of the calling process to <em>integer</em>. Not\navailable on all platforms.\n",null,0],["setrlimit","Process","Ruby/classes/Process.html#method-c-setrlimit","(p1, p2, p3 = v3)","<p>Sets the resource limit of the process. <em>cur_limit</em> means current\n(soft) limit and <em>max_limit</em> means maximum …\n",null,0],["setruid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setruid","(p1)","<p>Set the real user ID of the calling process to <em>integer</em>. Not\navailable on all platforms.\n",null,0],["setsid","Process","Ruby/classes/Process.html#method-c-setsid","()","<p>Establishes this process as a new session and process group leader, with no\ncontrolling tty. Returns …\n",null,0],["setuid","Process::Sys","Ruby/classes/Process/Sys.html#method-c-setuid","(p1)","<p>Set the user ID of the current process to <em>integer</em>. Not available\non all platforms.\n",null,0],["setuid?","File","Ruby/classes/File.html#method-c-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n",null,0],["setuid?","File::Stat","Ruby/classes/File/Stat.html#method-i-setuid-3F","()","<p>Returns <code>true</code> if <em>stat</em> has the set-user-id permission\nbit set, <code>false</code> if it doesn&#39;t or if the operating …\n",null,0],["setuid?","FileTest","Ruby/classes/FileTest.html#method-i-setuid-3F","(p1)","<p>Returns <code>true</code> if the named file has the setuid bit set.\n",null,0],["setup","ActiveModel::Validations::AcceptanceValidator","Rails/classes/ActiveModel/Validations/AcceptanceValidator.html#method-i-setup","(klass)","",null,1],["setup","ActiveModel::Validations::ConfirmationValidator","Rails/classes/ActiveModel/Validations/ConfirmationValidator.html#method-i-setup","(klass)","",null,1],["setup","ActiveRecord::Validations::UniquenessValidator","Rails/classes/ActiveRecord/Validations/UniquenessValidator.html#method-i-setup","(klass)","<p>Unfortunately, we have to tie Uniqueness validators to a class.\n",null,1],["setup","ActiveSupport::LogSubscriber::TestHelper","Rails/classes/ActiveSupport/LogSubscriber/TestHelper.html#method-i-setup","()","",null,1],["setup","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ClassMethods.html#method-i-setup","(*args, &block)","",null,1],["setup_controller_request_and_response","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-setup_controller_request_and_response","()","",null,1],["setup_fixture_accessors","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-setup_fixture_accessors","(fixture_names = nil)","",null,1],["setup_fixtures","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-setup_fixtures","()","",null,1],["setup_subscriptions","ActionController::TemplateAssertions","Rails/classes/ActionController/TemplateAssertions.html#method-i-setup_subscriptions","()","",null,1],["setup_with_controller","ActionView::TestCase::Behavior","Rails/classes/ActionView/TestCase/Behavior.html#method-i-setup_with_controller","()","",null,1],["shallow","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow","()","",null,1],["shallow?","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-shallow-3F","()","",null,1],["shift","Array","Ruby/classes/Array.html#method-i-shift","(*args)","<p>Returns the first element of <code>self</code> and removes it (shifting all\nother elements down by one). Returns  …\n",null,0],["shift","ENV","Ruby/classes/ENV.html#method-c-shift","()","<p>Removes an environment variable name-value pair from ENV and returns it as\nan Array.  Returns <code>nil</code> if …\n",null,0],["shift","Hash","Ruby/classes/Hash.html#method-i-shift","()","<p>Removes a key-value pair from <em>hsh</em> and returns it as the two-item\narray <code>[</code> <em>key, value</em> <code>]</code>, or the hash&#39;s\n…\n",null,0],["shift","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-shift","()","",null,1],["show_detailed_exceptions?","ActionController::Rescue","Rails/classes/ActionController/Rescue.html#method-i-show_detailed_exceptions-3F","()","<p>Override this method if you want to customize when detailed exceptions must\nbe shown. This method is …\n",null,1],["show_variable","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-show_variable","(name)","<p>SHOW VARIABLES LIKE &#39;name&#39;\n",null,1],["shuffle","Array","Ruby/classes/Array.html#method-i-shuffle","(*args)","<p>Returns a new array with elements of this array shuffled.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [ <span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span> ]           <span class=\"ruby-comment\">#=&gt; [1, 2, 3]</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">shuffle</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["shuffle!","Array","Ruby/classes/Array.html#method-i-shuffle-21","(*args)","<p>Shuffles elements in <code>self</code> in place. If <code>rng</code> is\ngiven, it will be used as the random number generator. …\n",null,0],["sid_available?","Process::GID","Ruby/classes/Process/GID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved group ID\nfunctionality.\n",null,0],["sid_available?","Process::UID","Ruby/classes/Process/UID.html#method-c-sid_available-3F","()","<p>Returns <code>true</code> if the current platform has saved user ID\nfunctionality.\n",null,0],["signaled?","Process::Status","Ruby/classes/Process/Status.html#method-i-signaled-3F","()","<p>Returns <code>true</code> if <em>stat</em> terminated because of an\nuncaught signal.\n",null,0],["signo","SignalException","Ruby/classes/SignalException.html#method-i-signo","()","<p>Returns a signal number.\n",null,0],["silence","ActiveSupport::Benchmarkable","Rails/classes/ActiveSupport/Benchmarkable.html#method-i-silence","()","<p>Silence the logger during the execution of the block.\n",null,1],["silence","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-i-silence","(temporary_level = ERROR)","<p>Silences the logger for the duration of the block.\n",null,1],["silence","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-silence","()","<p>Silence deprecation warnings within the block.\n",null,1],["silence","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-silence","(temporary_level = Logger::ERROR, &block)","",null,1],["silence","Kernel","Rails/classes/Kernel.html#method-i-silence","(stream)","",null,1],["silence!","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-silence-21","()","<p>Silence the logger.\n",null,1],["silence_auto_explain","ActiveRecord::Explain","Rails/classes/ActiveRecord/Explain.html#method-i-silence_auto_explain","()","<p>Silences automatic EXPLAIN logging for the duration of the block.\n<p>This has high priority, no EXPLAINs …\n",null,1],["silence_stream","Kernel","Rails/classes/Kernel.html#method-i-silence_stream","(stream)","<p>Silences any stream for the duration of the block.\n\n<pre>silence_stream(STDOUT) do\n  puts &#39;This will never be ...</pre>\n",null,1],["silence_warnings","Kernel","Rails/classes/Kernel.html#method-i-silence_warnings","()","<p>Sets $VERBOSE to nil for the duration of the block and back to its original\nvalue afterwards.\n\n<pre>silence_warnings ...</pre>\n",null,1],["silencer","ActiveSupport::BufferedLogger","Rails/classes/ActiveSupport/BufferedLogger.html#method-c-silencer","","<p>Set to false to disable the silencer\n",null,1],["simple_format","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-simple_format","(text, html_options={}, options={})","<p>Returns <code>text</code> transformed into HTML using simple formatting\nrules. Two or more consecutive newlines(<code>\\n\\n</code> …\n",null,1],["simple_selector","HTML::Selector","Rails/classes/HTML/Selector.html#method-i-simple_selector","(statement, values, can_negate = true)","<p>Creates a simple selector given the statement and array of substitution\nvalues.\n<p>Returns a hash with the …\n",null,1],["sin","Math","Ruby/classes/Math.html#method-c-sin","(p1)","<p>Computes the sine of <em>x</em> (expressed in radians). Returns -1..1.\n",null,0],["since","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-since","(time = ::Time.current)","<p>Calculates a new Time or Date that is as far in the future as this Duration\nrepresents.\n",null,1],["since","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-since","(other)","",null,1],["since","Date","Rails/classes/Date.html#method-i-since","(seconds)","<p>Converts Date to a Time (or DateTime if necessary) with the time portion\nset to the beginning of the …\n",null,1],["since","DateTime","Rails/classes/DateTime.html#method-i-since","(seconds)","<p>Returns a new DateTime representing the time a number of seconds since the\ninstance time Do not use this …\n",null,1],["since","Numeric","Rails/classes/Numeric.html#method-i-since","(time = ::Time.current)","<p>Reads best with argument:  10.minutes.since(time)\n",null,1],["since","Time","Rails/classes/Time.html#method-i-since","(seconds)","<p>Returns a new Time representing the time a number of seconds since the\ninstance time\n",null,1],["singleton_class","Object","Ruby/classes/Object.html#method-i-singleton_class","()","<p>Returns the singleton class of <em>obj</em>.  This method creates a new\nsingleton class if <em>obj</em> does not have it. …\n",null,0],["singleton_class","Kernel","Rails/classes/Kernel.html#method-i-singleton_class","()","<p>Returns the object&#39;s singleton class.\n",null,1],["singleton_method_added","Numeric","Ruby/classes/Numeric.html#method-i-singleton_method_added","(p1)","<p>Trap attempts to add methods to <code>Numeric</code> objects. Always raises\na <code>TypeError</code>\n",null,0],["singleton_methods","Object","Ruby/classes/Object.html#method-i-singleton_methods","(p1 = v1)","<p>Returns an array of the names of singleton methods for <em>obj</em>. If the\noptional <em>all</em> parameter is true, the …\n",null,0],["singular","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-singular","(record_or_class)","<p>Returns the singular class name of a record or class. Examples:\n\n<pre>ActiveModel::Naming.singular(post)    ...</pre>\n",null,1],["singular","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-singular","(rule, replacement)","<p>Specifies a new singularization rule and its replacement. The rule can\neither be a string or a regular …\n",null,1],["singular_route_key","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-singular_route_key","(record_or_class)","<p>Returns string to use while generating route names. It differs for\nnamespaced models regarding whether …\n",null,1],["singular_table_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-singular_table_name","()","",null,1],["singularize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-singularize","(word)","<p>The reverse of <code>pluralize</code>, returns the singular form of a word\nin a string.\n<p>Examples:\n\n<pre>&quot;posts&quot;.singularize ...</pre>\n",null,1],["singularize","String","Rails/classes/String.html#method-i-singularize","()","<p>The reverse of <code>pluralize</code>, returns the singular form of a word\nin a string.\n\n<pre>&quot;posts&quot;.singularize        ...</pre>\n",null,1],["sinh","Math","Ruby/classes/Math.html#method-c-sinh","(p1)","<p>Computes the hyperbolic sine of <em>x</em> (expressed in radians).\n",null,0],["site","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-site","()","<p>Gets the URI of the REST resources to map for this class.  The site\nvariable is required for Active Resource&#39;s …\n",null,1],["site=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-site-3D","(site)","<p>Sets the URI of the REST resources to map for this class to the value in\nthe <code>site</code> argument. The site …\n",null,1],["site=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-site-3D","(site)","<p>Set URI for remote service.\n",null,1],["size","Array","Ruby/classes/Array.html#method-i-size","()","",null,0],["size","Bignum","Ruby/classes/Bignum.html#method-i-size","()","<p>Returns the number of bytes in the machine representation of <em>big</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">256</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">10</span> <span class=\"ruby-operator\">-</span> <span class=\"ruby-value\">1</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 12</span>\n(<span class=\"ruby-value\">256</span><span class=\"ruby-operator\">**</span><span class=\"ruby-value\">20</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["size","ENV","Ruby/classes/ENV.html#method-c-size","()","<p>Returns the number of environment variables.\n",null,0],["size","File","Ruby/classes/File.html#method-i-size","()","<p>Returns the size of <em>file</em> in bytes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 66</span>\n</pre>\n",null,0],["size","File","Ruby/classes/File.html#method-c-size","(p1)","<p>Returns the size of <code>file_name</code>.\n",null,0],["size","File::Stat","Ruby/classes/File/Stat.html#method-i-size","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 66</span>\n</pre>\n",null,0],["size","FileTest","Ruby/classes/FileTest.html#method-i-size","(p1)","<p>Returns the size of <code>file_name</code>.\n",null,0],["size","Fixnum","Ruby/classes/Fixnum.html#method-i-size","()","<p>Returns the number of <em>bytes</em> in the machine representation of a\n<code>Fixnum</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">size</span>            <span class=\"ruby-comment\">#=&gt; 4</span>\n<span class=\"ruby-value\">-1</span>.<span class=\"ruby-identifier\">size</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["size","Hash","Ruby/classes/Hash.html#method-i-size","()","<p>Returns the number of key-value pairs in the hash.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span>, <span class=\"ruby-string\">&quot;v&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;e&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["size","MatchData","Ruby/classes/MatchData.html#method-i-size","()","<p>Returns the number of elements in the match array.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.length   ...</pre>\n",null,0],["size","String","Ruby/classes/String.html#method-i-size","()","<p>Returns the character length of <em>str</em>.\n",null,0],["size","Struct","Ruby/classes/Struct.html#method-i-size","()","<p>Returns the number of instance variables.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,0],["size","Symbol","Ruby/classes/Symbol.html#method-i-size","()","<p>Same as <code>sym.to_s.length</code>.\n",null,0],["size","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-size","()","",null,1],["size","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-size","()","<p>Returns the number of error messages.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-string\">&quot;can&#39;t be blank&quot;</span>)\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">size</span> <span class=\"ruby-comment\"># =&gt; 1</span>\n<span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">errors</span>.<span class=\"ruby-identifier\">add</span>(:<span class=\"ruby-identifier\">name</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["size","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-i-size","()","",null,1],["size","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-size","()","<p>Returns size of the records.\n",null,1],["size","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-size","()","<p>Returns the size of the cached value. This could be less than value.size if\nthe data is compressed.\n",null,1],["size","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-size","()","<p>Returns the number of codepoints in the string\n",null,1],["size?","File","Ruby/classes/File.html#method-c-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn&#39;t exist or has\nzero size, the size of the file otherwise.\n",null,0],["size?","File::Stat","Ruby/classes/File/Stat.html#method-i-size-3F","()","<p>Returns the size of <em>stat</em> in bytes.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">size</span>   <span class=\"ruby-comment\">#=&gt; 66</span>\n</pre>\n",null,0],["size?","FileTest","Ruby/classes/FileTest.html#method-i-size-3F","(p1)","<p>Returns <code>nil</code> if <code>file_name</code> doesn&#39;t exist or has\nzero size, the size of the file otherwise.\n",null,0],["skip","ARGF","Ruby/classes/ARGF.html#method-i-skip","()","\n<pre>Sets the current file to the next file in ARGV. If there aren&#39;t any more\nfiles it has no effect.</pre>\n<p>For example: …\n",null,0],["skip_after_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_after_filter","","<p>Skip an after filter. See _insert_callbacks for parameter details.\n",null,1],["skip_around_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_around_filter","","<p>Skip an around filter. See _insert_callbacks for parameter details.\n",null,1],["skip_before_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_before_filter","","<p>Skip a before filter. See _insert_callbacks for parameter details.\n",null,1],["skip_callback","ActiveSupport::Callbacks::ClassMethods","Rails/classes/ActiveSupport/Callbacks/ClassMethods.html#method-i-skip_callback","(name, *filter_list, &block)","<p>Skip a previously set callback. Like <code>set_callback</code>,\n<code>:if</code> or <code>:unless</code> options may be passed in order to\ncontrol …\n",null,1],["skip_filter","AbstractController::Callbacks::ClassMethods","Rails/classes/AbstractController/Callbacks/ClassMethods.html#method-i-skip_filter","(*names, &blk)","<p>Skip before, after, and around filters matching any of the names\n<p>Parameters\n<p><code>names</code> - A list of valid names …\n",null,1],["sleep","Kernel","Ruby/classes/Kernel.html#method-i-sleep","(*args)","<p>Suspends the current thread for <em>duration</em> seconds (which may be any\nnumber, including a <code>Float</code> with fractional …\n",null,0],["sleep","Mutex","Ruby/classes/Mutex.html#method-i-sleep","(p1 = v1)","<p>Releases the lock and sleeps <code>timeout</code> seconds if it is given\nand non-nil or forever.  Raises <code>ThreadError</code> …\n",null,0],["slice","Array","Ruby/classes/Array.html#method-i-slice","(p1, p2 = v2)","<p>Element Reference—Returns the element at <em>index</em>, or returns a\nsubarray starting at <em>start</em> and continuing …\n",null,0],["slice","String","Ruby/classes/String.html#method-i-slice","(*args)","<p>Element Reference—If passed a single <code>Fixnum</code>, returns a\nsubstring of one character at that position. …\n",null,0],["slice","Symbol","Ruby/classes/Symbol.html#method-i-slice","(*args)","<p>Returns <code>sym.to_s[]</code>.\n",null,0],["slice","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-slice","(*args)","<p>Implements Unicode-aware slice with codepoints. Slicing on one point\nreturns the codepoints for that …\n",null,1],["slice","Hash","Rails/classes/Hash.html#method-i-slice","(*keys)","<p>Slice a hash to include only the given keys. This is useful for limiting an\noptions hash to valid keys …\n",null,1],["slice!","Array","Ruby/classes/Array.html#method-i-slice-21","(p1, p2 = v2)","<p>Deletes the element(s) given by an index (optionally with a length) or by a\nrange. Returns the deleted …\n",null,0],["slice!","String","Ruby/classes/String.html#method-i-slice-21","(*args)","<p>Deletes the specified portion from <em>str</em>, and returns the portion\ndeleted.\n\n<pre>string = &quot;this is a string&quot;\nstring.slice!(2) ...</pre>\n",null,0],["slice!","Hash","Rails/classes/Hash.html#method-i-slice-21","(*keys)","<p>Replaces the hash with only the given keys. Returns a hash contained the\nremoved key/value pairs\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["slice_before","Enumerable","Ruby/classes/Enumerable.html#method-i-slice_before","(p1 = v1)","\n<pre>Creates an enumerator for each chunked elements.\nThe beginnings of chunks are defined by _pattern_ and ...</pre>\n",null,0],["socket?","File","Ruby/classes/File.html#method-c-socket-3F","(p1)","<p>Returns <code>true</code> if the named file is a socket.\n",null,0],["socket?","File::Stat","Ruby/classes/File/Stat.html#method-i-socket-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a socket, <code>false</code>\nif it isn&#39;t or if the operating system doesn&#39;t support …\n",null,0],["socket?","FileTest","Ruby/classes/FileTest.html#method-i-socket-3F","(p1)","<p>Returns <code>true</code> if the named file is a socket.\n",null,0],["sort","Array","Ruby/classes/Array.html#method-i-sort","()","<p>Returns a new array created by sorting <code>self</code>. Comparisons for\nthe sort will be done using the <code>&lt;=&gt;</code> …\n",null,0],["sort","Enumerable","Ruby/classes/Enumerable.html#method-i-sort","()","<p>Returns an array containing the items in <em>enum</em> sorted, either\naccording to their own <code>&lt;=&gt;</code> method, …\n",null,0],["sort!","Array","Ruby/classes/Array.html#method-i-sort-21","()","<p>Sorts <code>self</code>. Comparisons for the sort will be done using the\n<code>&lt;=&gt;</code> operator or using an optional code …\n",null,0],["sort_by","Enumerable","Ruby/classes/Enumerable.html#method-i-sort_by","()","<p>Sorts <em>enum</em> using a set of keys generated by mapping the values in\n<em>enum</em> through the given block.\n<p>If no …\n",null,0],["sort_by!","Array","Ruby/classes/Array.html#method-i-sort_by-21","()","<p>Sorts <code>self</code> in place using a set of keys generated by mapping\nthe values in <code>self</code> through the given block. …\n",null,0],["source","Regexp","Ruby/classes/Regexp.html#method-i-source","()","<p>Returns the original string of the pattern.\n\n<pre class=\"ruby\"><span class=\"ruby-regexp\">/ab+c/</span><span class=\"ruby-identifier\">x</span>.<span class=\"ruby-identifier\">source</span> <span class=\"ruby-comment\">#=&gt; &quot;ab+c&quot;</span>\n</pre>\n<p>Note that escape sequences are retained …\n",null,0],["source_encoding","Encoding::Converter","Ruby/classes/Encoding/Converter.html#method-i-source_encoding","()","<p>Returns the source encoding as an Encoding object.\n",null,0],["source_encoding","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,0],["source_encoding","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding","()","<p>Returns the source encoding as an encoding object.\n<p>Note that the result may not be equal to the source …\n",null,0],["source_encoding_name","Encoding::InvalidByteSequenceError","Ruby/classes/Encoding/InvalidByteSequenceError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,0],["source_encoding_name","Encoding::UndefinedConversionError","Ruby/classes/Encoding/UndefinedConversionError.html#method-i-source_encoding_name","()","<p>Returns the source encoding name as a string.\n",null,0],["source_location","Method","Ruby/classes/Method.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or\nnil if this method was not …\n",null,0],["source_location","Proc","Ruby/classes/Proc.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this proc or\n<code>nil</code> if this proc was not defined …\n",null,0],["source_location","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-source_location","()","<p>Returns the Ruby source filename and line number containing this method or\nnil if this method was not …\n",null,0],["source_root","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-source_root","(path=nil)","<p>Returns the source root for this generator using default_source_root as\ndefault.\n",null,1],["spawn","Kernel","Ruby/classes/Kernel.html#method-i-spawn","(*args)","<p>spawn executes specified command and return its pid.\n<p>This method doesn&#39;t wait for end of the command. …\n",null,0],["spawn","Process","Ruby/classes/Process.html#method-c-spawn","(*args)","<p>spawn executes specified command and return its pid.\n<p>This method doesn&#39;t wait for end of the command. …\n",null,0],["split","File","Ruby/classes/File.html#method-c-split","(p1)","<p>Splits the given string into a directory and a file component and returns\nthem in a two-element array. …\n",null,0],["split","String","Ruby/classes/String.html#method-i-split","(p1 = v1, p2 = v2)","<p>Divides <em>str</em> into substrings based on a delimiter, returning an\narray of these substrings.\n<p>If <em>pattern</em> is …\n",null,0],["split","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-split","(*args)","<p>Works just like <code>String#split</code>, with the exception that the\nitems in the resulting list are Chars instances …\n",null,1],["split","Array","Rails/classes/Array.html#method-i-split","(value = nil)","<p>Divides the array into one or more subarrays based on a delimiting\n<code>value</code> or the result of an optional …\n",null,1],["split_args","Rails::Commands::Plugin","Rails/classes/Rails/Commands/Plugin.html#method-i-split_args","(args)","",null,1],["sprintf","Kernel","Ruby/classes/Kernel.html#method-i-sprintf","(*args)","<p>Returns the string resulting from applying <em>format_string</em> to any\nadditional arguments.  Within the format …\n",null,0],["sql","ActiveRecord::LogSubscriber","Rails/classes/ActiveRecord/LogSubscriber.html#method-i-sql","(event)","",null,1],["sql_for_insert","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-sql_for_insert","(sql, pk, id_value, sequence_name, binds)","",null,1],["sql_for_insert","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-sql_for_insert","(sql, pk, id_value, sequence_name, binds)","",null,1],["sql_query_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-sql_query_length","()","<p>Returns the maximum length of an SQL query.\n",null,1],["sqlite_version","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-sqlite_version","()","",null,1],["sqrt","Math","Ruby/classes/Math.html#method-c-sqrt","(p1)","<p>Returns the non-negative square root of <em>numeric</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">0</span>.<span class=\"ruby-identifier\">upto</span>(<span class=\"ruby-value\">10</span>) {<span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">x</span><span class=\"ruby-operator\">|</span>\n  <span class=\"ruby-identifier\">p</span> [<span class=\"ruby-identifier\">x</span>, <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-identifier\">x</span>), <span class=\"ruby-constant\">Math</span>.<span class=\"ruby-identifier\">sqrt</span>(<span class=\"ruby-identifier\">x</span>)<span class=\"ruby-operator\">**</span><span class=\"ruby-value\">2</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["squeeze","String","Ruby/classes/String.html#method-i-squeeze","(*args)","<p>Builds a set of characters from the <em>other_str</em> parameter(s) using\nthe procedure described for <code>String#count</code> …\n",null,0],["squeeze!","String","Ruby/classes/String.html#method-i-squeeze-21","(*args)","<p>Squeezes <em>str</em> in place, returning either <em>str</em>, or\n<code>nil</code> if no changes were made.\n",null,0],["squish","String","Rails/classes/String.html#method-i-squish","()","<p>Returns the string, first removing all whitespace on both ends of the\nstring, and then changing remaining …\n",null,1],["squish!","String","Rails/classes/String.html#method-i-squish-21","()","<p>Performs a destructive squish. See String#squish.\n",null,1],["srand","Kernel","Ruby/classes/Kernel.html#method-i-srand","(p1 = v1)","<p>Seeds the pseudorandom number generator to the value of <em>number</em>. If\n<em>number</em> is omitted, seeds the generator …\n",null,0],["srand","Random","Ruby/classes/Random.html#method-c-srand","(p1 = v1)","<p>Seeds the pseudorandom number generator to the value of <em>number</em>. If\n<em>number</em> is omitted, seeds the generator …\n",null,0],["ssl_options","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-ssl_options","()","<p>Returns the SSL options hash.\n",null,1],["ssl_options=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-ssl_options-3D","(opts={})","<p>Options that will get applied to an SSL connection.\n<p><code>:key</code> - An OpenSSL::PKey::RSA or OpenSSL::PKey::DSA …\n",null,1],["ssl_options=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-ssl_options-3D","(opts={})","<p>Hash of options applied to Net::HTTP instance when <code>site</code>\nprotocol is &#39;https&#39;.\n",null,1],["stale?","ActionController::ConditionalGet","Rails/classes/ActionController/ConditionalGet.html#method-i-stale-3F","(record_or_options, additional_options = {})","<p>Sets the etag and/or last_modified on the response and checks it against\nthe client request. If the request …\n",null,1],["stale_session_check!","ActionDispatch::Session::StaleSessionCheck","Rails/classes/ActionDispatch/Session/StaleSessionCheck.html#method-i-stale_session_check-21","()","",null,1],["standard_port","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-standard_port","()","<p>Returns the standard port number for this request&#39;s protocol.\n",null,1],["standard_port?","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-standard_port-3F","()","<p>Returns whether this request is using the standard port\n",null,1],["start","GC","Ruby/classes/GC.html#method-c-start","()","<p>Initiates garbage collection, unless manually disabled.\n",null,0],["start","Thread","Ruby/classes/Thread.html#method-c-start","(*args)","<p>Basically the same as <code>Thread::new</code>. However, if class\n<code>Thread</code> is subclassed, then calling <code>start</code> in that\n…\n",null,0],["start","Rails::Console","Rails/classes/Rails/Console.html#method-i-start","()","",null,1],["start","Rails::Console","Rails/classes/Rails/Console.html#method-c-start","(app)","",null,1],["start","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-i-start","()","",null,1],["start","Rails::DBConsole","Rails/classes/Rails/DBConsole.html#method-c-start","(app)","",null,1],["start","Rails::Server","Rails/classes/Rails/Server.html#method-i-start","()","",null,1],["start_document","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_document","()","",null,1],["start_element","ActiveSupport::XmlMini_NokogiriSAX::HashBuilder","Rails/classes/ActiveSupport/XmlMini_NokogiriSAX/HashBuilder.html#method-i-start_element","(name, attrs = [])","",null,1],["start_processing","ActionController::LogSubscriber","Rails/classes/ActionController/LogSubscriber.html#method-i-start_processing","(event)","",null,1],["start_transaction","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-start_transaction","()","",null,1],["start_with?","String","Ruby/classes/String.html#method-i-start_with-3F","(*args)","<p>Returns true if <em>str</em> starts with one of the prefixes given.\n\n<pre>p &quot;hello&quot;.start_with?(&quot;hell&quot;)              ...</pre>\n",null,0],["started_request_message","Rails::Rack::Logger","Rails/classes/Rails/Rack/Logger.html#method-i-started_request_message","(request)","<p>Started GET “/session/new” for 127.0.0.1 at 2012-09-26 14:51:42 -0700\n",null,1],["stat","File","Ruby/classes/File.html#method-c-stat","(p1)","<p>Returns a <code>File::Stat</code> object for the named file (see\n<code>File::Stat</code>).\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">mtime</span>   <span class=\"ruby-comment\">#=&gt; Tue ...</span>\n</pre>\n",null,0],["stat","GC","Ruby/classes/GC.html#method-c-stat","(p1 = v1)","<p>Returns a Hash containing information about the GC.\n<p>The hash includes information about internal statistics …\n",null,0],["stat","IO","Ruby/classes/IO.html#method-i-stat","()","<p>Returns status information for <em>ios</em> as an object of type\n<code>File::Stat</code>.\n\n<pre>f = File.new(&quot;testfile&quot;)\ns = f.stat ...</pre>\n",null,0],["stats","ActiveSupport::Cache::MemCacheStore","Rails/classes/ActiveSupport/Cache/MemCacheStore.html#method-i-stats","()","<p>Get the statistics from the memcached servers.\n",null,1],["status","SystemExit","Ruby/classes/SystemExit.html#method-i-status","()","<p>Return the status value associated with this system exit.\n",null,0],["status","Thread","Ruby/classes/Thread.html#method-i-status","()","<p>Returns the status of <em>thr</em>: “<code>sleep</code>&#39;&#39; if\n<em>thr</em> is sleeping or waiting on I/O, “<code>run</code>&#39;&#39; if\n…\n",null,0],["status","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-status","()","",null,1],["status=","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-status-3D","(status)","",null,1],["status=","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-status-3D","(status)","",null,1],["status_code","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-i-status_code","()","",null,1],["status_code_for_exception","ActionDispatch::ExceptionWrapper","Rails/classes/ActionDispatch/ExceptionWrapper.html#method-c-status_code_for_exception","(class_name)","",null,1],["status_message","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-status_message","()","",null,1],["step","Numeric","Ruby/classes/Numeric.html#method-i-step","(*args)","<p>Invokes <em>block</em> with the sequence of numbers starting at\n<em>num</em>, incremented by <em>step</em> (default 1) on each call. …\n",null,0],["step","Range","Ruby/classes/Range.html#method-i-step","(p1 = v1)","<p>Iterates over <em>rng</em>, passing each <em>n</em>th element to the block.\nIf the range contains numbers, <em>n</em> is added for …\n",null,0],["step_with_blockless","Range","Rails/classes/Range.html#method-i-step_with_blockless","(*args, &block)","<p>Return an array when step is called without a block.\n",null,1],["sti_name","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-sti_name","()","",null,1],["sticky?","File","Ruby/classes/File.html#method-c-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n",null,0],["sticky?","File::Stat","Ruby/classes/File/Stat.html#method-i-sticky-3F","()","<p>Returns <code>true</code> if <em>stat</em> has its sticky bit set,\n<code>false</code> if it doesn&#39;t or if the operating system doesn&#39;t\n…\n",null,0],["sticky?","FileTest","Ruby/classes/FileTest.html#method-i-sticky-3F","(p1)","<p>Returns <code>true</code> if the named file has the sticky bit set.\n",null,0],["stop","Thread","Ruby/classes/Thread.html#method-c-stop","()","<p>Stops execution of the current thread, putting it into a “sleep&#39;&#39;\nstate, and schedules execution …\n",null,0],["stop?","Thread","Ruby/classes/Thread.html#method-i-stop-3F","()","<p>Returns <code>true</code> if <em>thr</em> is dead or sleeping.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">new</span> { <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">stop</span> }\n<span class=\"ruby-identifier\">b</span> = <span class=\"ruby-constant\">Thread</span>.<span class=\"ruby-identifier\">current</span>\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">stop?</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["stopped?","Process::Status","Ruby/classes/Process/Status.html#method-i-stopped-3F","()","<p>Returns <code>true</code> if this process is stopped. This is only returned\nif the corresponding <code>wait</code> call had the …\n",null,0],["stopsig","Process::Status","Ruby/classes/Process/Status.html#method-i-stopsig","()","<p>Returns the number of the signal that caused <em>stat</em> to stop (or\n<code>nil</code> if self is not stopped).\n",null,0],["store","ENV","Ruby/classes/ENV.html#method-c-store","(p1, p2)","<p>Sets the environment variable <code>name</code> to <code>value</code>.  If\nthe value given is <code>nil</code> the environment variable is deleted. …\n",null,0],["store","Hash","Ruby/classes/Hash.html#method-i-store","(p1, p2)","<p>Element Assignment—Associates the value given by <em>value</em> with the\nkey given by <em>key</em>. <em>key</em> should not have …\n",null,0],["store","ActiveRecord::Store::ClassMethods","Rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-store","(store_attribute, options = {})","",null,1],["store","ActiveSupport::Dependencies::ClassCache","Rails/classes/ActiveSupport/Dependencies/ClassCache.html#method-i-store","(klass)","",null,1],["store","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-store","(key, value)","",null,1],["store","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-store","(key, value)","",null,1],["store_accessor","ActiveRecord::Store::ClassMethods","Rails/classes/ActiveRecord/Store/ClassMethods.html#method-i-store_accessor","(store_attribute, *keys)","",null,1],["store_application_definition!","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-store_application_definition-21","()","",null,1],["stress","GC","Ruby/classes/GC.html#method-c-stress","()","<p>returns current status of GC stress mode.\n",null,0],["stress=","GC","Ruby/classes/GC.html#method-c-stress-3D","(p1)","<p>Updates the GC stress mode.\n<p>When stress mode is enabled the GC is invoked at every GC opportunity: all\n…\n",null,0],["strftime","Time","Ruby/classes/Time.html#method-i-strftime","(p1)","<p>Formats <em>time</em> according to the directives in the given format\nstring. The directives begins with a percent …\n",null,0],["strftime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-strftime","(format)","<p>Replaces <code>%Z</code> and <code>%z</code> directives with\n<code>zone</code> and <code>formatted_offset</code>, respectively, before\npassing to Time#strftime …\n",null,1],["strict_encode64","Base64","Rails/classes/Base64.html#method-c-strict_encode64","(value)","<p>Included in Ruby 1.9\n",null,1],["string","MatchData","Ruby/classes/MatchData.html#method-i-string","()","<p>Returns a frozen copy of the string passed in to <code>match</code>.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138.&quot;)\nm.string ...</pre>\n",null,0],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,1],["stringify_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys","()","",null,1],["stringify_keys","Hash","Rails/classes/Hash.html#method-i-stringify_keys","()","<p>Return a new hash with all keys converted to strings.\n\n<pre class=\"ruby\">{ :<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;Rob&#39;</span>, :<span class=\"ruby-identifier\">years</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;28&#39;</span> }.<span class=\"ruby-identifier\">stringify_keys</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,1],["stringify_keys!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-stringify_keys-21","()","",null,1],["stringify_keys!","Hash","Rails/classes/Hash.html#method-i-stringify_keys-21","()","<p>Destructively convert all keys to strings. Same as\n<code>stringify_keys</code>, but modifies <code>self</code>.\n",null,1],["strip","String","Ruby/classes/String.html#method-i-strip","()","<p>Returns a copy of <em>str</em> with leading and trailing whitespace\nremoved.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;    hello    &quot;</span>.<span class=\"ruby-identifier\">strip</span>   <span class=\"ruby-comment\">#=&gt; &quot;hello&quot; ...</span>\n</pre>\n",null,0],["strip","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-strip","()","<p>Strips entire range of Unicode whitespace from the right and left of the\nstring.\n",null,1],["strip!","String","Ruby/classes/String.html#method-i-strip-21","()","<p>Removes leading and trailing whitespace from <em>str</em>. Returns\n<code>nil</code> if <em>str</em> was not altered.\n",null,0],["strip_heredoc","String","Rails/classes/String.html#method-i-strip_heredoc","()","<p>Strips indentation in heredocs.\n<p>For example in\n\n<pre>if options[:usage]\n  puts &lt;&lt;-USAGE.strip_heredoc\n    This ...</pre>\n",null,1],["strip_links","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_links","(html)","<p>Strips all link tags from <code>text</code> leaving just the link text.\n<p>Examples\n\n<pre>strip_links(&#39;&lt;a href=&quot;http://www.rubyonrails.org&quot;&gt;Ruby ...</pre>\n",null,1],["strip_tags","ActionView::Helpers::SanitizeHelper","Rails/classes/ActionView/Helpers/SanitizeHelper.html#method-i-strip_tags","(html)","<p>Strips all HTML tags from the <code>html</code>, including comments. This\nuses the html-scanner tokenizer and so its …\n",null,1],["structure_dump","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-structure_dump","()","<p>Returns a string of <code>CREATE TABLE</code> SQL statement(s) for\nrecreating the entire structure of the database. …\n",null,1],["stylesheet_link_tag","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#method-i-stylesheet_link_tag","(*sources)","<p>Returns a stylesheet link tag for the sources specified as arguments. If\nyou don&#39;t specify an extension, …\n",null,1],["stylesheet_link_tag","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-stylesheet_link_tag","(*sources)","",null,1],["stylesheet_path","ActionView::Helpers::AssetTagHelper::StylesheetTagHelpers","Rails/classes/ActionView/Helpers/AssetTagHelper/StylesheetTagHelpers.html#method-i-stylesheet_path","(source)","<p>Computes the path to a stylesheet asset in the public stylesheets\ndirectory. If the <code>source</code> filename has …\n",null,1],["stylesheet_path","Sprockets::Helpers::RailsHelper","Rails/classes/Sprockets/Helpers/RailsHelper.html#method-i-stylesheet_path","(source)","",null,1],["stylesheets","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-stylesheets","()","",null,1],["sub","Kernel","Ruby/classes/Kernel.html#method-i-sub","(*args)","<p>Equivalent to <code>$_.sub(<em>args</em>)</code>, except that\n<code>$_</code> will be updated if substitution occurs. Available only when\n…\n",null,0],["sub","String","Ruby/classes/String.html#method-i-sub","(*args)","<p>Returns a copy of <em>str</em> with the <em>first</em> occurrence of\n<em>pattern</em> substituted for the second argument. The  …\n",null,0],["sub!","String","Ruby/classes/String.html#method-i-sub-21","(*args)","<p>Performs the substitutions of <code>String#sub</code> in place, returning\n<em>str</em>, or <code>nil</code> if no substitutions were performed. …\n",null,0],["subclasses","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-subclasses","()","<p>Track all generators subclasses.\n",null,1],["subclasses","Rails::Railtie","Rails/classes/Rails/Railtie.html#method-c-subclasses","()","",null,1],["subdomain","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-subdomain","(tld_length = @@tld_length)","<p>Returns all the subdomains as a string, so <code>&quot;dev.www&quot;</code>\nwould be returned for “dev.www.rubyonrails.org …\n",null,1],["subdomains","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-subdomains","(tld_length = @@tld_length)","<p>Returns all the subdomains as an array, so <code>[&quot;dev&quot;,\n&quot;www&quot;]</code> would be returned for “ …\n",null,1],["submit","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-submit","(value=nil, options={})","<p>Add the submit button for the given form. When no value is given, it checks\nif the object is a new resource …\n",null,1],["submit_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-submit_tag","(value = \"Save changes\", options = {})","<p>Creates a submit button with the text <code>value</code> as the caption.\n<p>Options\n<p><code>:confirm =&gt; &#39;question?&#39;</code> …\n",null,1],["subscribe","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-subscribe","(*args, &block)","",null,1],["subscribe","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-subscribe","(pattern = nil, block = Proc.new)","",null,1],["subscribed","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-subscribed","(callback, *args, &block)","",null,1],["subsec","Time","Ruby/classes/Time.html#method-i-subsec","()","<p>Returns just the fraction for <em>time</em>.\n<p>The result is possibly rational.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2009-03-26 ...</span>\n</pre>\n",null,0],["substitute_at","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-substitute_at","(column, index)","<p>Returns a bind substitution value given a <code>column</code> and list of\ncurrent <code>binds</code>\n",null,1],["substitute_at","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-substitute_at","(column, index)","",null,1],["succ","Fixnum","Ruby/classes/Fixnum.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">next</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">next</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,0],["succ","Integer","Ruby/classes/Integer.html#method-i-succ","()","<p>Returns the <code>Integer</code> equal to <em>int</em> + 1.\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">next</span>      <span class=\"ruby-comment\">#=&gt; 2</span>\n(<span class=\"ruby-value\">-1</span>).<span class=\"ruby-identifier\">next</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,0],["succ","String","Ruby/classes/String.html#method-i-succ","()","<p>Returns the successor to <em>str</em>. The successor is calculated by\nincrementing characters starting from the …\n",null,0],["succ","Symbol","Ruby/classes/Symbol.html#method-i-succ","()","<p>Same as <code>sym.to_s.succ.intern</code>.\n",null,0],["succ","Time","Ruby/classes/Time.html#method-i-succ","()","<p>Return a new time object, one second later than <code>time</code>.\nTime#succ is obsolete since 1.9.2 for time is not …\n",null,0],["succ!","String","Ruby/classes/String.html#method-i-succ-21","()","<p>Equivalent to <code>String#succ</code>, but modifies the receiver in place.\n",null,0],["success?","Process::Status","Ruby/classes/Process/Status.html#method-i-success-3F","()","<p>Returns <code>true</code> if <em>stat</em> is successful,\n<code>false</code> if not. Returns <code>nil</code> if <code>exited?</code>\nis not <code>true</code>.\n",null,0],["success?","SystemExit","Ruby/classes/SystemExit.html#method-i-success-3F","()","<p>Returns <code>true</code> if exiting successful, <code>false</code> if not.\n",null,0],["success?","ActiveResource::Response","Rails/classes/ActiveResource/Response.html#method-i-success-3F","()","<p>Returns true if code is 2xx, false otherwise.\n",null,1],["sum","String","Ruby/classes/String.html#method-i-sum","(p1 = v1)","<p>Returns a basic <em>n</em>-bit checksum of the characters in <em>str</em>,\nwhere <em>n</em> is the optional <code>Fixnum</code> parameter, defaulting\n…\n",null,0],["sum","ActiveRecord::Calculations","Rails/classes/ActiveRecord/Calculations.html#method-i-sum","(*args)","<p>Calculates the sum of values on a given column. The value is returned with\nthe same data type of the …\n",null,1],["sum","Enumerable","Rails/classes/Enumerable.html#method-i-sum","(identity = 0, &block)","<p>Calculates a sum from the elements. Examples:\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">payments</span>.<span class=\"ruby-identifier\">sum</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">p</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">price</span> * <span class=\"ruby-identifier\">p</span>.<span class=\"ruby-identifier\">tax_rate</span> }\n<span class=\"ruby-identifier\">payments</span>.<span class=\"ruby-identifier\">sum</span>(&amp;:<span class=\"ruby-identifier\">price</span>)\n</pre>\n",null,1],["sunday","Date","Rails/classes/Date.html#method-i-sunday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the end\nof this week. Week is assumed to start on a Monday. …\n",null,1],["sunday","Time","Rails/classes/Time.html#method-i-sunday","()","<p>Returns a new <code>Date</code>/<code>DateTime</code> representing the end\nof this week. Week is assumed to start on a Monday. …\n",null,1],["sunday?","Time","Ruby/classes/Time.html#method-i-sunday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Sunday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1990</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">1</span>)       <span class=\"ruby-comment\">#=&gt; 1990-04-01 00:00:00 -0600 ...</span>\n</pre>\n",null,0],["superclass","Class","Ruby/classes/Class.html#method-i-superclass","()","<p>Returns the superclass of <em>class</em>, or <code>nil</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">superclass</span>          <span class=\"ruby-comment\">#=&gt; IO</span>\n<span class=\"ruby-constant\">IO</span>.<span class=\"ruby-identifier\">superclass</span>            <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["superclass_delegating_accessor","Class","Rails/classes/Class.html#method-i-superclass_delegating_accessor","(name, options = {})","",null,1],["supports_add_column?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_add_column-3F","()","<p>Returns true if SQLite version is &#39;3.1.6&#39; or greater, false\notherwise.\n",null,1],["supports_bulk_alter?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_bulk_alter-3F","()","",null,1],["supports_count_distinct?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_count_distinct-3F","()","<p>Does this adapter support using DISTINCT within COUNT? This is\n<code>true</code> for all adapters except sqlite.\n",null,1],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_ddl_transactions-3F","()","<p>Does this adapter support DDL rollbacks in transactions? That is, would\nCREATE TABLE or ALTER TABLE get …\n",null,1],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_ddl_transactions-3F","()","",null,1],["supports_ddl_transactions?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_ddl_transactions-3F","()","<p>Returns true if SQLite version is &#39;2.0.0&#39; or greater, false\notherwise.\n",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_explain-3F","()","<p>Does this adapter support explain? As of this writing sqlite3, mysql2, and\npostgresql are the only ones …\n",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::Mysql2Adapter","Rails/classes/ActiveRecord/ConnectionAdapters/Mysql2Adapter.html#method-i-supports_explain-3F","()","",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_explain-3F","()","<p>Returns true.\n",null,1],["supports_explain?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_explain-3F","()","<p>Returns true.\n",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Does this adapter support index sort order?\n",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_index_sort_order-3F","()","<p>Technically MySQL allows to create indexes with the sort order syntax but\nat the moment (5.5) it doesn&#39;t …\n",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_index_sort_order-3F","()","",null,1],["supports_index_sort_order?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_index_sort_order-3F","()","",null,1],["supports_insert_with_returning?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_insert_with_returning-3F","()","",null,1],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_migrations-3F","()","<p>Does this adapter support migrations? Backend specific, as the abstract\nadapter always returns <code>false</code> …\n",null,1],["supports_migrations?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_migrations-3F","()","<p>Returns true, since this connection adapter supports migrations.\n",null,1],["supports_migrations?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_migrations-3F","()","<p>Returns true, since this connection adapter supports migrations.\n",null,1],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_primary_key-3F","()","<p>Can this adapter determine the primary key for tables not attached to an\nActive Record class, such as …\n",null,1],["supports_primary_key?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_primary_key-3F","()","",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-supports_savepoints-3F","()","<p>Does this adapter support savepoints? PostgreSQL and MySQL do, SQLite &lt;\n3.6.8 does not.\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true, since this connection adapter supports savepoints.\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true, since this connection adapter supports savepoints.\n",null,1],["supports_savepoints?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_savepoints-3F","()","<p>Returns true if SQLite version is &#39;3.6.8&#39; or greater, false\notherwise.\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-supports_statement_cache-3F","()","<p>Returns <code>true</code> when the connection adapter supports prepared\nstatement caching, otherwise returns <code>false</code> …\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns true, since this connection adapter supports prepared statement\ncaching.\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns <code>true</code>, since this connection adapter supports prepared\nstatement caching.\n",null,1],["supports_statement_cache?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-supports_statement_cache-3F","()","<p>Returns true, since this connection adapter supports prepared statement\ncaching.\n",null,1],["supports_streaming?","ActionView::Template","Rails/classes/ActionView/Template.html#method-i-supports_streaming-3F","()","<p>Returns if the underlying handler supports streaming. If so, a streaming\nbuffer <strong>may</strong> be passed when it …\n",null,1],["supports_streaming?","ActionView::Template::Handlers::ERB","Rails/classes/ActionView/Template/Handlers/ERB.html#method-i-supports_streaming-3F","()","",null,1],["suppress","Kernel","Rails/classes/Kernel.html#method-i-suppress","(*exception_classes)","<p>Blocks and ignores any exception passed as argument if raised within the\nblock.\n\n<pre>suppress(ZeroDivisionError) ...</pre>\n",null,1],["suppress_messages","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-suppress_messages","()","",null,1],["svn_url?","Plugin","Rails/classes/Plugin.html#method-i-svn_url-3F","()","",null,1],["swap","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-swap","(target, *args, &block)","",null,1],["swapcase","String","Ruby/classes/String.html#method-i-swapcase","()","<p>Returns a copy of <em>str</em> with uppercase alphabetic characters\nconverted to lowercase and lowercase characters …\n",null,0],["swapcase","Symbol","Ruby/classes/Symbol.html#method-i-swapcase","()","<p>Same as <code>sym.to_s.swapcase.intern</code>.\n",null,0],["swapcase!","String","Ruby/classes/String.html#method-i-swapcase-21","()","<p>Equivalent to <code>String#swapcase</code>, but modifies the receiver in\nplace, returning <em>str</em>, or <code>nil</code> if no changes …\n",null,0],["switch","Process::GID","Ruby/classes/Process/GID.html#method-c-switch","()","<p>Switch the effective and real group IDs of the current process. If a\n<em>block</em> is given, the group IDs will …\n",null,0],["switch","Process::UID","Ruby/classes/Process/UID.html#method-c-switch","()","<p>Switch the effective and real user IDs of the current process. If a\n<em>block</em> is given, the user IDs will …\n",null,0],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,1],["symbolize_keys","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-symbolize_keys","()","",null,1],["symbolize_keys","Hash","Rails/classes/Hash.html#method-i-symbolize_keys","()","<p>Return a new hash with all keys converted to symbols, as long as they\nrespond to <code>to_sym</code>.\n\n<pre class=\"ruby\">{ <span class=\"ruby-string\">&#39;name&#39;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;Rob&#39;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["symbolize_keys!","Hash","Rails/classes/Hash.html#method-i-symbolize_keys-21","()","<p>Destructively convert all keys to symbols, as long as they respond to\n<code>to_sym</code>. Same as <code>symbolize_keys</code> …\n",null,1],["symbolized_base_class","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-symbolized_base_class","()","",null,1],["symbolized_path_parameters","ActionDispatch::Http::Parameters","Rails/classes/ActionDispatch/Http/Parameters.html#method-i-symbolized_path_parameters","()","<p>The same as <code>path_parameters</code> with explicitly symbolized keys.\n",null,1],["symbolized_sti_name","ActiveRecord::Inheritance::ClassMethods","Rails/classes/ActiveRecord/Inheritance/ClassMethods.html#method-i-symbolized_sti_name","()","",null,1],["symbols","Mime::Mimes","Rails/classes/Mime/Mimes.html#method-i-symbols","()","",null,1],["symlink","File","Ruby/classes/File.html#method-c-symlink","(p1, p2)","<p>Creates a symbolic link called <em>new_name</em> for the existing file\n<em>old_name</em>. Raises a <code>NotImplemented</code> exception …\n",null,0],["symlink?","File","Ruby/classes/File.html#method-c-symlink-3F","(p1)","<p>Returns <code>true</code> if the named file is a symbolic link.\n",null,0],["symlink?","File::Stat","Ruby/classes/File/Stat.html#method-i-symlink-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a symbolic link,\n<code>false</code> if it isn&#39;t or if the operating system doesn&#39;t …\n",null,0],["symlink?","FileTest","Ruby/classes/FileTest.html#method-i-symlink-3F","(p1)","<p>Returns <code>true</code> if the named file is a symbolic link.\n",null,0],["sync","IO","Ruby/classes/IO.html#method-i-sync","()","<p>Returns the current “sync mode&#39;&#39; of <em>ios</em>. When sync mode is\ntrue, all output is immediately flushed …\n",null,0],["sync=","IO","Ruby/classes/IO.html#method-i-sync-3D","(p1)","<p>Sets the “sync mode&#39;&#39; to <code>true</code> or <code>false</code>.\nWhen sync mode is true, all output is immediately flushed …\n",null,0],["sync_keys!","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-sync_keys-21","()","",null,1],["synchronize","Mutex","Ruby/classes/Mutex.html#method-i-synchronize","()","<p>Obtains a lock, runs the block, and releases the lock when the block\ncompletes.  See the example under …\n",null,0],["synchronize","Module","Rails/classes/Module.html#method-i-synchronize","(*methods)","<p>Synchronize access around a method, delegating synchronization to a\nparticular mutex. A mutex (either …\n",null,1],["syscall","Kernel","Ruby/classes/Kernel.html#method-i-syscall","(*args)","\n<pre>Calls the operating system function identified by _num_ and\nreturns the result of the function or raises ...</pre>\n",null,0],["sysopen","IO","Ruby/classes/IO.html#method-c-sysopen","(p1, p2 = v2, p3 = v3)","<p>Opens the given path, returning the underlying file descriptor as a\n<code>Fixnum</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">IO</span>.<span class=\"ruby-identifier\">sysopen</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["sysread","IO","Ruby/classes/IO.html#method-i-sysread","(p1, p2 = v2)","<p>Reads <em>maxlen</em> bytes from <em>ios</em> using a low-level read and\nreturns them as a string.  Do not mix with other …\n",null,0],["sysseek","IO","Ruby/classes/IO.html#method-i-sysseek","(p1, p2 = v2)","<p>Seeks to a given <em>offset</em> in the stream according to the value of\n<em>whence</em> (see <code>IO#seek</code> for values of <em>whence</em> …\n",null,0],["system","Kernel","Ruby/classes/Kernel.html#method-i-system","(*args)","<p>Executes <em>command…</em> in a subshell. <em>command…</em> is one of\nfollowing forms.\n\n<pre>commandline                 : ...</pre>\n",null,0],["syswrite","IO","Ruby/classes/IO.html#method-i-syswrite","(p1)","<p>Writes the given string to <em>ios</em> using a low-level write. Returns\nthe number of bytes written. Do not mix …\n",null,0],["t","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-t","(*args)","",null,1],["t","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-t","(key, options = {})","",null,1],["table_alias_for","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_alias_for","(table_name)","<p>Truncates a table alias according to the limits of the current adapter.\n",null,1],["table_alias_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_alias_length","()","<p>Returns the maximum length of a table alias.\n",null,1],["table_alias_length","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-table_alias_length","()","<p>Returns the configured supported identifier length supported by PostgreSQL\n",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-table_exists-3F","(name)","",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-table_exists-3F","(name)","<p>Returns true if table exists. If the schema is not specified as part of\n<code>name</code> then it will only find tables …\n",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-table_exists-3F","(name)","",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaCache","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaCache.html#method-i-table_exists-3F","(name)","<p>A cached lookup for table existence.\n",null,1],["table_exists?","ActiveRecord::ConnectionAdapters::SchemaStatements","Rails/classes/ActiveRecord/ConnectionAdapters/SchemaStatements.html#method-i-table_exists-3F","(table_name)","<p>Checks to see if the table <code>table_name</code> exists on the database.\n<p>Example\n\n<pre>table_exists?(:developers)</pre>\n",null,1],["table_exists?","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_exists-3F","()","<p>Indicates whether the table associated with this class exists\n",null,1],["table_name","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name","()","<p>Guesses the table name (in forced lower-case) based on the name of the\nclass in the inheritance hierarchy …\n",null,1],["table_name","ActiveRecord::SessionStore::SqlBypass","Rails/classes/ActiveRecord/SessionStore/SqlBypass.html#method-c-table_name","","<p>The table name defaults to &#39;sessions&#39;.\n",null,1],["table_name","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-table_name","()","",null,1],["table_name=","ActiveRecord::ModelSchema::ClassMethods","Rails/classes/ActiveRecord/ModelSchema/ClassMethods.html#method-i-table_name-3D","(value)","<p>Sets the table name explicitly. Example:\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Project</span> <span class=\"ruby-operator\">&lt;</span> <span class=\"ruby-constant\">ActiveRecord</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Base</span>\n  <span class=\"ruby-keyword\">self</span>.<span class=\"ruby-identifier\">table_name</span> = <span class=\"ruby-string\">&quot;project&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["table_name_length","ActiveRecord::ConnectionAdapters::DatabaseLimits","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseLimits.html#method-i-table_name_length","()","<p>Returns the maximum length of a table name.\n",null,1],["table_rows","ActiveRecord::Fixtures","Rails/classes/ActiveRecord/Fixtures.html#method-i-table_rows","()","<p>Return a hash of rows to be inserted. The key is the table, the value is a\nlist of rows to insert to …\n",null,1],["table_structure","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-table_structure","(table_name)","",null,1],["tableize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-tableize","(class_name)","<p>Create the name of a table like Rails does for models to table names. This\nmethod uses the <code>pluralize</code> …\n",null,1],["tableize","String","Rails/classes/String.html#method-i-tableize","()","<p>Creates the name of a table like Rails does for models to table names. This\nmethod uses the <code>pluralize</code> …\n",null,1],["tables","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-tables","(name = nil)","<p>Returns the list of all tables in the schema search path or a specified\nschema.\n",null,1],["tag","ActionView::Helpers::ActiveModelInstanceTag","Rails/classes/ActionView/Helpers/ActiveModelInstanceTag.html#method-i-tag","(type, options, *)","",null,1],["tag","ActionView::Helpers::TagHelper","Rails/classes/ActionView/Helpers/TagHelper.html#method-i-tag","(name, options = nil, open = false, escape = true)","<p>Returns an empty HTML tag of type <code>name</code> which by default is\nXHTML compliant. Set <code>open</code> to true to create …\n",null,1],["tagged","ActiveSupport::TaggedLogging","Rails/classes/ActiveSupport/TaggedLogging.html#method-i-tagged","(*tags)","",null,1],["tail!","Rails::Rack::LogTailer","Rails/classes/Rails/Rack/LogTailer.html#method-i-tail-21","()","",null,1],["taint","Object","Ruby/classes/Object.html#method-i-taint","()","<p>Marks <em>obj</em> as tainted—if the <code>$SAFE</code> level is set\nappropriately, many method calls which might alter the …\n",null,0],["tainted?","Object","Ruby/classes/Object.html#method-i-tainted-3F","()","<p>Returns <code>true</code> if the object is tainted.\n",null,0],["take","Array","Ruby/classes/Array.html#method-i-take","(p1)","<p>Returns first n elements from <em>ary</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>, <span class=\"ruby-value\">0</span>]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">take</span>(<span class=\"ruby-value\">3</span>)             <span class=\"ruby-comment\">#=&gt; [1, 2, 3]</span>\n</pre>\n",null,0],["take","Enumerable","Ruby/classes/Enumerable.html#method-i-take","(p1)","<p>Returns first n elements from <em>enum</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">a</span> = [<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>, <span class=\"ruby-value\">5</span>, <span class=\"ruby-value\">0</span>]\n<span class=\"ruby-identifier\">a</span>.<span class=\"ruby-identifier\">take</span>(<span class=\"ruby-value\">3</span>)             <span class=\"ruby-comment\">#=&gt; [1, 2, 3]</span>\n</pre>\n",null,0],["take_while","Array","Ruby/classes/Array.html#method-i-take_while","()","<p>Passes elements to the block until the block returns <code>nil</code> or\n<code>false</code>, then stops iterating and returns an …\n",null,0],["take_while","Enumerable","Ruby/classes/Enumerable.html#method-i-take_while","()","<p>Passes elements to the block until the block returns <code>nil</code> or\n<code>false</code>, then stops iterating and returns an …\n",null,0],["tan","Math","Ruby/classes/Math.html#method-c-tan","(p1)","<p>Returns the tangent of <em>x</em> (expressed in radians).\n",null,0],["tanh","Math","Ruby/classes/Math.html#method-c-tanh","(p1)","<p>Computes the hyperbolic tangent of <em>x</em> (expressed in radians).\n",null,0],["tap","Object","Ruby/classes/Object.html#method-i-tap","()","<p>Yields <code>x</code> to the block, and then returns <code>x</code>. The\nprimary purpose of this method is to “tap into” …\n",null,0],["teardown","ActiveSupport::LogSubscriber::TestHelper","Rails/classes/ActiveSupport/LogSubscriber/TestHelper.html#method-i-teardown","()","",null,1],["teardown","ActiveSupport::Testing::SetupAndTeardown::ClassMethods","Rails/classes/ActiveSupport/Testing/SetupAndTeardown/ClassMethods.html#method-i-teardown","(*args, &block)","",null,1],["teardown_fixtures","ActiveRecord::TestFixtures","Rails/classes/ActiveRecord/TestFixtures.html#method-i-teardown_fixtures","()","",null,1],["teardown_subscriptions","ActionController::TemplateAssertions","Rails/classes/ActionController/TemplateAssertions.html#method-i-teardown_subscriptions","()","",null,1],["telephone_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-telephone_field","(object_name, method, options = {})","<p>Returns a text_field of type “tel”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">telephone_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;phone&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_phone&quot; ...</span>\n</pre>\n",null,1],["telephone_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-telephone_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “tel”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["tell","ARGF","Ruby/classes/ARGF.html#method-i-tell","()","<p>Returns the current offset (in bytes) of the current file in\n<code>ARGF</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-constant\">ARGF</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,0],["tell","Dir","Ruby/classes/Dir.html#method-i-tell","()","<p>Returns the current position in <em>dir</em>. See also\n<code>Dir#seek</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testdir&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">tell</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">read</span>  <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["tell","IO","Ruby/classes/IO.html#method-i-tell","()","<p>Returns the current offset (in bytes) of <em>ios</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">f</span> = <span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>)\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">pos</span>    <span class=\"ruby-comment\">#=&gt; 0</span>\n<span class=\"ruby-identifier\">f</span>.<span class=\"ruby-identifier\">gets</span>   <span class=\"ruby-comment\">#=&gt; &quot;This ...</span>\n</pre>\n",null,0],["template","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-template","(source, *args, &block)","",null,1],["template_exists?","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-template_exists-3F","(name, prefixes = [], partial = false, keys = [], options = {})","",null,1],["templates_path","Rails::Generators","Rails/classes/Rails/Generators.html#method-c-templates_path","()","",null,1],["terabyte","Numeric","Rails/classes/Numeric.html#method-i-terabyte","()","",null,1],["terabytes","Numeric","Rails/classes/Numeric.html#method-i-terabytes","()","",null,1],["terminate","Thread","Ruby/classes/Thread.html#method-i-terminate","()","<p>Terminates <em>thr</em> and schedules another thread to be run. If this\nthread is already marked to be killed, …\n",null,0],["termsig","Process::Status","Ruby/classes/Process/Status.html#method-i-termsig","()","<p>Returns the number of the signal that caused <em>stat</em> to terminate (or\n<code>nil</code> if self was not terminated by …\n",null,0],["test","Kernel","Ruby/classes/Kernel.html#method-i-test","(*args)","\n<pre>Uses the integer &lt;i&gt;aCmd&lt;/i&gt; to perform various tests on\n&lt;i&gt;file1&lt;/i&gt; (first table below) or on &lt;i&gt;file1&lt;/i&gt; ...</pre>\n",null,0],["test","ActiveSupport::Testing::Declarative","Rails/classes/ActiveSupport/Testing/Declarative.html#method-i-test","(name, &block)","<p>test “verify something” do\n\n<pre>...</pre>\n<p>end\n",null,1],["test","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-test","()","",null,1],["test","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test","()","",null,1],["test_dummy_clean","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_clean","()","",null,1],["test_dummy_config","Rails::PluginBuilder","Rails/classes/Rails/PluginBuilder.html#method-i-test_dummy_config","()","",null,1],["test_errors_aref","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_errors_aref","()","<p>Errors Testing\n<p>Returns an object that has :[] and :full_messages defined on it. See below\nfor more details. …\n",null,1],["test_errors_full_messages","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_errors_full_messages","()","<p>Returns an Array of all error messages for the object. Each message should\ncontain information about …\n",null,1],["test_homepage","Object","Rails/classes/Object.html#method-i-test_homepage","()","<p>:output =&gt; &#39;tmp/performance&#39;, :formats =&gt; [:flat] }\n",null,1],["test_model_naming","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_model_naming","()","<p>Naming\n<p>Model.model_name must return a string with some convenience methods:\n:human, :singular, and :plural. …\n",null,1],["test_persisted?","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_persisted-3F","()","<p>Responds to <code>persisted?</code>\n<p>Returns a boolean that specifies whether the object has been persisted yet.\nThis …\n",null,1],["test_to_key","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_key","()","<p>Responds to <code>to_key</code>\n<p>Returns an Enumerable of all (primary) key attributes or nil if\nmodel.persisted? is …\n",null,1],["test_to_param","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_param","()","<p>Responds to <code>to_param</code>\n<p>Returns a string representing the object&#39;s key suitable for use in URLs\nor nil …\n",null,1],["test_to_partial_path","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_to_partial_path","()","<p>Responds to <code>to_partial_path</code>\n<p>Returns a string giving a relative path.  This is used for looking up\npartials. …\n",null,1],["test_valid?","ActiveModel::Lint::Tests","Rails/classes/ActiveModel/Lint/Tests.html#method-i-test_valid-3F","()","<p>Responds to <code>valid?</code>\n<p>Returns a boolean that specifies whether the object is in a valid or\ninvalid state. …\n",null,1],["tests","ActionController::TestCase::Behavior::ClassMethods","Rails/classes/ActionController/TestCase/Behavior/ClassMethods.html#method-i-tests","(controller_class)","<p>Sets the controller class name. Useful if the name can&#39;t be inferred\nfrom test class. Normalizes …\n",null,1],["tests","ActionMailer::TestCase::Behavior::ClassMethods","Rails/classes/ActionMailer/TestCase/Behavior/ClassMethods.html#method-i-tests","(mailer)","",null,1],["tests","ActionView::TestCase::Behavior::ClassMethods","Rails/classes/ActionView/TestCase/Behavior/ClassMethods.html#method-i-tests","(helper_class)","",null,1],["tests","Rails::Generators::TestCase","Rails/classes/Rails/Generators/TestCase.html#method-c-tests","(klass)","<p>Sets which generator should be tested:\n\n<pre>tests AppGenerator</pre>\n",null,1],["text_area","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-text_area","(object_name, method, options = {})","<p>Returns a textarea opening and closing tag set tailored for accessing a\nspecified attribute (identified …\n",null,1],["text_area_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_area_tag","(name, content = nil, options = {})","<p>Creates a text input area; use a textarea for longer text inputs such as\nblog posts or descriptions. …\n",null,1],["text_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-text_field","(object_name, method, options = {})","<p>Returns an input tag of the “text” type tailored for accessing a specified\nattribute (identified …\n",null,1],["text_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-text_field_tag","(name, value = nil, options = {})","<p>Creates a standard text field; use these text fields to input smaller\nchunks of text like a username …\n",null,1],["third","Array","Rails/classes/Array.html#method-i-third","()","<p>Equal to <code>self[2]</code>.\n",null,1],["threadsafe!","Rails::Application::Configuration","Rails/classes/Rails/Application/Configuration.html#method-i-threadsafe-21","()","<p>Enable threaded mode. Allows concurrent requests to controller actions and\nmultiple database connections. …\n",null,1],["throw","Kernel","Ruby/classes/Kernel.html#method-i-throw","(p1, p2 = v2)","<p>Transfers control to the end of the active <code>catch</code> block waiting\nfor <em>tag</em>. Raises <code>ArgumentError</code> if there …\n",null,0],["thursday?","Time","Ruby/classes/Time.html#method-i-thursday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Thursday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1995</span>, <span class=\"ruby-value\">12</span>, <span class=\"ruby-value\">21</span>)     <span class=\"ruby-comment\">#=&gt; 1995-12-21 00:00:00 -0600 ...</span>\n</pre>\n",null,0],["tidy_bytes","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-tidy_bytes","(force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent\nresulting in a valid UTF-8 string. …\n",null,1],["tidy_bytes","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-tidy_bytes","(string, force = false)","<p>Replaces all ISO-8859-1 or CP1252 characters by their UTF-8 equivalent\nresulting in a valid UTF-8 string. …\n",null,1],["time","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-time","()","<p>Returns a Time or DateTime instance that represents the time in\n<code>time_zone</code>.\n",null,1],["time_ago_in_words","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_ago_in_words","(from_time, include_seconds = false)","<p>Like <code>distance_of_time_in_words</code>, but where <code>to_time</code>\nis fixed to <code>Time.now</code>.\n<p>Examples\n\n<pre>time_ago_in_words(3.minutes.from_now) ...</pre>\n",null,1],["time_select","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_select","(object_name, method, options = {}, html_options = {})","<p>Returns a set of select tags (one for hour, minute and optionally second)\npre-selected for accessing …\n",null,1],["time_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_select","(method, options = {}, html_options = {})","",null,1],["time_tag","ActionView::Helpers::DateHelper","Rails/classes/ActionView/Helpers/DateHelper.html#method-i-time_tag","(date_or_time, *args)","<p>Returns an html time tag for the given date or time.\n<p>Examples\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">time_tag</span> <span class=\"ruby-constant\">Date</span>.<span class=\"ruby-identifier\">today</span>  <span class=\"ruby-comment\"># =&gt;</span>\n  <span class=\"ruby-operator\">&lt;</span><span class=\"ruby-identifier\">time</span> <span class=\"ruby-identifier\">datetime</span>=<span class=\"ruby-string\">&quot;2010-11-04&quot;</span><span class=\"ruby-operator\">&gt;</span><span class=\"ruby-constant\">November</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["time_with_block","ActiveSupport::Testing::Performance::Profiler","Rails/classes/ActiveSupport/Testing/Performance/Profiler.html#method-i-time_with_block","()","",null,1],["time_with_datetime_fallback","Time","Rails/classes/Time.html#method-c-time_with_datetime_fallback","(utc_or_local, year, month=1, day=1, hour=0, min=0, sec=0, usec=0)","<p>Returns a new Time if requested year can be accommodated by Ruby&#39;s Time\nclass (i.e., if year is within …\n",null,1],["time_zone_options_for_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_options_for_select","(selected = nil, priority_zones = nil, model = ::ActiveSupport::TimeZone)","<p>Returns a string of option tags for pretty much any time zone in the world.\nSupply a ActiveSupport::TimeZone …\n",null,1],["time_zone_select","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-time_zone_select","(method, priority_zones = nil, options = {}, html_options = {})","",null,1],["time_zone_select","ActionView::Helpers::FormOptionsHelper","Rails/classes/ActionView/Helpers/FormOptionsHelper.html#method-i-time_zone_select","(object, method, priority_zones = nil, options = {}, html_options = {})","<p>Return select and option tags for the given object and method, using\n#time_zone_options_for_select to …\n",null,1],["timeout","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-timeout","()","<p>Gets the number of seconds after which requests to the REST API should time\nout.\n",null,1],["timeout=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-timeout-3D","(timeout)","<p>Sets the number of seconds after which requests to the REST API should time\nout.\n",null,1],["timeout=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-timeout-3D","(timeout)","<p>Sets the number of seconds after which HTTP requests to the remote service\nshould time out.\n",null,1],["times","Integer","Ruby/classes/Integer.html#method-i-times","()","<p>Iterates block <em>int</em> times, passing in values from zero to\n<em>int</em> - 1.\n<p>If no block is given, an enumerator …\n",null,0],["times","Process","Ruby/classes/Process.html#method-c-times","()","<p>Returns a <code>Tms</code> structure (see <code>Struct::Tms</code>) that\ncontains user and system CPU times for this process, and …\n",null,0],["timestamped_migrations","ActiveRecord::Base","Rails/classes/ActiveRecord/Base.html#method-c-timestamped_migrations","","<p>Specify whether or not to use timestamps for migration versions\n",null,1],["timestamps","ActiveRecord::ConnectionAdapters::Table","Rails/classes/ActiveRecord/ConnectionAdapters/Table.html#method-i-timestamps","()","<p>Adds timestamps (<code>created_at</code> and <code>updated_at</code>)\ncolumns to the table. See SchemaStatements#add_timestamps …\n",null,1],["timestamps","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-timestamps","(*args)","<p>Appends <code>:datetime</code> columns <code>:created_at</code> and\n<code>:updated_at</code> to the table.\n",null,1],["titlecase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-titlecase","()","",null,1],["titlecase","String","Rails/classes/String.html#method-i-titlecase","()","",null,1],["titleize","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-titleize","(word)","<p>Capitalizes all the words and replaces some characters in the string to\ncreate a nicer looking title. …\n",null,1],["titleize","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-titleize","()","<p>Capitalizes the first letter of every word, when possible.\n<p>Example:\n\n<pre>&quot;ÉL QUE SE ENTERÓ&quot;.mb_chars.titleize ...</pre>\n",null,1],["titleize","String","Rails/classes/String.html#method-i-titleize","()","<p>Capitalizes all the words and replaces some characters in the string to\ncreate a nicer looking title. …\n",null,1],["tmp","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-tmp","()","",null,1],["to","Array","Rails/classes/Array.html#method-i-to","(position)","<p>Returns the beginning of the array up to <code>position</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">to</span>(<span class=\"ruby-value\">0</span>)  <span class=\"ruby-comment\"># =&gt; %w( a )</span>\n<span class=\"ruby-node\">%w( a b c d )</span>.<span class=\"ruby-identifier\">to</span>(<span class=\"ruby-value\">2</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["to","String","Rails/classes/String.html#method-i-to","(position)","<p>Returns the beginning of the string up to the <code>position</code>\ntreating the string as an array (where 0 is the …\n",null,1],["to_a","ARGF","Ruby/classes/ARGF.html#method-i-to_a","(*args)","<p>Reads <code>ARGF</code>&#39;s current file in its entirety, returning an\n<code>Array</code> of its lines, one line per element. …\n",null,0],["to_a","Array","Ruby/classes/Array.html#method-i-to_a","()","<p>Returns <code>self</code>. If called on a subclass of Array, converts the\nreceiver to an Array object.\n",null,0],["to_a","ENV","Ruby/classes/ENV.html#method-c-to_a","()","<p>Converts the environment variables into an array of names and value arrays.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">ENV</span>.<span class=\"ruby-identifier\">to_a</span> <span class=\"ruby-comment\"># =&gt; [[&quot;TERM&quot; =&gt; ...</span>\n</pre>\n",null,0],["to_a","Enumerable","Ruby/classes/Enumerable.html#method-i-to_a","(*args)","<p>Returns an array containing the items in <em>enum</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">7</span>).<span class=\"ruby-identifier\">to_a</span>                       <span class=\"ruby-comment\">#=&gt; [1, 2, 3, 4, 5, 6, ...</span>\n</pre>\n",null,0],["to_a","Hash","Ruby/classes/Hash.html#method-i-to_a","()","<p>Converts <em>hsh</em> to a nested array of <code>[</code> <em>key,\nvalue</em> <code>]</code> arrays.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;c&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">300</span>, <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;d&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">400</span>, <span class=\"ruby-string\">&quot;c&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["to_a","MatchData","Ruby/classes/MatchData.html#method-i-to_a","()","<p>Returns the array of matches.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-regexp\">/(.)(.)(\\d+)(\\d)/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;THX1138.&quot;</span>)\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">to_a</span>   <span class=\"ruby-comment\">#=&gt; [&quot;HX1138&quot;, &quot;H&quot;, &quot;X&quot;, ...</span>\n</pre>\n",null,0],["to_a","NilClass","Ruby/classes/NilClass.html#method-i-to_a","()","<p>Always returns an empty array.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">to_a</span>   <span class=\"ruby-comment\">#=&gt; []</span>\n</pre>\n",null,0],["to_a","RubyVM::InstructionSequence","Ruby/classes/RubyVM/InstructionSequence.html#method-i-to_a","()","",null,0],["to_a","Struct","Ruby/classes/Struct.html#method-i-to_a","()","<p>Returns the values for this instance as an array.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,0],["to_a","Time","Ruby/classes/Time.html#method-i-to_a","()","<p>Returns a ten-element <em>array</em> of values for <em>time</em>: {<code>[\nsec, min, hour, day, month, year, wday, yday, isdst,</code> …\n",null,0],["to_a","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-to_a","()","",null,1],["to_a","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-to_a","()","<p>Returns an array of error messages, with the attribute name included\n\n<pre>p.errors.add(:name, &quot;can&#39;t be blank&quot;) ...</pre>\n",null,1],["to_a","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-to_a","()","",null,1],["to_a","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-to_a","()","",null,1],["to_a","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_a","()","",null,1],["to_a","Rails::Paths::Path","Rails/classes/Rails/Paths/Path.html#method-i-to_a","()","",null,1],["to_app","Rails::Application","Rails/classes/Rails/Application.html#method-i-to_app","()","",null,1],["to_ary","Array","Ruby/classes/Array.html#method-i-to_ary","()","<p>Returns <code>self</code>.\n",null,0],["to_ary","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-to_ary","()","",null,1],["to_boolean_select_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_boolean_select_tag","(options = {})","",null,1],["to_c","NilClass","Ruby/classes/NilClass.html#method-i-to_c","()","<p>Returns zero as a complex.\n",null,0],["to_c","Numeric","Ruby/classes/Numeric.html#method-i-to_c","()","<p>Returns the value as a complex.\n",null,0],["to_c","String","Ruby/classes/String.html#method-i-to_c","()","<p>Returns a complex which denotes the string form.  The parser ignores\nleading whitespaces and trailing …\n",null,0],["to_check_box_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_check_box_tag","(options = {}, checked_value = \"1\", unchecked_value = \"0\")","",null,1],["to_cleanup","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-to_cleanup","(*args, &block)","<p>Add a cleanup callback. Cleanup callbacks are run after each request is\ncomplete (after #close is called …\n",null,1],["to_content_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_content_tag","(tag_name, options = {})","",null,1],["to_d","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_d","()","",null,1],["to_date","Date","Rails/classes/Date.html#method-i-to_date","()","<p>A method to keep Time, Date and DateTime instances interchangeable on\nconversions. In this case, it simply …\n",null,1],["to_date","DateTime","Rails/classes/DateTime.html#method-i-to_date","()","<p>Converts self to a Ruby Date object; time portion is discarded.\n",null,1],["to_date","Mysql::Time","Rails/classes/Mysql/Time.html#method-i-to_date","()","<p>This monkey patch is for test_additional_columns_from_join_table\n",null,1],["to_date","String","Rails/classes/String.html#method-i-to_date","()","<p>Converts a string to a Date value.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;1-1-2012&quot;</span>.<span class=\"ruby-identifier\">to_date</span>   <span class=\"ruby-comment\">#=&gt; Sun, 01 Jan 2012</span>\n<span class=\"ruby-string\">&quot;01/01/2012&quot;</span>.<span class=\"ruby-identifier\">to_date</span> <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,1],["to_date","Time","Rails/classes/Time.html#method-i-to_date","()","<p>Converts a Time object to a Date, dropping hour, minute, and second\nprecision.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my_time</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>  <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["to_date_select_tag","ActionView::Helpers::DateHelperInstanceTag","Rails/classes/ActionView/Helpers/DateHelperInstanceTag.html#method-i-to_date_select_tag","(options = {}, html_options = {})","",null,1],["to_datetime","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_datetime","()","",null,1],["to_datetime","Date","Rails/classes/Date.html#method-i-to_datetime","()","<p>Converts a Date instance to a DateTime, where the time is set to the\nbeginning of the day and UTC offset …\n",null,1],["to_datetime","DateTime","Rails/classes/DateTime.html#method-i-to_datetime","()","<p>To be able to keep Times, Dates and DateTimes interchangeable on\nconversions.\n",null,1],["to_datetime","String","Rails/classes/String.html#method-i-to_datetime","()","<p>Converts a string to a DateTime value.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;1-1-2012&quot;</span>.<span class=\"ruby-identifier\">to_datetime</span>            <span class=\"ruby-comment\">#=&gt; Sun, 01 Jan 2012 00:00:00 ...</span>\n</pre>\n",null,1],["to_datetime","Time","Rails/classes/Time.html#method-i-to_datetime","()","<p>Converts a Time instance to a Ruby DateTime instance, preserving UTC\noffset.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">my_time</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>    <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["to_datetime_select_tag","ActionView::Helpers::DateHelperInstanceTag","Rails/classes/ActionView/Helpers/DateHelperInstanceTag.html#method-i-to_datetime_select_tag","(options = {}, html_options = {})","",null,1],["to_default_s","Array","Rails/classes/Array.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","Date","Rails/classes/Date.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","DateTime","Rails/classes/DateTime.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","Range","Rails/classes/Range.html#method-i-to_default_s","(format = :default)","",null,1],["to_default_s","Time","Rails/classes/Time.html#method-i-to_default_s","(format = :default)","",null,1],["to_enum","Object","Ruby/classes/Object.html#method-i-to_enum","(*args)","<p>Creates a new Enumerator which will enumerate by on calling\n<code>method</code> on <code>obj</code>.\n<p><code>method</code> &mdash; the method to call on …\n",null,0],["to_f","Bignum","Ruby/classes/Bignum.html#method-i-to_f","()","<p>Converts <em>big</em> to a <code>Float</code>. If <em>big</em> doesn&#39;t\nfit in a <code>Float</code>, the result is infinity.\n",null,0],["to_f","Complex","Ruby/classes/Complex.html#method-i-to_f","()","<p>Returns the value as a float if possible.\n",null,0],["to_f","Fixnum","Ruby/classes/Fixnum.html#method-i-to_f","()","<p>Converts <em>fix</em> to a <code>Float</code>.\n",null,0],["to_f","Float","Ruby/classes/Float.html#method-i-to_f","()","<p>As <code>flt</code> is already a float, returns <code>self</code>.\n",null,0],["to_f","NilClass","Ruby/classes/NilClass.html#method-i-to_f","()","<p>Always returns zero.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">to_f</span>   <span class=\"ruby-comment\">#=&gt; 0.0</span>\n</pre>\n",null,0],["to_f","Rational","Ruby/classes/Rational.html#method-i-to_f","()","<p>Return the value as a float.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">to_f</span>      <span class=\"ruby-comment\">#=&gt; 2.0</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">9</span>, <span class=\"ruby-value\">4</span>).<span class=\"ruby-identifier\">to_f</span>   <span class=\"ruby-comment\">#=&gt; 2.25 ...</span>\n</pre>\n",null,0],["to_f","String","Ruby/classes/String.html#method-i-to_f","()","<p>Returns the result of interpreting leading characters in <em>str</em> as a\nfloating point number. Extraneous characters …\n",null,0],["to_f","Time","Ruby/classes/Time.html#method-i-to_f","()","<p>Returns the value of <em>time</em> as a floating point number of seconds\nsince the Epoch.\n\n<pre>t = Time.now\n&quot;%10.5f&quot; ...</pre>\n",null,0],["to_f","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_f","()","",null,1],["to_f","DateTime","Rails/classes/DateTime.html#method-i-to_f","()","<p>Converts self to a floating-point number of seconds since the Unix epoch.\n",null,1],["to_format","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-to_format","()","<p>All other formats follow the procedure below. First we try to render a\ntemplate, if the template is not …\n",null,1],["to_formatted_s","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_formatted_s","(format = :default)","",null,1],["to_formatted_s","Array","Rails/classes/Array.html#method-i-to_formatted_s","(format = :default)","<p>Converts a collection of elements into a formatted string by calling\n<code>to_s</code> on all elements and joining …\n",null,1],["to_formatted_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_formatted_s","(format = DEFAULT_STRING_FORMAT)","",null,1],["to_formatted_s","Date","Rails/classes/Date.html#method-i-to_formatted_s","(format = :default)","<p>Convert to a formatted string. See DATE_FORMATS for predefined formats.\n<p>This method is aliased to <code>to_s</code> …\n",null,1],["to_formatted_s","DateTime","Rails/classes/DateTime.html#method-i-to_formatted_s","(format = :default)","<p>Convert to a formatted string. See Time::DATE_FORMATS for predefined\nformats.\n<p>This method is aliased to …\n",null,1],["to_formatted_s","Range","Rails/classes/Range.html#method-i-to_formatted_s","(format = :default)","<p>Gives a human readable format of the range.\n<p>Example\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">100</span>).<span class=\"ruby-identifier\">to_formatted_s</span> <span class=\"ruby-comment\"># =&gt; &quot;1..100&quot;</span>\n</pre>\n",null,1],["to_formatted_s","Time","Rails/classes/Time.html#method-i-to_formatted_s","(format = :default)","<p>Converts to a formatted string. See DATE_FORMATS for builtin formats.\n<p>This method is aliased to <code>to_s</code>. …\n",null,1],["to_hash","ENV","Ruby/classes/ENV.html#method-c-to_hash","()","<p>Creates a hash with a copy of the environment variables.\n",null,0],["to_hash","Hash","Ruby/classes/Hash.html#method-i-to_hash","()","<p>Returns <code>self</code>.\n",null,0],["to_hash","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-to_hash","()","",null,1],["to_hash","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-to_hash","()","",null,1],["to_hash","ActiveRecord::Result","Rails/classes/ActiveRecord/Result.html#method-i-to_hash","()","",null,1],["to_hash","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a Hash with String keys.\n",null,1],["to_hash","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_hash","()","<p>Convert to a Hash with String keys.\n",null,1],["to_hash","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-to_hash","()","",null,1],["to_html","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-to_html","()","<p>HTML format does not render the resource, it always attempt to render a\ntemplate.\n",null,1],["to_html","Rails::Info","Rails/classes/Rails/Info.html#method-c-to_html","()","",null,1],["to_i","ARGF","Ruby/classes/ARGF.html#method-i-to_i","()","<p>Returns an integer representing the numeric file descriptor for the current\nfile. Raises an <code>ArgumentError</code> …\n",null,0],["to_i","Complex","Ruby/classes/Complex.html#method-i-to_i","()","<p>Returns the value as an integer if possible.\n",null,0],["to_i","Float","Ruby/classes/Float.html#method-i-to_i","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,0],["to_i","IO","Ruby/classes/IO.html#method-i-to_i","()","",null,0],["to_i","Integer","Ruby/classes/Integer.html#method-i-to_i","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["to_i","NilClass","Ruby/classes/NilClass.html#method-i-to_i","()","<p>Always returns zero.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">nil</span>.<span class=\"ruby-identifier\">to_i</span>   <span class=\"ruby-comment\">#=&gt; 0</span>\n</pre>\n",null,0],["to_i","Process::Status","Ruby/classes/Process/Status.html#method-i-to_i","()","<p>Returns the bits in <em>stat</em> as a <code>Fixnum</code>. Poking around\nin these bits is platform dependent.\n\n<pre>fork { exit 0xab ...</pre>\n",null,0],["to_i","Rational","Ruby/classes/Rational.html#method-i-to_i","()","<p>Returns the truncated value as an integer.\n<p>Equivalent to\n\n<pre>rat.truncate.</pre>\n",null,0],["to_i","String","Ruby/classes/String.html#method-i-to_i","(p1 = v1)","<p>Returns the result of interpreting leading characters in <em>str</em> as an\ninteger base <em>base</em> (between 2 and 36). …\n",null,0],["to_i","Time","Ruby/classes/Time.html#method-i-to_i","()","<p>Returns the value of <em>time</em> as an integer number of seconds since\nthe Epoch.\n\n<pre>t = Time.now\n&quot;%10.5f&quot; % t.to_f ...</pre>\n",null,0],["to_i","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_i","()","",null,1],["to_i","DateTime","Rails/classes/DateTime.html#method-i-to_i","()","<p>Converts self to an integer number of seconds since the Unix epoch.\n",null,1],["to_input_field_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_input_field_tag","(field_type, options = {})","",null,1],["to_int","Float","Ruby/classes/Float.html#method-i-to_int","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,0],["to_int","Integer","Ruby/classes/Integer.html#method-i-to_int","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["to_int","Numeric","Ruby/classes/Numeric.html#method-i-to_int","()","<p>Invokes the child class&#39;s <code>to_i</code> method to convert\n<em>num</em> to an integer.\n",null,0],["to_io","ARGF","Ruby/classes/ARGF.html#method-i-to_io","()","<p>Returns an <code>IO</code> object representing the current file. This will\nbe a <code>File</code> object unless the current file …\n",null,0],["to_io","IO","Ruby/classes/IO.html#method-i-to_io","()","<p>Returns <em>ios</em>.\n",null,0],["to_js","ActionController::Responder","Rails/classes/ActionController/Responder.html#method-i-to_js","()","<p>to_js simply tries to render a template. If no template is found, raises\nthe error.\n",null,1],["to_json","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-to_json","(options={})","",null,1],["to_json","Object","Rails/classes/Object.html#method-i-to_json","(options = nil)","<p>Dumps object in JSON (JavaScript Object Notation). See www.json.org for\nmore info.\n",null,1],["to_key","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_key","()","<p>Returns an Enumerable of all key attributes if any is set, regardless if\nthe object is persisted or not. …\n",null,1],["to_key","ActiveRecord::AttributeMethods::PrimaryKey","Rails/classes/ActiveRecord/AttributeMethods/PrimaryKey.html#method-i-to_key","()","<p>Returns this record&#39;s primary key value wrapped in an Array if one is\navailable\n",null,1],["to_label_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_label_tag","(text = nil, options = {}, &block)","",null,1],["to_model","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-to_model","()","",null,1],["to_model","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_model","()","<p>If your object is already designed to implement all of the Active Model you\ncan use the default <code>:to_model</code> …\n",null,1],["to_number_field_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_number_field_tag","(field_type, options = {})","",null,1],["to_options","Hash","Rails/classes/Hash.html#method-i-to_options","()","",null,1],["to_options!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,1],["to_options!","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-to_options-21","()","",null,1],["to_options!","Hash","Rails/classes/Hash.html#method-i-to_options-21","()","",null,1],["to_param","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_param","()","<p>Returns a string representing the object&#39;s key suitable for use in\nURLs, or nil if <code>persisted?</code> is …\n",null,1],["to_param","ActiveRecord::Integration","Rails/classes/ActiveRecord/Integration.html#method-i-to_param","()","<p>Returns a String, which Action Pack uses for constructing an URL to this\nobject. The default implementation …\n",null,1],["to_param","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_param","()","",null,1],["to_param","Array","Rails/classes/Array.html#method-i-to_param","()","<p>Calls <code>to_param</code> on all its elements and joins the result with\nslashes. This is used by <code>url_for</code> in Action …\n",null,1],["to_param","FalseClass","Rails/classes/FalseClass.html#method-i-to_param","()","",null,1],["to_param","Hash","Rails/classes/Hash.html#method-i-to_param","(namespace = nil)","<p>Returns a string representation of the receiver suitable for use as a URL\nquery string:\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">name</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-string\">&#39;David&#39;</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["to_param","NilClass","Rails/classes/NilClass.html#method-i-to_param","()","",null,1],["to_param","Object","Rails/classes/Object.html#method-i-to_param","()","<p>Alias of <code>to_s</code>.\n",null,1],["to_param","TrueClass","Rails/classes/TrueClass.html#method-i-to_param","()","",null,1],["to_partial_path","ActionView::Helpers::FormBuilder","Rails/classes/ActionView/Helpers/FormBuilder.html#method-i-to_partial_path","()","",null,1],["to_partial_path","ActiveModel::Conversion","Rails/classes/ActiveModel/Conversion.html#method-i-to_partial_path","()","<p>Returns a string identifying the path associated with the object.\nActionPack uses this to find a suitable …\n",null,1],["to_path","Dir","Ruby/classes/Dir.html#method-i-to_path","()","<p>Returns the path parameter passed to <em>dir</em>&#39;s constructor.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">d</span> = <span class=\"ruby-constant\">Dir</span>.<span class=\"ruby-identifier\">new</span>(<span class=\"ruby-string\">&quot;..&quot;</span>)\n<span class=\"ruby-identifier\">d</span>.<span class=\"ruby-identifier\">path</span>   <span class=\"ruby-comment\">#=&gt; &quot;..&quot;</span>\n</pre>\n",null,0],["to_path","File","Ruby/classes/File.html#method-i-to_path","()","<p>Returns the pathname used to create <em>file</em> as a string. Does not\nnormalize the name.\n\n<pre>File.new(&quot;testfile&quot;).path ...</pre>\n",null,0],["to_path","ActionDispatch::Response","Rails/classes/ActionDispatch/Response.html#method-i-to_path","()","",null,1],["to_path","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-to_path","()","",null,1],["to_prepare","ActionDispatch::Reloader","Rails/classes/ActionDispatch/Reloader.html#method-c-to_prepare","(*args, &block)","<p>Add a prepare callback. Prepare callbacks are run before each request,\nprior to ActionDispatch::Callback&#39;s …\n",null,1],["to_prepare","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-to_prepare","(&blk)","<p>Defines generic callbacks to run before #after_initialize. Useful for\nRails::Railtie subclasses.\n",null,1],["to_prepare_blocks","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-to_prepare_blocks","()","<p>Array of callbacks defined by #to_prepare.\n",null,1],["to_proc","Method","Ruby/classes/Method.html#method-i-to_proc","()","<p>Returns a <code>Proc</code> object corresponding to this method.\n",null,0],["to_proc","Proc","Ruby/classes/Proc.html#method-i-to_proc","()","<p>Part of the protocol for converting objects to <code>Proc</code> objects.\nInstances of class <code>Proc</code> simply return themselves. …\n",null,0],["to_proc","Symbol","Ruby/classes/Symbol.html#method-i-to_proc","()","<p>Returns a <em>Proc</em> object which respond to the given method by\n<em>sym</em>.\n\n<pre class=\"ruby\">(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">..</span><span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">collect</span>(&amp;:<span class=\"ruby-identifier\">to_s</span>)  <span class=\"ruby-comment\">#=&gt; [&quot;1&quot;, &quot;2&quot;, ...</span>\n</pre>\n",null,0],["to_query","Array","Rails/classes/Array.html#method-i-to_query","(key)","<p>Converts an array into a string suitable for use as a URL query string,\nusing the given <code>key</code> as the param …\n",null,1],["to_query","Hash","Rails/classes/Hash.html#method-i-to_query","(namespace = nil)","",null,1],["to_query","Object","Rails/classes/Object.html#method-i-to_query","(key)","<p>Converts an object into a string suitable for use as a URL query string,\nusing the given <code>key</code> as the param …\n",null,1],["to_r","Complex","Ruby/classes/Complex.html#method-i-to_r","()","<p>If the imaginary part is exactly 0, returns the real part as a Rational,\notherwise a RangeError is raised. …\n",null,0],["to_r","Float","Ruby/classes/Float.html#method-i-to_r","()","<p>Returns the value as a rational.\n<p>NOTE: 0.3.to_r isn&#39;t the same as &#39;0.3&#39;.to_r.  The latter …\n",null,0],["to_r","Integer","Ruby/classes/Integer.html#method-i-to_r","()","<p>Returns the value as a rational.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-value\">1</span>.<span class=\"ruby-identifier\">to_r</span>        <span class=\"ruby-comment\">#=&gt; (1/1)</span>\n(<span class=\"ruby-value\">1</span><span class=\"ruby-operator\">&lt;&lt;</span><span class=\"ruby-value\">64</span>).<span class=\"ruby-identifier\">to_r</span>  <span class=\"ruby-comment\">#=&gt; (18446744073709551616/1)</span>\n</pre>\n",null,0],["to_r","NilClass","Ruby/classes/NilClass.html#method-i-to_r","()","<p>Returns zero as a rational.\n",null,0],["to_r","Rational","Ruby/classes/Rational.html#method-i-to_r","()","<p>Returns self.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">to_r</span>      <span class=\"ruby-comment\">#=&gt; (2/1)</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">-8</span>, <span class=\"ruby-value\">6</span>).<span class=\"ruby-identifier\">to_r</span>  <span class=\"ruby-comment\">#=&gt; (-4/3)</span>\n</pre>\n",null,0],["to_r","String","Ruby/classes/String.html#method-i-to_r","()","<p>Returns a rational which denotes the string form.  The parser ignores\nleading whitespaces and trailing …\n",null,0],["to_r","Time","Ruby/classes/Time.html#method-i-to_r","()","<p>Returns the value of <em>time</em> as a rational number of seconds since\nthe Epoch.\n\n<pre>t = Time.now\np t.to_r      ...</pre>\n",null,0],["to_radio_button_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_radio_button_tag","(tag_value, options = {})","",null,1],["to_s","ARGF","Ruby/classes/ARGF.html#method-i-to_s","()","<p>Returns “ARGF”.\n",null,0],["to_s","Array","Ruby/classes/Array.html#method-i-to_s","()","",null,0],["to_s","Bignum","Ruby/classes/Bignum.html#method-i-to_s","(p1 = v1)","<p>Returns a string containing the representation of <em>big</em> radix\n<em>base</em> (2 through 36).\n\n<pre>12345654321.to_s     ...</pre>\n",null,0],["to_s","Complex","Ruby/classes/Complex.html#method-i-to_s","()","<p>Returns the value as a string.\n",null,0],["to_s","ENV","Ruby/classes/ENV.html#method-c-to_s","()","<p>Returns “ENV”\n",null,0],["to_s","Encoding","Ruby/classes/Encoding.html#method-i-to_s","()","<p>Returns the name of the encoding.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Encoding</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">UTF_8</span>.<span class=\"ruby-identifier\">name</span>      <span class=\"ruby-comment\">#=&gt; &quot;UTF-8&quot;</span>\n</pre>\n",null,0],["to_s","Exception","Ruby/classes/Exception.html#method-i-to_s","()","<p>Returns exception&#39;s message (or the name of the exception if no message\nis set).\n",null,0],["to_s","FalseClass","Ruby/classes/FalseClass.html#method-i-to_s","()","<p>&#39;nuf said…\n",null,0],["to_s","Fixnum","Ruby/classes/Fixnum.html#method-i-to_s","(p1 = v1)","<p>Returns a string containing the representation of <em>fix</em> radix\n<em>base</em> (between 2 and 36).\n\n<pre>12345.to_s       ...</pre>\n",null,0],["to_s","Float","Ruby/classes/Float.html#method-i-to_s","()","<p>Returns a string containing a representation of self. As well as a fixed or\nexponential form of the number, …\n",null,0],["to_s","Hash","Ruby/classes/Hash.html#method-i-to_s","()","",null,0],["to_s","MatchData","Ruby/classes/MatchData.html#method-i-to_s","()","<p>Returns the entire matched string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">m</span> = <span class=\"ruby-regexp\">/(.)(.)(\\d+)(\\d)/</span>.<span class=\"ruby-identifier\">match</span>(<span class=\"ruby-string\">&quot;THX1138.&quot;</span>)\n<span class=\"ruby-identifier\">m</span>.<span class=\"ruby-identifier\">to_s</span>   <span class=\"ruby-comment\">#=&gt; &quot;HX1138&quot;</span>\n</pre>\n",null,0],["to_s","Method","Ruby/classes/Method.html#method-i-to_s","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,0],["to_s","Module","Ruby/classes/Module.html#method-i-to_s","()","<p>Return a string representing this module or class. For basic classes and\nmodules, this is the name.  …\n",null,0],["to_s","NameError","Ruby/classes/NameError.html#method-i-to_s","()","<p>Produce a nicely-formatted string representing the <code>NameError</code>.\n",null,0],["to_s","NilClass","Ruby/classes/NilClass.html#method-i-to_s","()","<p>Always returns the empty string.\n",null,0],["to_s","Object","Ruby/classes/Object.html#method-i-to_s","()","<p>Returns a string representing <em>obj</em>. The default <code>to_s</code>\nprints the object&#39;s class and an encoding of …\n",null,0],["to_s","Proc","Ruby/classes/Proc.html#method-i-to_s","()","<p>Returns the unique identifier for this proc, along with an indication of\nwhere the proc was defined. …\n",null,0],["to_s","Process::Status","Ruby/classes/Process/Status.html#method-i-to_s","()","<p>Show pid and exit status as a string.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">system</span>(<span class=\"ruby-string\">&quot;false&quot;</span>)\n<span class=\"ruby-identifier\">p</span> <span class=\"ruby-identifier\">$?</span>.<span class=\"ruby-identifier\">to_s</span>         <span class=\"ruby-comment\">#=&gt; &quot;pid 12766 exit 1&quot;</span>\n</pre>\n",null,0],["to_s","Range","Ruby/classes/Range.html#method-i-to_s","()","<p>Convert this range object to a printable form.\n",null,0],["to_s","Rational","Ruby/classes/Rational.html#method-i-to_s","()","<p>Returns the value as a string.\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>).<span class=\"ruby-identifier\">to_s</span>      <span class=\"ruby-comment\">#=&gt; &quot;2/1&quot;</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">-8</span>, <span class=\"ruby-value\">6</span>).<span class=\"ruby-identifier\">to_s</span>  <span class=\"ruby-comment\">#=&gt; &quot;-4/3&quot; ...</span>\n</pre>\n",null,0],["to_s","Regexp","Ruby/classes/Regexp.html#method-i-to_s","()","<p>Returns a string containing the regular expression and its options (using\nthe <code>(?opts:source)</code> notation. …\n",null,0],["to_s","String","Ruby/classes/String.html#method-i-to_s","()","<p>Returns the receiver.\n",null,0],["to_s","Struct","Ruby/classes/Struct.html#method-i-to_s","()","",null,0],["to_s","Symbol","Ruby/classes/Symbol.html#method-i-to_s","()","<p>Returns the name or string corresponding to <em>sym</em>.\n\n<pre class=\"ruby\">:<span class=\"ruby-identifier\">fred</span>.<span class=\"ruby-identifier\">id2name</span>   <span class=\"ruby-comment\">#=&gt; &quot;fred&quot;</span>\n</pre>\n",null,0],["to_s","Time","Ruby/classes/Time.html#method-i-to_s","()","<p>Returns a string representing <em>time</em>. Equivalent to calling\n<code>Time#strftime</code> with a format string of “<code>%Y-%m-%d</code> …\n",null,0],["to_s","TrueClass","Ruby/classes/TrueClass.html#method-i-to_s","()","<p>The string representation of <code>true</code> is “true”.\n",null,0],["to_s","UnboundMethod","Ruby/classes/UnboundMethod.html#method-i-to_s","()","<p>Returns the name of the underlying method.\n\n<pre class=\"ruby\"><span class=\"ruby-string\">&quot;cat&quot;</span>.<span class=\"ruby-identifier\">method</span>(:<span class=\"ruby-identifier\">count</span>).<span class=\"ruby-identifier\">inspect</span>   <span class=\"ruby-comment\">#=&gt; &quot;#&lt;Method: String#count&gt;&quot;</span>\n</pre>\n",null,0],["to_s","ActionDispatch::RemoteIp::GetIp","Rails/classes/ActionDispatch/RemoteIp/GetIp.html#method-i-to_s","()","",null,1],["to_s","ActionView::FileSystemResolver","Rails/classes/ActionView/FileSystemResolver.html#method-i-to_s","()","",null,1],["to_s","ActionView::FixtureResolver","Rails/classes/ActionView/FixtureResolver.html#method-i-to_s","()","",null,1],["to_s","ActiveResource::Request","Rails/classes/ActiveResource/Request.html#method-i-to_s","()","",null,1],["to_s","ActiveResource::SSLError","Rails/classes/ActiveResource/SSLError.html#method-i-to_s","()","",null,1],["to_s","ActiveResource::TimeoutError","Rails/classes/ActiveResource/TimeoutError.html#method-i-to_s","()","",null,1],["to_s","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_s","()","",null,1],["to_s","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_s","(format = :default)","<p><code>:db</code> format outputs time in UTC; all others output time in\nlocal. Uses TimeWithZone&#39;s <code>strftime</code>, so …\n",null,1],["to_s","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-to_s","()","<p>Returns a textual representation of this time zone.\n",null,1],["to_s","Array","Rails/classes/Array.html#method-i-to_s","(format = :default)","",null,1],["to_s","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_s","(format = DEFAULT_STRING_FORMAT)","",null,1],["to_s","Date","Rails/classes/Date.html#method-i-to_s","(format = :default)","",null,1],["to_s","DateTime","Rails/classes/DateTime.html#method-i-to_s","(format = :default)","",null,1],["to_s","Mime::Type","Rails/classes/Mime/Type.html#method-i-to_s","()","",null,1],["to_s","Plugin","Rails/classes/Plugin.html#method-i-to_s","()","",null,1],["to_s","Rails::Info","Rails/classes/Rails/Info.html#method-c-to_s","()","",null,1],["to_s","Range","Rails/classes/Range.html#method-i-to_s","(format = :default)","",null,1],["to_s","SourceAnnotationExtractor::Annotation","Rails/classes/SourceAnnotationExtractor/Annotation.html#method-i-to_s","(options={})","<p>Returns a representation of the annotation that looks like this:\n\n<pre>[126] [TODO] This algorithm is simple ...</pre>\n",null,1],["to_s","Time","Rails/classes/Time.html#method-i-to_s","(format = :default)","",null,1],["to_sentence","Array","Rails/classes/Array.html#method-i-to_sentence","(options = {})","<p>Converts the array to a comma-separated sentence where the last element is\njoined by the connector word. …\n",null,1],["to_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-to_sql","(arel, binds = [])","<p>Converts an arel AST to SQL\n",null,1],["to_sql","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-to_sql","()","<p>Returns a String whose contents are the column definitions concatenated\ntogether. This string can then …\n",null,1],["to_sql","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-to_sql","()","",null,1],["to_str","String","Ruby/classes/String.html#method-i-to_str","()","<p>Returns the receiver.\n",null,0],["to_str","Mime::Type","Rails/classes/Mime/Type.html#method-i-to_str","()","",null,1],["to_sym","String","Ruby/classes/String.html#method-i-to_sym","()","<p>Returns the <code>Symbol</code> corresponding to <em>str</em>, creating the\nsymbol if it did not previously exist. See <code>Symbol#id2name</code> …\n",null,0],["to_sym","Symbol","Ruby/classes/Symbol.html#method-i-to_sym","()","<p>In general, <code>to_sym</code> returns the <code>Symbol</code>\ncorresponding to an object. As <em>sym</em> is already a symbol,\n<code>self</code> is …\n",null,0],["to_sym","Mime::Type","Rails/classes/Mime/Type.html#method-i-to_sym","()","",null,1],["to_tag","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-to_tag","(key, value, options)","",null,1],["to_text_area_tag","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-to_text_area_tag","(options = {})","",null,1],["to_time","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_time","()","<p>A TimeWithZone acts like a Time, so just return <code>self</code>.\n",null,1],["to_time","Date","Rails/classes/Date.html#method-i-to_time","(form = :local)","<p>Converts a Date instance to a Time, where the time is set to the beginning\nof the day. The timezone can …\n",null,1],["to_time","DateTime","Rails/classes/DateTime.html#method-i-to_time","()","<p>Attempts to convert self to a Ruby Time object; returns self if out of\nrange of Ruby Time class. If self …\n",null,1],["to_time","String","Rails/classes/String.html#method-i-to_time","(form = :utc)","<p>Form can be either :utc (default) or :local.\n",null,1],["to_time","Time","Rails/classes/Time.html#method-i-to_time","()","<p>A method to keep Time, Date and DateTime instances interchangeable on\nconversions. In this case, it simply …\n",null,1],["to_time_in_current_zone","Date","Rails/classes/Date.html#method-i-to_time_in_current_zone","()","<p>Converts Date to a TimeWithZone in the current zone if Time.zone or\nTime.zone_default is set, otherwise …\n",null,1],["to_time_select_tag","ActionView::Helpers::DateHelperInstanceTag","Rails/classes/ActionView/Helpers/DateHelperInstanceTag.html#method-i-to_time_select_tag","(options = {}, html_options = {})","",null,1],["to_write_io","ARGF","Ruby/classes/ARGF.html#method-i-to_write_io","()","<p>Returns IO instance tied to <em>ARGF</em> for writing if inplace mode is\nenabled.\n",null,0],["to_xml","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-to_xml","(options={})","<p>Returns an xml formatted representation of the Errors hash.\n\n<pre>p.errors.add(:name, &quot;can&#39;t be blank&quot;)\np.errors.add(:name, ...</pre>\n",null,1],["to_xml","ActiveModel::Serializers::Xml","Rails/classes/ActiveModel/Serializers/Xml.html#method-i-to_xml","(options = {}, &block)","<p>Returns XML representing the model. Configuration can be passed through\n<code>options</code>.\n<p>Without any <code>options</code>, …\n",null,1],["to_xml","ActiveRecord::Serialization","Rails/classes/ActiveRecord/Serialization.html#method-i-to_xml","(options = {}, &block)","<p>Builds an XML document to represent the model. Some configuration is\navailable through <code>options</code>. However …\n",null,1],["to_xml","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-to_xml","(options={})","",null,1],["to_xml","Array","Rails/classes/Array.html#method-i-to_xml","(options = {})","<p>Returns a string that represents the array in XML by invoking\n<code>to_xml</code> on each element. Active Record collections …\n",null,1],["to_xml","Hash","Rails/classes/Hash.html#method-i-to_xml","(options = {})","<p>Returns a string containing an XML representation of its receiver:\n\n<pre class=\"ruby\">{<span class=\"ruby-string\">&quot;foo&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>, <span class=\"ruby-string\">&quot;bar&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">2</span>}.<span class=\"ruby-identifier\">to_xml</span>\n<span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["to_yaml","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-to_yaml","(opts = {})","",null,1],["to_yaml","ActiveSupport::SafeBuffer","Rails/classes/ActiveSupport/SafeBuffer.html#method-i-to_yaml","(*args)","",null,1],["to_yaml","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-to_yaml","(options = {})","",null,1],["to_yaml","BigDecimal","Rails/classes/BigDecimal.html#method-i-to_yaml","(opts = {})","<p>This emits the number without any scientific notation. This is better than\nself.to_f.to_s since it doesn&#39;t …\n",null,1],["to_yaml_type","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-to_yaml_type","()","",null,1],["today","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-today","()","<p>Return the current date in this time zone.\n",null,1],["today?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-today-3F","()","",null,1],["today?","Date","Rails/classes/Date.html#method-i-today-3F","()","<p>Returns true if the Date object&#39;s date is today.\n",null,1],["today?","Time","Rails/classes/Time.html#method-i-today-3F","()","<p>Tells whether the Time object&#39;s time is today\n",null,1],["toggle","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-toggle","(attribute)","<p>Assigns to <code>attribute</code> the boolean opposite of\n<code>attribute?</code>. So if the predicate returns <code>true</code> the\nattribute …\n",null,1],["toggle!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-toggle-21","(attribute)","<p>Wrapper around <code>toggle</code> that saves the record. This method\ndiffers from its non-bang version in that it …\n",null,1],["token_and_options","ActionController::HttpAuthentication::Token","Rails/classes/ActionController/HttpAuthentication/Token.html#method-i-token_and_options","(request)","<p>Parses the token and options out of the token authorization header. If the\nheader looks like this:\n\n<pre>Authorization: ...</pre>\n",null,1],["tokenize","HTML::Sanitizer","Rails/classes/HTML/Sanitizer.html#method-i-tokenize","(text, options)","",null,1],["tokenize","HTML::WhiteListSanitizer","Rails/classes/HTML/WhiteListSanitizer.html#method-i-tokenize","(text, options)","",null,1],["tomorrow","Date","Rails/classes/Date.html#method-i-tomorrow","()","<p>Convenience method which returns a new Date/DateTime representing the time\n1 day since the instance time …\n",null,1],["tomorrow","Date","Rails/classes/Date.html#method-c-tomorrow","()","<p>Returns a new Date representing the date 1 day after today (i.e.\ntomorrow&#39;s date).\n",null,1],["tomorrow","Time","Rails/classes/Time.html#method-i-tomorrow","()","<p>Convenience method which returns a new Time representing the time 1 day\nsince the instance time\n",null,1],["total_time","GC::Profiler","Ruby/classes/GC/Profiler.html#method-c-total_time","()","<p>The total time used for garbage collection in milliseconds\n",null,0],["touch","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-touch","(name = nil)","<p>Saves the record with the updated_at/on attributes set to the current time.\nPlease note that no validation …\n",null,1],["tr","String","Ruby/classes/String.html#method-i-tr","(p1, p2)","<p>Returns a copy of <em>str</em> with the characters in <em>from_str</em>\nreplaced by the corresponding characters in <em>to_str</em> …\n",null,0],["tr!","String","Ruby/classes/String.html#method-i-tr-21","(p1, p2)","<p>Translates <em>str</em> in place, using the same rules as\n<code>String#tr</code>. Returns <em>str</em>, or <code>nil</code> if no\nchanges were made. …\n",null,0],["tr_s","String","Ruby/classes/String.html#method-i-tr_s","(p1, p2)","<p>Processes a copy of <em>str</em> as described under <code>String#tr</code>,\nthen removes duplicate characters in regions that …\n",null,0],["tr_s!","String","Ruby/classes/String.html#method-i-tr_s-21","(p1, p2)","<p>Performs <code>String#tr_s</code> processing on <em>str</em> in place,\nreturning <em>str</em>, or <code>nil</code> if no changes were made.\n",null,0],["trace_var","Kernel","Ruby/classes/Kernel.html#method-i-trace_var","(p1, p2 = v2)","<p>Controls tracing of assignments to global variables. The parameter +symbol_\nidentifies the variable (as …\n",null,0],["transaction","ActiveModel::ObserverArray","Rails/classes/ActiveModel/ObserverArray.html#method-i-transaction","()","",null,1],["transaction","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-transaction","(options = {})","<p>Runs the given block in a database transaction, and returns the result of\nthe block.\n<p>Nested transactions …\n",null,1],["transaction","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-transaction","(options = {}, &block)","<p>See ActiveRecord::Transactions::ClassMethods for detailed documentation.\n",null,1],["transaction","ActiveRecord::Transactions::ClassMethods","Rails/classes/ActiveRecord/Transactions/ClassMethods.html#method-i-transaction","(options = {}, &block)","<p>See ActiveRecord::Transactions::ClassMethods for detailed documentation.\n",null,1],["transaction_joinable=","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-transaction_joinable-3D","(joinable)","",null,1],["transfer","Fiber","Ruby/classes/Fiber.html#method-i-transfer","(*args)","<p>Transfer control to another fiber, resuming it from where it last stopped\nor starting it if it was not …\n",null,0],["translate","AbstractController::Translation","Rails/classes/AbstractController/Translation.html#method-i-translate","(*args)","",null,1],["translate","ActionView::Helpers::TranslationHelper","Rails/classes/ActionView/Helpers/TranslationHelper.html#method-i-translate","(key, options = {})","<p>Delegates to <code>I18n#translate</code> but also performs three additional\nfunctions.\n<p>First, it&#39;ll pass the <code>:</code> …\n",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-translate_exception","(e, message)","",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-translate_exception","(exception, message)","",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-translate_exception","(exception, message)","",null,1],["translate_exception","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-translate_exception","(exception, message)","",null,1],["transliterate","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-transliterate","(string, replacement = \"?\")","<p>Replaces non-ASCII characters with an ASCII approximation, or if none\nexists, a replacement character …\n",null,1],["transpose","Array","Ruby/classes/Array.html#method-i-transpose","()","<p>Assumes that <code>self</code> is an array of arrays and transposes the\nrows and columns.\n\n<pre>a = [[1,2], [3,4], [5,6]] ...</pre>\n",null,0],["trap","Kernel","Ruby/classes/Kernel.html#method-i-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a\nstring such as “SIGALRM&#39;&#39;, …\n",null,0],["trap","Signal","Ruby/classes/Signal.html#method-c-trap","(*args)","<p>Specifies the handling of signals. The first parameter is a signal name (a\nstring such as “SIGALRM&#39;&#39;, …\n",null,0],["trigger","ActiveSupport::FileWatcher","Rails/classes/ActiveSupport/FileWatcher.html#method-i-trigger","(files)","",null,1],["trigger","ActiveSupport::FileWatcher::Backend","Rails/classes/ActiveSupport/FileWatcher/Backend.html#method-i-trigger","(files)","",null,1],["truncate","File","Ruby/classes/File.html#method-c-truncate","(p1, p2)","<p>Truncates the file <em>file_name</em> to be at most <em>integer</em> bytes\nlong. Not available on all platforms.\n\n<pre>f = File.new(&quot;out&quot;, ...</pre>\n",null,0],["truncate","File","Ruby/classes/File.html#method-i-truncate","(p1)","<p>Truncates <em>file</em> to at most <em>integer</em> bytes. The file must be\nopened for writing. Not available on all platforms. …\n",null,0],["truncate","Float","Ruby/classes/Float.html#method-i-truncate","()","<p>Returns <em>flt</em> truncated to an <code>Integer</code>.\n",null,0],["truncate","Integer","Ruby/classes/Integer.html#method-i-truncate","()","<p>As <em>int</em> is already an <code>Integer</code>, all these methods\nsimply return the receiver.\n",null,0],["truncate","Numeric","Ruby/classes/Numeric.html#method-i-truncate","()","<p>Returns <em>num</em> truncated to an integer. <code>Numeric</code>\nimplements this by converting its value to a float and invoking …\n",null,0],["truncate","Rational","Ruby/classes/Rational.html#method-i-truncate","(*args)","<p>Returns the truncated value (toward zero).\n<p>For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">truncate</span>      <span class=\"ruby-comment\">#=&gt; 3</span>\n<span class=\"ruby-constant\">Rational</span>(<span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>).<span class=\"ruby-identifier\">truncate</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["truncate","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-truncate","(text, options = {})","<p>Truncates a given <code>text</code> after a given <code>:length</code> if\n<code>text</code> is longer than <code>:length</code> (defaults to 30). The\nlast …\n",null,1],["truncate","String","Rails/classes/String.html#method-i-truncate","(length, options = {})","<p>Truncates a given <code>text</code> after a given <code>length</code> if\n<code>text</code> is longer than <code>length</code>:\n\n<pre>&quot;Once upon a time in a world ...</pre>\n",null,1],["trust","Object","Ruby/classes/Object.html#method-i-trust","()","<p>Removes the untrusted mark from <em>obj</em>.\n",null,0],["try","NilClass","Rails/classes/NilClass.html#method-i-try","(*args)","<p>Calling <code>try</code> on <code>nil</code> always returns\n<code>nil</code>. It becomes specially helpful when navigating through\nassociations …\n",null,1],["try","Object","Rails/classes/Object.html#method-i-try","(*a, &b)","<p>Invokes the method identified by the symbol <code>method</code>, passing it\nany arguments and/or the block specified, …\n",null,1],["try_convert","Array","Ruby/classes/Array.html#method-c-try_convert","(p1)","<p>Tries to convert <code>obj</code> into an array, using <code>to_ary</code>\nmethod.  Returns the converted array or <code>nil</code> if\n<code>obj</code> cannot …\n",null,0],["try_convert","Hash","Ruby/classes/Hash.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a hash, using to_hash method. Returns\nconverted hash or nil if <em>obj</em> cannot be …\n",null,0],["try_convert","IO","Ruby/classes/IO.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into an IO, using to_io method. Returns\nconverted IO or nil if <em>obj</em> cannot be converted …\n",null,0],["try_convert","Regexp","Ruby/classes/Regexp.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a Regexp, using to_regexp method. Returns\nconverted regexp or nil if <em>obj</em> cannot …\n",null,0],["try_convert","String","Ruby/classes/String.html#method-c-try_convert","(p1)","<p>Try to convert <em>obj</em> into a String, using to_str method. Returns\nconverted string or nil if <em>obj</em> cannot …\n",null,0],["try_lock","Mutex","Ruby/classes/Mutex.html#method-i-try_lock","()","<p>Attempts to obtain the lock and returns immediately. Returns\n<code>true</code> if the lock was granted.\n",null,0],["try_to_load_dependency","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-try_to_load_dependency","(file_name)","",null,1],["tsort_each_child","Rails::Initializable::Collection","Rails/classes/Rails/Initializable/Collection.html#method-i-tsort_each_child","(initializer, &block)","",null,1],["tsvector","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#method-i-tsvector","(*args)","",null,1],["tty?","IO","Ruby/classes/IO.html#method-i-tty-3F","()","<p>Returns <code>true</code> if <em>ios</em> is associated with a terminal\ndevice (tty), <code>false</code> otherwise.\n\n<pre>File.new(&quot;testfile&quot;).isatty ...</pre>\n",null,0],["tuesday?","Time","Ruby/classes/Time.html#method-i-tuesday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Tuesday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1991</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">19</span>)      <span class=\"ruby-comment\">#=&gt; 1991-02-19 00:00:00 -0600 ...</span>\n</pre>\n",null,0],["tv_nsec","Time","Ruby/classes/Time.html#method-i-tv_nsec","()","<p>Returns just the number of nanoseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-17 15:18:03 +0900</span>\n<span class=\"ruby-string\">&quot;%10.9f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["tv_sec","Time","Ruby/classes/Time.html#method-i-tv_sec","()","<p>Returns the value of <em>time</em> as an integer number of seconds since\nthe Epoch.\n\n<pre>t = Time.now\n&quot;%10.5f&quot; % t.to_f ...</pre>\n",null,0],["tv_sec","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-tv_sec","()","",null,1],["tv_usec","Time","Ruby/classes/Time.html#method-i-tv_usec","()","<p>Returns just the number of microseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:03:26 -0600</span>\n<span class=\"ruby-string\">&quot;%10.6f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["type_cast","ActiveRecord::ConnectionAdapters::MysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/MysqlAdapter.html#method-i-type_cast","(value, column)","<p>QUOTING ==================================================\n",null,1],["type_cast","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-type_cast","(value, column)","",null,1],["type_cast","ActiveRecord::ConnectionAdapters::Quoting","Rails/classes/ActiveRecord/ConnectionAdapters/Quoting.html#method-i-type_cast","(value, column)","<p>Cast a <code>value</code> to a type that the database understands. For\nexample, SQLite does not understand dates, …\n",null,1],["type_cast_attribute_for_write","ActiveRecord::AttributeMethods::Serialization","Rails/classes/ActiveRecord/AttributeMethods/Serialization.html#method-i-type_cast_attribute_for_write","(column, value)","",null,1],["type_to_sql","ActiveRecord::ConnectionAdapters::AbstractMysqlAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractMysqlAdapter.html#method-i-type_to_sql","(type, limit = nil, precision = nil, scale = nil)","<p>Maps logical Rails types to MySQL-specific data types.\n",null,1],["type_to_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-type_to_sql","(type, limit = nil, precision = nil, scale = nil)","<p>Maps logical Rails types to PostgreSQL-specific data types.\n",null,1],["u_unpack","ActiveSupport::Multibyte::Unicode","Rails/classes/ActiveSupport/Multibyte/Unicode.html#method-i-u_unpack","(string)","<p>Unpack the string at codepoints boundaries. Raises an EncodingError when\nthe encoding of the string isn&#39;t …\n",null,1],["uid","File::Stat","Ruby/classes/File/Stat.html#method-i-uid","()","<p>Returns the numeric user id of the owner of <em>stat</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["uid","Process","Ruby/classes/Process.html#method-c-uid","()","<p>Returns the (real) user ID of this process.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">Process</span>.<span class=\"ruby-identifier\">uid</span>   <span class=\"ruby-comment\">#=&gt; 501</span>\n</pre>\n",null,0],["uid=","Process","Ruby/classes/Process.html#method-c-uid-3D","(p1)","<p>Sets the (integer) user ID for this process. Not available on all\nplatforms.\n",null,0],["umask","File","Ruby/classes/File.html#method-c-umask","(*args)","<p>Returns the current umask value for this process. If the optional argument\nis given, set the umask to …\n",null,0],["unbind","Method","Ruby/classes/Method.html#method-i-unbind","()","<p>Dissociates <em>meth</em> from its current receiver. The resulting\n<code>UnboundMethod</code> can subsequently be bound to …\n",null,0],["uncached","ActiveRecord::ConnectionAdapters::QueryCache","Rails/classes/ActiveRecord/ConnectionAdapters/QueryCache.html#method-i-uncached","()","<p>Disable the query cache within the block.\n",null,1],["uncached","ActiveRecord::QueryCache::ClassMethods","Rails/classes/ActiveRecord/QueryCache/ClassMethods.html#method-i-uncached","(&block)","<p>Disable the query cache within the block if Active Record is configured.\n",null,1],["uncountable","ActiveSupport::Inflector::Inflections","Rails/classes/ActiveSupport/Inflector/Inflections.html#method-i-uncountable","(*words)","<p>Add uncountable words that shouldn&#39;t be attempted inflected.\n<p>Examples:\n\n<pre>uncountable &quot;money&quot;\nuncountable ...</pre>\n",null,1],["uncountable?","ActiveModel::Naming","Rails/classes/ActiveModel/Naming.html#method-c-uncountable-3F","(record_or_class)","<p>Identifies whether the class name of a record or class is uncountable.\nExamples:\n\n<pre>ActiveModel::Naming.uncountable?(Sheep) ...</pre>\n",null,1],["uncountable?","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-uncountable-3F","()","",null,1],["undefine_attribute_methods","ActiveModel::AttributeMethods::ClassMethods","Rails/classes/ActiveModel/AttributeMethods/ClassMethods.html#method-i-undefine_attribute_methods","()","<p>Removes all the previously dynamically defined methods from the class\n",null,1],["undefine_attribute_methods","ActiveRecord::AttributeMethods::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/ClassMethods.html#method-i-undefine_attribute_methods","()","",null,1],["undefine_attribute_methods","ActiveRecord::AttributeMethods::Read::ClassMethods","Rails/classes/ActiveRecord/AttributeMethods/Read/ClassMethods.html#method-i-undefine_attribute_methods","()","",null,1],["undefine_finalizer","ObjectSpace","Ruby/classes/ObjectSpace.html#method-c-undefine_finalizer","(p1)","<p>Removes all finalizers for <em>obj</em>.\n",null,0],["underscore","ActiveSupport::Inflector","Rails/classes/ActiveSupport/Inflector.html#method-i-underscore","(camel_cased_word)","<p>Makes an underscored, lowercase form from the expression in the string.\n<p>Changes &#39;::&#39; to &#39;/&#39; …\n",null,1],["underscore","String","Rails/classes/String.html#method-i-underscore","()","<p>The reverse of <code>camelize</code>. Makes an underscored, lowercase form\nfrom the expression in the string.\n<p><code>underscore</code> …\n",null,1],["unescape","Object","Rails/classes/Object.html#method-i-unescape","(str, escaped = /%[a-fA-F\\d]{2}/)","",null,1],["unescape_bytea","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-unescape_bytea","(value)","<p>Unescapes bytea output from a database to the binary string it represents.\nNOTE: This is NOT an inverse …\n",null,1],["unescape_path","ActionDispatch::FileHandler","Rails/classes/ActionDispatch/FileHandler.html#method-i-unescape_path","(path)","",null,1],["ungetbyte","IO","Ruby/classes/IO.html#method-i-ungetbyte","(p1)","<p>Pushes back bytes (passed as a parameter) onto <em>ios</em>, such that a\nsubsequent buffered read will return …\n",null,0],["ungetc","IO","Ruby/classes/IO.html#method-i-ungetc","(p1)","<p>Pushes back one character (passed as a parameter) onto <em>ios</em>, such\nthat a subsequent buffered character …\n",null,0],["uninstall","Plugin","Rails/classes/Plugin.html#method-i-uninstall","()","",null,1],["union","Regexp","Ruby/classes/Regexp.html#method-c-union","(*args)","<p>Return a <code>Regexp</code> object that is the union of the given\n<em>pattern</em>s, i.e., will match any of its parts. The …\n",null,0],["uniq","Array","Ruby/classes/Array.html#method-i-uniq","()","<p>Returns a new array by removing duplicate values in <code>self</code>. If a\nblock is given, it will use the return …\n",null,0],["uniq","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-uniq","(value = true)","<p>Specifies whether the records should be unique or not. For example:\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">select</span>(:<span class=\"ruby-identifier\">name</span>)\n<span class=\"ruby-comment\"># =&gt; Might return ...</span>\n</pre>\n",null,1],["uniq!","Array","Ruby/classes/Array.html#method-i-uniq-21","()","<p>Removes duplicate elements from <code>self</code>. If a block is given, it\nwill use the return value of the block …\n",null,0],["uniq_by","Array","Rails/classes/Array.html#method-i-uniq_by","()","<p>Returns an unique array based on the criteria given as a <code>Proc</code>.\n\n<pre class=\"ruby\">[<span class=\"ruby-value\">1</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">3</span>, <span class=\"ruby-value\">4</span>].<span class=\"ruby-identifier\">uniq_by</span> { <span class=\"ruby-operator\">|</span><span class=\"ruby-identifier\">i</span><span class=\"ruby-operator\">|</span> <span class=\"ruby-identifier\">i</span>.<span class=\"ruby-identifier\">odd?</span> } <span class=\"ruby-comment\"># =&gt; ...</span>\n</pre>\n",null,1],["uniq_by!","Array","Rails/classes/Array.html#method-i-uniq_by-21","()","<p>Same as uniq_by, but modifies self.\n",null,1],["unlink","Dir","Ruby/classes/Dir.html#method-c-unlink","(p1)","<p>Deletes the named directory. Raises a subclass of\n<code>SystemCallError</code> if the directory isn&#39;t empty.\n",null,0],["unlink","File","Ruby/classes/File.html#method-c-unlink","(*args)","<p>Deletes the named files, returning the number of names passed as arguments.\nRaises an exception on any …\n",null,0],["unlock","Mutex","Ruby/classes/Mutex.html#method-i-unlock","()","<p>Releases the lock. Raises <code>ThreadError</code> if <code>mutex</code>\nwasn&#39;t locked by the current thread.\n",null,0],["unmemoize_all","ActiveSupport::Memoizable::InstanceMethods","Rails/classes/ActiveSupport/Memoizable/InstanceMethods.html#method-i-unmemoize_all","()","",null,1],["unpack","String","Ruby/classes/String.html#method-i-unpack","(p1)","<p>Decodes <em>str</em> (which may contain binary data) according to the\nformat string, returning an array of each …\n",null,0],["unregister","Mime::Type","Rails/classes/Mime/Type.html#method-c-unregister","(symbol)","<p>This method is opposite of register method.\n<p>Usage:\n<p>Mime::Type.unregister(:mobile)\n",null,1],["unserialize","ActiveRecord::AttributeMethods::Serialization::Attribute","Rails/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-unserialize","()","",null,1],["unserialized_value","ActiveRecord::AttributeMethods::Serialization::Attribute","Rails/classes/ActiveRecord/AttributeMethods/Serialization/Attribute.html#method-i-unserialized_value","()","",null,1],["unshift","Array","Ruby/classes/Array.html#method-i-unshift","(*args)","<p>Prepends objects to the front of <code>self</code>, moving other elements\nupwards.\n\n<pre>a = [ &quot;b&quot;, &quot;c&quot;, &quot;d&quot; ]\na.unshift(&quot;a&quot;) ...</pre>\n",null,0],["unsubscribe","ActiveSupport::Notifications","Rails/classes/ActiveSupport/Notifications.html#method-c-unsubscribe","(args)","",null,1],["unsubscribe","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-unsubscribe","(subscriber)","",null,1],["untaint","Object","Ruby/classes/Object.html#method-i-untaint","()","<p>Removes the taint from <em>obj</em>.\n",null,0],["until","ActiveSupport::Duration","Rails/classes/ActiveSupport/Duration.html#method-i-until","(time = ::Time.current)","",null,1],["until","Numeric","Rails/classes/Numeric.html#method-i-until","(time = ::Time.current)","<p>Reads best with argument:  10.minutes.until(time)\n",null,1],["untrace_var","Kernel","Ruby/classes/Kernel.html#method-i-untrace_var","(p1, p2 = v2)","<p>Removes tracing for the specified command on the given global variable and\nreturns <code>nil</code>. If no command …\n",null,0],["untrust","Object","Ruby/classes/Object.html#method-i-untrust","()","<p>Marks <em>obj</em> as untrusted.\n",null,0],["untrusted?","Object","Ruby/classes/Object.html#method-i-untrusted-3F","()","<p>Returns <code>true</code> if the object is untrusted.\n",null,0],["up","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-up","()","",null,1],["upcase","String","Ruby/classes/String.html#method-i-upcase","()","<p>Returns a copy of <em>str</em> with all lowercase letters replaced with\ntheir uppercase counterparts. The operation …\n",null,0],["upcase","Symbol","Ruby/classes/Symbol.html#method-i-upcase","()","<p>Same as <code>sym.to_s.upcase.intern</code>.\n",null,0],["upcase","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-i-upcase","()","<p>Convert characters in the string to uppercase.\n<p>Example:\n\n<pre>&#39;Laurent, où sont les tests ?&#39;.mb_chars.upcase.to_s ...</pre>\n",null,1],["upcase!","String","Ruby/classes/String.html#method-i-upcase-21","()","<p>Upcases the contents of <em>str</em>, returning <code>nil</code> if no\nchanges were made. Note: case replacement is effective …\n",null,0],["update","ENV","Ruby/classes/ENV.html#method-c-update","(p1)","<p>Adds the contents of <code>hash</code> to the environment variables.  If no\nblock is specified entries with duplicate …\n",null,0],["update","Hash","Ruby/classes/Hash.html#method-i-update","(p1)","<p>Adds the contents of <em>other_hash</em> to <em>hsh</em>.  If no block is\nspecified, entries with duplicate keys are overwritten …\n",null,0],["update","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update","(arel, name = nil, binds = [])","<p>Executes the update statement and returns the number of rows affected.\n",null,1],["update","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-update","(id, attributes)","<p>Updates an object (or multiple objects) and saves it to the database, if\nvalidations pass. The resulting …\n",null,1],["update","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-update","()","<p>Update the resource on the remote service.\n",null,1],["update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(other_hash)","<p>Updates the instantized hash with values from the second:\n\n<pre>hash_1 = HashWithIndifferentAccess.new\nhash_1[:key] ...</pre>\n",null,1],["update","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-update","(other_hash)","<p>Updates the instantized hash with values from the second:\n\n<pre>hash_1 = HashWithIndifferentAccess.new\nhash_1[:key] ...</pre>\n",null,1],["update_all","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-update_all","(updates, conditions = nil, options = {})","<p>Updates all records with details given if they match a set of conditions\nsupplied, limits and order can …\n",null,1],["update_attribute","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_attribute","(name, value)","<p>Updates a single attribute and saves the record. This is especially useful\nfor boolean flags on existing …\n",null,1],["update_attribute","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-update_attribute","(name, value)","<p>Updates a single attribute and then saves the object.\n<p>Note: Unlike ActiveRecord::Base.update_attribute …\n",null,1],["update_attributes","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_attributes","(attributes, options = {})","<p>Updates the attributes of the model from the passed-in hash and saves the\nrecord, all wrapped in a transaction. …\n",null,1],["update_attributes","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-i-update_attributes","(attributes)","<p>Updates this resource with all the attributes from the passed-in Hash and\nrequests that the record be …\n",null,1],["update_attributes","Rails::Generators::ActiveModel","Rails/classes/Rails/Generators/ActiveModel.html#method-i-update_attributes","(params=nil)","<p>PUT update\n",null,1],["update_attributes!","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_attributes-21","(attributes, options = {})","<p>Updates its receiver just like <code>update_attributes</code> but calls\n<code>save!</code> instead of <code>save</code>, so an exception is …\n",null,1],["update_column","ActiveRecord::Persistence","Rails/classes/ActiveRecord/Persistence.html#method-i-update_column","(name, value)","<p>Updates a single attribute of an object, without calling save.\n<p>Validation is skipped.\n<p>Callbacks are skipped. …\n",null,1],["update_counters","ActiveRecord::CounterCache","Rails/classes/ActiveRecord/CounterCache.html#method-i-update_counters","(id, counters)","<p>A generic “counter updater” implementation, intended primarily to be used\nby increment_counter …\n",null,1],["update_counters","ActiveRecord::Locking::Optimistic::ClassMethods","Rails/classes/ActiveRecord/Locking/Optimistic/ClassMethods.html#method-i-update_counters","(id, counters)","<p>Make sure the lock version column gets updated when counters are updated.\n",null,1],["update_sql","ActiveRecord::ConnectionAdapters::DatabaseStatements","Rails/classes/ActiveRecord/ConnectionAdapters/DatabaseStatements.html#method-i-update_sql","(sql, name = nil)","<p>Executes the update statement and returns the number of rows affected.\n",null,1],["update_sql","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter.html#method-i-update_sql","(sql, name = nil)","<p>Executes an UPDATE query and returns the number of affected tuples.\n",null,1],["updated","ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder","Rails/classes/ActionView/Helpers/AtomFeedHelper/AtomFeedBuilder.html#method-i-updated","(date_or_time = nil)","<p>Accepts a Date or Time object and inserts it in the proper format. If nil\nis passed, current time in …\n",null,1],["updated?","ActiveSupport::FileUpdateChecker","Rails/classes/ActiveSupport/FileUpdateChecker.html#method-i-updated-3F","()","<p>Check if any of the entries were updated. If so, the updated_at value is\ncached until the block is executed …\n",null,1],["upto","Integer","Ruby/classes/Integer.html#method-i-upto","(p1)","<p>Iterates <em>block</em>, passing in integer values from <em>int</em> up to\nand including <em>limit</em>.\n<p>If no block is given, an …\n",null,0],["upto","String","Ruby/classes/String.html#method-i-upto","(p1, p2 = v2)","<p>Iterates through successive values, starting at <em>str</em> and ending at\n<em>other_str</em> inclusive, passing each value …\n",null,0],["url","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-i-url","()","<p>Returns the complete URL used for this request.\n",null,1],["url_field","ActionView::Helpers::FormHelper","Rails/classes/ActionView/Helpers/FormHelper.html#method-i-url_field","(object_name, method, options = {})","<p>Returns a text_field of type “url”.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">url_field</span>(<span class=\"ruby-string\">&quot;user&quot;</span>, <span class=\"ruby-string\">&quot;homepage&quot;</span>)\n<span class=\"ruby-comment\"># =&gt; &lt;input id=&quot;user_homepage&quot; ...</span>\n</pre>\n",null,1],["url_field_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-url_field_tag","(name, value = nil, options = {})","<p>Creates a text field of type “url”.\n<p>Options\n<p>Accepts the same options as text_field_tag.\n",null,1],["url_for","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-i-url_for","(string)","<p>basic url_for that can be overridden for more robust functionality\n",null,1],["url_for","ActionDispatch::Http::URL","Rails/classes/ActionDispatch/Http/URL.html#method-c-url_for","(options = {})","",null,1],["url_for","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_for","(options = nil)","<p>Generate a url based on the options provided, default_url_options and the\nroutes defined in routes.rb. …\n",null,1],["url_for","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-url_for","(options = {})","<p>Returns the URL for the set of <code>options</code> provided. This takes\nthe same options as <code>url_for</code> in Action Controller …\n",null,1],["url_options","ActionController::UrlFor","Rails/classes/ActionController/UrlFor.html#method-i-url_options","()","",null,1],["url_options","ActionDispatch::Integration::Session","Rails/classes/ActionDispatch/Integration/Session.html#method-i-url_options","()","",null,1],["url_options","ActionDispatch::IntegrationTest","Rails/classes/ActionDispatch/IntegrationTest.html#method-i-url_options","()","",null,1],["url_options","ActionDispatch::Routing::UrlFor","Rails/classes/ActionDispatch/Routing/UrlFor.html#method-i-url_options","()","",null,1],["url_options","ActionView::Helpers::UrlHelper","Rails/classes/ActionView/Helpers/UrlHelper.html#method-i-url_options","()","<p>Need to map default url options to controller one. def\ndefault_url_options(*args) #:nodoc:\n\n<pre>controller.send(:default_url_options, ...</pre>\n",null,1],["us_zones","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-us_zones","()","<p>A convenience method for returning a collection of TimeZone objects for\ntime zones in the USA.\n",null,1],["usage_path","Rails::Generators::Base","Rails/classes/Rails/Generators/Base.html#method-c-usage_path","()","",null,1],["use","ActionController::Metal","Rails/classes/ActionController/Metal.html#method-c-use","(*args, &block)","<p>Adds given middleware class and its args to bottom of middleware_stack\n",null,1],["use","ActionDispatch::Flash::FlashHash","Rails/classes/ActionDispatch/Flash/FlashHash.html#method-i-use","(key = nil, used = true)","<p>Used internally by the <code>keep</code> and <code>discard</code> methods\n\n<pre>use()               # marks the entire flash as used\nuse(&#39;msg&#39;) ...</pre>\n",null,1],["use","ActionDispatch::MiddlewareStack","Rails/classes/ActionDispatch/MiddlewareStack.html#method-i-use","(*args, &block)","",null,1],["use","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-use","()","",null,1],["use_accept_header","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-use_accept_header","()","",null,1],["use_checkout?","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-use_checkout-3F","()","",null,1],["use_externals?","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-use_externals-3F","()","",null,1],["use_renderer","ActionController::Renderers::ClassMethods","Rails/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderer","(*args)","",null,1],["use_renderers","ActionController::Renderers::ClassMethods","Rails/classes/ActionController/Renderers/ClassMethods.html#method-i-use_renderers","(*args)","",null,1],["use_svn?","RailsEnvironment","Rails/classes/RailsEnvironment.html#method-i-use_svn-3F","()","",null,1],["use_zone","Time","Rails/classes/Time.html#method-c-use_zone","(time_zone)","<p>Allows override of <code>Time.zone</code> locally inside supplied block;\nresets <code>Time.zone</code> to existing value when done. …\n",null,1],["usec","Time","Ruby/classes/Time.html#method-i-usec","()","<p>Returns just the number of microseconds for <em>time</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>        <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:03:26 -0600</span>\n<span class=\"ruby-string\">&quot;%10.6f&quot;</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["usec","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-usec","()","",null,1],["user","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-user","()","<p>Gets the user for REST HTTP authentication.\n",null,1],["user=","ActiveResource::Base","Rails/classes/ActiveResource/Base.html#method-c-user-3D","(user)","<p>Sets the user for REST HTTP authentication.\n",null,1],["user=","ActiveResource::Connection","Rails/classes/ActiveResource/Connection.html#method-i-user-3D","(user)","<p>Sets the user for remote service.\n",null,1],["user_agent=","ActionDispatch::TestRequest","Rails/classes/ActionDispatch/TestRequest.html#method-i-user_agent-3D","(user_agent)","",null,1],["user_name_and_password","ActionController::HttpAuthentication::Basic","Rails/classes/ActionController/HttpAuthentication/Basic.html#method-i-user_name_and_password","(request)","",null,1],["uses_transaction","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-uses_transaction","(*methods)","",null,1],["uses_transaction?","ActiveRecord::TestFixtures::ClassMethods","Rails/classes/ActiveRecord/TestFixtures/ClassMethods.html#method-i-uses_transaction-3F","(method)","",null,1],["using_limitable_reflections?","ActiveRecord::FinderMethods","Rails/classes/ActiveRecord/FinderMethods.html#method-i-using_limitable_reflections-3F","(reflections)","",null,1],["utc","Time","Ruby/classes/Time.html#method-c-utc","(*args)","<p>Creates a time based on given values, interpreted as UTC (GMT). The year\nmust be specified. Other values …\n",null,0],["utc","Time","Ruby/classes/Time.html#method-i-utc","()","<p>Converts <em>time</em> to UTC (GMT), modifying the receiver.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:18:31 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">gmt?</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["utc","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc","()","<p>Returns a Time or DateTime instance that represents the time in UTC.\n",null,1],["utc","DateTime","Rails/classes/DateTime.html#method-i-utc","()","<p>Adjusts DateTime to UTC by adding its offset value; offset is set to 0\n<p>Example:\n\n<pre>DateTime.civil(2005, 2, ...</pre>\n",null,1],["utc?","Time","Ruby/classes/Time.html#method-i-utc-3F","()","<p>Returns <code>true</code> if <em>time</em> represents a time in UTC (GMT).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>                        <span class=\"ruby-comment\">#=&gt; 2007-11-19 ...</span>\n</pre>\n",null,0],["utc?","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc-3F","()","",null,1],["utc?","DateTime","Rails/classes/DateTime.html#method-i-utc-3F","()","<p>Returns true if offset == 0\n",null,1],["utc_offset","Time","Ruby/classes/Time.html#method-i-utc_offset","()","<p>Returns the offset in seconds between the timezone of <em>time</em> and\nUTC.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">gm</span>(<span class=\"ruby-value\">2000</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">1</span>,<span class=\"ruby-value\">20</span>,<span class=\"ruby-value\">15</span>,<span class=\"ruby-value\">1</span>)   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0],["utc_offset","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-utc_offset","()","",null,1],["utc_offset","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-utc_offset","()","",null,1],["utc_offset","DateTime","Rails/classes/DateTime.html#method-i-utc_offset","()","<p>Returns the offset value in seconds\n",null,1],["utc_time","Time","Rails/classes/Time.html#method-c-utc_time","(*args)","<p>Wraps class method <code>time_with_datetime_fallback</code> with\n<code>utc_or_local</code> set to <code>:utc</code>.\n",null,1],["utc_to_local","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-i-utc_to_local","(time)","<p>Adjust the given time to the simultaneous time in the time zone represented\nby <code>self</code>. Returns a Time.utc() …\n",null,1],["utf8_enforcer_tag","ActionView::Helpers::FormTagHelper","Rails/classes/ActionView/Helpers/FormTagHelper.html#method-i-utf8_enforcer_tag","()","<p>Creates the hidden UTF8 enforcer tag. Override this method in a helper to\ncustomize the tag.\n",null,1],["utime","File","Ruby/classes/File.html#method-c-utime","(p1, p2, *args)","<p>Sets the access and modification times of each named file to the first two\narguments. Returns the number …\n",null,0],["uuid","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-uuid","()","<p>Returns the unique request id, which is based off either the X-Request-Id\nheader that can be generated …\n",null,1],["valid?","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the specified validations and returns true if no errors were added\notherwise false. Context …\n",null,1],["valid?","ActiveRecord::Validations","Rails/classes/ActiveRecord/Validations.html#method-i-valid-3F","(context = nil)","<p>Runs all the validations within the specified context. Returns true if no\nerrors are found, false otherwise. …\n",null,1],["valid?","ActiveResource::Validations","Rails/classes/ActiveResource/Validations.html#method-i-valid-3F","()","<p>Checks for errors on an object (i.e., is resource.errors empty?).\n<p>Runs all the specified local validations …\n",null,1],["valid_accept_header","ActionDispatch::Http::MimeNegotiation","Rails/classes/ActionDispatch/Http/MimeNegotiation.html#method-i-valid_accept_header","()","",null,1],["valid_alter_table_options","ActiveRecord::ConnectionAdapters::SQLiteAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/SQLiteAdapter.html#method-i-valid_alter_table_options","( type, options)","<p>See: www.sqlite.org/lang_altertable.html SQLite has an additional\nrestriction on the ALTER TABLE statement …\n",null,1],["valid_const?","Rails::Generators::AppGenerator","Rails/classes/Rails/Generators/AppGenerator.html#method-i-valid_const-3F","()","",null,1],["valid_const?","Rails::Generators::PluginNewGenerator","Rails/classes/Rails/Generators/PluginNewGenerator.html#method-i-valid_const-3F","()","",null,1],["valid_encoding?","String","Ruby/classes/String.html#method-i-valid_encoding-3F","()","<p>Returns true for a string which encoded correctly.\n\n<pre>&quot;\\xc2\\xa1&quot;.force_encoding(&quot;UTF-8&quot;).valid_encoding? ...</pre>\n",null,0],["valid_scope_name?","ActiveRecord::Scoping::Named::ClassMethods","Rails/classes/ActiveRecord/Scoping/Named/ClassMethods.html#method-i-valid_scope_name-3F","(name)","",null,1],["validate","ActiveModel::EachValidator","Rails/classes/ActiveModel/EachValidator.html#method-i-validate","(record)","<p>Performs validation on the supplied record. By default this will call\n<code>validates_each</code> to determine validity …\n",null,1],["validate","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validate","(*args, &block)","<p>Adds a validation method or block to the class. This is useful when\noverriding the <code>validate</code> instance …\n",null,1],["validate","ActiveModel::Validations::PresenceValidator","Rails/classes/ActiveModel/Validations/PresenceValidator.html#method-i-validate","(record)","",null,1],["validate","ActiveModel::Validator","Rails/classes/ActiveModel/Validator.html#method-i-validate","(record)","<p>Override this method in subclasses with validation logic, adding errors to\nthe records <code>errors</code> array where …\n",null,1],["validate_digest_response","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_digest_response","(request, realm, &password_procedure)","<p>Returns false unless the request credentials response value matches the\nexpected value. First try the …\n",null,1],["validate_each","ActiveModel::EachValidator","Rails/classes/ActiveModel/EachValidator.html#method-i-validate_each","(record, attribute, value)","<p>Override this method in subclasses with the validation logic, adding errors\nto the records <code>errors</code> array …\n",null,1],["validate_each","ActiveModel::Validations::AcceptanceValidator","Rails/classes/ActiveModel/Validations/AcceptanceValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveModel::Validations::ConfirmationValidator","Rails/classes/ActiveModel/Validations/ConfirmationValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveModel::Validations::ExclusionValidator","Rails/classes/ActiveModel/Validations/ExclusionValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveModel::Validations::FormatValidator","Rails/classes/ActiveModel/Validations/FormatValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveModel::Validations::InclusionValidator","Rails/classes/ActiveModel/Validations/InclusionValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveModel::Validations::LengthValidator","Rails/classes/ActiveModel/Validations/LengthValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveModel::Validations::NumericalityValidator","Rails/classes/ActiveModel/Validations/NumericalityValidator.html#method-i-validate_each","(record, attr_name, value)","",null,1],["validate_each","ActiveModel::Validations::WithValidator","Rails/classes/ActiveModel/Validations/WithValidator.html#method-i-validate_each","(record, attr, val)","",null,1],["validate_each","ActiveRecord::Validations::AssociatedValidator","Rails/classes/ActiveRecord/Validations/AssociatedValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_each","ActiveRecord::Validations::UniquenessValidator","Rails/classes/ActiveRecord/Validations/UniquenessValidator.html#method-i-validate_each","(record, attribute, value)","",null,1],["validate_fallbacks","I18n::Railtie","Rails/classes/I18n/Railtie.html#method-c-validate_fallbacks","(fallbacks)","",null,1],["validate_nonce","ActionController::HttpAuthentication::Digest","Rails/classes/ActionController/HttpAuthentication/Digest.html#method-i-validate_nonce","(secret_key, request, value, seconds_to_timeout=5*60)","<p>Might want a shorter timeout depending on whether the request is a PUT or\nPOST, and if client is browser …\n",null,1],["validates","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates","(*attributes)","<p>This method is a shortcut to all default validators and any custom\nvalidator classes ending in &#39;Validator&#39;. …\n",null,1],["validates!","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates-21","(*attributes)","<p>This method is used to define validation that cannot be corrected by end\nuser and is considered exceptional. …\n",null,1],["validates_acceptance_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_acceptance_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate the acceptance of a terms\nof service check box (or similar …\n",null,1],["validates_associated","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_associated","(*attr_names)","<p>Validates whether the associated object or objects are all valid\nthemselves. Works with any kind of association. …\n",null,1],["validates_confirmation_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_confirmation_of","(*attr_names)","<p>Encapsulates the pattern of wanting to validate a password or email address\nfield with a confirmation. …\n",null,1],["validates_each","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_each","(*attr_names, &block)","<p>Validates each attribute against a block.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span>\n  <span class=\"ruby-identifier\">include</span> <span class=\"ruby-constant\">ActiveModel</span><span class=\"ruby-operator\">::</span><span class=\"ruby-constant\">Validations</span>\n\n  <span class=\"ruby-identifier\">attr_accessor</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["validates_exclusion_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_exclusion_of","(*attr_names)","<p>Validates that the value of the specified attribute is not in a particular\nenumerable object.\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">class</span> <span class=\"ruby-constant\">Person</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["validates_format_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_format_of","(*attr_names)","<p>Validates whether the value of the specified attribute is of the correct\nform, going by the regular expression …\n",null,1],["validates_inclusion_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_inclusion_of","(*attr_names)","<p>Validates whether the value of the specified attribute is available in a\nparticular enumerable object. …\n",null,1],["validates_length_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_length_of","(*attr_names)","<p>Validates that the specified attribute matches the length restrictions\nsupplied. Only one option can …\n",null,1],["validates_numericality_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_numericality_of","(*attr_names)","<p>Validates whether the value of the specified attribute is numeric by trying\nto convert it to a float …\n",null,1],["validates_presence_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_presence_of","(*attr_names)","<p>Validates that the specified attributes are not blank (as defined by\nObject#blank?). Happens by default …\n",null,1],["validates_size_of","ActiveModel::Validations::HelperMethods","Rails/classes/ActiveModel/Validations/HelperMethods.html#method-i-validates_size_of","(*attr_names)","",null,1],["validates_uniqueness_of","ActiveRecord::Validations::ClassMethods","Rails/classes/ActiveRecord/Validations/ClassMethods.html#method-i-validates_uniqueness_of","(*attr_names)","<p>Validates whether the value of the specified attributes are unique across\nthe system. Useful for making …\n",null,1],["validates_with","ActiveModel::Validations","Rails/classes/ActiveModel/Validations.html#method-i-validates_with","(*args, &block)","<p>Passes the record off to the class or classes specified and allows them to\nadd errors based on more complex …\n",null,1],["validates_with","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validates_with","(*args, &block)","<p>If you pass any additional configuration options, they will be passed to\nthe class and available as  …\n",null,1],["validators","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators","()","<p>List all validators that are being used to validate the model using\n<code>validates_with</code> method.\n",null,1],["validators_on","ActiveModel::Validations::ClassMethods","Rails/classes/ActiveModel/Validations/ClassMethods.html#method-i-validators_on","(*attributes)","<p>List all validators that being used to validate a specific attribute.\n",null,1],["value","Thread","Ruby/classes/Thread.html#method-i-value","()","<p>Waits for <em>thr</em> to complete (via <code>Thread#join</code>) and\nreturns its value.\n\n<pre>a = Thread.new { 2 + 2 }\na.value   ...</pre>\n",null,0],["value","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-c-value","(object, method_name)","",null,1],["value","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-value","(object)","",null,1],["value","ActiveSupport::Cache::Entry","Rails/classes/ActiveSupport/Cache/Entry.html#method-i-value","()","<p>Get the value stored in the cache.\n",null,1],["value?","ENV","Ruby/classes/ENV.html#method-c-value-3F","(p1)","<p>Returns <code>true</code> if there is an environment variable with the\ngiven <code>value</code>.\n",null,0],["value?","Hash","Ruby/classes/Hash.html#method-i-value-3F","(p1)","<p>Returns <code>true</code> if the given value is present for some key in\n<em>hsh</em>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span> }\n<span class=\"ruby-identifier\">h</span>.<span class=\"ruby-identifier\">has_value?</span>(<span class=\"ruby-value\">100</span>) <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["value_before_type_cast","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-c-value_before_type_cast","(object, method_name)","",null,1],["value_before_type_cast","ActionView::Helpers::InstanceTag","Rails/classes/ActionView/Helpers/InstanceTag.html#method-i-value_before_type_cast","(object)","",null,1],["values","ENV","Ruby/classes/ENV.html#method-c-values","()","<p>Returns every environment variable value as an Array\n",null,0],["values","Hash","Ruby/classes/Hash.html#method-i-values","()","<p>Returns a new array populated with the values from <em>hsh</em>. See also\n<code>Hash#keys</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">h</span> = { <span class=\"ruby-string\">&quot;a&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">100</span>, <span class=\"ruby-string\">&quot;b&quot;</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">200</span>, <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["values","Struct","Ruby/classes/Struct.html#method-i-values","()","<p>Returns the values for this instance as an array.\n\n<pre>Customer = Struct.new(:name, :address, :zip)\njoe = Customer.new(&quot;Joe ...</pre>\n",null,0],["values","ActiveModel::Errors","Rails/classes/ActiveModel/Errors.html#method-i-values","()","<p>Returns all message values\n",null,1],["values","ActiveSupport::OrderedHash","Rails/classes/ActiveSupport/OrderedHash.html#method-i-values","()","",null,1],["values_at","Array","Ruby/classes/Array.html#method-i-values_at","(*args)","<p>Returns an array containing the elements in <code>self</code> corresponding\nto the given selector(s). The selectors …\n",null,0],["values_at","ENV","Ruby/classes/ENV.html#method-c-values_at","(*args)","<p>Returns an array containing the environment variable values associated with\nthe given names.  See also …\n",null,0],["values_at","Hash","Ruby/classes/Hash.html#method-i-values_at","(*args)","<p>Return an array containing the values associated with the given keys. Also\nsee <code>Hash.select</code>.\n\n<pre>h = { &quot;cat&quot; ...</pre>\n",null,0],["values_at","MatchData","Ruby/classes/MatchData.html#method-i-values_at","(*args)","<p>Uses each <em>index</em> to access the matching values, returning an array\nof the corresponding matches.\n\n<pre>m = /(.)(.)(\\d+)(\\d)/.match(&quot;THX1138: ...</pre>\n",null,0],["values_at","Struct","Ruby/classes/Struct.html#method-i-values_at","(*args)","<p>Returns an array containing the elements in <code>self</code> corresponding\nto the given selector(s). The selectors …\n",null,0],["values_at","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*indices)","<p>Returns an array of the values at the specified indices:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:a] ...</pre>\n",null,1],["values_at","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-values_at","(*indices)","<p>Returns an array of the values at the specified indices:\n\n<pre>hash = HashWithIndifferentAccess.new\nhash[:a] ...</pre>\n",null,1],["vendor","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor","()","",null,1],["vendor","Rails::Generators::Actions","Rails/classes/Rails/Generators/Actions.html#method-i-vendor","(filename, data=nil, &block)","<p>Create a new file in the vendor/ directory. Code can be specified in a\nblock or a data string can be …\n",null,1],["vendor_javascripts","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor_javascripts","()","",null,1],["vendor_plugins","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor_plugins","()","",null,1],["vendor_stylesheets","Rails::AppBuilder","Rails/classes/Rails/AppBuilder.html#method-i-vendor_stylesheets","()","",null,1],["verified_request?","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-verified_request-3F","()","<p>Returns true or false if a request is verified. Checks:\n<p>is it a GET request?  Gets should be safe and …\n",null,1],["verify","ActiveSupport::MessageVerifier","Rails/classes/ActiveSupport/MessageVerifier.html#method-i-verify","(signed_message)","",null,1],["verify!","ActiveRecord::ConnectionAdapters::AbstractAdapter","Rails/classes/ActiveRecord/ConnectionAdapters/AbstractAdapter.html#method-i-verify-21","(*ignored)","<p>Checks whether the connection to the database is still active (i.e. not\nstale). This is done under the …\n",null,1],["verify_authenticity_token","ActionController::RequestForgeryProtection","Rails/classes/ActionController/RequestForgeryProtection.html#method-i-verify_authenticity_token","()","<p>The actual before_filter that is used. Modify this to change how you handle\nunverified requests.\n",null,1],["verify_request?","Mime::Type","Rails/classes/Mime/Type.html#method-i-verify_request-3F","()","<p>Returns true if Action Pack should check requests using this Mime Type for\npossible request forgery. …\n",null,1],["version","Rails","Rails/classes/Rails.html#method-c-version","()","",null,1],["video_path","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_path","(source)","<p>Computes the path to a video asset in the public videos directory. Full\npaths from the document root …\n",null,1],["video_tag","ActionView::Helpers::AssetTagHelper","Rails/classes/ActionView/Helpers/AssetTagHelper.html#method-i-video_tag","(sources, options = {})","<p>Returns an html video tag for the <code>sources</code>. If\n<code>sources</code> is a string, a single video tag will be returned. …\n",null,1],["view_assigns","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_assigns","()","<p>This method should return a hash with assigns. You can overwrite this\nconfiguration per controller. :api: …\n",null,1],["view_context","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_context","()","<p>An instance of a view class. The default view class is ActionView::Base\n<p>The view class must have the following …\n",null,1],["view_context_class","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_context_class","()","",null,1],["view_context_class","AbstractController::Rendering::ClassMethods","Rails/classes/AbstractController/Rendering/ClassMethods.html#method-i-view_context_class","()","",null,1],["view_paths","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-view_paths","()","<p>A list of all of the default view paths for this controller.\n",null,1],["view_paths=","AbstractController::ViewPaths::ClassMethods","Rails/classes/AbstractController/ViewPaths/ClassMethods.html#method-i-view_paths-3D","(paths)","<p>Set the view paths.\n<p>Parameters\n<p><code>paths</code> - If a PathSet is provided, use that; otherwise, process\nthe parameter …\n",null,1],["view_paths=","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-view_paths-3D","(paths)","<p>Whenever setting view paths, makes a copy so we can manipulate then in\ninstance objects as we wish.\n",null,1],["view_renderer","AbstractController::Rendering","Rails/classes/AbstractController/Rendering.html#method-i-view_renderer","()","<p>Returns an object that is able to render templates.\n",null,1],["visible_action?","ActionController::HideActions::ClassMethods","Rails/classes/ActionController/HideActions/ClassMethods.html#method-i-visible_action-3F","(action_name)","",null,1],["wait","Process","Ruby/classes/Process.html#method-c-wait","(p1 = v1, p2 = v2)","<p>Waits for a child process to exit, returns its process id, and sets\n<code>$?</code> to a <code>Process::Status</code> object containing …\n",null,0],["wait","ActiveSupport::LogSubscriber::TestHelper","Rails/classes/ActiveSupport/LogSubscriber/TestHelper.html#method-i-wait","()","<p>Wait notifications to be published.\n",null,1],["wait","ActiveSupport::Notifications::Fanout","Rails/classes/ActiveSupport/Notifications/Fanout.html#method-i-wait","()","<p>This is a sync queue, so there is no waiting.\n",null,1],["wait2","Process","Ruby/classes/Process.html#method-c-wait2","(*args)","<p>Waits for a child process to exit (see Process::waitpid for exact\nsemantics) and returns an array containing …\n",null,0],["waitall","Process","Ruby/classes/Process.html#method-c-waitall","()","<p>Waits for all children, returning an array of <em>pid</em>/<em>status</em>\npairs (where <em>status</em> is a <code>Process::Status</code> object). …\n",null,0],["waitpid","Process","Ruby/classes/Process.html#method-c-waitpid","(p1 = v1, p2 = v2)","<p>Waits for a child process to exit, returns its process id, and sets\n<code>$?</code> to a <code>Process::Status</code> object containing …\n",null,0],["waitpid2","Process","Ruby/classes/Process.html#method-c-waitpid2","(*args)","<p>Waits for a child process to exit (see Process::waitpid for exact\nsemantics) and returns an array containing …\n",null,0],["wakeup","Thread","Ruby/classes/Thread.html#method-i-wakeup","()","<p>Marks <em>thr</em> as eligible for scheduling (it may still remain blocked\non I/O, however). Does not invoke the …\n",null,0],["wants?","ActiveSupport::Multibyte::Chars","Rails/classes/ActiveSupport/Multibyte/Chars.html#method-c-wants-3F","(string)","<p>Returns <code>true</code> if the Chars class can and should act as a proxy\nfor the string <em>string</em>. Returns <code>false</code> otherwise. …\n",null,1],["warn","Kernel","Ruby/classes/Kernel.html#method-i-warn","(p1)","<p>Display the given message (followed by a newline) on STDERR unless warnings\nare disabled (for example …\n",null,0],["warn","ActiveSupport::Deprecation","Rails/classes/ActiveSupport/Deprecation.html#method-c-warn","(message = nil, callstack = caller)","<p>Outputs a deprecation warning to the output configured by\n<code>ActiveSupport::Deprecation.behavior</code>\n\n<pre>ActiveSupport::Deprecation.warn(&quot;something ...</pre>\n",null,1],["watch","ActiveSupport::FileWatcher","Rails/classes/ActiveSupport/FileWatcher.html#method-i-watch","(pattern, &block)","",null,1],["watch_namespaces","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-watch_namespaces","(namespaces)","<p>Add a set of modules to the watch stack, remembering the initial constants\n",null,1],["watchable_args","Rails::Application","Rails/classes/Rails/Application.html#method-i-watchable_args","()","<p>Returns an array of file paths appended with a hash of\ndirectories-extensions suitable for ActiveSupport::FileUpdateChecker …\n",null,1],["watchable_dirs","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-watchable_dirs","()","<p>Add directories that should be watched for change. The key of the hashes\nshould be directories and the …\n",null,1],["watchable_files","Rails::Railtie::Configuration","Rails/classes/Rails/Railtie/Configuration.html#method-i-watchable_files","()","<p>Add files that should be watched for change.\n",null,1],["watching?","ActiveSupport::Dependencies::WatchStack","Rails/classes/ActiveSupport/Dependencies/WatchStack.html#method-i-watching-3F","()","",null,1],["wday","Time","Ruby/classes/Time.html#method-i-wday","()","<p>Returns an integer representing the day of the week, 0..6, with Sunday ==\n0.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-20 ...</span>\n</pre>\n",null,0],["wednesday?","Time","Ruby/classes/Time.html#method-i-wednesday-3F","()","<p>Returns <code>true</code> if <em>time</em> represents Wednesday.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">local</span>(<span class=\"ruby-value\">1993</span>, <span class=\"ruby-value\">2</span>, <span class=\"ruby-value\">24</span>)      <span class=\"ruby-comment\">#=&gt; 1993-02-24 00:00:00 -0600 ...</span>\n</pre>\n",null,0],["week","Numeric","Rails/classes/Numeric.html#method-i-week","()","",null,1],["weeks","Numeric","Rails/classes/Numeric.html#method-i-weeks","()","",null,1],["weeks_ago","Date","Rails/classes/Date.html#method-i-weeks_ago","(weeks)","<p>Returns a new Date/DateTime representing the time a number of specified\nweeks ago.\n",null,1],["weeks_ago","Time","Rails/classes/Time.html#method-i-weeks_ago","(weeks)","<p>Returns a new Time representing the time a number of specified weeks ago.\n",null,1],["where","ActiveRecord::QueryMethods","Rails/classes/ActiveRecord/QueryMethods.html#method-i-where","(opts, *rest)","",null,1],["where_values_hash","ActiveRecord::Relation","Rails/classes/ActiveRecord/Relation.html#method-i-where_values_hash","()","",null,1],["with","AbstractController::Railties::RoutesHelpers","Rails/classes/AbstractController/Railties/RoutesHelpers.html#method-c-with","(routes)","",null,1],["with","ActionController::Railties::Paths","Rails/classes/ActionController/Railties/Paths.html#method-c-with","(app)","",null,1],["with_backend","ActiveSupport::JSON","Rails/classes/ActiveSupport/JSON.html#method-c-with_backend","(name)","",null,1],["with_backend","ActiveSupport::XmlMini","Rails/classes/ActiveSupport/XmlMini.html#method-i-with_backend","(name)","",null,1],["with_connection","ActiveRecord::ConnectionAdapters::ConnectionPool","Rails/classes/ActiveRecord/ConnectionAdapters/ConnectionPool.html#method-i-with_connection","()","<p>If a connection already exists yield it to the block. If no connection\nexists checkout a connection, …\n",null,1],["with_default_scope","ActionDispatch::Routing::Mapper::Base","Rails/classes/ActionDispatch/Routing/Mapper/Base.html#method-i-with_default_scope","(scope, &block)","",null,1],["with_exclusive_scope","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_exclusive_scope","()","",null,1],["with_exclusive_scope","ActiveRecord::Scoping::ClassMethods","Rails/classes/ActiveRecord/Scoping/ClassMethods.html#method-i-with_exclusive_scope","(method_scoping = {}, &block)","<p>Works like with_scope, but discards any nested properties.\n",null,1],["with_fallbacks","ActionView::LookupContext::ViewPaths","Rails/classes/ActionView/LookupContext/ViewPaths.html#method-i-with_fallbacks","()","<p>Add fallbacks to the view paths. Useful in cases you are rendering a :file.\n",null,1],["with_gc_stats","ActiveSupport::Testing::Performance::Metrics::Base","Rails/classes/ActiveSupport/Testing/Performance/Metrics/Base.html#method-i-with_gc_stats","()","",null,1],["with_index","Enumerator","Ruby/classes/Enumerator.html#method-i-with_index","(p1 = v1)","<p>Iterates the given block for each element with an index, which starts from\n<code>offset</code>.  If no block is given, …\n",null,0],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,1],["with_indifferent_access","ActiveSupport::HashWithIndifferentAccess","Rails/classes/ActiveSupport/HashWithIndifferentAccess.html#method-i-with_indifferent_access","()","",null,1],["with_indifferent_access","Hash","Rails/classes/Hash.html#method-i-with_indifferent_access","()","<p>Returns an <code>ActiveSupport::HashWithIndifferentAccess</code> out of its\nreceiver:\n\n<pre class=\"ruby\">{:<span class=\"ruby-identifier\">a</span> =<span class=\"ruby-operator\">&gt;</span> <span class=\"ruby-value\">1</span>}.<span class=\"ruby-identifier\">with_indifferent_access</span>[<span class=\"ruby-string\">&quot;a&quot;</span>] <span class=\"ruby-operator\">...</span>\n</pre>\n",null,1],["with_local_cache","ActiveSupport::Cache::Strategy::LocalCache","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache.html#method-i-with_local_cache","()","<p>Use a local cache for the duration of block.\n",null,1],["with_lock","ActiveRecord::Locking::Pessimistic","Rails/classes/ActiveRecord/Locking/Pessimistic.html#method-i-with_lock","(lock = true)","<p>Wraps the passed block in a transaction, locking the object before\nyielding. You pass can the SQL locking …\n",null,1],["with_object","Enumerator","Ruby/classes/Enumerator.html#method-i-with_object","(p1)","<p>Iterates the given block for each element with an arbitrary object,\n<code>obj</code>, and returns <code>obj</code>\n<p>If no block is …\n",null,0],["with_options","Object","Rails/classes/Object.html#method-i-with_options","(options)","<p>An elegant way to factor duplication out of options passed to a series of\nmethod calls. Each method called …\n",null,1],["with_output_file","ActiveSupport::Testing::Performance::Benchmarker","Rails/classes/ActiveSupport/Testing/Performance/Benchmarker.html#method-i-with_output_file","()","",null,1],["with_routing","ActionDispatch::Assertions::RoutingAssertions","Rails/classes/ActionDispatch/Assertions/RoutingAssertions.html#method-i-with_routing","()","<p>A helper to make it easier to test different route configurations. This\nmethod temporarily replaces @routes …\n",null,1],["with_scope","ActiveRecord::Scoping::ClassMethods","Rails/classes/ActiveRecord/Scoping/ClassMethods.html#method-i-with_scope","(scope = {}, action = :merge, &block)","<p>with_scope lets you apply options to inner block incrementally. It takes a\nhash and the keys must be …\n",null,1],["with_scope_level","ActionDispatch::Routing::Mapper::Resources","Rails/classes/ActionDispatch/Routing/Mapper/Resources.html#method-i-with_scope_level","(kind, resource = parent_resource)","",null,1],["with_transaction_returning_status","ActiveRecord::Transactions","Rails/classes/ActiveRecord/Transactions.html#method-i-with_transaction_returning_status","()","<p>Executes <code>method</code> within a transaction and captures its return\nvalue as a status flag. If the status is …\n",null,1],["with_warnings","Kernel","Rails/classes/Kernel.html#method-i-with_warnings","(flag)","<p>Sets $VERBOSE for the duration of the block and back to its original value\nafterwards.\n",null,1],["without","ActiveRecord::IdentityMap","Rails/classes/ActiveRecord/IdentityMap.html#method-c-without","()","",null,1],["without_modules","ActionController::Base","Rails/classes/ActionController/Base.html#method-c-without_modules","(*modules)","",null,1],["word_wrap","ActionView::Helpers::TextHelper","Rails/classes/ActionView/Helpers/TextHelper.html#method-i-word_wrap","(text, *args)","<p>Wraps the <code>text</code> into lines no longer than\n<code>line_width</code> width. This method breaks on the first whitespace …\n",null,1],["world_readable?","File","Ruby/classes/File.html#method-c-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_readable?","File::Stat","Ruby/classes/File/Stat.html#method-i-world_readable-3F","()","<p>If <em>stat</em> is readable by others, returns an integer representing the\nfile permission bits of <em>stat</em>. Returns …\n",null,0],["world_readable?","FileTest","Ruby/classes/FileTest.html#method-i-world_readable-3F","(p1)","<p>If <em>file_name</em> is readable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_writable?","File","Ruby/classes/File.html#method-c-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["world_writable?","File::Stat","Ruby/classes/File/Stat.html#method-i-world_writable-3F","()","<p>If <em>stat</em> is writable by others, returns an integer representing the\nfile permission bits of <em>stat</em>. Returns …\n",null,0],["world_writable?","FileTest","Ruby/classes/FileTest.html#method-i-world_writable-3F","(p1)","<p>If <em>file_name</em> is writable by others, returns an integer\nrepresenting the file permission bits of <em>file_name</em> …\n",null,0],["wrap","Array","Rails/classes/Array.html#method-c-wrap","(object)","<p>Wraps its argument in an array unless it is already an array (or\narray-like).\n<p>Specifically:\n<p>If the argument …\n",null,1],["wrap_parameters","ActionController::ParamsWrapper::ClassMethods","Rails/classes/ActionController/ParamsWrapper/ClassMethods.html#method-i-wrap_parameters","(name_or_model_or_options, options = {})","<p>Sets the name of the wrapper key, or the model which\n<code>ParamsWrapper</code> would use to determine the attribute …\n",null,1],["wrap_with_namespace","Rails::Generators::NamedBase","Rails/classes/Rails/Generators/NamedBase.html#method-i-wrap_with_namespace","(content)","",null,1],["writable?","File","Ruby/classes/File.html#method-c-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective\nuser id of this process.\n",null,0],["writable?","File::Stat","Ruby/classes/File/Stat.html#method-i-writable-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the effective\nuser id of this process.\n\n<pre>File.stat(&quot;testfile&quot;).writable? ...</pre>\n",null,0],["writable?","FileTest","Ruby/classes/FileTest.html#method-i-writable-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the effective\nuser id of this process.\n",null,0],["writable_real?","File","Ruby/classes/File.html#method-c-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user id\nof this process.\n",null,0],["writable_real?","File::Stat","Ruby/classes/File/Stat.html#method-i-writable_real-3F","()","<p>Returns <code>true</code> if <em>stat</em> is writable by the real user id\nof this process.\n\n<pre>File.stat(&quot;testfile&quot;).writable_real? ...</pre>\n",null,0],["writable_real?","FileTest","Ruby/classes/FileTest.html#method-i-writable_real-3F","(p1)","<p>Returns <code>true</code> if the named file is writable by the real user id\nof this process.\n",null,0],["write","ARGF","Ruby/classes/ARGF.html#method-i-write","(p1)","<p>Writes <em>string</em> if inplace mode.\n",null,0],["write","IO","Ruby/classes/IO.html#method-c-write","(*args)","<p>Opens the file, optionally seeks to the given <em>offset</em>, writes\n<em>string</em>, then returns the length written. …\n",null,0],["write","IO","Ruby/classes/IO.html#method-i-write","(p1)","<p>Writes the given string to <em>ios</em>. The stream must be opened for\nwriting. If the argument is not a string, …\n",null,0],["write","ActionDispatch::RailsEntityStore","Rails/classes/ActionDispatch/RailsEntityStore.html#method-i-write","(body)","",null,1],["write","ActionDispatch::RailsMetaStore","Rails/classes/ActionDispatch/RailsMetaStore.html#method-i-write","(key, value)","",null,1],["write","ActiveRecord::Migration","Rails/classes/ActiveRecord/Migration.html#method-i-write","(text=\"\")","",null,1],["write","ActiveSupport::Cache::Store","Rails/classes/ActiveSupport/Cache/Store.html#method-i-write","(name, value, options = nil)","<p>Writes the value to the cache, with the key.\n<p>Options are passed to the underlying cache implementation. …\n",null,1],["write_asset","Sprockets::StaticCompiler","Rails/classes/Sprockets/StaticCompiler.html#method-i-write_asset","(asset)","",null,1],["write_attribute","ActiveRecord::AttributeMethods::Write","Rails/classes/ActiveRecord/AttributeMethods/Write.html#method-i-write_attribute","(attr_name, value)","<p>Updates the attribute identified by <code>attr_name</code> with the\nspecified <code>value</code>. Empty strings for fixnum and …\n",null,1],["write_entry","ActiveSupport::Cache::FileStore","Rails/classes/ActiveSupport/Cache/FileStore.html#method-i-write_entry","(key, entry, options)","",null,1],["write_entry","ActiveSupport::Cache::Strategy::LocalCache::LocalStore","Rails/classes/ActiveSupport/Cache/Strategy/LocalCache/LocalStore.html#method-i-write_entry","(key, value, options)","",null,1],["write_fragment","ActionController::Caching::Fragments","Rails/classes/ActionController/Caching/Fragments.html#method-i-write_fragment","(key, content, options = nil)","<p>Writes <code>content</code> to the location signified by  <code>key</code>\n(see <code>expire_fragment</code> for acceptable formats).\n",null,1],["write_manifest","Sprockets::StaticCompiler","Rails/classes/Sprockets/StaticCompiler.html#method-i-write_manifest","(manifest)","",null,1],["write_nonblock","IO","Ruby/classes/IO.html#method-i-write_nonblock","(p1)","<p>Writes the given string to <em>ios</em> using the write(2) system call\nafter O_NONBLOCK is set for the underlying …\n",null,0],["xhr","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-xhr","(request_method, action, parameters = nil, session = nil, flash = nil)","",null,1],["xhr","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-xhr","(request_method, path, parameters = nil, headers = nil)","",null,1],["xhr?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-xhr-3F","()","",null,1],["xml","ActiveRecord::ConnectionAdapters::PostgreSQLAdapter::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/PostgreSQLAdapter/TableDefinition.html#method-i-xml","(*args)","",null,1],["xml","ActiveRecord::ConnectionAdapters::TableDefinition","Rails/classes/ActiveRecord/ConnectionAdapters/TableDefinition.html#method-i-xml","(*args)","",null,1],["xml_http_request","ActionController::TestCase::Behavior","Rails/classes/ActionController/TestCase/Behavior.html#method-i-xml_http_request","(request_method, action, parameters = nil, session = nil, flash = nil)","",null,1],["xml_http_request","ActionDispatch::Integration::RequestHelpers","Rails/classes/ActionDispatch/Integration/RequestHelpers.html#method-i-xml_http_request","(request_method, path, parameters = nil, headers = nil)","<p>Performs an XMLHttpRequest request with the given parameters, mirroring a\nrequest from the Prototype …\n",null,1],["xml_http_request?","ActionDispatch::Request","Rails/classes/ActionDispatch/Request.html#method-i-xml_http_request-3F","()","<p>Returns true if the “X-Requested-With” header contains “XMLHttpRequest”\n(case-insensitive). …\n",null,1],["xmlschema","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-xmlschema","(fraction_digits = 0)","",null,1],["xmlschema","Date","Rails/classes/Date.html#method-i-xmlschema","()","",null,1],["xmlschema","DateTime","Rails/classes/DateTime.html#method-i-xmlschema","()","<p>Converts datetime to an appropriate format for use in XML.\n",null,1],["yday","Time","Ruby/classes/Time.html#method-i-yday","()","<p>Returns an integer representing the day of the year, 1..366.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:32:31 -0600 ...</span>\n</pre>\n",null,0],["year","Time","Ruby/classes/Time.html#method-i-year","()","<p>Returns the year for <em>time</em> (including the century).\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">t</span> = <span class=\"ruby-constant\">Time</span>.<span class=\"ruby-identifier\">now</span>   <span class=\"ruby-comment\">#=&gt; 2007-11-19 08:27:51 -0600</span>\n<span class=\"ruby-identifier\">t</span>.<span class=\"ruby-identifier\">year</span> <span class=\"ruby-operator\">...</span>\n</pre>\n",null,0],["year","Integer","Rails/classes/Integer.html#method-i-year","()","",null,1],["years","Integer","Rails/classes/Integer.html#method-i-years","()","",null,1],["years_ago","Date","Rails/classes/Date.html#method-i-years_ago","(years)","<p>Returns a new Date/DateTime representing the time a number of specified\nyears ago.\n",null,1],["years_ago","Time","Rails/classes/Time.html#method-i-years_ago","(years)","<p>Returns a new Time representing the time a number of specified years ago\n",null,1],["years_since","Date","Rails/classes/Date.html#method-i-years_since","(years)","<p>Returns a new Date/DateTime representing the time a number of specified\nyears in the future.\n",null,1],["years_since","Time","Rails/classes/Time.html#method-i-years_since","(years)","<p>Returns a new Time representing the time a number of specified years in the\nfuture\n",null,1],["yesterday","Date","Rails/classes/Date.html#method-c-yesterday","()","<p>Returns a new Date representing the date 1 day ago (i.e. yesterday&#39;s\ndate).\n",null,1],["yesterday","Date","Rails/classes/Date.html#method-i-yesterday","()","<p>Convenience method which returns a new Date/DateTime representing the time\n1 day ago\n",null,1],["yesterday","Time","Rails/classes/Time.html#method-i-yesterday","()","<p>Convenience method which returns a new Time representing the time 1 day ago\n",null,1],["yield","Fiber","Ruby/classes/Fiber.html#method-c-yield","(*args)","<p>Yields control back to the context that resumed the fiber, passing along\nany arguments that were passed …\n",null,0],["yield","Proc","Ruby/classes/Proc.html#method-i-yield","(*args)","<p>Invokes the block, setting the block&#39;s parameters to the values in\n<em>params</em> using something close to …\n",null,0],["zero?","File","Ruby/classes/File.html#method-c-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n",null,0],["zero?","File::Stat","Ruby/classes/File/Stat.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>stat</em> is a zero-length file;\n<code>false</code> otherwise.\n\n<pre class=\"ruby\"><span class=\"ruby-constant\">File</span>.<span class=\"ruby-identifier\">stat</span>(<span class=\"ruby-string\">&quot;testfile&quot;</span>).<span class=\"ruby-identifier\">zero?</span>   <span class=\"ruby-comment\">#=&gt; false</span>\n</pre>\n",null,0],["zero?","FileTest","Ruby/classes/FileTest.html#method-i-zero-3F","(p1)","<p>Returns <code>true</code> if the named file exists and has a zero size.\n",null,0],["zero?","Fixnum","Ruby/classes/Fixnum.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>fix</em> is zero.\n",null,0],["zero?","Float","Ruby/classes/Float.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>flt</em> is 0.0.\n",null,0],["zero?","Numeric","Ruby/classes/Numeric.html#method-i-zero-3F","()","<p>Returns <code>true</code> if <em>num</em> has a zero value.\n",null,0],["zip","Array","Ruby/classes/Array.html#method-i-zip","(*args)","<p>Converts any arguments to arrays, then merges elements of <code>self</code>\nwith corresponding elements from each …\n",null,0],["zip","Enumerable","Ruby/classes/Enumerable.html#method-i-zip","(*args)","<p>Takes one element from <em>enum</em> and merges corresponding elements from\neach <em>args</em>.  This generates a sequence …\n",null,0],["zone","Time","Ruby/classes/Time.html#method-i-zone","()","<p>Returns the name of the time zone used for <em>time</em>. As of Ruby 1.8,\nreturns “UTC&#39;&#39; rather than …\n",null,0],["zone","ActiveSupport::TimeWithZone","Rails/classes/ActiveSupport/TimeWithZone.html#method-i-zone","()","<p>Time uses <code>zone</code> to display the time zone abbreviation, so\nwe&#39;re duck-typing it.\n",null,1],["zone","Time","Rails/classes/Time.html#method-c-zone","()","<p>Returns the TimeZone for the current request, if this has been set (via\nTime.zone=). If <code>Time.zone</code> has …\n",null,1],["zone=","Time","Rails/classes/Time.html#method-c-zone-3D","(time_zone)","<p>Sets <code>Time.zone</code> to a TimeZone object for the current\nrequest/thread.\n<p>This method accepts any of the following: …\n",null,1],["zones_map","ActiveSupport::TimeZone","Rails/classes/ActiveSupport/TimeZone.html#method-c-zones_map","()","",null,1],["|","Array","Ruby/classes/Array.html#method-i-7C","(p1)","<p>Set Union—Returns a new array by joining this array with\n<em>other_ary</em>, removing duplicates.\n\n<pre>[ &quot;a&quot;, &quot;b&quot;, ...</pre>\n",null,0],["|","Bignum","Ruby/classes/Bignum.html#method-i-7C","(p1)","<p>Performs bitwise <code>or</code> between <em>big</em> and <em>numeric</em>.\n",null,0],["|","FalseClass","Ruby/classes/FalseClass.html#method-i-7C","(p1)","<p>Or—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>; <code>true</code> otherwise.\n",null,0],["|","Fixnum","Ruby/classes/Fixnum.html#method-i-7C","(p1)","<p>Bitwise OR.\n",null,0],["|","NilClass","Ruby/classes/NilClass.html#method-i-7C","(p1)","<p>Or—Returns <code>false</code> if <em>obj</em> is <code>nil</code> or\n<code>false</code>; <code>true</code> otherwise.\n",null,0],["|","TrueClass","Ruby/classes/TrueClass.html#method-i-7C","(p1)","<p>Or—Returns <code>true</code>. As <em>anObject</em> is an argument to a\nmethod call, it is always evaluated; there is no short-circuit …\n",null,0],["~","Bignum","Ruby/classes/Bignum.html#method-i-7E","()","<p>Inverts the bits in big. As Bignums are conceptually infinite length, the\nresult acts as if it had an …\n",null,0],["~","Complex","Ruby/classes/Complex.html#method-i-7E","()","<p>Returns the complex conjugate.\n",null,0],["~","Fixnum","Ruby/classes/Fixnum.html#method-i-7E","()","<p>One&#39;s complement: returns a number where each bit is flipped.\n",null,0],["~","Regexp","Ruby/classes/Regexp.html#method-i-7E","()","<p>Match—Matches <em>rxp</em> against the contents of <code>$_</code>.\nEquivalent to <code><em>rxp</em> =~ $_</code>.\n\n<pre class=\"ruby\"><span class=\"ruby-identifier\">$_</span> = <span class=\"ruby-string\">&quot;input data&quot;</span>\n<span class=\"ruby-operator\">~</span> <span class=\"ruby-regexp\">/at/</span>   <span class=\"ruby-comment\">#=&gt; ...</span>\n</pre>\n",null,0]]},"badges":["Ruby","Rails"]}